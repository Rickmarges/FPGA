
JDD.elf:     file format elf32-littlenios2
JDD.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000248

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00011860 memsz 0x00011860 flags r-x
    LOAD off    0x00012880 vaddr 0x00011880 paddr 0x0001367c align 2**12
         filesz 0x00001dfc memsz 0x00001dfc flags rw-
    LOAD off    0x00015478 vaddr 0x00015478 paddr 0x00015478 align 2**12
         filesz 0x00000000 memsz 0x00000180 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000228  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000111c8  00000248  00000248  00001248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000470  00011410  00011410  00012410  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001dfc  00011880  0001367c  00012880  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000180  00015478  00015478  00015478  2**2
                  ALLOC, SMALL_DATA
  6 .SDRAM        00000000  000155f8  000155f8  0001467c  2**0
                  CONTENTS
  7 .VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM 00000000  09000000  09000000  0001467c  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  0001467c  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000f50  00000000  00000000  000146a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00024e05  00000000  00000000  000155f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00009632  00000000  00000000  0003a3f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000be96  00000000  00000000  00043a27  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  0000283c  00000000  00000000  0004f8c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00004474  00000000  00000000  000520fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001799b  00000000  00000000  00056570  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000020  00000000  00000000  0006df0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001910  00000000  00000000  0006df30  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0007350e  2**0
                  CONTENTS, READONLY
 19 .cpu          00000005  00000000  00000000  00073511  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00073516  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00073517  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  00073518  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0007351c  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  00073520  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  00073524  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  0007352d  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  00073536  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000f  00000000  00000000  0007353f  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000005b  00000000  00000000  0007354e  2**0
                  CONTENTS, READONLY
 30 .jdi          0000eb16  00000000  00000000  000735a9  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     001d8a7e  00000000  00000000  000820bf  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000248 l    d  .text	00000000 .text
00011410 l    d  .rodata	00000000 .rodata
00011880 l    d  .rwdata	00000000 .rwdata
00015478 l    d  .bss	00000000 .bss
000155f8 l    d  .SDRAM	00000000 .SDRAM
09000000 l    d  .VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM	00000000 .VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../JDD_bsp//obj/HAL/src/crt0.o
00000280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 JDD.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
00011582 l     O .rodata	00000010 zeroes.4404
00002ab0 l     F .text	000000bc __sbprintf
00011592 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002cc0 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000047f0 l     F .text	00000008 __fp_unlock
00004804 l     F .text	0000019c __sinit.part.1
000049a0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00011880 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00011cc4 l     O .rwdata	00000020 lc_ctype_charset
00011ca4 l     O .rwdata	00000020 lc_message_charset
00011ce4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000115c4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000072b8 l     F .text	000000fc __sprint_r.part.0
000116f8 l     O .rodata	00000010 blanks.4348
000116e8 l     O .rodata	00000010 zeroes.4349
00008844 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0000d018 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000d124 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000d150 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_gettod.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d410 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d4f0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d5dc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000d7b0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0001366c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_write.c
0000dba0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000dcd4 l     F .text	00000034 alt_dev_reg
000122cc l     O .rwdata	00001060 JTAG_UART
0001332c l     O .rwdata	00000030 AV_Config
0001335c l     O .rwdata	00000030 Audio_Subsystem_Audio
0001338c l     O .rwdata	0000002c Char_LCD_16x2
000133b8 l     O .rwdata	0000002c IrDA
000133e4 l     O .rwdata	00000038 PS2_Port
0001341c l     O .rwdata	00000038 PS2_Port_Dual
00013454 l     O .rwdata	0000002c Serial_Port
00013480 l     O .rwdata	00000034 USB
000134b4 l     O .rwdata	0000005c VGA_Subsystem_Char_Buf_Subsystem_Char_Buf_DMA
00013510 l     O .rwdata	0000005c VGA_Subsystem_VGA_Pixel_DMA
0001356c l     O .rwdata	0000005c Video_In_Subsystem_Video_In_DMA
000135c8 l     O .rwdata	00000044 VGA_Subsystem_VGA_Pixel_RGB_Resampler
0001360c l     O .rwdata	0000002c SD_Card
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000e8c4 l     F .text	00000210 altera_avalon_jtag_uart_irq
0000ead4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0000f10c l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_character_lcd.c
00000000 l    df *ABS*	00000000 altera_up_avalon_irda.c
00000000 l    df *ABS*	00000000 altera_up_avalon_ps2.c
00000000 l    df *ABS*	00000000 altera_up_avalon_rs232.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00010608 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0001086c l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00010b2c l     F .text	0000003c alt_get_errno
00010b68 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
000154cc g     O .bss	00000004 alt_instruction_exception_handler
00006dc8 g     F .text	00000074 _mprec_log10
00006eb4 g     F .text	0000008c __any_on
0000929c g     F .text	00000054 _isatty_r
000115d0 g     O .rodata	00000028 __mprec_tinytens
0000d6ec g     F .text	0000007c alt_main
000154f8 g     O .bss	00000100 alt_irq
0000fcc8 g     F .text	00000060 alt_up_ps2_disable_read_interrupt
000092f0 g     F .text	00000060 _lseek_r
0001367c g       *ABS*	00000000 __flash_rwdata_start
0000f270 g     F .text	00000040 alt_up_character_lcd_send_cmd
0000bba8 g     F .text	00000088 .hidden __eqdf2
000155f8 g       *ABS*	00000000 __alt_heap_start
00000860 g     F .text	0000003c printf
00009bc8 g     F .text	0000009c _wcrtomb_r
000070e0 g     F .text	0000005c __sseek
00004b40 g     F .text	00000010 __sinit
00009a70 g     F .text	00000140 __swbuf_r
0000fae0 g     F .text	00000034 read_CE_bit
0000514c g     F .text	0000007c _setlocale_r
000049a8 g     F .text	00000068 __sfmoreglue
0000d78c g     F .text	00000024 __malloc_unlock
0000fe68 g     F .text	0000009c alt_up_ps2_read_data_byte_timeout
0001035c g     F .text	00000090 alt_up_rs232_read_fd
00009350 g     F .text	0000015c memmove
00004b28 g     F .text	00000018 _cleanup
00005f44 g     F .text	000000a8 _Balloc
00000638 g     F .text	00000070 .hidden __fixsfsi
0000bc30 g     F .text	000000dc .hidden __gtdf2
00010d80 g     F .text	00000024 altera_nios2_gen2_irq_init
0000f1fc g     F .text	00000074 get_DDRAM_addr
00000000 g     F .entry	0000001c __reset
000002f0 g     F .text	00000088 timedifference_msec
00000020 g       *ABS*	00000000 __flash_exceptions_start
00008d84 g     F .text	0000005c _fstat_r
000154a0 g     O .bss	00000004 errno
0000705c g     F .text	00000008 __seofread
000154b8 g     O .bss	00000004 alt_argv
0001b638 g       *ABS*	00000000 _gp
0001214c g     O .rwdata	00000180 alt_fd_list
000107a8 g     F .text	00000090 alt_find_dev
00005cd4 g     F .text	00000148 memcpy
0000f418 g     F .text	00000050 alt_up_character_lcd_write_fd
000047f8 g     F .text	0000000c _cleanup_r
0000ce94 g     F .text	000000dc .hidden __floatsidf
00010930 g     F .text	0000007c alt_io_redirect
0000bd0c g     F .text	000000f4 .hidden __ltdf2
00011410 g       *ABS*	00000000 __DTOR_END__
0000f9b0 g     F .text	00000090 alt_up_irda_write_fd
000102e8 g     F .text	00000074 alt_up_rs232_read_data
00010fe0 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00006f40 g     F .text	00000074 __fpclassifyd
00006d24 g     F .text	000000a4 __ratio
00008828 g     F .text	0000001c __vfiprintf_internal
0000f7ac g     F .text	00000040 alt_up_irda_get_used_space_in_read_FIFO
0000eccc g     F .text	0000021c altera_avalon_jtag_uart_read
00000830 g     F .text	00000030 _printf_r
0000a958 g     F .text	00000064 .hidden __udivsi3
0000d44c g     F .text	000000a4 isatty
00011620 g     O .rodata	000000c8 __mprec_tens
000051c8 g     F .text	0000000c __locale_charset
0000f74c g     F .text	00000060 alt_up_irda_disable_read_interrupt
000154a4 g     O .bss	00000008 alt_timezone
00010f50 g     F .text	00000090 alt_icache_flush
0001549c g     O .bss	00000004 __malloc_top_pad
00013644 g     O .rwdata	00000004 __mb_cur_max
000051f8 g     F .text	0000000c _localeconv_r
00008de0 g     F .text	000004bc __sfvwrite_r
00006350 g     F .text	0000003c __i2b
00006fb4 g     F .text	00000054 _sbrk_r
000094ac g     F .text	00000060 _read_r
00013664 g     O .rwdata	00000004 alt_max_fd
00010264 g     F .text	00000044 alt_up_rs232_check_parity
00008a78 g     F .text	000000f0 _fclose_r
0000fb14 g     F .text	00000030 read_num_bytes_available
000047c0 g     F .text	00000030 fflush
00015498 g     O .bss	00000004 __malloc_max_sbrked_mem
000109ac g     F .text	00000180 alt_irq_register
0000fa7c g     F .text	00000034 read_RI_bit
0000aa14 g     F .text	000008ac .hidden __adddf3
00006acc g     F .text	0000010c __b2d
0000a328 g     F .text	00000538 .hidden __umoddi3
0000d618 g     F .text	000000d4 lseek
0001363c g     O .rwdata	00000004 _global_impure_ptr
0000950c g     F .text	00000564 _realloc_r
000155f8 g       *ABS*	00000000 __bss_end
0000da98 g     F .text	00000108 alt_tick
00000284 g     F .text	0000006c int_to_int
00009db0 g     F .text	00000578 .hidden __udivdi3
00008ce0 g     F .text	00000024 _fputwc_r
000115f8 g     O .rodata	00000028 __mprec_bigtens
00006134 g     F .text	00000104 __s2b
0000cf70 g     F .text	000000a8 .hidden __floatunsidf
0000680c g     F .text	00000060 __mcmp
0000fb78 g     F .text	0000002c read_data_byte
00004b60 g     F .text	00000018 __fp_lock_all
0000d9fc g     F .text	0000009c alt_alarm_stop
0000fab0 g     F .text	00000030 read_RE_bit
000154c8 g     O .bss	00000004 alt_irq_active
0000f7ec g     F .text	0000003c alt_up_irda_get_available_space_in_write_FIFO
000000fc g     F .exceptions	000000d8 alt_irq_handler
00012124 g     O .rwdata	00000028 alt_dev_null
0000f6b8 g     F .text	00000038 alt_up_character_lcd_cursor_blink_on
0000fd28 g     F .text	00000074 alt_up_ps2_write_data_byte
000105e8 g     F .text	00000020 alt_dcache_flush_all
00006238 g     F .text	00000068 __hi0bits
0000ce14 g     F .text	00000080 .hidden __fixdfsi
0001367c g       *ABS*	00000000 __ram_rwdata_end
0001365c g     O .rwdata	00000008 alt_dev_list
0000dbdc g     F .text	000000f8 write
00011880 g       *ABS*	00000000 __ram_rodata_end
0000d18c g     F .text	000000b0 fstat
000103ec g     F .text	00000094 alt_up_rs232_write_fd
00000000 g       *ABS*	00000000 __alt_mem_SDRAM
0000bd0c g     F .text	000000f4 .hidden __ledf2
00006584 g     F .text	00000140 __pow5mult
000073cc g     F .text	0000145c ___vfiprintf_internal_r
00015490 g     O .bss	00000004 __nlocale_changed
0000a9bc g     F .text	00000058 .hidden __umodsi3
000155f8 g       *ABS*	00000000 end
00010058 g     F .text	00000098 alt_up_ps2_write_fd
0000f828 g     F .text	00000044 alt_up_irda_check_parity
0000e810 g     F .text	000000b4 altera_avalon_jtag_uart_init
000001d4 g     F .exceptions	00000074 alt_instruction_exception_entry
00011410 g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
0000f188 g     F .text	00000074 alt_avalon_timer_sc_init
000007cc g     F .text	00000064 .hidden __clzsi2
0000eee8 g     F .text	00000224 altera_avalon_jtag_uart_write
00004b50 g     F .text	00000004 __sfp_lock_acquire
00005bf0 g     F .text	000000e4 memchr
0000f324 g     F .text	0000007c alt_up_character_lcd_write
0000089c g     F .text	000021f8 ___vfprintf_internal_r
00004cb4 g     F .text	00000310 _free_r
000051d4 g     F .text	00000010 __locale_mb_cur_max
0001125c g     F .text	00000180 __call_exitprocs
0001548c g     O .bss	00000004 __mlocale_changed
00013648 g     O .rwdata	00000004 __malloc_sbrk_base
00000248 g     F .text	0000003c _start
000154c0 g     O .bss	00000004 _alt_tick_rate
000066c4 g     F .text	00000148 __lshift
000154c4 g     O .bss	00000004 _alt_nticks
0000d7ec g     F .text	000000fc read
0000dd40 g     F .text	0000096c alt_sys_init
0000f568 g     F .text	0000008c alt_up_character_lcd_shift_display
000006a8 g     F .text	00000124 .hidden __floatsisf
00011144 g     F .text	00000118 __register_exitproc
0000ff74 g     F .text	00000058 alt_up_ps2_clear_fifo
00010228 g     F .text	0000003c alt_up_rs232_get_available_space_in_write_FIFO
0000638c g     F .text	000001f8 __multiply
0000f5f4 g     F .text	0000008c alt_up_character_lcd_erase_pos
0000eb74 g     F .text	00000068 altera_avalon_jtag_uart_close
00011880 g       *ABS*	00000000 __ram_rwdata_start
00011410 g       *ABS*	00000000 __ram_rodata_start
000154d0 g     O .bss	00000028 __malloc_current_mallinfo
00006bd8 g     F .text	0000014c __d2b
0000e6ac g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00010eac g     F .text	000000a4 alt_get_fd
00008960 g     F .text	00000054 _close_r
000110c8 g     F .text	0000007c memcmp
0000e76c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
000155f8 g       *ABS*	00000000 __alt_stack_base
0000e7bc g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0000f6f0 g     F .text	0000005c alt_up_irda_enable_read_interrupt
00002b6c g     F .text	00000154 __swsetup_r
0000b2c0 g     F .text	000008e8 .hidden __divdf3
00004a10 g     F .text	00000118 __sfp
00006e3c g     F .text	00000078 __copybits
00011d1c g     O .rwdata	00000408 __malloc_av_
00004b5c g     F .text	00000004 __sinit_lock_release
0000be00 g     F .text	00000718 .hidden __muldf3
00007008 g     F .text	00000054 __sread
00010188 g     F .text	00000060 alt_up_rs232_disable_read_interrupt
00010da4 g     F .text	00000108 alt_find_file
00010644 g     F .text	000000a4 alt_dev_llist_insert
0000d768 g     F .text	00000024 __malloc_lock
0000d94c g     F .text	000000b0 sbrk
00004764 g     F .text	0000005c _fflush_r
000089b4 g     F .text	000000c4 _calloc_r
0000d23c g     F .text	000001d4 gettimeofday
00015478 g       *ABS*	00000000 __bss_start
00005e1c g     F .text	00000128 memset
00000378 g     F .text	000002c0 main
000154bc g     O .bss	00000004 alt_envp
00015494 g     O .bss	00000004 __malloc_max_total_mem
0000e70c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00009bb0 g     F .text	00000018 __swbuf
0000f4dc g     F .text	0000008c alt_up_character_lcd_shift_cursor
0000713c g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
00008b68 g     F .text	00000014 fclose
0000ff04 g     F .text	00000070 alt_up_ps2_read_data_byte
00002ec0 g     F .text	00001688 _dtoa_r
000053e4 g     F .text	0000080c _malloc_r
00009d24 g     F .text	00000030 __ascii_wctomb
00013668 g     O .rwdata	00000004 alt_errno
00004fc4 g     F .text	000000c4 _fwalk
0000f86c g     F .text	00000040 alt_up_irda_write_data
000100f0 g     F .text	0000003c alt_up_ps2_open_dev
0000a860 g     F .text	00000084 .hidden __divsi3
0000f2e8 g     F .text	0000003c alt_up_character_lcd_open_dev
00004b90 g     F .text	00000124 _malloc_trim_r
0000fc6c g     F .text	0000005c alt_up_ps2_enable_read_interrupt
00011410 g       *ABS*	00000000 __CTOR_END__
0000f2b0 g     F .text	00000038 alt_up_character_lcd_init
00007144 g     F .text	000000dc strcmp
00011410 g       *ABS*	00000000 __flash_rodata_start
00011410 g       *ABS*	00000000 __DTOR_LIST__
00010480 g     F .text	0000003c alt_up_rs232_open_dev
0000bba8 g     F .text	00000088 .hidden __nedf2
0000dd08 g     F .text	00000038 alt_irq_init
0000d8e8 g     F .text	00000064 alt_release_fd
0000fb44 g     F .text	00000034 read_data_valid
0000f680 g     F .text	00000038 alt_up_character_lcd_cursor_off
00011440 g     O .rodata	00000100 .hidden __clz_tab
00015488 g     O .bss	00000004 _PathLocale
0000fe04 g     F .text	00000064 alt_up_ps2_write_data_byte_with_ack
0001107c g     F .text	00000014 atexit
00008900 g     F .text	00000060 _write_r
00005204 g     F .text	00000018 setlocale
00013640 g     O .rwdata	00000004 _impure_ptr
000154b4 g     O .bss	00000004 alt_argc
00004548 g     F .text	0000021c __sflush_r
00015478 g     O .bss	00000008 t0
00010748 g     F .text	00000060 _do_dtors
000051f0 g     F .text	00000008 __locale_cjk_lang
09000000 g       *ABS*	00000000 __alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM
00000020 g       .exceptions	00000000 alt_irq_entry
00006a68 g     F .text	00000064 __ulp
00004b78 g     F .text	00000018 __fp_unlock_all
00013654 g     O .rwdata	00000008 alt_fs_list
0001012c g     F .text	0000005c alt_up_rs232_enable_read_interrupt
000102a8 g     F .text	00000040 alt_up_rs232_write_data
000154ac g     O .bss	00000008 alt_resettime
00000020 g       *ABS*	00000000 __ram_exceptions_start
0000521c g     F .text	0000000c localeconv
0001367c g       *ABS*	00000000 _edata
000155f8 g       *ABS*	00000000 _end
00008b7c g     F .text	00000164 __fputwc
00000248 g       *ABS*	00000000 __ram_exceptions_end
0000ebdc g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00007064 g     F .text	0000007c __swrite
0001364c g     O .rwdata	00000004 __malloc_trim_threshold
000051e4 g     F .text	0000000c __locale_msgcharset
00011090 g     F .text	00000038 exit
0000f8ac g     F .text	00000074 alt_up_irda_read_data
00005088 g     F .text	000000c4 _fwalk_reent
0000fba4 g     F .text	000000c8 alt_up_ps2_init
0000686c g     F .text	000001fc __mdiff
0000a8e4 g     F .text	00000074 .hidden __modsi3
04000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00004b54 g     F .text	00000004 __sfp_lock_release
0000f3a0 g     F .text	00000078 alt_up_character_lcd_string
0000fa40 g     F .text	0000003c alt_up_irda_open_dev
000113dc g     F .text	00000034 _exit
000104bc g     F .text	0000012c alt_alarm_start
00005228 g     F .text	000001bc __smakebuf_r
0000fd9c g     F .text	00000068 alt_up_ps2_wait_for_ack
00007220 g     F .text	00000098 strlen
00010c2c g     F .text	00000154 open
0000bc30 g     F .text	000000dc .hidden __gedf2
00013650 g     O .rwdata	00000004 __wctomb
000073b4 g     F .text	00000018 __sprint_r
00010838 g     F .text	00000034 alt_icache_flush_all
0000f468 g     F .text	00000074 alt_up_character_lcd_set_cursor_pos
00013678 g     O .rwdata	00000004 alt_priority_mask
00015480 g     O .bss	00000008 currentTime
00002a94 g     F .text	0000001c __vfprintf_internal
00009d54 g     F .text	0000005c _wctomb_r
0000ffcc g     F .text	0000008c alt_up_ps2_read_fd
0000c518 g     F .text	000008fc .hidden __subdf3
0000f920 g     F .text	00000090 alt_up_irda_read_fd
000062a0 g     F .text	000000b0 __lo0bits
00013670 g     O .rwdata	00000008 alt_alarm_list
000106e8 g     F .text	00000060 _do_ctors
00013638 g     O .rwdata	00000004 jumpDelay
000101e8 g     F .text	00000040 alt_up_rs232_get_used_space_in_read_FIFO
00009c64 g     F .text	000000c0 wcrtomb
0000d054 g     F .text	000000d0 close
0000d558 g     F .text	00000084 alt_load
00008d04 g     F .text	00000080 fputwc
00004b58 g     F .text	00000004 __sinit_lock_acquire
00006014 g     F .text	00000120 __multadd
00005fec g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   0:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   4:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   8:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   c:	00bffd16 	blt	zero,r2,4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  10:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
  14:	08409214 	ori	at,at,584
    jmp r1
  18:	0800683a 	jmp	at
  1c:	00000000 	call	0 <__reset>

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d40 	call	1d4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001526 	beq	r2,zero,190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 13c:	00800074 	movhi	r2,1
 140:	10953e04 	addi	r2,r2,21752
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00800074 	movhi	r2,1
 158:	10953e04 	addi	r2,r2,21752
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	e17ffd17 	ldw	r5,-12(fp)
 174:	1009883a 	mov	r4,r2
 178:	183ee83a 	callr	r3
#endif
        break;
 17c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 180:	0005313a 	rdctl	r2,ipending
 184:	e0bfff15 	stw	r2,-4(fp)

  return active;
 188:	e0bfff17 	ldw	r2,-4(fp)
 18c:	00000706 	br	1ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
 190:	e0bffc17 	ldw	r2,-16(fp)
 194:	1085883a 	add	r2,r2,r2
 198:	e0bffc15 	stw	r2,-16(fp)
      i++;
 19c:	e0bffd17 	ldw	r2,-12(fp)
 1a0:	10800044 	addi	r2,r2,1
 1a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a8:	003fe006 	br	12c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700012c>

    active = alt_irq_pending ();
 1ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1b0:	e0bffb17 	ldw	r2,-20(fp)
 1b4:	103fda1e 	bne	r2,zero,120 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b8:	0001883a 	nop
}
 1bc:	0001883a 	nop
 1c0:	e037883a 	mov	sp,fp
 1c4:	dfc00117 	ldw	ra,4(sp)
 1c8:	df000017 	ldw	fp,0(sp)
 1cc:	dec00204 	addi	sp,sp,8
 1d0:	f800283a 	ret

000001d4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d4:	defffb04 	addi	sp,sp,-20
 1d8:	dfc00415 	stw	ra,16(sp)
 1dc:	df000315 	stw	fp,12(sp)
 1e0:	df000304 	addi	fp,sp,12
 1e4:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 1e8:	000531fa 	rdctl	r2,exception
 1ec:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 1f0:	e0bffd17 	ldw	r2,-12(fp)
 1f4:	10801f0c 	andi	r2,r2,124
 1f8:	1004d0ba 	srli	r2,r2,2
 1fc:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 200:	0005333a 	rdctl	r2,badaddr
 204:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 208:	d0a7a517 	ldw	r2,-24940(gp)
 20c:	10000726 	beq	r2,zero,22c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 210:	d0a7a517 	ldw	r2,-24940(gp)
 214:	e0fffd17 	ldw	r3,-12(fp)
 218:	e1bffe17 	ldw	r6,-8(fp)
 21c:	e17fff17 	ldw	r5,-4(fp)
 220:	1809883a 	mov	r4,r3
 224:	103ee83a 	callr	r2
 228:	00000206 	br	234 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 22c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 230:	0005883a 	mov	r2,zero
}
 234:	e037883a 	mov	sp,fp
 238:	dfc00117 	ldw	ra,4(sp)
 23c:	df000017 	ldw	fp,0(sp)
 240:	dec00204 	addi	sp,sp,8
 244:	f800283a 	ret

Disassembly of section .text:

00000248 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     248:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
     24c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     250:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     254:	d6ad8e14 	ori	gp,gp,46648
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     258:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     25c:	10951e14 	ori	r2,r2,21624

    movhi r3, %hi(__bss_end)
     260:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     264:	18d57e14 	ori	r3,r3,22008

    beq r2, r3, 1f
     268:	10c00326 	beq	r2,r3,278 <_start+0x30>

0:
    stw zero, (r2)
     26c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     274:	10fffd36 	bltu	r2,r3,26c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700026c>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     278:	000d5580 	call	d558 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     27c:	000d6ec0 	call	d6ec <alt_main>

00000280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     280:	003fff06 	br	280 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000280>

00000284 <int_to_int>:

struct timeval currentTime;
//struct timeval previousDetectionMillis;
struct timeval t0;

unsigned int int_to_int(unsigned int k) {
     284:	defffc04 	addi	sp,sp,-16
     288:	dfc00315 	stw	ra,12(sp)
     28c:	df000215 	stw	fp,8(sp)
     290:	dc000115 	stw	r16,4(sp)
     294:	df000204 	addi	fp,sp,8
     298:	e13ffe15 	stw	r4,-8(fp)
	return (k == 0 || k == 1 ? k : ((k % 2) + 10 * int_to_int(k / 2)));
     29c:	e0bffe17 	ldw	r2,-8(fp)
     2a0:	10000c26 	beq	r2,zero,2d4 <int_to_int+0x50>
     2a4:	e0bffe17 	ldw	r2,-8(fp)
     2a8:	10800060 	cmpeqi	r2,r2,1
     2ac:	1000091e 	bne	r2,zero,2d4 <int_to_int+0x50>
     2b0:	e0bffe17 	ldw	r2,-8(fp)
     2b4:	1400004c 	andi	r16,r2,1
     2b8:	e0bffe17 	ldw	r2,-8(fp)
     2bc:	1004d07a 	srli	r2,r2,1
     2c0:	1009883a 	mov	r4,r2
     2c4:	00002840 	call	284 <int_to_int>
     2c8:	108002a4 	muli	r2,r2,10
     2cc:	8085883a 	add	r2,r16,r2
     2d0:	00000106 	br	2d8 <int_to_int+0x54>
     2d4:	e0bffe17 	ldw	r2,-8(fp)
}
     2d8:	e6ffff04 	addi	sp,fp,-4
     2dc:	dfc00217 	ldw	ra,8(sp)
     2e0:	df000117 	ldw	fp,4(sp)
     2e4:	dc000017 	ldw	r16,0(sp)
     2e8:	dec00304 	addi	sp,sp,12
     2ec:	f800283a 	ret

000002f0 <timedifference_msec>:

float timedifference_msec(struct timeval t0, struct timeval t1) {
     2f0:	defff904 	addi	sp,sp,-28
     2f4:	dfc00615 	stw	ra,24(sp)
     2f8:	df000515 	stw	fp,20(sp)
     2fc:	dc000415 	stw	r16,16(sp)
     300:	df000504 	addi	fp,sp,20
     304:	e13ffb15 	stw	r4,-20(fp)
     308:	e17ffc15 	stw	r5,-16(fp)
     30c:	e1bffd15 	stw	r6,-12(fp)
     310:	e1fffe15 	stw	r7,-8(fp)
	return (t1.tv_sec - t0.tv_sec) * 1000.0f
     314:	e0fffd17 	ldw	r3,-12(fp)
     318:	e0bffb17 	ldw	r2,-20(fp)
     31c:	1885c83a 	sub	r2,r3,r2
     320:	1009883a 	mov	r4,r2
     324:	00006a80 	call	6a8 <__floatsisf>
     328:	1007883a 	mov	r3,r2
     32c:	00911eb4 	movhi	r2,17530
     330:	18a1ff32 	custom	252,r16,r3,r2
			+ (t1.tv_usec - t0.tv_usec) / 1000.0f;
     334:	e0fffe17 	ldw	r3,-8(fp)
     338:	e0bffc17 	ldw	r2,-16(fp)
     33c:	1885c83a 	sub	r2,r3,r2
     340:	1009883a 	mov	r4,r2
     344:	00006a80 	call	6a8 <__floatsisf>
     348:	1007883a 	mov	r3,r2
     34c:	00911eb4 	movhi	r2,17530
     350:	1885fff2 	custom	255,r2,r3,r2
unsigned int int_to_int(unsigned int k) {
	return (k == 0 || k == 1 ? k : ((k % 2) + 10 * int_to_int(k / 2)));
}

float timedifference_msec(struct timeval t0, struct timeval t1) {
	return (t1.tv_sec - t0.tv_sec) * 1000.0f
     354:	8085ff72 	custom	253,r2,r16,r2
     358:	1007883a 	mov	r3,r2
			+ (t1.tv_usec - t0.tv_usec) / 1000.0f;
}
     35c:	1805883a 	mov	r2,r3
     360:	e6ffff04 	addi	sp,fp,-4
     364:	dfc00217 	ldw	ra,8(sp)
     368:	df000117 	ldw	fp,4(sp)
     36c:	dc000017 	ldw	r16,0(sp)
     370:	dec00304 	addi	sp,sp,12
     374:	f800283a 	ret

00000378 <main>:

int main() {
     378:	defff104 	addi	sp,sp,-60
     37c:	dfc00e15 	stw	ra,56(sp)
     380:	df000d15 	stw	fp,52(sp)
     384:	df000d04 	addi	fp,sp,52
	gettimeofday(&t0, 0);
     388:	000b883a 	mov	r5,zero
     38c:	d1279004 	addi	r4,gp,-25024
     390:	000d23c0 	call	d23c <gettimeofday>
	int jumpCounter = 0;
     394:	e03ff315 	stw	zero,-52(fp)
	int previousDetectionMillis = 0;
     398:	e03ff415 	stw	zero,-48(fp)
	int jumps[5];

	while (1) {
		gettimeofday(&currentTime, 0);
     39c:	000b883a 	mov	r5,zero
     3a0:	d1279204 	addi	r4,gp,-25016
     3a4:	000d23c0 	call	d23c <gettimeofday>
		int currentMillis = timedifference_msec(t0, currentTime);
     3a8:	d1a79217 	ldw	r6,-25016(gp)
     3ac:	d1e79317 	ldw	r7,-25012(gp)
     3b0:	d1279017 	ldw	r4,-25024(gp)
     3b4:	d1679117 	ldw	r5,-25020(gp)
     3b8:	00002f00 	call	2f0 <timedifference_msec>
     3bc:	1007883a 	mov	r3,r2
     3c0:	1809883a 	mov	r4,r3
     3c4:	00006380 	call	638 <__fixsfsi>
     3c8:	e0bff615 	stw	r2,-40(fp)
		int total = int_to_int(read_PIO(GPI_BASE) % 100);
     3cc:	00820834 	movhi	r2,2080
     3d0:	10800804 	addi	r2,r2,32
     3d4:	10800037 	ldwio	r2,0(r2)
     3d8:	00c01904 	movi	r3,100
     3dc:	10c7283a 	div	r3,r2,r3
     3e0:	18c01924 	muli	r3,r3,100
     3e4:	10c5c83a 	sub	r2,r2,r3
     3e8:	1009883a 	mov	r4,r2
     3ec:	00002840 	call	284 <int_to_int>
     3f0:	e0bff715 	stw	r2,-36(fp)
		int backgroundLDR = total % 10; 				// register background color -- 1st bit
     3f4:	e0bff717 	ldw	r2,-36(fp)
     3f8:	00c00284 	movi	r3,10
     3fc:	10c7283a 	div	r3,r2,r3
     400:	18c002a4 	muli	r3,r3,10
     404:	10c5c83a 	sub	r2,r2,r3
     408:	e0bff815 	stw	r2,-32(fp)
		int foregroundLDRDark = (total / 10) % 10; 		// register cacti dark theme -- 2nd bit
     40c:	e0fff717 	ldw	r3,-36(fp)
     410:	00800284 	movi	r2,10
     414:	1885283a 	div	r2,r3,r2
     418:	00c00284 	movi	r3,10
     41c:	10c7283a 	div	r3,r2,r3
     420:	18c002a4 	muli	r3,r3,10
     424:	10c5c83a 	sub	r2,r2,r3
     428:	e0bff915 	stw	r2,-28(fp)
		int foregroundLDRLight = (total / 1000) % 10; 	// register cacti light theme - 4th bit
     42c:	e0fff717 	ldw	r3,-36(fp)
     430:	0080fa04 	movi	r2,1000
     434:	1885283a 	div	r2,r3,r2
     438:	00c00284 	movi	r3,10
     43c:	10c7283a 	div	r3,r2,r3
     440:	18c002a4 	muli	r3,r3,10
     444:	10c5c83a 	sub	r2,r2,r3
     448:	e0bffa15 	stw	r2,-24(fp)

		if (jumpCounter > 0) {
     44c:	e0bff317 	ldw	r2,-52(fp)
     450:	00803a0e 	bge	zero,r2,53c <main+0x1c4>
			for (int i = 1; i <= sizeof(jumps)/sizeof(jumps[0]); i++) {
     454:	00800044 	movi	r2,1
     458:	e0bff515 	stw	r2,-44(fp)
     45c:	00003306 	br	52c <main+0x1b4>
				if (currentMillis >= jumps[i] && jumps[i] > 0) {
     460:	e0bff517 	ldw	r2,-44(fp)
     464:	1085883a 	add	r2,r2,r2
     468:	1085883a 	add	r2,r2,r2
     46c:	e0fff304 	addi	r3,fp,-52
     470:	1885883a 	add	r2,r3,r2
     474:	10800804 	addi	r2,r2,32
     478:	10800017 	ldw	r2,0(r2)
     47c:	e0fff617 	ldw	r3,-40(fp)
     480:	18802416 	blt	r3,r2,514 <main+0x19c>
     484:	e0bff517 	ldw	r2,-44(fp)
     488:	1085883a 	add	r2,r2,r2
     48c:	1085883a 	add	r2,r2,r2
     490:	e13ff304 	addi	r4,fp,-52
     494:	2085883a 	add	r2,r4,r2
     498:	10800804 	addi	r2,r2,32
     49c:	10800017 	ldw	r2,0(r2)
     4a0:	00801c0e 	bge	zero,r2,514 <main+0x19c>
					write_PIO(GPO_BASE, 1 << 11); // jump
     4a4:	00c20004 	movi	r3,2048
     4a8:	00820834 	movhi	r2,2080
     4ac:	10c00035 	stwio	r3,0(r2)
					printf("Jumps: %d -- detecttime: %d -- currentTime: %d\n", jumpCounter, jumps[i], currentMillis);
     4b0:	e0bff517 	ldw	r2,-44(fp)
     4b4:	1085883a 	add	r2,r2,r2
     4b8:	1085883a 	add	r2,r2,r2
     4bc:	e0fff304 	addi	r3,fp,-52
     4c0:	1885883a 	add	r2,r3,r2
     4c4:	10800804 	addi	r2,r2,32
     4c8:	10800017 	ldw	r2,0(r2)
     4cc:	e1fff617 	ldw	r7,-40(fp)
     4d0:	100d883a 	mov	r6,r2
     4d4:	e17ff317 	ldw	r5,-52(fp)
     4d8:	01000074 	movhi	r4,1
     4dc:	21050404 	addi	r4,r4,5136
     4e0:	00008600 	call	860 <printf>
					jumps[i] = 0;
     4e4:	e0bff517 	ldw	r2,-44(fp)
     4e8:	1085883a 	add	r2,r2,r2
     4ec:	1085883a 	add	r2,r2,r2
     4f0:	e13ff304 	addi	r4,fp,-52
     4f4:	2085883a 	add	r2,r4,r2
     4f8:	10800804 	addi	r2,r2,32
     4fc:	10000015 	stw	zero,0(r2)
					if (i == 5) {
     500:	e0bff517 	ldw	r2,-44(fp)
     504:	10800158 	cmpnei	r2,r2,5
     508:	1000101e 	bne	r2,zero,54c <main+0x1d4>
						jumpCounter = 0;
     50c:	e03ff315 	stw	zero,-52(fp)
					}
					break;
     510:	00000e06 	br	54c <main+0x1d4>
				} else {
					write_PIO(GPO_BASE, 0);
     514:	0007883a 	mov	r3,zero
     518:	00820834 	movhi	r2,2080
     51c:	10c00035 	stwio	r3,0(r2)
		int backgroundLDR = total % 10; 				// register background color -- 1st bit
		int foregroundLDRDark = (total / 10) % 10; 		// register cacti dark theme -- 2nd bit
		int foregroundLDRLight = (total / 1000) % 10; 	// register cacti light theme - 4th bit

		if (jumpCounter > 0) {
			for (int i = 1; i <= sizeof(jumps)/sizeof(jumps[0]); i++) {
     520:	e0bff517 	ldw	r2,-44(fp)
     524:	10800044 	addi	r2,r2,1
     528:	e0bff515 	stw	r2,-44(fp)
     52c:	e0bff517 	ldw	r2,-44(fp)
     530:	108001b0 	cmpltui	r2,r2,6
     534:	103fca1e 	bne	r2,zero,460 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000460>
     538:	00000506 	br	550 <main+0x1d8>
				} else {
					write_PIO(GPO_BASE, 0);
				}
			}
		} else {
			write_PIO(GPO_BASE, 0);
     53c:	0007883a 	mov	r3,zero
     540:	00820834 	movhi	r2,2080
     544:	10c00035 	stwio	r3,0(r2)
     548:	00000106 	br	550 <main+0x1d8>
					printf("Jumps: %d -- detecttime: %d -- currentTime: %d\n", jumpCounter, jumps[i], currentMillis);
					jumps[i] = 0;
					if (i == 5) {
						jumpCounter = 0;
					}
					break;
     54c:	0001883a 	nop
			}
		} else {
			write_PIO(GPO_BASE, 0);
		}
		// Only check for cacti once every tenth of a second so it won't flood pending jumps
		if (currentMillis - previousDetectionMillis >= 150) {
     550:	e0fff617 	ldw	r3,-40(fp)
     554:	e0bff417 	ldw	r2,-48(fp)
     558:	1885c83a 	sub	r2,r3,r2
     55c:	10802590 	cmplti	r2,r2,150
     560:	1000191e 	bne	r2,zero,5c8 <main+0x250>
			// Use the 2 LDR's to check for cacti
			if ((backgroundLDR == 1 && foregroundLDRDark == 0) || (backgroundLDR == 0 && foregroundLDRLight == 1)) {
     564:	e0bff817 	ldw	r2,-32(fp)
     568:	10800058 	cmpnei	r2,r2,1
     56c:	1000021e 	bne	r2,zero,578 <main+0x200>
     570:	e0bff917 	ldw	r2,-28(fp)
     574:	10000526 	beq	r2,zero,58c <main+0x214>
     578:	e0bff817 	ldw	r2,-32(fp)
     57c:	1000121e 	bne	r2,zero,5c8 <main+0x250>
     580:	e0bffa17 	ldw	r2,-24(fp)
     584:	10800058 	cmpnei	r2,r2,1
     588:	10000f1e 	bne	r2,zero,5c8 <main+0x250>
				previousDetectionMillis = currentMillis;
     58c:	e0bff617 	ldw	r2,-40(fp)
     590:	e0bff415 	stw	r2,-48(fp)
				jumpCounter++;
     594:	e0bff317 	ldw	r2,-52(fp)
     598:	10800044 	addi	r2,r2,1
     59c:	e0bff315 	stw	r2,-52(fp)
				jumps[jumpCounter] = currentMillis + jumpDelay;
     5a0:	d0e00017 	ldw	r3,-32768(gp)
     5a4:	e0bff617 	ldw	r2,-40(fp)
     5a8:	1887883a 	add	r3,r3,r2
     5ac:	e0bff317 	ldw	r2,-52(fp)
     5b0:	1085883a 	add	r2,r2,r2
     5b4:	1085883a 	add	r2,r2,r2
     5b8:	e13ff304 	addi	r4,fp,-52
     5bc:	2085883a 	add	r2,r4,r2
     5c0:	10800804 	addi	r2,r2,32
     5c4:	10c00015 	stw	r3,0(r2)
			}
		}

		if (currentMillis % 25000 == 0 && currentMillis < 250000 && currentMillis > 0) {
     5c8:	e0bff617 	ldw	r2,-40(fp)
     5cc:	00d86a04 	movi	r3,25000
     5d0:	10c7283a 	div	r3,r2,r3
     5d4:	18d86a24 	muli	r3,r3,25000
     5d8:	10c5c83a 	sub	r2,r2,r3
     5dc:	1000091e 	bne	r2,zero,604 <main+0x28c>
     5e0:	e0fff617 	ldw	r3,-40(fp)
     5e4:	00800134 	movhi	r2,4
     5e8:	10b423c4 	addi	r2,r2,-12145
     5ec:	10c00516 	blt	r2,r3,604 <main+0x28c>
     5f0:	e0bff617 	ldw	r2,-40(fp)
     5f4:	0080030e 	bge	zero,r2,604 <main+0x28c>
			jumpDelay -= 20;
     5f8:	d0a00017 	ldw	r2,-32768(gp)
     5fc:	10bffb04 	addi	r2,r2,-20
     600:	d0a00015 	stw	r2,-32768(gp)
		}

		if (read_PIO(PUSHBUTTONS_BASE) == 1) {
     604:	00bfc834 	movhi	r2,65312
     608:	10801404 	addi	r2,r2,80
     60c:	10800037 	ldwio	r2,0(r2)
     610:	10800058 	cmpnei	r2,r2,1
     614:	103f611e 	bne	r2,zero,39c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700039c>
			gettimeofday(&t0, 0);
     618:	000b883a 	mov	r5,zero
     61c:	d1279004 	addi	r4,gp,-25024
     620:	000d23c0 	call	d23c <gettimeofday>
			previousDetectionMillis = 0;
     624:	e03ff415 	stw	zero,-48(fp)
			jumpCounter = 0;
     628:	e03ff315 	stw	zero,-52(fp)
			jumpDelay = 475;
     62c:	008076c4 	movi	r2,475
     630:	d0a00015 	stw	r2,-32768(gp)
		}
	}
     634:	003f5906 	br	39c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700039c>

00000638 <__fixsfsi>:
     638:	200ad5fa 	srli	r5,r4,23
     63c:	00c02034 	movhi	r3,128
     640:	18ffffc4 	addi	r3,r3,-1
     644:	29403fcc 	andi	r5,r5,255
     648:	00801f84 	movi	r2,126
     64c:	1906703a 	and	r3,r3,r4
     650:	2008d7fa 	srli	r4,r4,31
     654:	11400e0e 	bge	r2,r5,690 <__fixsfsi+0x58>
     658:	00802744 	movi	r2,157
     65c:	11400816 	blt	r2,r5,680 <__fixsfsi+0x48>
     660:	00802544 	movi	r2,149
     664:	18c02034 	orhi	r3,r3,128
     668:	11400b0e 	bge	r2,r5,698 <__fixsfsi+0x60>
     66c:	28bfda84 	addi	r2,r5,-150
     670:	1884983a 	sll	r2,r3,r2
     674:	20000726 	beq	r4,zero,694 <__fixsfsi+0x5c>
     678:	0085c83a 	sub	r2,zero,r2
     67c:	f800283a 	ret
     680:	00a00034 	movhi	r2,32768
     684:	10bfffc4 	addi	r2,r2,-1
     688:	2085883a 	add	r2,r4,r2
     68c:	f800283a 	ret
     690:	0005883a 	mov	r2,zero
     694:	f800283a 	ret
     698:	00802584 	movi	r2,150
     69c:	1145c83a 	sub	r2,r2,r5
     6a0:	1884d83a 	srl	r2,r3,r2
     6a4:	003ff306 	br	674 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000674>

000006a8 <__floatsisf>:
     6a8:	defffd04 	addi	sp,sp,-12
     6ac:	dfc00215 	stw	ra,8(sp)
     6b0:	dc400115 	stw	r17,4(sp)
     6b4:	dc000015 	stw	r16,0(sp)
     6b8:	20003526 	beq	r4,zero,790 <__floatsisf+0xe8>
     6bc:	2021883a 	mov	r16,r4
     6c0:	2022d7fa 	srli	r17,r4,31
     6c4:	20003616 	blt	r4,zero,7a0 <__floatsisf+0xf8>
     6c8:	8009883a 	mov	r4,r16
     6cc:	00007cc0 	call	7cc <__clzsi2>
     6d0:	00c02784 	movi	r3,158
     6d4:	1887c83a 	sub	r3,r3,r2
     6d8:	01002584 	movi	r4,150
     6dc:	20c01416 	blt	r4,r3,730 <__floatsisf+0x88>
     6e0:	20c9c83a 	sub	r4,r4,r3
     6e4:	8120983a 	sll	r16,r16,r4
     6e8:	00802034 	movhi	r2,128
     6ec:	10bfffc4 	addi	r2,r2,-1
     6f0:	8809883a 	mov	r4,r17
     6f4:	80a0703a 	and	r16,r16,r2
     6f8:	18803fcc 	andi	r2,r3,255
     6fc:	100695fa 	slli	r3,r2,23
     700:	20803fcc 	andi	r2,r4,255
     704:	100897fa 	slli	r4,r2,31
     708:	00802034 	movhi	r2,128
     70c:	10bfffc4 	addi	r2,r2,-1
     710:	8084703a 	and	r2,r16,r2
     714:	10c4b03a 	or	r2,r2,r3
     718:	1104b03a 	or	r2,r2,r4
     71c:	dfc00217 	ldw	ra,8(sp)
     720:	dc400117 	ldw	r17,4(sp)
     724:	dc000017 	ldw	r16,0(sp)
     728:	dec00304 	addi	sp,sp,12
     72c:	f800283a 	ret
     730:	01002644 	movi	r4,153
     734:	20c01c16 	blt	r4,r3,7a8 <__floatsisf+0x100>
     738:	20c9c83a 	sub	r4,r4,r3
     73c:	8120983a 	sll	r16,r16,r4
     740:	013f0034 	movhi	r4,64512
     744:	213fffc4 	addi	r4,r4,-1
     748:	814001cc 	andi	r5,r16,7
     74c:	8108703a 	and	r4,r16,r4
     750:	28000426 	beq	r5,zero,764 <__floatsisf+0xbc>
     754:	840003cc 	andi	r16,r16,15
     758:	01400104 	movi	r5,4
     75c:	81400126 	beq	r16,r5,764 <__floatsisf+0xbc>
     760:	2149883a 	add	r4,r4,r5
     764:	2141002c 	andhi	r5,r4,1024
     768:	28000526 	beq	r5,zero,780 <__floatsisf+0xd8>
     76c:	00c027c4 	movi	r3,159
     770:	1887c83a 	sub	r3,r3,r2
     774:	00bf0034 	movhi	r2,64512
     778:	10bfffc4 	addi	r2,r2,-1
     77c:	2088703a 	and	r4,r4,r2
     780:	202091ba 	slli	r16,r4,6
     784:	8809883a 	mov	r4,r17
     788:	8020d27a 	srli	r16,r16,9
     78c:	003fda06 	br	6f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70006f8>
     790:	0009883a 	mov	r4,zero
     794:	0007883a 	mov	r3,zero
     798:	0021883a 	mov	r16,zero
     79c:	003fd606 	br	6f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70006f8>
     7a0:	0121c83a 	sub	r16,zero,r4
     7a4:	003fc806 	br	6c8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70006c8>
     7a8:	01002e44 	movi	r4,185
     7ac:	20c9c83a 	sub	r4,r4,r3
     7b0:	01400144 	movi	r5,5
     7b4:	8108983a 	sll	r4,r16,r4
     7b8:	288bc83a 	sub	r5,r5,r2
     7bc:	8160d83a 	srl	r16,r16,r5
     7c0:	2008c03a 	cmpne	r4,r4,zero
     7c4:	8120b03a 	or	r16,r16,r4
     7c8:	003fdd06 	br	740 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000740>

000007cc <__clzsi2>:
     7cc:	00bfffd4 	movui	r2,65535
     7d0:	11000536 	bltu	r2,r4,7e8 <__clzsi2+0x1c>
     7d4:	00803fc4 	movi	r2,255
     7d8:	11000f36 	bltu	r2,r4,818 <__clzsi2+0x4c>
     7dc:	00800804 	movi	r2,32
     7e0:	0007883a 	mov	r3,zero
     7e4:	00000506 	br	7fc <__clzsi2+0x30>
     7e8:	00804034 	movhi	r2,256
     7ec:	10bfffc4 	addi	r2,r2,-1
     7f0:	11000c2e 	bgeu	r2,r4,824 <__clzsi2+0x58>
     7f4:	00800204 	movi	r2,8
     7f8:	00c00604 	movi	r3,24
     7fc:	20c8d83a 	srl	r4,r4,r3
     800:	00c00074 	movhi	r3,1
     804:	18c51004 	addi	r3,r3,5184
     808:	1909883a 	add	r4,r3,r4
     80c:	20c00003 	ldbu	r3,0(r4)
     810:	10c5c83a 	sub	r2,r2,r3
     814:	f800283a 	ret
     818:	00800604 	movi	r2,24
     81c:	00c00204 	movi	r3,8
     820:	003ff606 	br	7fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70007fc>
     824:	00800404 	movi	r2,16
     828:	1007883a 	mov	r3,r2
     82c:	003ff306 	br	7fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70007fc>

00000830 <_printf_r>:
     830:	defffd04 	addi	sp,sp,-12
     834:	2805883a 	mov	r2,r5
     838:	dfc00015 	stw	ra,0(sp)
     83c:	d9800115 	stw	r6,4(sp)
     840:	d9c00215 	stw	r7,8(sp)
     844:	21400217 	ldw	r5,8(r4)
     848:	d9c00104 	addi	r7,sp,4
     84c:	100d883a 	mov	r6,r2
     850:	000089c0 	call	89c <___vfprintf_internal_r>
     854:	dfc00017 	ldw	ra,0(sp)
     858:	dec00304 	addi	sp,sp,12
     85c:	f800283a 	ret

00000860 <printf>:
     860:	defffc04 	addi	sp,sp,-16
     864:	dfc00015 	stw	ra,0(sp)
     868:	d9400115 	stw	r5,4(sp)
     86c:	d9800215 	stw	r6,8(sp)
     870:	d9c00315 	stw	r7,12(sp)
     874:	00800074 	movhi	r2,1
     878:	108d9004 	addi	r2,r2,13888
     87c:	10800017 	ldw	r2,0(r2)
     880:	200b883a 	mov	r5,r4
     884:	d9800104 	addi	r6,sp,4
     888:	11000217 	ldw	r4,8(r2)
     88c:	0002a940 	call	2a94 <__vfprintf_internal>
     890:	dfc00017 	ldw	ra,0(sp)
     894:	dec00404 	addi	sp,sp,16
     898:	f800283a 	ret

0000089c <___vfprintf_internal_r>:
     89c:	deffb804 	addi	sp,sp,-288
     8a0:	dfc04715 	stw	ra,284(sp)
     8a4:	ddc04515 	stw	r23,276(sp)
     8a8:	dd404315 	stw	r21,268(sp)
     8ac:	d9002c15 	stw	r4,176(sp)
     8b0:	282f883a 	mov	r23,r5
     8b4:	302b883a 	mov	r21,r6
     8b8:	d9c02d15 	stw	r7,180(sp)
     8bc:	df004615 	stw	fp,280(sp)
     8c0:	dd804415 	stw	r22,272(sp)
     8c4:	dd004215 	stw	r20,264(sp)
     8c8:	dcc04115 	stw	r19,260(sp)
     8cc:	dc804015 	stw	r18,256(sp)
     8d0:	dc403f15 	stw	r17,252(sp)
     8d4:	dc003e15 	stw	r16,248(sp)
     8d8:	00051f80 	call	51f8 <_localeconv_r>
     8dc:	10800017 	ldw	r2,0(r2)
     8e0:	1009883a 	mov	r4,r2
     8e4:	d8803415 	stw	r2,208(sp)
     8e8:	00072200 	call	7220 <strlen>
     8ec:	d8803715 	stw	r2,220(sp)
     8f0:	d8802c17 	ldw	r2,176(sp)
     8f4:	10000226 	beq	r2,zero,900 <___vfprintf_internal_r+0x64>
     8f8:	10800e17 	ldw	r2,56(r2)
     8fc:	1000f926 	beq	r2,zero,ce4 <___vfprintf_internal_r+0x448>
     900:	b880030b 	ldhu	r2,12(r23)
     904:	10c8000c 	andi	r3,r2,8192
     908:	1800061e 	bne	r3,zero,924 <___vfprintf_internal_r+0x88>
     90c:	b9001917 	ldw	r4,100(r23)
     910:	00f7ffc4 	movi	r3,-8193
     914:	10880014 	ori	r2,r2,8192
     918:	20c6703a 	and	r3,r4,r3
     91c:	b880030d 	sth	r2,12(r23)
     920:	b8c01915 	stw	r3,100(r23)
     924:	10c0020c 	andi	r3,r2,8
     928:	1800c126 	beq	r3,zero,c30 <___vfprintf_internal_r+0x394>
     92c:	b8c00417 	ldw	r3,16(r23)
     930:	1800bf26 	beq	r3,zero,c30 <___vfprintf_internal_r+0x394>
     934:	1080068c 	andi	r2,r2,26
     938:	00c00284 	movi	r3,10
     93c:	10c0c426 	beq	r2,r3,c50 <___vfprintf_internal_r+0x3b4>
     940:	d8c00404 	addi	r3,sp,16
     944:	05000074 	movhi	r20,1
     948:	d9001e04 	addi	r4,sp,120
     94c:	a5056084 	addi	r20,r20,5506
     950:	d8c01e15 	stw	r3,120(sp)
     954:	d8002015 	stw	zero,128(sp)
     958:	d8001f15 	stw	zero,124(sp)
     95c:	d8003315 	stw	zero,204(sp)
     960:	d8003615 	stw	zero,216(sp)
     964:	d8003815 	stw	zero,224(sp)
     968:	1811883a 	mov	r8,r3
     96c:	d8003915 	stw	zero,228(sp)
     970:	d8003a15 	stw	zero,232(sp)
     974:	d8002f15 	stw	zero,188(sp)
     978:	d9002815 	stw	r4,160(sp)
     97c:	a8800007 	ldb	r2,0(r21)
     980:	10027b26 	beq	r2,zero,1370 <___vfprintf_internal_r+0xad4>
     984:	00c00944 	movi	r3,37
     988:	a821883a 	mov	r16,r21
     98c:	10c0021e 	bne	r2,r3,998 <___vfprintf_internal_r+0xfc>
     990:	00001406 	br	9e4 <___vfprintf_internal_r+0x148>
     994:	10c00326 	beq	r2,r3,9a4 <___vfprintf_internal_r+0x108>
     998:	84000044 	addi	r16,r16,1
     99c:	80800007 	ldb	r2,0(r16)
     9a0:	103ffc1e 	bne	r2,zero,994 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000994>
     9a4:	8563c83a 	sub	r17,r16,r21
     9a8:	88000e26 	beq	r17,zero,9e4 <___vfprintf_internal_r+0x148>
     9ac:	d8c02017 	ldw	r3,128(sp)
     9b0:	d8801f17 	ldw	r2,124(sp)
     9b4:	45400015 	stw	r21,0(r8)
     9b8:	1c47883a 	add	r3,r3,r17
     9bc:	10800044 	addi	r2,r2,1
     9c0:	d8c02015 	stw	r3,128(sp)
     9c4:	44400115 	stw	r17,4(r8)
     9c8:	d8801f15 	stw	r2,124(sp)
     9cc:	00c001c4 	movi	r3,7
     9d0:	1880a716 	blt	r3,r2,c70 <___vfprintf_internal_r+0x3d4>
     9d4:	42000204 	addi	r8,r8,8
     9d8:	d9402f17 	ldw	r5,188(sp)
     9dc:	2c4b883a 	add	r5,r5,r17
     9e0:	d9402f15 	stw	r5,188(sp)
     9e4:	80800007 	ldb	r2,0(r16)
     9e8:	1000a826 	beq	r2,zero,c8c <___vfprintf_internal_r+0x3f0>
     9ec:	84400047 	ldb	r17,1(r16)
     9f0:	00bfffc4 	movi	r2,-1
     9f4:	85400044 	addi	r21,r16,1
     9f8:	d8002785 	stb	zero,158(sp)
     9fc:	0007883a 	mov	r3,zero
     a00:	000f883a 	mov	r7,zero
     a04:	d8802915 	stw	r2,164(sp)
     a08:	d8003115 	stw	zero,196(sp)
     a0c:	0025883a 	mov	r18,zero
     a10:	01401604 	movi	r5,88
     a14:	01800244 	movi	r6,9
     a18:	02800a84 	movi	r10,42
     a1c:	02401b04 	movi	r9,108
     a20:	ad400044 	addi	r21,r21,1
     a24:	88bff804 	addi	r2,r17,-32
     a28:	28830436 	bltu	r5,r2,163c <___vfprintf_internal_r+0xda0>
     a2c:	100490ba 	slli	r2,r2,2
     a30:	01000034 	movhi	r4,0
     a34:	21029104 	addi	r4,r4,2628
     a38:	1105883a 	add	r2,r2,r4
     a3c:	10800017 	ldw	r2,0(r2)
     a40:	1000683a 	jmp	r2
     a44:	0000155c 	xori	zero,zero,85
     a48:	0000163c 	xorhi	zero,zero,88
     a4c:	0000163c 	xorhi	zero,zero,88
     a50:	0000157c 	xorhi	zero,zero,85
     a54:	0000163c 	xorhi	zero,zero,88
     a58:	0000163c 	xorhi	zero,zero,88
     a5c:	0000163c 	xorhi	zero,zero,88
     a60:	0000163c 	xorhi	zero,zero,88
     a64:	0000163c 	xorhi	zero,zero,88
     a68:	0000163c 	xorhi	zero,zero,88
     a6c:	00000cf0 	cmpltui	zero,zero,51
     a70:	00001498 	cmpnei	zero,zero,82
     a74:	0000163c 	xorhi	zero,zero,88
     a78:	00000bb8 	rdprs	zero,zero,46
     a7c:	00000d18 	cmpnei	zero,zero,52
     a80:	0000163c 	xorhi	zero,zero,88
     a84:	00000d58 	cmpnei	zero,zero,53
     a88:	00000d64 	muli	zero,zero,53
     a8c:	00000d64 	muli	zero,zero,53
     a90:	00000d64 	muli	zero,zero,53
     a94:	00000d64 	muli	zero,zero,53
     a98:	00000d64 	muli	zero,zero,53
     a9c:	00000d64 	muli	zero,zero,53
     aa0:	00000d64 	muli	zero,zero,53
     aa4:	00000d64 	muli	zero,zero,53
     aa8:	00000d64 	muli	zero,zero,53
     aac:	0000163c 	xorhi	zero,zero,88
     ab0:	0000163c 	xorhi	zero,zero,88
     ab4:	0000163c 	xorhi	zero,zero,88
     ab8:	0000163c 	xorhi	zero,zero,88
     abc:	0000163c 	xorhi	zero,zero,88
     ac0:	0000163c 	xorhi	zero,zero,88
     ac4:	0000163c 	xorhi	zero,zero,88
     ac8:	0000163c 	xorhi	zero,zero,88
     acc:	0000163c 	xorhi	zero,zero,88
     ad0:	0000163c 	xorhi	zero,zero,88
     ad4:	00000d98 	cmpnei	zero,zero,54
     ad8:	00000e54 	movui	zero,57
     adc:	0000163c 	xorhi	zero,zero,88
     ae0:	00000e54 	movui	zero,57
     ae4:	0000163c 	xorhi	zero,zero,88
     ae8:	0000163c 	xorhi	zero,zero,88
     aec:	0000163c 	xorhi	zero,zero,88
     af0:	0000163c 	xorhi	zero,zero,88
     af4:	00000ef4 	movhi	zero,59
     af8:	0000163c 	xorhi	zero,zero,88
     afc:	0000163c 	xorhi	zero,zero,88
     b00:	00000f00 	call	f0 <__flash_exceptions_start+0xd0>
     b04:	0000163c 	xorhi	zero,zero,88
     b08:	0000163c 	xorhi	zero,zero,88
     b0c:	0000163c 	xorhi	zero,zero,88
     b10:	0000163c 	xorhi	zero,zero,88
     b14:	0000163c 	xorhi	zero,zero,88
     b18:	00001378 	rdprs	zero,zero,77
     b1c:	0000163c 	xorhi	zero,zero,88
     b20:	0000163c 	xorhi	zero,zero,88
     b24:	000013d8 	cmpnei	zero,zero,79
     b28:	0000163c 	xorhi	zero,zero,88
     b2c:	0000163c 	xorhi	zero,zero,88
     b30:	0000163c 	xorhi	zero,zero,88
     b34:	0000163c 	xorhi	zero,zero,88
     b38:	0000163c 	xorhi	zero,zero,88
     b3c:	0000163c 	xorhi	zero,zero,88
     b40:	0000163c 	xorhi	zero,zero,88
     b44:	0000163c 	xorhi	zero,zero,88
     b48:	0000163c 	xorhi	zero,zero,88
     b4c:	0000163c 	xorhi	zero,zero,88
     b50:	000015e8 	cmpgeui	zero,zero,87
     b54:	00001588 	cmpgei	zero,zero,86
     b58:	00000e54 	movui	zero,57
     b5c:	00000e54 	movui	zero,57
     b60:	00000e54 	movui	zero,57
     b64:	00001598 	cmpnei	zero,zero,86
     b68:	00001588 	cmpgei	zero,zero,86
     b6c:	0000163c 	xorhi	zero,zero,88
     b70:	0000163c 	xorhi	zero,zero,88
     b74:	000015a4 	muli	zero,zero,86
     b78:	0000163c 	xorhi	zero,zero,88
     b7c:	000015b4 	movhi	zero,86
     b80:	00001488 	cmpgei	zero,zero,82
     b84:	00000bc4 	movi	zero,47
     b88:	000014a8 	cmpgeui	zero,zero,82
     b8c:	0000163c 	xorhi	zero,zero,88
     b90:	000014b4 	movhi	zero,82
     b94:	0000163c 	xorhi	zero,zero,88
     b98:	00001510 	cmplti	zero,zero,84
     b9c:	0000163c 	xorhi	zero,zero,88
     ba0:	0000163c 	xorhi	zero,zero,88
     ba4:	00001520 	cmpeqi	zero,zero,84
     ba8:	d9003117 	ldw	r4,196(sp)
     bac:	d8802d15 	stw	r2,180(sp)
     bb0:	0109c83a 	sub	r4,zero,r4
     bb4:	d9003115 	stw	r4,196(sp)
     bb8:	94800114 	ori	r18,r18,4
     bbc:	ac400007 	ldb	r17,0(r21)
     bc0:	003f9706 	br	a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a20>
     bc4:	00800c04 	movi	r2,48
     bc8:	d9002d17 	ldw	r4,180(sp)
     bcc:	d9402917 	ldw	r5,164(sp)
     bd0:	d8802705 	stb	r2,156(sp)
     bd4:	00801e04 	movi	r2,120
     bd8:	d8802745 	stb	r2,157(sp)
     bdc:	d8002785 	stb	zero,158(sp)
     be0:	20c00104 	addi	r3,r4,4
     be4:	24c00017 	ldw	r19,0(r4)
     be8:	002d883a 	mov	r22,zero
     bec:	90800094 	ori	r2,r18,2
     bf0:	28029a16 	blt	r5,zero,165c <___vfprintf_internal_r+0xdc0>
     bf4:	00bfdfc4 	movi	r2,-129
     bf8:	90a4703a 	and	r18,r18,r2
     bfc:	d8c02d15 	stw	r3,180(sp)
     c00:	94800094 	ori	r18,r18,2
     c04:	9802871e 	bne	r19,zero,1624 <___vfprintf_internal_r+0xd88>
     c08:	00800074 	movhi	r2,1
     c0c:	10855904 	addi	r2,r2,5476
     c10:	d8803915 	stw	r2,228(sp)
     c14:	04401e04 	movi	r17,120
     c18:	d8802917 	ldw	r2,164(sp)
     c1c:	0039883a 	mov	fp,zero
     c20:	1001e926 	beq	r2,zero,13c8 <___vfprintf_internal_r+0xb2c>
     c24:	0027883a 	mov	r19,zero
     c28:	002d883a 	mov	r22,zero
     c2c:	00020506 	br	1444 <___vfprintf_internal_r+0xba8>
     c30:	d9002c17 	ldw	r4,176(sp)
     c34:	b80b883a 	mov	r5,r23
     c38:	0002b6c0 	call	2b6c <__swsetup_r>
     c3c:	1005ac1e 	bne	r2,zero,22f0 <___vfprintf_internal_r+0x1a54>
     c40:	b880030b 	ldhu	r2,12(r23)
     c44:	00c00284 	movi	r3,10
     c48:	1080068c 	andi	r2,r2,26
     c4c:	10ff3c1e 	bne	r2,r3,940 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000940>
     c50:	b880038f 	ldh	r2,14(r23)
     c54:	103f3a16 	blt	r2,zero,940 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000940>
     c58:	d9c02d17 	ldw	r7,180(sp)
     c5c:	d9002c17 	ldw	r4,176(sp)
     c60:	a80d883a 	mov	r6,r21
     c64:	b80b883a 	mov	r5,r23
     c68:	0002ab00 	call	2ab0 <__sbprintf>
     c6c:	00001106 	br	cb4 <___vfprintf_internal_r+0x418>
     c70:	d9002c17 	ldw	r4,176(sp)
     c74:	d9801e04 	addi	r6,sp,120
     c78:	b80b883a 	mov	r5,r23
     c7c:	00073b40 	call	73b4 <__sprint_r>
     c80:	1000081e 	bne	r2,zero,ca4 <___vfprintf_internal_r+0x408>
     c84:	da000404 	addi	r8,sp,16
     c88:	003f5306 	br	9d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70009d8>
     c8c:	d8802017 	ldw	r2,128(sp)
     c90:	10000426 	beq	r2,zero,ca4 <___vfprintf_internal_r+0x408>
     c94:	d9002c17 	ldw	r4,176(sp)
     c98:	d9801e04 	addi	r6,sp,120
     c9c:	b80b883a 	mov	r5,r23
     ca0:	00073b40 	call	73b4 <__sprint_r>
     ca4:	b880030b 	ldhu	r2,12(r23)
     ca8:	1080100c 	andi	r2,r2,64
     cac:	1005901e 	bne	r2,zero,22f0 <___vfprintf_internal_r+0x1a54>
     cb0:	d8802f17 	ldw	r2,188(sp)
     cb4:	dfc04717 	ldw	ra,284(sp)
     cb8:	df004617 	ldw	fp,280(sp)
     cbc:	ddc04517 	ldw	r23,276(sp)
     cc0:	dd804417 	ldw	r22,272(sp)
     cc4:	dd404317 	ldw	r21,268(sp)
     cc8:	dd004217 	ldw	r20,264(sp)
     ccc:	dcc04117 	ldw	r19,260(sp)
     cd0:	dc804017 	ldw	r18,256(sp)
     cd4:	dc403f17 	ldw	r17,252(sp)
     cd8:	dc003e17 	ldw	r16,248(sp)
     cdc:	dec04804 	addi	sp,sp,288
     ce0:	f800283a 	ret
     ce4:	d9002c17 	ldw	r4,176(sp)
     ce8:	0004b400 	call	4b40 <__sinit>
     cec:	003f0406 	br	900 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000900>
     cf0:	d8802d17 	ldw	r2,180(sp)
     cf4:	d9002d17 	ldw	r4,180(sp)
     cf8:	10800017 	ldw	r2,0(r2)
     cfc:	d8803115 	stw	r2,196(sp)
     d00:	20800104 	addi	r2,r4,4
     d04:	d9003117 	ldw	r4,196(sp)
     d08:	203fa716 	blt	r4,zero,ba8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ba8>
     d0c:	d8802d15 	stw	r2,180(sp)
     d10:	ac400007 	ldb	r17,0(r21)
     d14:	003f4206 	br	a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a20>
     d18:	ac400007 	ldb	r17,0(r21)
     d1c:	aac00044 	addi	r11,r21,1
     d20:	8a872826 	beq	r17,r10,29c4 <___vfprintf_internal_r+0x2128>
     d24:	88bff404 	addi	r2,r17,-48
     d28:	0009883a 	mov	r4,zero
     d2c:	30867d36 	bltu	r6,r2,2724 <___vfprintf_internal_r+0x1e88>
     d30:	5c400007 	ldb	r17,0(r11)
     d34:	210002a4 	muli	r4,r4,10
     d38:	5d400044 	addi	r21,r11,1
     d3c:	a817883a 	mov	r11,r21
     d40:	2089883a 	add	r4,r4,r2
     d44:	88bff404 	addi	r2,r17,-48
     d48:	30bff92e 	bgeu	r6,r2,d30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000d30>
     d4c:	2005c916 	blt	r4,zero,2474 <___vfprintf_internal_r+0x1bd8>
     d50:	d9002915 	stw	r4,164(sp)
     d54:	003f3306 	br	a24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a24>
     d58:	94802014 	ori	r18,r18,128
     d5c:	ac400007 	ldb	r17,0(r21)
     d60:	003f2f06 	br	a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a20>
     d64:	a809883a 	mov	r4,r21
     d68:	d8003115 	stw	zero,196(sp)
     d6c:	88bff404 	addi	r2,r17,-48
     d70:	0017883a 	mov	r11,zero
     d74:	24400007 	ldb	r17,0(r4)
     d78:	5ac002a4 	muli	r11,r11,10
     d7c:	ad400044 	addi	r21,r21,1
     d80:	a809883a 	mov	r4,r21
     d84:	12d7883a 	add	r11,r2,r11
     d88:	88bff404 	addi	r2,r17,-48
     d8c:	30bff92e 	bgeu	r6,r2,d74 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000d74>
     d90:	dac03115 	stw	r11,196(sp)
     d94:	003f2306 	br	a24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a24>
     d98:	18c03fcc 	andi	r3,r3,255
     d9c:	18072b1e 	bne	r3,zero,2a4c <___vfprintf_internal_r+0x21b0>
     da0:	94800414 	ori	r18,r18,16
     da4:	9080080c 	andi	r2,r18,32
     da8:	10037b26 	beq	r2,zero,1b98 <___vfprintf_internal_r+0x12fc>
     dac:	d9402d17 	ldw	r5,180(sp)
     db0:	28800117 	ldw	r2,4(r5)
     db4:	2cc00017 	ldw	r19,0(r5)
     db8:	29400204 	addi	r5,r5,8
     dbc:	d9402d15 	stw	r5,180(sp)
     dc0:	102d883a 	mov	r22,r2
     dc4:	10044b16 	blt	r2,zero,1ef4 <___vfprintf_internal_r+0x1658>
     dc8:	d9402917 	ldw	r5,164(sp)
     dcc:	df002783 	ldbu	fp,158(sp)
     dd0:	2803bc16 	blt	r5,zero,1cc4 <___vfprintf_internal_r+0x1428>
     dd4:	00ffdfc4 	movi	r3,-129
     dd8:	9d84b03a 	or	r2,r19,r22
     ddc:	90e4703a 	and	r18,r18,r3
     de0:	10017726 	beq	r2,zero,13c0 <___vfprintf_internal_r+0xb24>
     de4:	b0038326 	beq	r22,zero,1bf4 <___vfprintf_internal_r+0x1358>
     de8:	dc402a15 	stw	r17,168(sp)
     dec:	dc001e04 	addi	r16,sp,120
     df0:	b023883a 	mov	r17,r22
     df4:	402d883a 	mov	r22,r8
     df8:	9809883a 	mov	r4,r19
     dfc:	880b883a 	mov	r5,r17
     e00:	01800284 	movi	r6,10
     e04:	000f883a 	mov	r7,zero
     e08:	000a3280 	call	a328 <__umoddi3>
     e0c:	10800c04 	addi	r2,r2,48
     e10:	843fffc4 	addi	r16,r16,-1
     e14:	9809883a 	mov	r4,r19
     e18:	880b883a 	mov	r5,r17
     e1c:	80800005 	stb	r2,0(r16)
     e20:	01800284 	movi	r6,10
     e24:	000f883a 	mov	r7,zero
     e28:	0009db00 	call	9db0 <__udivdi3>
     e2c:	1027883a 	mov	r19,r2
     e30:	10c4b03a 	or	r2,r2,r3
     e34:	1823883a 	mov	r17,r3
     e38:	103fef1e 	bne	r2,zero,df8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000df8>
     e3c:	d8c02817 	ldw	r3,160(sp)
     e40:	dc402a17 	ldw	r17,168(sp)
     e44:	b011883a 	mov	r8,r22
     e48:	1c07c83a 	sub	r3,r3,r16
     e4c:	d8c02e15 	stw	r3,184(sp)
     e50:	00005906 	br	fb8 <___vfprintf_internal_r+0x71c>
     e54:	18c03fcc 	andi	r3,r3,255
     e58:	1806fa1e 	bne	r3,zero,2a44 <___vfprintf_internal_r+0x21a8>
     e5c:	9080020c 	andi	r2,r18,8
     e60:	10048a26 	beq	r2,zero,208c <___vfprintf_internal_r+0x17f0>
     e64:	d8c02d17 	ldw	r3,180(sp)
     e68:	d9002d17 	ldw	r4,180(sp)
     e6c:	d9402d17 	ldw	r5,180(sp)
     e70:	18c00017 	ldw	r3,0(r3)
     e74:	21000117 	ldw	r4,4(r4)
     e78:	29400204 	addi	r5,r5,8
     e7c:	d8c03615 	stw	r3,216(sp)
     e80:	d9003815 	stw	r4,224(sp)
     e84:	d9402d15 	stw	r5,180(sp)
     e88:	d9003617 	ldw	r4,216(sp)
     e8c:	d9403817 	ldw	r5,224(sp)
     e90:	da003d15 	stw	r8,244(sp)
     e94:	04000044 	movi	r16,1
     e98:	0006f400 	call	6f40 <__fpclassifyd>
     e9c:	da003d17 	ldw	r8,244(sp)
     ea0:	14041f1e 	bne	r2,r16,1f20 <___vfprintf_internal_r+0x1684>
     ea4:	d9003617 	ldw	r4,216(sp)
     ea8:	d9403817 	ldw	r5,224(sp)
     eac:	000d883a 	mov	r6,zero
     eb0:	000f883a 	mov	r7,zero
     eb4:	000bd0c0 	call	bd0c <__ledf2>
     eb8:	da003d17 	ldw	r8,244(sp)
     ebc:	1005be16 	blt	r2,zero,25b8 <___vfprintf_internal_r+0x1d1c>
     ec0:	df002783 	ldbu	fp,158(sp)
     ec4:	008011c4 	movi	r2,71
     ec8:	1445330e 	bge	r2,r17,2398 <___vfprintf_internal_r+0x1afc>
     ecc:	04000074 	movhi	r16,1
     ed0:	84055104 	addi	r16,r16,5444
     ed4:	00c000c4 	movi	r3,3
     ed8:	00bfdfc4 	movi	r2,-129
     edc:	d8c02a15 	stw	r3,168(sp)
     ee0:	90a4703a 	and	r18,r18,r2
     ee4:	d8c02e15 	stw	r3,184(sp)
     ee8:	d8002915 	stw	zero,164(sp)
     eec:	d8003215 	stw	zero,200(sp)
     ef0:	00003706 	br	fd0 <___vfprintf_internal_r+0x734>
     ef4:	94800214 	ori	r18,r18,8
     ef8:	ac400007 	ldb	r17,0(r21)
     efc:	003ec806 	br	a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a20>
     f00:	18c03fcc 	andi	r3,r3,255
     f04:	1806db1e 	bne	r3,zero,2a74 <___vfprintf_internal_r+0x21d8>
     f08:	94800414 	ori	r18,r18,16
     f0c:	9080080c 	andi	r2,r18,32
     f10:	1002d826 	beq	r2,zero,1a74 <___vfprintf_internal_r+0x11d8>
     f14:	d9402d17 	ldw	r5,180(sp)
     f18:	d8c02917 	ldw	r3,164(sp)
     f1c:	d8002785 	stb	zero,158(sp)
     f20:	28800204 	addi	r2,r5,8
     f24:	2cc00017 	ldw	r19,0(r5)
     f28:	2d800117 	ldw	r22,4(r5)
     f2c:	18048f16 	blt	r3,zero,216c <___vfprintf_internal_r+0x18d0>
     f30:	013fdfc4 	movi	r4,-129
     f34:	9d86b03a 	or	r3,r19,r22
     f38:	d8802d15 	stw	r2,180(sp)
     f3c:	9124703a 	and	r18,r18,r4
     f40:	1802d91e 	bne	r3,zero,1aa8 <___vfprintf_internal_r+0x120c>
     f44:	d8c02917 	ldw	r3,164(sp)
     f48:	0039883a 	mov	fp,zero
     f4c:	1805c326 	beq	r3,zero,265c <___vfprintf_internal_r+0x1dc0>
     f50:	0027883a 	mov	r19,zero
     f54:	002d883a 	mov	r22,zero
     f58:	dc001e04 	addi	r16,sp,120
     f5c:	9806d0fa 	srli	r3,r19,3
     f60:	b008977a 	slli	r4,r22,29
     f64:	b02cd0fa 	srli	r22,r22,3
     f68:	9cc001cc 	andi	r19,r19,7
     f6c:	98800c04 	addi	r2,r19,48
     f70:	843fffc4 	addi	r16,r16,-1
     f74:	20e6b03a 	or	r19,r4,r3
     f78:	80800005 	stb	r2,0(r16)
     f7c:	9d86b03a 	or	r3,r19,r22
     f80:	183ff61e 	bne	r3,zero,f5c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f5c>
     f84:	90c0004c 	andi	r3,r18,1
     f88:	18013b26 	beq	r3,zero,1478 <___vfprintf_internal_r+0xbdc>
     f8c:	10803fcc 	andi	r2,r2,255
     f90:	1080201c 	xori	r2,r2,128
     f94:	10bfe004 	addi	r2,r2,-128
     f98:	00c00c04 	movi	r3,48
     f9c:	10c13626 	beq	r2,r3,1478 <___vfprintf_internal_r+0xbdc>
     fa0:	80ffffc5 	stb	r3,-1(r16)
     fa4:	d8c02817 	ldw	r3,160(sp)
     fa8:	80bfffc4 	addi	r2,r16,-1
     fac:	1021883a 	mov	r16,r2
     fb0:	1887c83a 	sub	r3,r3,r2
     fb4:	d8c02e15 	stw	r3,184(sp)
     fb8:	d8802e17 	ldw	r2,184(sp)
     fbc:	d9002917 	ldw	r4,164(sp)
     fc0:	1100010e 	bge	r2,r4,fc8 <___vfprintf_internal_r+0x72c>
     fc4:	2005883a 	mov	r2,r4
     fc8:	d8802a15 	stw	r2,168(sp)
     fcc:	d8003215 	stw	zero,200(sp)
     fd0:	e7003fcc 	andi	fp,fp,255
     fd4:	e700201c 	xori	fp,fp,128
     fd8:	e73fe004 	addi	fp,fp,-128
     fdc:	e0000326 	beq	fp,zero,fec <___vfprintf_internal_r+0x750>
     fe0:	d8c02a17 	ldw	r3,168(sp)
     fe4:	18c00044 	addi	r3,r3,1
     fe8:	d8c02a15 	stw	r3,168(sp)
     fec:	90c0008c 	andi	r3,r18,2
     ff0:	d8c02b15 	stw	r3,172(sp)
     ff4:	18000326 	beq	r3,zero,1004 <___vfprintf_internal_r+0x768>
     ff8:	d8c02a17 	ldw	r3,168(sp)
     ffc:	18c00084 	addi	r3,r3,2
    1000:	d8c02a15 	stw	r3,168(sp)
    1004:	90c0210c 	andi	r3,r18,132
    1008:	d8c03015 	stw	r3,192(sp)
    100c:	1801a31e 	bne	r3,zero,169c <___vfprintf_internal_r+0xe00>
    1010:	d9003117 	ldw	r4,196(sp)
    1014:	d8c02a17 	ldw	r3,168(sp)
    1018:	20e7c83a 	sub	r19,r4,r3
    101c:	04c19f0e 	bge	zero,r19,169c <___vfprintf_internal_r+0xe00>
    1020:	02400404 	movi	r9,16
    1024:	d8c02017 	ldw	r3,128(sp)
    1028:	d8801f17 	ldw	r2,124(sp)
    102c:	4cc50d0e 	bge	r9,r19,2464 <___vfprintf_internal_r+0x1bc8>
    1030:	01400074 	movhi	r5,1
    1034:	29456484 	addi	r5,r5,5522
    1038:	dc403b15 	stw	r17,236(sp)
    103c:	d9403515 	stw	r5,212(sp)
    1040:	9823883a 	mov	r17,r19
    1044:	482d883a 	mov	r22,r9
    1048:	9027883a 	mov	r19,r18
    104c:	070001c4 	movi	fp,7
    1050:	8025883a 	mov	r18,r16
    1054:	dc002c17 	ldw	r16,176(sp)
    1058:	00000306 	br	1068 <___vfprintf_internal_r+0x7cc>
    105c:	8c7ffc04 	addi	r17,r17,-16
    1060:	42000204 	addi	r8,r8,8
    1064:	b440130e 	bge	r22,r17,10b4 <___vfprintf_internal_r+0x818>
    1068:	01000074 	movhi	r4,1
    106c:	18c00404 	addi	r3,r3,16
    1070:	10800044 	addi	r2,r2,1
    1074:	21056484 	addi	r4,r4,5522
    1078:	41000015 	stw	r4,0(r8)
    107c:	45800115 	stw	r22,4(r8)
    1080:	d8c02015 	stw	r3,128(sp)
    1084:	d8801f15 	stw	r2,124(sp)
    1088:	e0bff40e 	bge	fp,r2,105c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700105c>
    108c:	d9801e04 	addi	r6,sp,120
    1090:	b80b883a 	mov	r5,r23
    1094:	8009883a 	mov	r4,r16
    1098:	00073b40 	call	73b4 <__sprint_r>
    109c:	103f011e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    10a0:	8c7ffc04 	addi	r17,r17,-16
    10a4:	d8c02017 	ldw	r3,128(sp)
    10a8:	d8801f17 	ldw	r2,124(sp)
    10ac:	da000404 	addi	r8,sp,16
    10b0:	b47fed16 	blt	r22,r17,1068 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001068>
    10b4:	9021883a 	mov	r16,r18
    10b8:	9825883a 	mov	r18,r19
    10bc:	8827883a 	mov	r19,r17
    10c0:	dc403b17 	ldw	r17,236(sp)
    10c4:	d9403517 	ldw	r5,212(sp)
    10c8:	98c7883a 	add	r3,r19,r3
    10cc:	10800044 	addi	r2,r2,1
    10d0:	41400015 	stw	r5,0(r8)
    10d4:	44c00115 	stw	r19,4(r8)
    10d8:	d8c02015 	stw	r3,128(sp)
    10dc:	d8801f15 	stw	r2,124(sp)
    10e0:	010001c4 	movi	r4,7
    10e4:	2082a316 	blt	r4,r2,1b74 <___vfprintf_internal_r+0x12d8>
    10e8:	df002787 	ldb	fp,158(sp)
    10ec:	42000204 	addi	r8,r8,8
    10f0:	e0000c26 	beq	fp,zero,1124 <___vfprintf_internal_r+0x888>
    10f4:	d8801f17 	ldw	r2,124(sp)
    10f8:	d9002784 	addi	r4,sp,158
    10fc:	18c00044 	addi	r3,r3,1
    1100:	10800044 	addi	r2,r2,1
    1104:	41000015 	stw	r4,0(r8)
    1108:	01000044 	movi	r4,1
    110c:	41000115 	stw	r4,4(r8)
    1110:	d8c02015 	stw	r3,128(sp)
    1114:	d8801f15 	stw	r2,124(sp)
    1118:	010001c4 	movi	r4,7
    111c:	20823c16 	blt	r4,r2,1a10 <___vfprintf_internal_r+0x1174>
    1120:	42000204 	addi	r8,r8,8
    1124:	d8802b17 	ldw	r2,172(sp)
    1128:	10000c26 	beq	r2,zero,115c <___vfprintf_internal_r+0x8c0>
    112c:	d8801f17 	ldw	r2,124(sp)
    1130:	d9002704 	addi	r4,sp,156
    1134:	18c00084 	addi	r3,r3,2
    1138:	10800044 	addi	r2,r2,1
    113c:	41000015 	stw	r4,0(r8)
    1140:	01000084 	movi	r4,2
    1144:	41000115 	stw	r4,4(r8)
    1148:	d8c02015 	stw	r3,128(sp)
    114c:	d8801f15 	stw	r2,124(sp)
    1150:	010001c4 	movi	r4,7
    1154:	20823616 	blt	r4,r2,1a30 <___vfprintf_internal_r+0x1194>
    1158:	42000204 	addi	r8,r8,8
    115c:	d9003017 	ldw	r4,192(sp)
    1160:	00802004 	movi	r2,128
    1164:	20819926 	beq	r4,r2,17cc <___vfprintf_internal_r+0xf30>
    1168:	d9402917 	ldw	r5,164(sp)
    116c:	d8802e17 	ldw	r2,184(sp)
    1170:	28adc83a 	sub	r22,r5,r2
    1174:	0580310e 	bge	zero,r22,123c <___vfprintf_internal_r+0x9a0>
    1178:	07000404 	movi	fp,16
    117c:	d8801f17 	ldw	r2,124(sp)
    1180:	e584140e 	bge	fp,r22,21d4 <___vfprintf_internal_r+0x1938>
    1184:	01400074 	movhi	r5,1
    1188:	29456084 	addi	r5,r5,5506
    118c:	dc402915 	stw	r17,164(sp)
    1190:	d9402b15 	stw	r5,172(sp)
    1194:	b023883a 	mov	r17,r22
    1198:	04c001c4 	movi	r19,7
    119c:	a82d883a 	mov	r22,r21
    11a0:	902b883a 	mov	r21,r18
    11a4:	8025883a 	mov	r18,r16
    11a8:	dc002c17 	ldw	r16,176(sp)
    11ac:	00000306 	br	11bc <___vfprintf_internal_r+0x920>
    11b0:	8c7ffc04 	addi	r17,r17,-16
    11b4:	42000204 	addi	r8,r8,8
    11b8:	e440110e 	bge	fp,r17,1200 <___vfprintf_internal_r+0x964>
    11bc:	18c00404 	addi	r3,r3,16
    11c0:	10800044 	addi	r2,r2,1
    11c4:	45000015 	stw	r20,0(r8)
    11c8:	47000115 	stw	fp,4(r8)
    11cc:	d8c02015 	stw	r3,128(sp)
    11d0:	d8801f15 	stw	r2,124(sp)
    11d4:	98bff60e 	bge	r19,r2,11b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70011b0>
    11d8:	d9801e04 	addi	r6,sp,120
    11dc:	b80b883a 	mov	r5,r23
    11e0:	8009883a 	mov	r4,r16
    11e4:	00073b40 	call	73b4 <__sprint_r>
    11e8:	103eae1e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    11ec:	8c7ffc04 	addi	r17,r17,-16
    11f0:	d8c02017 	ldw	r3,128(sp)
    11f4:	d8801f17 	ldw	r2,124(sp)
    11f8:	da000404 	addi	r8,sp,16
    11fc:	e47fef16 	blt	fp,r17,11bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70011bc>
    1200:	9021883a 	mov	r16,r18
    1204:	a825883a 	mov	r18,r21
    1208:	b02b883a 	mov	r21,r22
    120c:	882d883a 	mov	r22,r17
    1210:	dc402917 	ldw	r17,164(sp)
    1214:	d9002b17 	ldw	r4,172(sp)
    1218:	1d87883a 	add	r3,r3,r22
    121c:	10800044 	addi	r2,r2,1
    1220:	41000015 	stw	r4,0(r8)
    1224:	45800115 	stw	r22,4(r8)
    1228:	d8c02015 	stw	r3,128(sp)
    122c:	d8801f15 	stw	r2,124(sp)
    1230:	010001c4 	movi	r4,7
    1234:	2081ee16 	blt	r4,r2,19f0 <___vfprintf_internal_r+0x1154>
    1238:	42000204 	addi	r8,r8,8
    123c:	9080400c 	andi	r2,r18,256
    1240:	1001181e 	bne	r2,zero,16a4 <___vfprintf_internal_r+0xe08>
    1244:	d9402e17 	ldw	r5,184(sp)
    1248:	d8801f17 	ldw	r2,124(sp)
    124c:	44000015 	stw	r16,0(r8)
    1250:	1947883a 	add	r3,r3,r5
    1254:	10800044 	addi	r2,r2,1
    1258:	41400115 	stw	r5,4(r8)
    125c:	d8c02015 	stw	r3,128(sp)
    1260:	d8801f15 	stw	r2,124(sp)
    1264:	010001c4 	movi	r4,7
    1268:	2081d316 	blt	r4,r2,19b8 <___vfprintf_internal_r+0x111c>
    126c:	42000204 	addi	r8,r8,8
    1270:	9480010c 	andi	r18,r18,4
    1274:	90003226 	beq	r18,zero,1340 <___vfprintf_internal_r+0xaa4>
    1278:	d9403117 	ldw	r5,196(sp)
    127c:	d8802a17 	ldw	r2,168(sp)
    1280:	28a1c83a 	sub	r16,r5,r2
    1284:	04002e0e 	bge	zero,r16,1340 <___vfprintf_internal_r+0xaa4>
    1288:	04400404 	movi	r17,16
    128c:	d8801f17 	ldw	r2,124(sp)
    1290:	8c04a20e 	bge	r17,r16,251c <___vfprintf_internal_r+0x1c80>
    1294:	01400074 	movhi	r5,1
    1298:	29456484 	addi	r5,r5,5522
    129c:	d9403515 	stw	r5,212(sp)
    12a0:	048001c4 	movi	r18,7
    12a4:	dcc02c17 	ldw	r19,176(sp)
    12a8:	00000306 	br	12b8 <___vfprintf_internal_r+0xa1c>
    12ac:	843ffc04 	addi	r16,r16,-16
    12b0:	42000204 	addi	r8,r8,8
    12b4:	8c00130e 	bge	r17,r16,1304 <___vfprintf_internal_r+0xa68>
    12b8:	01000074 	movhi	r4,1
    12bc:	18c00404 	addi	r3,r3,16
    12c0:	10800044 	addi	r2,r2,1
    12c4:	21056484 	addi	r4,r4,5522
    12c8:	41000015 	stw	r4,0(r8)
    12cc:	44400115 	stw	r17,4(r8)
    12d0:	d8c02015 	stw	r3,128(sp)
    12d4:	d8801f15 	stw	r2,124(sp)
    12d8:	90bff40e 	bge	r18,r2,12ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70012ac>
    12dc:	d9801e04 	addi	r6,sp,120
    12e0:	b80b883a 	mov	r5,r23
    12e4:	9809883a 	mov	r4,r19
    12e8:	00073b40 	call	73b4 <__sprint_r>
    12ec:	103e6d1e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    12f0:	843ffc04 	addi	r16,r16,-16
    12f4:	d8c02017 	ldw	r3,128(sp)
    12f8:	d8801f17 	ldw	r2,124(sp)
    12fc:	da000404 	addi	r8,sp,16
    1300:	8c3fed16 	blt	r17,r16,12b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70012b8>
    1304:	d9403517 	ldw	r5,212(sp)
    1308:	1c07883a 	add	r3,r3,r16
    130c:	10800044 	addi	r2,r2,1
    1310:	41400015 	stw	r5,0(r8)
    1314:	44000115 	stw	r16,4(r8)
    1318:	d8c02015 	stw	r3,128(sp)
    131c:	d8801f15 	stw	r2,124(sp)
    1320:	010001c4 	movi	r4,7
    1324:	2080060e 	bge	r4,r2,1340 <___vfprintf_internal_r+0xaa4>
    1328:	d9002c17 	ldw	r4,176(sp)
    132c:	d9801e04 	addi	r6,sp,120
    1330:	b80b883a 	mov	r5,r23
    1334:	00073b40 	call	73b4 <__sprint_r>
    1338:	103e5a1e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    133c:	d8c02017 	ldw	r3,128(sp)
    1340:	d8803117 	ldw	r2,196(sp)
    1344:	d9002a17 	ldw	r4,168(sp)
    1348:	1100010e 	bge	r2,r4,1350 <___vfprintf_internal_r+0xab4>
    134c:	2005883a 	mov	r2,r4
    1350:	d9402f17 	ldw	r5,188(sp)
    1354:	288b883a 	add	r5,r5,r2
    1358:	d9402f15 	stw	r5,188(sp)
    135c:	18019e1e 	bne	r3,zero,19d8 <___vfprintf_internal_r+0x113c>
    1360:	a8800007 	ldb	r2,0(r21)
    1364:	d8001f15 	stw	zero,124(sp)
    1368:	da000404 	addi	r8,sp,16
    136c:	103d851e 	bne	r2,zero,984 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000984>
    1370:	a821883a 	mov	r16,r21
    1374:	003d9b06 	br	9e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70009e4>
    1378:	18c03fcc 	andi	r3,r3,255
    137c:	1805c11e 	bne	r3,zero,2a84 <___vfprintf_internal_r+0x21e8>
    1380:	94800414 	ori	r18,r18,16
    1384:	9080080c 	andi	r2,r18,32
    1388:	10020c26 	beq	r2,zero,1bbc <___vfprintf_internal_r+0x1320>
    138c:	d8802d17 	ldw	r2,180(sp)
    1390:	d9002917 	ldw	r4,164(sp)
    1394:	d8002785 	stb	zero,158(sp)
    1398:	10c00204 	addi	r3,r2,8
    139c:	14c00017 	ldw	r19,0(r2)
    13a0:	15800117 	ldw	r22,4(r2)
    13a4:	20040f16 	blt	r4,zero,23e4 <___vfprintf_internal_r+0x1b48>
    13a8:	013fdfc4 	movi	r4,-129
    13ac:	9d84b03a 	or	r2,r19,r22
    13b0:	d8c02d15 	stw	r3,180(sp)
    13b4:	9124703a 	and	r18,r18,r4
    13b8:	0039883a 	mov	fp,zero
    13bc:	103e891e 	bne	r2,zero,de4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000de4>
    13c0:	d9002917 	ldw	r4,164(sp)
    13c4:	2002c11e 	bne	r4,zero,1ecc <___vfprintf_internal_r+0x1630>
    13c8:	d8002915 	stw	zero,164(sp)
    13cc:	d8002e15 	stw	zero,184(sp)
    13d0:	dc001e04 	addi	r16,sp,120
    13d4:	003ef806 	br	fb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fb8>
    13d8:	18c03fcc 	andi	r3,r3,255
    13dc:	18059d1e 	bne	r3,zero,2a54 <___vfprintf_internal_r+0x21b8>
    13e0:	01400074 	movhi	r5,1
    13e4:	29455404 	addi	r5,r5,5456
    13e8:	d9403915 	stw	r5,228(sp)
    13ec:	9080080c 	andi	r2,r18,32
    13f0:	10005226 	beq	r2,zero,153c <___vfprintf_internal_r+0xca0>
    13f4:	d8802d17 	ldw	r2,180(sp)
    13f8:	14c00017 	ldw	r19,0(r2)
    13fc:	15800117 	ldw	r22,4(r2)
    1400:	10800204 	addi	r2,r2,8
    1404:	d8802d15 	stw	r2,180(sp)
    1408:	9080004c 	andi	r2,r18,1
    140c:	10019026 	beq	r2,zero,1a50 <___vfprintf_internal_r+0x11b4>
    1410:	9d84b03a 	or	r2,r19,r22
    1414:	10036926 	beq	r2,zero,21bc <___vfprintf_internal_r+0x1920>
    1418:	d8c02917 	ldw	r3,164(sp)
    141c:	00800c04 	movi	r2,48
    1420:	d8802705 	stb	r2,156(sp)
    1424:	dc402745 	stb	r17,157(sp)
    1428:	d8002785 	stb	zero,158(sp)
    142c:	90800094 	ori	r2,r18,2
    1430:	18045d16 	blt	r3,zero,25a8 <___vfprintf_internal_r+0x1d0c>
    1434:	00bfdfc4 	movi	r2,-129
    1438:	90a4703a 	and	r18,r18,r2
    143c:	94800094 	ori	r18,r18,2
    1440:	0039883a 	mov	fp,zero
    1444:	d9003917 	ldw	r4,228(sp)
    1448:	dc001e04 	addi	r16,sp,120
    144c:	988003cc 	andi	r2,r19,15
    1450:	b006973a 	slli	r3,r22,28
    1454:	2085883a 	add	r2,r4,r2
    1458:	9826d13a 	srli	r19,r19,4
    145c:	10800003 	ldbu	r2,0(r2)
    1460:	b02cd13a 	srli	r22,r22,4
    1464:	843fffc4 	addi	r16,r16,-1
    1468:	1ce6b03a 	or	r19,r3,r19
    146c:	80800005 	stb	r2,0(r16)
    1470:	9d84b03a 	or	r2,r19,r22
    1474:	103ff51e 	bne	r2,zero,144c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700144c>
    1478:	d8c02817 	ldw	r3,160(sp)
    147c:	1c07c83a 	sub	r3,r3,r16
    1480:	d8c02e15 	stw	r3,184(sp)
    1484:	003ecc06 	br	fb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fb8>
    1488:	18c03fcc 	andi	r3,r3,255
    148c:	183e9f26 	beq	r3,zero,f0c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f0c>
    1490:	d9c02785 	stb	r7,158(sp)
    1494:	003e9d06 	br	f0c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f0c>
    1498:	00c00044 	movi	r3,1
    149c:	01c00ac4 	movi	r7,43
    14a0:	ac400007 	ldb	r17,0(r21)
    14a4:	003d5e06 	br	a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a20>
    14a8:	94800814 	ori	r18,r18,32
    14ac:	ac400007 	ldb	r17,0(r21)
    14b0:	003d5b06 	br	a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a20>
    14b4:	d8c02d17 	ldw	r3,180(sp)
    14b8:	d8002785 	stb	zero,158(sp)
    14bc:	1c000017 	ldw	r16,0(r3)
    14c0:	1cc00104 	addi	r19,r3,4
    14c4:	80041926 	beq	r16,zero,252c <___vfprintf_internal_r+0x1c90>
    14c8:	d9002917 	ldw	r4,164(sp)
    14cc:	2003d016 	blt	r4,zero,2410 <___vfprintf_internal_r+0x1b74>
    14d0:	200d883a 	mov	r6,r4
    14d4:	000b883a 	mov	r5,zero
    14d8:	8009883a 	mov	r4,r16
    14dc:	da003d15 	stw	r8,244(sp)
    14e0:	0005bf00 	call	5bf0 <memchr>
    14e4:	da003d17 	ldw	r8,244(sp)
    14e8:	10045426 	beq	r2,zero,263c <___vfprintf_internal_r+0x1da0>
    14ec:	1405c83a 	sub	r2,r2,r16
    14f0:	d8802e15 	stw	r2,184(sp)
    14f4:	1003cc16 	blt	r2,zero,2428 <___vfprintf_internal_r+0x1b8c>
    14f8:	df002783 	ldbu	fp,158(sp)
    14fc:	d8802a15 	stw	r2,168(sp)
    1500:	dcc02d15 	stw	r19,180(sp)
    1504:	d8002915 	stw	zero,164(sp)
    1508:	d8003215 	stw	zero,200(sp)
    150c:	003eb006 	br	fd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fd0>
    1510:	18c03fcc 	andi	r3,r3,255
    1514:	183f9b26 	beq	r3,zero,1384 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001384>
    1518:	d9c02785 	stb	r7,158(sp)
    151c:	003f9906 	br	1384 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001384>
    1520:	18c03fcc 	andi	r3,r3,255
    1524:	1805551e 	bne	r3,zero,2a7c <___vfprintf_internal_r+0x21e0>
    1528:	01400074 	movhi	r5,1
    152c:	29455904 	addi	r5,r5,5476
    1530:	d9403915 	stw	r5,228(sp)
    1534:	9080080c 	andi	r2,r18,32
    1538:	103fae1e 	bne	r2,zero,13f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70013f4>
    153c:	9080040c 	andi	r2,r18,16
    1540:	1002de26 	beq	r2,zero,20bc <___vfprintf_internal_r+0x1820>
    1544:	d8c02d17 	ldw	r3,180(sp)
    1548:	002d883a 	mov	r22,zero
    154c:	1cc00017 	ldw	r19,0(r3)
    1550:	18c00104 	addi	r3,r3,4
    1554:	d8c02d15 	stw	r3,180(sp)
    1558:	003fab06 	br	1408 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001408>
    155c:	38803fcc 	andi	r2,r7,255
    1560:	1080201c 	xori	r2,r2,128
    1564:	10bfe004 	addi	r2,r2,-128
    1568:	1002d21e 	bne	r2,zero,20b4 <___vfprintf_internal_r+0x1818>
    156c:	00c00044 	movi	r3,1
    1570:	01c00804 	movi	r7,32
    1574:	ac400007 	ldb	r17,0(r21)
    1578:	003d2906 	br	a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a20>
    157c:	94800054 	ori	r18,r18,1
    1580:	ac400007 	ldb	r17,0(r21)
    1584:	003d2606 	br	a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a20>
    1588:	18c03fcc 	andi	r3,r3,255
    158c:	183e0526 	beq	r3,zero,da4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000da4>
    1590:	d9c02785 	stb	r7,158(sp)
    1594:	003e0306 	br	da4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000da4>
    1598:	94801014 	ori	r18,r18,64
    159c:	ac400007 	ldb	r17,0(r21)
    15a0:	003d1f06 	br	a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a20>
    15a4:	ac400007 	ldb	r17,0(r21)
    15a8:	8a438726 	beq	r17,r9,23c8 <___vfprintf_internal_r+0x1b2c>
    15ac:	94800414 	ori	r18,r18,16
    15b0:	003d1b06 	br	a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a20>
    15b4:	18c03fcc 	andi	r3,r3,255
    15b8:	1805341e 	bne	r3,zero,2a8c <___vfprintf_internal_r+0x21f0>
    15bc:	9080080c 	andi	r2,r18,32
    15c0:	1002cd26 	beq	r2,zero,20f8 <___vfprintf_internal_r+0x185c>
    15c4:	d9402d17 	ldw	r5,180(sp)
    15c8:	d9002f17 	ldw	r4,188(sp)
    15cc:	28800017 	ldw	r2,0(r5)
    15d0:	2007d7fa 	srai	r3,r4,31
    15d4:	29400104 	addi	r5,r5,4
    15d8:	d9402d15 	stw	r5,180(sp)
    15dc:	11000015 	stw	r4,0(r2)
    15e0:	10c00115 	stw	r3,4(r2)
    15e4:	003ce506 	br	97c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700097c>
    15e8:	d8c02d17 	ldw	r3,180(sp)
    15ec:	d9002d17 	ldw	r4,180(sp)
    15f0:	d8002785 	stb	zero,158(sp)
    15f4:	18800017 	ldw	r2,0(r3)
    15f8:	21000104 	addi	r4,r4,4
    15fc:	00c00044 	movi	r3,1
    1600:	d8c02a15 	stw	r3,168(sp)
    1604:	d8801405 	stb	r2,80(sp)
    1608:	d9002d15 	stw	r4,180(sp)
    160c:	d8c02e15 	stw	r3,184(sp)
    1610:	d8002915 	stw	zero,164(sp)
    1614:	d8003215 	stw	zero,200(sp)
    1618:	dc001404 	addi	r16,sp,80
    161c:	0039883a 	mov	fp,zero
    1620:	003e7206 	br	fec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fec>
    1624:	01000074 	movhi	r4,1
    1628:	21055904 	addi	r4,r4,5476
    162c:	0039883a 	mov	fp,zero
    1630:	d9003915 	stw	r4,228(sp)
    1634:	04401e04 	movi	r17,120
    1638:	003f8206 	br	1444 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001444>
    163c:	18c03fcc 	andi	r3,r3,255
    1640:	1805061e 	bne	r3,zero,2a5c <___vfprintf_internal_r+0x21c0>
    1644:	883d9126 	beq	r17,zero,c8c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c8c>
    1648:	00c00044 	movi	r3,1
    164c:	d8c02a15 	stw	r3,168(sp)
    1650:	dc401405 	stb	r17,80(sp)
    1654:	d8002785 	stb	zero,158(sp)
    1658:	003fec06 	br	160c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700160c>
    165c:	01400074 	movhi	r5,1
    1660:	29455904 	addi	r5,r5,5476
    1664:	d9403915 	stw	r5,228(sp)
    1668:	d8c02d15 	stw	r3,180(sp)
    166c:	1025883a 	mov	r18,r2
    1670:	04401e04 	movi	r17,120
    1674:	9d84b03a 	or	r2,r19,r22
    1678:	1000fc1e 	bne	r2,zero,1a6c <___vfprintf_internal_r+0x11d0>
    167c:	0039883a 	mov	fp,zero
    1680:	00800084 	movi	r2,2
    1684:	10803fcc 	andi	r2,r2,255
    1688:	00c00044 	movi	r3,1
    168c:	10c20f26 	beq	r2,r3,1ecc <___vfprintf_internal_r+0x1630>
    1690:	00c00084 	movi	r3,2
    1694:	10fd6326 	beq	r2,r3,c24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c24>
    1698:	003e2d06 	br	f50 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f50>
    169c:	d8c02017 	ldw	r3,128(sp)
    16a0:	003e9306 	br	10f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70010f0>
    16a4:	00801944 	movi	r2,101
    16a8:	14407e0e 	bge	r2,r17,18a4 <___vfprintf_internal_r+0x1008>
    16ac:	d9003617 	ldw	r4,216(sp)
    16b0:	d9403817 	ldw	r5,224(sp)
    16b4:	000d883a 	mov	r6,zero
    16b8:	000f883a 	mov	r7,zero
    16bc:	d8c03c15 	stw	r3,240(sp)
    16c0:	da003d15 	stw	r8,244(sp)
    16c4:	000bba80 	call	bba8 <__eqdf2>
    16c8:	d8c03c17 	ldw	r3,240(sp)
    16cc:	da003d17 	ldw	r8,244(sp)
    16d0:	1000f71e 	bne	r2,zero,1ab0 <___vfprintf_internal_r+0x1214>
    16d4:	d8801f17 	ldw	r2,124(sp)
    16d8:	01000074 	movhi	r4,1
    16dc:	21056004 	addi	r4,r4,5504
    16e0:	18c00044 	addi	r3,r3,1
    16e4:	10800044 	addi	r2,r2,1
    16e8:	41000015 	stw	r4,0(r8)
    16ec:	01000044 	movi	r4,1
    16f0:	41000115 	stw	r4,4(r8)
    16f4:	d8c02015 	stw	r3,128(sp)
    16f8:	d8801f15 	stw	r2,124(sp)
    16fc:	010001c4 	movi	r4,7
    1700:	2082b816 	blt	r4,r2,21e4 <___vfprintf_internal_r+0x1948>
    1704:	42000204 	addi	r8,r8,8
    1708:	d8802617 	ldw	r2,152(sp)
    170c:	d9403317 	ldw	r5,204(sp)
    1710:	11400216 	blt	r2,r5,171c <___vfprintf_internal_r+0xe80>
    1714:	9080004c 	andi	r2,r18,1
    1718:	103ed526 	beq	r2,zero,1270 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001270>
    171c:	d8803717 	ldw	r2,220(sp)
    1720:	d9003417 	ldw	r4,208(sp)
    1724:	d9403717 	ldw	r5,220(sp)
    1728:	1887883a 	add	r3,r3,r2
    172c:	d8801f17 	ldw	r2,124(sp)
    1730:	41000015 	stw	r4,0(r8)
    1734:	41400115 	stw	r5,4(r8)
    1738:	10800044 	addi	r2,r2,1
    173c:	d8c02015 	stw	r3,128(sp)
    1740:	d8801f15 	stw	r2,124(sp)
    1744:	010001c4 	movi	r4,7
    1748:	20832916 	blt	r4,r2,23f0 <___vfprintf_internal_r+0x1b54>
    174c:	42000204 	addi	r8,r8,8
    1750:	d8803317 	ldw	r2,204(sp)
    1754:	143fffc4 	addi	r16,r2,-1
    1758:	043ec50e 	bge	zero,r16,1270 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001270>
    175c:	04400404 	movi	r17,16
    1760:	d8801f17 	ldw	r2,124(sp)
    1764:	8c00880e 	bge	r17,r16,1988 <___vfprintf_internal_r+0x10ec>
    1768:	01400074 	movhi	r5,1
    176c:	29456084 	addi	r5,r5,5506
    1770:	d9402b15 	stw	r5,172(sp)
    1774:	058001c4 	movi	r22,7
    1778:	dcc02c17 	ldw	r19,176(sp)
    177c:	00000306 	br	178c <___vfprintf_internal_r+0xef0>
    1780:	42000204 	addi	r8,r8,8
    1784:	843ffc04 	addi	r16,r16,-16
    1788:	8c00820e 	bge	r17,r16,1994 <___vfprintf_internal_r+0x10f8>
    178c:	18c00404 	addi	r3,r3,16
    1790:	10800044 	addi	r2,r2,1
    1794:	45000015 	stw	r20,0(r8)
    1798:	44400115 	stw	r17,4(r8)
    179c:	d8c02015 	stw	r3,128(sp)
    17a0:	d8801f15 	stw	r2,124(sp)
    17a4:	b0bff60e 	bge	r22,r2,1780 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001780>
    17a8:	d9801e04 	addi	r6,sp,120
    17ac:	b80b883a 	mov	r5,r23
    17b0:	9809883a 	mov	r4,r19
    17b4:	00073b40 	call	73b4 <__sprint_r>
    17b8:	103d3a1e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    17bc:	d8c02017 	ldw	r3,128(sp)
    17c0:	d8801f17 	ldw	r2,124(sp)
    17c4:	da000404 	addi	r8,sp,16
    17c8:	003fee06 	br	1784 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001784>
    17cc:	d9403117 	ldw	r5,196(sp)
    17d0:	d8802a17 	ldw	r2,168(sp)
    17d4:	28adc83a 	sub	r22,r5,r2
    17d8:	05be630e 	bge	zero,r22,1168 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001168>
    17dc:	07000404 	movi	fp,16
    17e0:	d8801f17 	ldw	r2,124(sp)
    17e4:	e5838f0e 	bge	fp,r22,2624 <___vfprintf_internal_r+0x1d88>
    17e8:	01400074 	movhi	r5,1
    17ec:	29456084 	addi	r5,r5,5506
    17f0:	dc403015 	stw	r17,192(sp)
    17f4:	d9402b15 	stw	r5,172(sp)
    17f8:	b023883a 	mov	r17,r22
    17fc:	04c001c4 	movi	r19,7
    1800:	a82d883a 	mov	r22,r21
    1804:	902b883a 	mov	r21,r18
    1808:	8025883a 	mov	r18,r16
    180c:	dc002c17 	ldw	r16,176(sp)
    1810:	00000306 	br	1820 <___vfprintf_internal_r+0xf84>
    1814:	8c7ffc04 	addi	r17,r17,-16
    1818:	42000204 	addi	r8,r8,8
    181c:	e440110e 	bge	fp,r17,1864 <___vfprintf_internal_r+0xfc8>
    1820:	18c00404 	addi	r3,r3,16
    1824:	10800044 	addi	r2,r2,1
    1828:	45000015 	stw	r20,0(r8)
    182c:	47000115 	stw	fp,4(r8)
    1830:	d8c02015 	stw	r3,128(sp)
    1834:	d8801f15 	stw	r2,124(sp)
    1838:	98bff60e 	bge	r19,r2,1814 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001814>
    183c:	d9801e04 	addi	r6,sp,120
    1840:	b80b883a 	mov	r5,r23
    1844:	8009883a 	mov	r4,r16
    1848:	00073b40 	call	73b4 <__sprint_r>
    184c:	103d151e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    1850:	8c7ffc04 	addi	r17,r17,-16
    1854:	d8c02017 	ldw	r3,128(sp)
    1858:	d8801f17 	ldw	r2,124(sp)
    185c:	da000404 	addi	r8,sp,16
    1860:	e47fef16 	blt	fp,r17,1820 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001820>
    1864:	9021883a 	mov	r16,r18
    1868:	a825883a 	mov	r18,r21
    186c:	b02b883a 	mov	r21,r22
    1870:	882d883a 	mov	r22,r17
    1874:	dc403017 	ldw	r17,192(sp)
    1878:	d9002b17 	ldw	r4,172(sp)
    187c:	1d87883a 	add	r3,r3,r22
    1880:	10800044 	addi	r2,r2,1
    1884:	41000015 	stw	r4,0(r8)
    1888:	45800115 	stw	r22,4(r8)
    188c:	d8c02015 	stw	r3,128(sp)
    1890:	d8801f15 	stw	r2,124(sp)
    1894:	010001c4 	movi	r4,7
    1898:	20818e16 	blt	r4,r2,1ed4 <___vfprintf_internal_r+0x1638>
    189c:	42000204 	addi	r8,r8,8
    18a0:	003e3106 	br	1168 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001168>
    18a4:	d9403317 	ldw	r5,204(sp)
    18a8:	00800044 	movi	r2,1
    18ac:	18c00044 	addi	r3,r3,1
    18b0:	1141530e 	bge	r2,r5,1e00 <___vfprintf_internal_r+0x1564>
    18b4:	dc401f17 	ldw	r17,124(sp)
    18b8:	00800044 	movi	r2,1
    18bc:	40800115 	stw	r2,4(r8)
    18c0:	8c400044 	addi	r17,r17,1
    18c4:	44000015 	stw	r16,0(r8)
    18c8:	d8c02015 	stw	r3,128(sp)
    18cc:	dc401f15 	stw	r17,124(sp)
    18d0:	008001c4 	movi	r2,7
    18d4:	14416b16 	blt	r2,r17,1e84 <___vfprintf_internal_r+0x15e8>
    18d8:	42000204 	addi	r8,r8,8
    18dc:	d8803717 	ldw	r2,220(sp)
    18e0:	d9003417 	ldw	r4,208(sp)
    18e4:	8c400044 	addi	r17,r17,1
    18e8:	10c7883a 	add	r3,r2,r3
    18ec:	40800115 	stw	r2,4(r8)
    18f0:	41000015 	stw	r4,0(r8)
    18f4:	d8c02015 	stw	r3,128(sp)
    18f8:	dc401f15 	stw	r17,124(sp)
    18fc:	008001c4 	movi	r2,7
    1900:	14416916 	blt	r2,r17,1ea8 <___vfprintf_internal_r+0x160c>
    1904:	45800204 	addi	r22,r8,8
    1908:	d9003617 	ldw	r4,216(sp)
    190c:	d9403817 	ldw	r5,224(sp)
    1910:	000d883a 	mov	r6,zero
    1914:	000f883a 	mov	r7,zero
    1918:	d8c03c15 	stw	r3,240(sp)
    191c:	000bba80 	call	bba8 <__eqdf2>
    1920:	d8c03c17 	ldw	r3,240(sp)
    1924:	1000bc26 	beq	r2,zero,1c18 <___vfprintf_internal_r+0x137c>
    1928:	d9403317 	ldw	r5,204(sp)
    192c:	84000044 	addi	r16,r16,1
    1930:	8c400044 	addi	r17,r17,1
    1934:	28bfffc4 	addi	r2,r5,-1
    1938:	1887883a 	add	r3,r3,r2
    193c:	b0800115 	stw	r2,4(r22)
    1940:	b4000015 	stw	r16,0(r22)
    1944:	d8c02015 	stw	r3,128(sp)
    1948:	dc401f15 	stw	r17,124(sp)
    194c:	008001c4 	movi	r2,7
    1950:	14414316 	blt	r2,r17,1e60 <___vfprintf_internal_r+0x15c4>
    1954:	b5800204 	addi	r22,r22,8
    1958:	d9003a17 	ldw	r4,232(sp)
    195c:	df0022c4 	addi	fp,sp,139
    1960:	8c400044 	addi	r17,r17,1
    1964:	20c7883a 	add	r3,r4,r3
    1968:	b7000015 	stw	fp,0(r22)
    196c:	b1000115 	stw	r4,4(r22)
    1970:	d8c02015 	stw	r3,128(sp)
    1974:	dc401f15 	stw	r17,124(sp)
    1978:	008001c4 	movi	r2,7
    197c:	14400e16 	blt	r2,r17,19b8 <___vfprintf_internal_r+0x111c>
    1980:	b2000204 	addi	r8,r22,8
    1984:	003e3a06 	br	1270 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001270>
    1988:	01000074 	movhi	r4,1
    198c:	21056084 	addi	r4,r4,5506
    1990:	d9002b15 	stw	r4,172(sp)
    1994:	d9002b17 	ldw	r4,172(sp)
    1998:	1c07883a 	add	r3,r3,r16
    199c:	44000115 	stw	r16,4(r8)
    19a0:	41000015 	stw	r4,0(r8)
    19a4:	10800044 	addi	r2,r2,1
    19a8:	d8c02015 	stw	r3,128(sp)
    19ac:	d8801f15 	stw	r2,124(sp)
    19b0:	010001c4 	movi	r4,7
    19b4:	20be2d0e 	bge	r4,r2,126c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700126c>
    19b8:	d9002c17 	ldw	r4,176(sp)
    19bc:	d9801e04 	addi	r6,sp,120
    19c0:	b80b883a 	mov	r5,r23
    19c4:	00073b40 	call	73b4 <__sprint_r>
    19c8:	103cb61e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    19cc:	d8c02017 	ldw	r3,128(sp)
    19d0:	da000404 	addi	r8,sp,16
    19d4:	003e2606 	br	1270 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001270>
    19d8:	d9002c17 	ldw	r4,176(sp)
    19dc:	d9801e04 	addi	r6,sp,120
    19e0:	b80b883a 	mov	r5,r23
    19e4:	00073b40 	call	73b4 <__sprint_r>
    19e8:	103e5d26 	beq	r2,zero,1360 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001360>
    19ec:	003cad06 	br	ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    19f0:	d9002c17 	ldw	r4,176(sp)
    19f4:	d9801e04 	addi	r6,sp,120
    19f8:	b80b883a 	mov	r5,r23
    19fc:	00073b40 	call	73b4 <__sprint_r>
    1a00:	103ca81e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    1a04:	d8c02017 	ldw	r3,128(sp)
    1a08:	da000404 	addi	r8,sp,16
    1a0c:	003e0b06 	br	123c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700123c>
    1a10:	d9002c17 	ldw	r4,176(sp)
    1a14:	d9801e04 	addi	r6,sp,120
    1a18:	b80b883a 	mov	r5,r23
    1a1c:	00073b40 	call	73b4 <__sprint_r>
    1a20:	103ca01e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    1a24:	d8c02017 	ldw	r3,128(sp)
    1a28:	da000404 	addi	r8,sp,16
    1a2c:	003dbd06 	br	1124 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001124>
    1a30:	d9002c17 	ldw	r4,176(sp)
    1a34:	d9801e04 	addi	r6,sp,120
    1a38:	b80b883a 	mov	r5,r23
    1a3c:	00073b40 	call	73b4 <__sprint_r>
    1a40:	103c981e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    1a44:	d8c02017 	ldw	r3,128(sp)
    1a48:	da000404 	addi	r8,sp,16
    1a4c:	003dc306 	br	115c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700115c>
    1a50:	d8802917 	ldw	r2,164(sp)
    1a54:	d8002785 	stb	zero,158(sp)
    1a58:	103f0616 	blt	r2,zero,1674 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001674>
    1a5c:	00ffdfc4 	movi	r3,-129
    1a60:	9d84b03a 	or	r2,r19,r22
    1a64:	90e4703a 	and	r18,r18,r3
    1a68:	103c6b26 	beq	r2,zero,c18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c18>
    1a6c:	0039883a 	mov	fp,zero
    1a70:	003e7406 	br	1444 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001444>
    1a74:	9080040c 	andi	r2,r18,16
    1a78:	1001b326 	beq	r2,zero,2148 <___vfprintf_internal_r+0x18ac>
    1a7c:	d9002d17 	ldw	r4,180(sp)
    1a80:	d9402917 	ldw	r5,164(sp)
    1a84:	d8002785 	stb	zero,158(sp)
    1a88:	20800104 	addi	r2,r4,4
    1a8c:	24c00017 	ldw	r19,0(r4)
    1a90:	002d883a 	mov	r22,zero
    1a94:	2801b516 	blt	r5,zero,216c <___vfprintf_internal_r+0x18d0>
    1a98:	00ffdfc4 	movi	r3,-129
    1a9c:	d8802d15 	stw	r2,180(sp)
    1aa0:	90e4703a 	and	r18,r18,r3
    1aa4:	983d2726 	beq	r19,zero,f44 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f44>
    1aa8:	0039883a 	mov	fp,zero
    1aac:	003d2a06 	br	f58 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f58>
    1ab0:	dc402617 	ldw	r17,152(sp)
    1ab4:	0441d30e 	bge	zero,r17,2204 <___vfprintf_internal_r+0x1968>
    1ab8:	dc403217 	ldw	r17,200(sp)
    1abc:	d8803317 	ldw	r2,204(sp)
    1ac0:	1440010e 	bge	r2,r17,1ac8 <___vfprintf_internal_r+0x122c>
    1ac4:	1023883a 	mov	r17,r2
    1ac8:	04400a0e 	bge	zero,r17,1af4 <___vfprintf_internal_r+0x1258>
    1acc:	d8801f17 	ldw	r2,124(sp)
    1ad0:	1c47883a 	add	r3,r3,r17
    1ad4:	44000015 	stw	r16,0(r8)
    1ad8:	10800044 	addi	r2,r2,1
    1adc:	44400115 	stw	r17,4(r8)
    1ae0:	d8c02015 	stw	r3,128(sp)
    1ae4:	d8801f15 	stw	r2,124(sp)
    1ae8:	010001c4 	movi	r4,7
    1aec:	20826516 	blt	r4,r2,2484 <___vfprintf_internal_r+0x1be8>
    1af0:	42000204 	addi	r8,r8,8
    1af4:	88026116 	blt	r17,zero,247c <___vfprintf_internal_r+0x1be0>
    1af8:	d9003217 	ldw	r4,200(sp)
    1afc:	2463c83a 	sub	r17,r4,r17
    1b00:	04407b0e 	bge	zero,r17,1cf0 <___vfprintf_internal_r+0x1454>
    1b04:	05800404 	movi	r22,16
    1b08:	d8801f17 	ldw	r2,124(sp)
    1b0c:	b4419d0e 	bge	r22,r17,2184 <___vfprintf_internal_r+0x18e8>
    1b10:	01000074 	movhi	r4,1
    1b14:	21056084 	addi	r4,r4,5506
    1b18:	d9002b15 	stw	r4,172(sp)
    1b1c:	070001c4 	movi	fp,7
    1b20:	dcc02c17 	ldw	r19,176(sp)
    1b24:	00000306 	br	1b34 <___vfprintf_internal_r+0x1298>
    1b28:	42000204 	addi	r8,r8,8
    1b2c:	8c7ffc04 	addi	r17,r17,-16
    1b30:	b441970e 	bge	r22,r17,2190 <___vfprintf_internal_r+0x18f4>
    1b34:	18c00404 	addi	r3,r3,16
    1b38:	10800044 	addi	r2,r2,1
    1b3c:	45000015 	stw	r20,0(r8)
    1b40:	45800115 	stw	r22,4(r8)
    1b44:	d8c02015 	stw	r3,128(sp)
    1b48:	d8801f15 	stw	r2,124(sp)
    1b4c:	e0bff60e 	bge	fp,r2,1b28 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001b28>
    1b50:	d9801e04 	addi	r6,sp,120
    1b54:	b80b883a 	mov	r5,r23
    1b58:	9809883a 	mov	r4,r19
    1b5c:	00073b40 	call	73b4 <__sprint_r>
    1b60:	103c501e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    1b64:	d8c02017 	ldw	r3,128(sp)
    1b68:	d8801f17 	ldw	r2,124(sp)
    1b6c:	da000404 	addi	r8,sp,16
    1b70:	003fee06 	br	1b2c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001b2c>
    1b74:	d9002c17 	ldw	r4,176(sp)
    1b78:	d9801e04 	addi	r6,sp,120
    1b7c:	b80b883a 	mov	r5,r23
    1b80:	00073b40 	call	73b4 <__sprint_r>
    1b84:	103c471e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    1b88:	d8c02017 	ldw	r3,128(sp)
    1b8c:	df002787 	ldb	fp,158(sp)
    1b90:	da000404 	addi	r8,sp,16
    1b94:	003d5606 	br	10f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70010f0>
    1b98:	9080040c 	andi	r2,r18,16
    1b9c:	10016126 	beq	r2,zero,2124 <___vfprintf_internal_r+0x1888>
    1ba0:	d8802d17 	ldw	r2,180(sp)
    1ba4:	14c00017 	ldw	r19,0(r2)
    1ba8:	10800104 	addi	r2,r2,4
    1bac:	d8802d15 	stw	r2,180(sp)
    1bb0:	982dd7fa 	srai	r22,r19,31
    1bb4:	b005883a 	mov	r2,r22
    1bb8:	003c8206 	br	dc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000dc4>
    1bbc:	9080040c 	andi	r2,r18,16
    1bc0:	10003526 	beq	r2,zero,1c98 <___vfprintf_internal_r+0x13fc>
    1bc4:	d9402d17 	ldw	r5,180(sp)
    1bc8:	d8c02917 	ldw	r3,164(sp)
    1bcc:	d8002785 	stb	zero,158(sp)
    1bd0:	28800104 	addi	r2,r5,4
    1bd4:	2cc00017 	ldw	r19,0(r5)
    1bd8:	002d883a 	mov	r22,zero
    1bdc:	18003716 	blt	r3,zero,1cbc <___vfprintf_internal_r+0x1420>
    1be0:	00ffdfc4 	movi	r3,-129
    1be4:	d8802d15 	stw	r2,180(sp)
    1be8:	90e4703a 	and	r18,r18,r3
    1bec:	0039883a 	mov	fp,zero
    1bf0:	983df326 	beq	r19,zero,13c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70013c0>
    1bf4:	00800244 	movi	r2,9
    1bf8:	14fc7b36 	bltu	r2,r19,de8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000de8>
    1bfc:	d8c02817 	ldw	r3,160(sp)
    1c00:	dc001dc4 	addi	r16,sp,119
    1c04:	9cc00c04 	addi	r19,r19,48
    1c08:	1c07c83a 	sub	r3,r3,r16
    1c0c:	dcc01dc5 	stb	r19,119(sp)
    1c10:	d8c02e15 	stw	r3,184(sp)
    1c14:	003ce806 	br	fb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fb8>
    1c18:	d8803317 	ldw	r2,204(sp)
    1c1c:	143fffc4 	addi	r16,r2,-1
    1c20:	043f4d0e 	bge	zero,r16,1958 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001958>
    1c24:	07000404 	movi	fp,16
    1c28:	e400810e 	bge	fp,r16,1e30 <___vfprintf_internal_r+0x1594>
    1c2c:	01400074 	movhi	r5,1
    1c30:	29456084 	addi	r5,r5,5506
    1c34:	d9402b15 	stw	r5,172(sp)
    1c38:	01c001c4 	movi	r7,7
    1c3c:	dcc02c17 	ldw	r19,176(sp)
    1c40:	00000306 	br	1c50 <___vfprintf_internal_r+0x13b4>
    1c44:	b5800204 	addi	r22,r22,8
    1c48:	843ffc04 	addi	r16,r16,-16
    1c4c:	e4007b0e 	bge	fp,r16,1e3c <___vfprintf_internal_r+0x15a0>
    1c50:	18c00404 	addi	r3,r3,16
    1c54:	8c400044 	addi	r17,r17,1
    1c58:	b5000015 	stw	r20,0(r22)
    1c5c:	b7000115 	stw	fp,4(r22)
    1c60:	d8c02015 	stw	r3,128(sp)
    1c64:	dc401f15 	stw	r17,124(sp)
    1c68:	3c7ff60e 	bge	r7,r17,1c44 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001c44>
    1c6c:	d9801e04 	addi	r6,sp,120
    1c70:	b80b883a 	mov	r5,r23
    1c74:	9809883a 	mov	r4,r19
    1c78:	d9c03c15 	stw	r7,240(sp)
    1c7c:	00073b40 	call	73b4 <__sprint_r>
    1c80:	d9c03c17 	ldw	r7,240(sp)
    1c84:	103c071e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    1c88:	d8c02017 	ldw	r3,128(sp)
    1c8c:	dc401f17 	ldw	r17,124(sp)
    1c90:	dd800404 	addi	r22,sp,16
    1c94:	003fec06 	br	1c48 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001c48>
    1c98:	9080100c 	andi	r2,r18,64
    1c9c:	d8002785 	stb	zero,158(sp)
    1ca0:	10010e26 	beq	r2,zero,20dc <___vfprintf_internal_r+0x1840>
    1ca4:	d9002d17 	ldw	r4,180(sp)
    1ca8:	d9402917 	ldw	r5,164(sp)
    1cac:	002d883a 	mov	r22,zero
    1cb0:	20800104 	addi	r2,r4,4
    1cb4:	24c0000b 	ldhu	r19,0(r4)
    1cb8:	283fc90e 	bge	r5,zero,1be0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001be0>
    1cbc:	d8802d15 	stw	r2,180(sp)
    1cc0:	0039883a 	mov	fp,zero
    1cc4:	9d84b03a 	or	r2,r19,r22
    1cc8:	103c461e 	bne	r2,zero,de4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000de4>
    1ccc:	00800044 	movi	r2,1
    1cd0:	003e6c06 	br	1684 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001684>
    1cd4:	d9002c17 	ldw	r4,176(sp)
    1cd8:	d9801e04 	addi	r6,sp,120
    1cdc:	b80b883a 	mov	r5,r23
    1ce0:	00073b40 	call	73b4 <__sprint_r>
    1ce4:	103bef1e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    1ce8:	d8c02017 	ldw	r3,128(sp)
    1cec:	da000404 	addi	r8,sp,16
    1cf0:	d9003217 	ldw	r4,200(sp)
    1cf4:	d8802617 	ldw	r2,152(sp)
    1cf8:	d9403317 	ldw	r5,204(sp)
    1cfc:	8123883a 	add	r17,r16,r4
    1d00:	11400216 	blt	r2,r5,1d0c <___vfprintf_internal_r+0x1470>
    1d04:	9100004c 	andi	r4,r18,1
    1d08:	20000d26 	beq	r4,zero,1d40 <___vfprintf_internal_r+0x14a4>
    1d0c:	d9003717 	ldw	r4,220(sp)
    1d10:	d9403417 	ldw	r5,208(sp)
    1d14:	1907883a 	add	r3,r3,r4
    1d18:	d9001f17 	ldw	r4,124(sp)
    1d1c:	41400015 	stw	r5,0(r8)
    1d20:	d9403717 	ldw	r5,220(sp)
    1d24:	21000044 	addi	r4,r4,1
    1d28:	d8c02015 	stw	r3,128(sp)
    1d2c:	41400115 	stw	r5,4(r8)
    1d30:	d9001f15 	stw	r4,124(sp)
    1d34:	014001c4 	movi	r5,7
    1d38:	2901e816 	blt	r5,r4,24dc <___vfprintf_internal_r+0x1c40>
    1d3c:	42000204 	addi	r8,r8,8
    1d40:	d9003317 	ldw	r4,204(sp)
    1d44:	8121883a 	add	r16,r16,r4
    1d48:	2085c83a 	sub	r2,r4,r2
    1d4c:	8461c83a 	sub	r16,r16,r17
    1d50:	1400010e 	bge	r2,r16,1d58 <___vfprintf_internal_r+0x14bc>
    1d54:	1021883a 	mov	r16,r2
    1d58:	04000a0e 	bge	zero,r16,1d84 <___vfprintf_internal_r+0x14e8>
    1d5c:	d9001f17 	ldw	r4,124(sp)
    1d60:	1c07883a 	add	r3,r3,r16
    1d64:	44400015 	stw	r17,0(r8)
    1d68:	21000044 	addi	r4,r4,1
    1d6c:	44000115 	stw	r16,4(r8)
    1d70:	d8c02015 	stw	r3,128(sp)
    1d74:	d9001f15 	stw	r4,124(sp)
    1d78:	014001c4 	movi	r5,7
    1d7c:	2901fb16 	blt	r5,r4,256c <___vfprintf_internal_r+0x1cd0>
    1d80:	42000204 	addi	r8,r8,8
    1d84:	8001f716 	blt	r16,zero,2564 <___vfprintf_internal_r+0x1cc8>
    1d88:	1421c83a 	sub	r16,r2,r16
    1d8c:	043d380e 	bge	zero,r16,1270 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001270>
    1d90:	04400404 	movi	r17,16
    1d94:	d8801f17 	ldw	r2,124(sp)
    1d98:	8c3efb0e 	bge	r17,r16,1988 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001988>
    1d9c:	01400074 	movhi	r5,1
    1da0:	29456084 	addi	r5,r5,5506
    1da4:	d9402b15 	stw	r5,172(sp)
    1da8:	058001c4 	movi	r22,7
    1dac:	dcc02c17 	ldw	r19,176(sp)
    1db0:	00000306 	br	1dc0 <___vfprintf_internal_r+0x1524>
    1db4:	42000204 	addi	r8,r8,8
    1db8:	843ffc04 	addi	r16,r16,-16
    1dbc:	8c3ef50e 	bge	r17,r16,1994 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001994>
    1dc0:	18c00404 	addi	r3,r3,16
    1dc4:	10800044 	addi	r2,r2,1
    1dc8:	45000015 	stw	r20,0(r8)
    1dcc:	44400115 	stw	r17,4(r8)
    1dd0:	d8c02015 	stw	r3,128(sp)
    1dd4:	d8801f15 	stw	r2,124(sp)
    1dd8:	b0bff60e 	bge	r22,r2,1db4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001db4>
    1ddc:	d9801e04 	addi	r6,sp,120
    1de0:	b80b883a 	mov	r5,r23
    1de4:	9809883a 	mov	r4,r19
    1de8:	00073b40 	call	73b4 <__sprint_r>
    1dec:	103bad1e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    1df0:	d8c02017 	ldw	r3,128(sp)
    1df4:	d8801f17 	ldw	r2,124(sp)
    1df8:	da000404 	addi	r8,sp,16
    1dfc:	003fee06 	br	1db8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001db8>
    1e00:	9088703a 	and	r4,r18,r2
    1e04:	203eab1e 	bne	r4,zero,18b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70018b4>
    1e08:	dc401f17 	ldw	r17,124(sp)
    1e0c:	40800115 	stw	r2,4(r8)
    1e10:	44000015 	stw	r16,0(r8)
    1e14:	8c400044 	addi	r17,r17,1
    1e18:	d8c02015 	stw	r3,128(sp)
    1e1c:	dc401f15 	stw	r17,124(sp)
    1e20:	008001c4 	movi	r2,7
    1e24:	14400e16 	blt	r2,r17,1e60 <___vfprintf_internal_r+0x15c4>
    1e28:	45800204 	addi	r22,r8,8
    1e2c:	003eca06 	br	1958 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001958>
    1e30:	01000074 	movhi	r4,1
    1e34:	21056084 	addi	r4,r4,5506
    1e38:	d9002b15 	stw	r4,172(sp)
    1e3c:	d8802b17 	ldw	r2,172(sp)
    1e40:	1c07883a 	add	r3,r3,r16
    1e44:	8c400044 	addi	r17,r17,1
    1e48:	b0800015 	stw	r2,0(r22)
    1e4c:	b4000115 	stw	r16,4(r22)
    1e50:	d8c02015 	stw	r3,128(sp)
    1e54:	dc401f15 	stw	r17,124(sp)
    1e58:	008001c4 	movi	r2,7
    1e5c:	147ebd0e 	bge	r2,r17,1954 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001954>
    1e60:	d9002c17 	ldw	r4,176(sp)
    1e64:	d9801e04 	addi	r6,sp,120
    1e68:	b80b883a 	mov	r5,r23
    1e6c:	00073b40 	call	73b4 <__sprint_r>
    1e70:	103b8c1e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    1e74:	d8c02017 	ldw	r3,128(sp)
    1e78:	dc401f17 	ldw	r17,124(sp)
    1e7c:	dd800404 	addi	r22,sp,16
    1e80:	003eb506 	br	1958 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001958>
    1e84:	d9002c17 	ldw	r4,176(sp)
    1e88:	d9801e04 	addi	r6,sp,120
    1e8c:	b80b883a 	mov	r5,r23
    1e90:	00073b40 	call	73b4 <__sprint_r>
    1e94:	103b831e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    1e98:	d8c02017 	ldw	r3,128(sp)
    1e9c:	dc401f17 	ldw	r17,124(sp)
    1ea0:	da000404 	addi	r8,sp,16
    1ea4:	003e8d06 	br	18dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70018dc>
    1ea8:	d9002c17 	ldw	r4,176(sp)
    1eac:	d9801e04 	addi	r6,sp,120
    1eb0:	b80b883a 	mov	r5,r23
    1eb4:	00073b40 	call	73b4 <__sprint_r>
    1eb8:	103b7a1e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    1ebc:	d8c02017 	ldw	r3,128(sp)
    1ec0:	dc401f17 	ldw	r17,124(sp)
    1ec4:	dd800404 	addi	r22,sp,16
    1ec8:	003e8f06 	br	1908 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001908>
    1ecc:	0027883a 	mov	r19,zero
    1ed0:	003f4a06 	br	1bfc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001bfc>
    1ed4:	d9002c17 	ldw	r4,176(sp)
    1ed8:	d9801e04 	addi	r6,sp,120
    1edc:	b80b883a 	mov	r5,r23
    1ee0:	00073b40 	call	73b4 <__sprint_r>
    1ee4:	103b6f1e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    1ee8:	d8c02017 	ldw	r3,128(sp)
    1eec:	da000404 	addi	r8,sp,16
    1ef0:	003c9d06 	br	1168 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001168>
    1ef4:	04e7c83a 	sub	r19,zero,r19
    1ef8:	9804c03a 	cmpne	r2,r19,zero
    1efc:	05adc83a 	sub	r22,zero,r22
    1f00:	b0adc83a 	sub	r22,r22,r2
    1f04:	d8802917 	ldw	r2,164(sp)
    1f08:	07000b44 	movi	fp,45
    1f0c:	df002785 	stb	fp,158(sp)
    1f10:	10017b16 	blt	r2,zero,2500 <___vfprintf_internal_r+0x1c64>
    1f14:	00bfdfc4 	movi	r2,-129
    1f18:	90a4703a 	and	r18,r18,r2
    1f1c:	003bb106 	br	de4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000de4>
    1f20:	d9003617 	ldw	r4,216(sp)
    1f24:	d9403817 	ldw	r5,224(sp)
    1f28:	da003d15 	stw	r8,244(sp)
    1f2c:	0006f400 	call	6f40 <__fpclassifyd>
    1f30:	da003d17 	ldw	r8,244(sp)
    1f34:	1000f026 	beq	r2,zero,22f8 <___vfprintf_internal_r+0x1a5c>
    1f38:	d9002917 	ldw	r4,164(sp)
    1f3c:	05bff7c4 	movi	r22,-33
    1f40:	00bfffc4 	movi	r2,-1
    1f44:	8dac703a 	and	r22,r17,r22
    1f48:	20820026 	beq	r4,r2,274c <___vfprintf_internal_r+0x1eb0>
    1f4c:	008011c4 	movi	r2,71
    1f50:	b081f726 	beq	r22,r2,2730 <___vfprintf_internal_r+0x1e94>
    1f54:	d9003817 	ldw	r4,224(sp)
    1f58:	90c04014 	ori	r3,r18,256
    1f5c:	d8c02b15 	stw	r3,172(sp)
    1f60:	20021516 	blt	r4,zero,27b8 <___vfprintf_internal_r+0x1f1c>
    1f64:	dcc03817 	ldw	r19,224(sp)
    1f68:	d8002a05 	stb	zero,168(sp)
    1f6c:	00801984 	movi	r2,102
    1f70:	8881f926 	beq	r17,r2,2758 <___vfprintf_internal_r+0x1ebc>
    1f74:	00801184 	movi	r2,70
    1f78:	88821c26 	beq	r17,r2,27ec <___vfprintf_internal_r+0x1f50>
    1f7c:	00801144 	movi	r2,69
    1f80:	b081ef26 	beq	r22,r2,2740 <___vfprintf_internal_r+0x1ea4>
    1f84:	d8c02917 	ldw	r3,164(sp)
    1f88:	d8802104 	addi	r2,sp,132
    1f8c:	d8800315 	stw	r2,12(sp)
    1f90:	d9403617 	ldw	r5,216(sp)
    1f94:	d8802504 	addi	r2,sp,148
    1f98:	d9002c17 	ldw	r4,176(sp)
    1f9c:	d8800215 	stw	r2,8(sp)
    1fa0:	d8802604 	addi	r2,sp,152
    1fa4:	d8c00015 	stw	r3,0(sp)
    1fa8:	d8800115 	stw	r2,4(sp)
    1fac:	01c00084 	movi	r7,2
    1fb0:	980d883a 	mov	r6,r19
    1fb4:	d8c03c15 	stw	r3,240(sp)
    1fb8:	da003d15 	stw	r8,244(sp)
    1fbc:	0002ec00 	call	2ec0 <_dtoa_r>
    1fc0:	1021883a 	mov	r16,r2
    1fc4:	008019c4 	movi	r2,103
    1fc8:	d8c03c17 	ldw	r3,240(sp)
    1fcc:	da003d17 	ldw	r8,244(sp)
    1fd0:	88817126 	beq	r17,r2,2598 <___vfprintf_internal_r+0x1cfc>
    1fd4:	008011c4 	movi	r2,71
    1fd8:	88829226 	beq	r17,r2,2a24 <___vfprintf_internal_r+0x2188>
    1fdc:	80f9883a 	add	fp,r16,r3
    1fe0:	d9003617 	ldw	r4,216(sp)
    1fe4:	000d883a 	mov	r6,zero
    1fe8:	000f883a 	mov	r7,zero
    1fec:	980b883a 	mov	r5,r19
    1ff0:	da003d15 	stw	r8,244(sp)
    1ff4:	000bba80 	call	bba8 <__eqdf2>
    1ff8:	da003d17 	ldw	r8,244(sp)
    1ffc:	10018d26 	beq	r2,zero,2634 <___vfprintf_internal_r+0x1d98>
    2000:	d8802117 	ldw	r2,132(sp)
    2004:	1700062e 	bgeu	r2,fp,2020 <___vfprintf_internal_r+0x1784>
    2008:	01000c04 	movi	r4,48
    200c:	10c00044 	addi	r3,r2,1
    2010:	d8c02115 	stw	r3,132(sp)
    2014:	11000005 	stb	r4,0(r2)
    2018:	d8802117 	ldw	r2,132(sp)
    201c:	173ffb36 	bltu	r2,fp,200c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700200c>
    2020:	1405c83a 	sub	r2,r2,r16
    2024:	d8803315 	stw	r2,204(sp)
    2028:	008011c4 	movi	r2,71
    202c:	b0817626 	beq	r22,r2,2608 <___vfprintf_internal_r+0x1d6c>
    2030:	00801944 	movi	r2,101
    2034:	1442810e 	bge	r2,r17,2a3c <___vfprintf_internal_r+0x21a0>
    2038:	d8c02617 	ldw	r3,152(sp)
    203c:	00801984 	movi	r2,102
    2040:	d8c03215 	stw	r3,200(sp)
    2044:	8881fe26 	beq	r17,r2,2840 <___vfprintf_internal_r+0x1fa4>
    2048:	d8c03217 	ldw	r3,200(sp)
    204c:	d9003317 	ldw	r4,204(sp)
    2050:	1901dd16 	blt	r3,r4,27c8 <___vfprintf_internal_r+0x1f2c>
    2054:	9480004c 	andi	r18,r18,1
    2058:	90022b1e 	bne	r18,zero,2908 <___vfprintf_internal_r+0x206c>
    205c:	1805883a 	mov	r2,r3
    2060:	18028016 	blt	r3,zero,2a64 <___vfprintf_internal_r+0x21c8>
    2064:	d8c03217 	ldw	r3,200(sp)
    2068:	044019c4 	movi	r17,103
    206c:	d8c02e15 	stw	r3,184(sp)
    2070:	df002a07 	ldb	fp,168(sp)
    2074:	e001531e 	bne	fp,zero,25c4 <___vfprintf_internal_r+0x1d28>
    2078:	df002783 	ldbu	fp,158(sp)
    207c:	d8802a15 	stw	r2,168(sp)
    2080:	dc802b17 	ldw	r18,172(sp)
    2084:	d8002915 	stw	zero,164(sp)
    2088:	003bd106 	br	fd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fd0>
    208c:	d8802d17 	ldw	r2,180(sp)
    2090:	d8c02d17 	ldw	r3,180(sp)
    2094:	d9002d17 	ldw	r4,180(sp)
    2098:	10800017 	ldw	r2,0(r2)
    209c:	18c00117 	ldw	r3,4(r3)
    20a0:	21000204 	addi	r4,r4,8
    20a4:	d8803615 	stw	r2,216(sp)
    20a8:	d8c03815 	stw	r3,224(sp)
    20ac:	d9002d15 	stw	r4,180(sp)
    20b0:	003b7506 	br	e88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e88>
    20b4:	ac400007 	ldb	r17,0(r21)
    20b8:	003a5906 	br	a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a20>
    20bc:	9080100c 	andi	r2,r18,64
    20c0:	1000a826 	beq	r2,zero,2364 <___vfprintf_internal_r+0x1ac8>
    20c4:	d9002d17 	ldw	r4,180(sp)
    20c8:	002d883a 	mov	r22,zero
    20cc:	24c0000b 	ldhu	r19,0(r4)
    20d0:	21000104 	addi	r4,r4,4
    20d4:	d9002d15 	stw	r4,180(sp)
    20d8:	003ccb06 	br	1408 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001408>
    20dc:	d8c02d17 	ldw	r3,180(sp)
    20e0:	d9002917 	ldw	r4,164(sp)
    20e4:	002d883a 	mov	r22,zero
    20e8:	18800104 	addi	r2,r3,4
    20ec:	1cc00017 	ldw	r19,0(r3)
    20f0:	203ebb0e 	bge	r4,zero,1be0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001be0>
    20f4:	003ef106 	br	1cbc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001cbc>
    20f8:	9080040c 	andi	r2,r18,16
    20fc:	1000921e 	bne	r2,zero,2348 <___vfprintf_internal_r+0x1aac>
    2100:	9480100c 	andi	r18,r18,64
    2104:	90013926 	beq	r18,zero,25ec <___vfprintf_internal_r+0x1d50>
    2108:	d9002d17 	ldw	r4,180(sp)
    210c:	d9402f17 	ldw	r5,188(sp)
    2110:	20800017 	ldw	r2,0(r4)
    2114:	21000104 	addi	r4,r4,4
    2118:	d9002d15 	stw	r4,180(sp)
    211c:	1140000d 	sth	r5,0(r2)
    2120:	003a1606 	br	97c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700097c>
    2124:	9080100c 	andi	r2,r18,64
    2128:	10008026 	beq	r2,zero,232c <___vfprintf_internal_r+0x1a90>
    212c:	d8c02d17 	ldw	r3,180(sp)
    2130:	1cc0000f 	ldh	r19,0(r3)
    2134:	18c00104 	addi	r3,r3,4
    2138:	d8c02d15 	stw	r3,180(sp)
    213c:	982dd7fa 	srai	r22,r19,31
    2140:	b005883a 	mov	r2,r22
    2144:	003b1f06 	br	dc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000dc4>
    2148:	9080100c 	andi	r2,r18,64
    214c:	d8002785 	stb	zero,158(sp)
    2150:	10008a1e 	bne	r2,zero,237c <___vfprintf_internal_r+0x1ae0>
    2154:	d9402d17 	ldw	r5,180(sp)
    2158:	d8c02917 	ldw	r3,164(sp)
    215c:	002d883a 	mov	r22,zero
    2160:	28800104 	addi	r2,r5,4
    2164:	2cc00017 	ldw	r19,0(r5)
    2168:	183e4b0e 	bge	r3,zero,1a98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001a98>
    216c:	9d86b03a 	or	r3,r19,r22
    2170:	d8802d15 	stw	r2,180(sp)
    2174:	183e4c1e 	bne	r3,zero,1aa8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001aa8>
    2178:	0039883a 	mov	fp,zero
    217c:	0005883a 	mov	r2,zero
    2180:	003d4006 	br	1684 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001684>
    2184:	01400074 	movhi	r5,1
    2188:	29456084 	addi	r5,r5,5506
    218c:	d9402b15 	stw	r5,172(sp)
    2190:	d9402b17 	ldw	r5,172(sp)
    2194:	1c47883a 	add	r3,r3,r17
    2198:	10800044 	addi	r2,r2,1
    219c:	41400015 	stw	r5,0(r8)
    21a0:	44400115 	stw	r17,4(r8)
    21a4:	d8c02015 	stw	r3,128(sp)
    21a8:	d8801f15 	stw	r2,124(sp)
    21ac:	010001c4 	movi	r4,7
    21b0:	20bec816 	blt	r4,r2,1cd4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001cd4>
    21b4:	42000204 	addi	r8,r8,8
    21b8:	003ecd06 	br	1cf0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001cf0>
    21bc:	d9002917 	ldw	r4,164(sp)
    21c0:	d8002785 	stb	zero,158(sp)
    21c4:	203d2d16 	blt	r4,zero,167c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700167c>
    21c8:	00bfdfc4 	movi	r2,-129
    21cc:	90a4703a 	and	r18,r18,r2
    21d0:	003a9106 	br	c18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c18>
    21d4:	01000074 	movhi	r4,1
    21d8:	21056084 	addi	r4,r4,5506
    21dc:	d9002b15 	stw	r4,172(sp)
    21e0:	003c0c06 	br	1214 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001214>
    21e4:	d9002c17 	ldw	r4,176(sp)
    21e8:	d9801e04 	addi	r6,sp,120
    21ec:	b80b883a 	mov	r5,r23
    21f0:	00073b40 	call	73b4 <__sprint_r>
    21f4:	103aab1e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    21f8:	d8c02017 	ldw	r3,128(sp)
    21fc:	da000404 	addi	r8,sp,16
    2200:	003d4106 	br	1708 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001708>
    2204:	d8801f17 	ldw	r2,124(sp)
    2208:	01400074 	movhi	r5,1
    220c:	01000044 	movi	r4,1
    2210:	18c00044 	addi	r3,r3,1
    2214:	10800044 	addi	r2,r2,1
    2218:	29456004 	addi	r5,r5,5504
    221c:	41000115 	stw	r4,4(r8)
    2220:	41400015 	stw	r5,0(r8)
    2224:	d8c02015 	stw	r3,128(sp)
    2228:	d8801f15 	stw	r2,124(sp)
    222c:	010001c4 	movi	r4,7
    2230:	20805c16 	blt	r4,r2,23a4 <___vfprintf_internal_r+0x1b08>
    2234:	42000204 	addi	r8,r8,8
    2238:	8800041e 	bne	r17,zero,224c <___vfprintf_internal_r+0x19b0>
    223c:	d8803317 	ldw	r2,204(sp)
    2240:	1000021e 	bne	r2,zero,224c <___vfprintf_internal_r+0x19b0>
    2244:	9080004c 	andi	r2,r18,1
    2248:	103c0926 	beq	r2,zero,1270 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001270>
    224c:	d9003717 	ldw	r4,220(sp)
    2250:	d8801f17 	ldw	r2,124(sp)
    2254:	d9403417 	ldw	r5,208(sp)
    2258:	20c7883a 	add	r3,r4,r3
    225c:	10800044 	addi	r2,r2,1
    2260:	41000115 	stw	r4,4(r8)
    2264:	41400015 	stw	r5,0(r8)
    2268:	d8c02015 	stw	r3,128(sp)
    226c:	d8801f15 	stw	r2,124(sp)
    2270:	010001c4 	movi	r4,7
    2274:	20812116 	blt	r4,r2,26fc <___vfprintf_internal_r+0x1e60>
    2278:	42000204 	addi	r8,r8,8
    227c:	0463c83a 	sub	r17,zero,r17
    2280:	0440730e 	bge	zero,r17,2450 <___vfprintf_internal_r+0x1bb4>
    2284:	05800404 	movi	r22,16
    2288:	b440860e 	bge	r22,r17,24a4 <___vfprintf_internal_r+0x1c08>
    228c:	01400074 	movhi	r5,1
    2290:	29456084 	addi	r5,r5,5506
    2294:	d9402b15 	stw	r5,172(sp)
    2298:	070001c4 	movi	fp,7
    229c:	dcc02c17 	ldw	r19,176(sp)
    22a0:	00000306 	br	22b0 <___vfprintf_internal_r+0x1a14>
    22a4:	42000204 	addi	r8,r8,8
    22a8:	8c7ffc04 	addi	r17,r17,-16
    22ac:	b440800e 	bge	r22,r17,24b0 <___vfprintf_internal_r+0x1c14>
    22b0:	18c00404 	addi	r3,r3,16
    22b4:	10800044 	addi	r2,r2,1
    22b8:	45000015 	stw	r20,0(r8)
    22bc:	45800115 	stw	r22,4(r8)
    22c0:	d8c02015 	stw	r3,128(sp)
    22c4:	d8801f15 	stw	r2,124(sp)
    22c8:	e0bff60e 	bge	fp,r2,22a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70022a4>
    22cc:	d9801e04 	addi	r6,sp,120
    22d0:	b80b883a 	mov	r5,r23
    22d4:	9809883a 	mov	r4,r19
    22d8:	00073b40 	call	73b4 <__sprint_r>
    22dc:	103a711e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    22e0:	d8c02017 	ldw	r3,128(sp)
    22e4:	d8801f17 	ldw	r2,124(sp)
    22e8:	da000404 	addi	r8,sp,16
    22ec:	003fee06 	br	22a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70022a8>
    22f0:	00bfffc4 	movi	r2,-1
    22f4:	003a6f06 	br	cb4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000cb4>
    22f8:	008011c4 	movi	r2,71
    22fc:	1440b816 	blt	r2,r17,25e0 <___vfprintf_internal_r+0x1d44>
    2300:	04000074 	movhi	r16,1
    2304:	84055204 	addi	r16,r16,5448
    2308:	00c000c4 	movi	r3,3
    230c:	00bfdfc4 	movi	r2,-129
    2310:	d8c02a15 	stw	r3,168(sp)
    2314:	90a4703a 	and	r18,r18,r2
    2318:	df002783 	ldbu	fp,158(sp)
    231c:	d8c02e15 	stw	r3,184(sp)
    2320:	d8002915 	stw	zero,164(sp)
    2324:	d8003215 	stw	zero,200(sp)
    2328:	003b2906 	br	fd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fd0>
    232c:	d9002d17 	ldw	r4,180(sp)
    2330:	24c00017 	ldw	r19,0(r4)
    2334:	21000104 	addi	r4,r4,4
    2338:	d9002d15 	stw	r4,180(sp)
    233c:	982dd7fa 	srai	r22,r19,31
    2340:	b005883a 	mov	r2,r22
    2344:	003a9f06 	br	dc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000dc4>
    2348:	d9402d17 	ldw	r5,180(sp)
    234c:	d8c02f17 	ldw	r3,188(sp)
    2350:	28800017 	ldw	r2,0(r5)
    2354:	29400104 	addi	r5,r5,4
    2358:	d9402d15 	stw	r5,180(sp)
    235c:	10c00015 	stw	r3,0(r2)
    2360:	00398606 	br	97c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700097c>
    2364:	d9402d17 	ldw	r5,180(sp)
    2368:	002d883a 	mov	r22,zero
    236c:	2cc00017 	ldw	r19,0(r5)
    2370:	29400104 	addi	r5,r5,4
    2374:	d9402d15 	stw	r5,180(sp)
    2378:	003c2306 	br	1408 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001408>
    237c:	d8c02d17 	ldw	r3,180(sp)
    2380:	d9002917 	ldw	r4,164(sp)
    2384:	002d883a 	mov	r22,zero
    2388:	18800104 	addi	r2,r3,4
    238c:	1cc0000b 	ldhu	r19,0(r3)
    2390:	203dc10e 	bge	r4,zero,1a98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001a98>
    2394:	003f7506 	br	216c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700216c>
    2398:	04000074 	movhi	r16,1
    239c:	84055004 	addi	r16,r16,5440
    23a0:	003acc06 	br	ed4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ed4>
    23a4:	d9002c17 	ldw	r4,176(sp)
    23a8:	d9801e04 	addi	r6,sp,120
    23ac:	b80b883a 	mov	r5,r23
    23b0:	00073b40 	call	73b4 <__sprint_r>
    23b4:	103a3b1e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    23b8:	dc402617 	ldw	r17,152(sp)
    23bc:	d8c02017 	ldw	r3,128(sp)
    23c0:	da000404 	addi	r8,sp,16
    23c4:	003f9c06 	br	2238 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002238>
    23c8:	ac400043 	ldbu	r17,1(r21)
    23cc:	94800814 	ori	r18,r18,32
    23d0:	ad400044 	addi	r21,r21,1
    23d4:	8c403fcc 	andi	r17,r17,255
    23d8:	8c40201c 	xori	r17,r17,128
    23dc:	8c7fe004 	addi	r17,r17,-128
    23e0:	00398f06 	br	a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a20>
    23e4:	d8c02d15 	stw	r3,180(sp)
    23e8:	0039883a 	mov	fp,zero
    23ec:	003e3506 	br	1cc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001cc4>
    23f0:	d9002c17 	ldw	r4,176(sp)
    23f4:	d9801e04 	addi	r6,sp,120
    23f8:	b80b883a 	mov	r5,r23
    23fc:	00073b40 	call	73b4 <__sprint_r>
    2400:	103a281e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    2404:	d8c02017 	ldw	r3,128(sp)
    2408:	da000404 	addi	r8,sp,16
    240c:	003cd006 	br	1750 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001750>
    2410:	8009883a 	mov	r4,r16
    2414:	da003d15 	stw	r8,244(sp)
    2418:	00072200 	call	7220 <strlen>
    241c:	d8802e15 	stw	r2,184(sp)
    2420:	da003d17 	ldw	r8,244(sp)
    2424:	103c340e 	bge	r2,zero,14f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70014f8>
    2428:	0005883a 	mov	r2,zero
    242c:	003c3206 	br	14f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70014f8>
    2430:	d9002c17 	ldw	r4,176(sp)
    2434:	d9801e04 	addi	r6,sp,120
    2438:	b80b883a 	mov	r5,r23
    243c:	00073b40 	call	73b4 <__sprint_r>
    2440:	103a181e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    2444:	d8c02017 	ldw	r3,128(sp)
    2448:	d8801f17 	ldw	r2,124(sp)
    244c:	da000404 	addi	r8,sp,16
    2450:	d9403317 	ldw	r5,204(sp)
    2454:	10800044 	addi	r2,r2,1
    2458:	44000015 	stw	r16,0(r8)
    245c:	28c7883a 	add	r3,r5,r3
    2460:	003b7d06 	br	1258 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001258>
    2464:	01000074 	movhi	r4,1
    2468:	21056484 	addi	r4,r4,5522
    246c:	d9003515 	stw	r4,212(sp)
    2470:	003b1406 	br	10c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70010c4>
    2474:	013fffc4 	movi	r4,-1
    2478:	003a3506 	br	d50 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000d50>
    247c:	0023883a 	mov	r17,zero
    2480:	003d9d06 	br	1af8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001af8>
    2484:	d9002c17 	ldw	r4,176(sp)
    2488:	d9801e04 	addi	r6,sp,120
    248c:	b80b883a 	mov	r5,r23
    2490:	00073b40 	call	73b4 <__sprint_r>
    2494:	103a031e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    2498:	d8c02017 	ldw	r3,128(sp)
    249c:	da000404 	addi	r8,sp,16
    24a0:	003d9406 	br	1af4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001af4>
    24a4:	01000074 	movhi	r4,1
    24a8:	21056084 	addi	r4,r4,5506
    24ac:	d9002b15 	stw	r4,172(sp)
    24b0:	d9002b17 	ldw	r4,172(sp)
    24b4:	1c47883a 	add	r3,r3,r17
    24b8:	10800044 	addi	r2,r2,1
    24bc:	41000015 	stw	r4,0(r8)
    24c0:	44400115 	stw	r17,4(r8)
    24c4:	d8c02015 	stw	r3,128(sp)
    24c8:	d8801f15 	stw	r2,124(sp)
    24cc:	010001c4 	movi	r4,7
    24d0:	20bfd716 	blt	r4,r2,2430 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002430>
    24d4:	42000204 	addi	r8,r8,8
    24d8:	003fdd06 	br	2450 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002450>
    24dc:	d9002c17 	ldw	r4,176(sp)
    24e0:	d9801e04 	addi	r6,sp,120
    24e4:	b80b883a 	mov	r5,r23
    24e8:	00073b40 	call	73b4 <__sprint_r>
    24ec:	1039ed1e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    24f0:	d8802617 	ldw	r2,152(sp)
    24f4:	d8c02017 	ldw	r3,128(sp)
    24f8:	da000404 	addi	r8,sp,16
    24fc:	003e1006 	br	1d40 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001d40>
    2500:	00800044 	movi	r2,1
    2504:	10803fcc 	andi	r2,r2,255
    2508:	00c00044 	movi	r3,1
    250c:	10fa3526 	beq	r2,r3,de4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000de4>
    2510:	00c00084 	movi	r3,2
    2514:	10fbcb26 	beq	r2,r3,1444 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001444>
    2518:	003a8f06 	br	f58 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f58>
    251c:	01000074 	movhi	r4,1
    2520:	21056484 	addi	r4,r4,5522
    2524:	d9003515 	stw	r4,212(sp)
    2528:	003b7606 	br	1304 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001304>
    252c:	d8802917 	ldw	r2,164(sp)
    2530:	00c00184 	movi	r3,6
    2534:	1880012e 	bgeu	r3,r2,253c <___vfprintf_internal_r+0x1ca0>
    2538:	1805883a 	mov	r2,r3
    253c:	d8802e15 	stw	r2,184(sp)
    2540:	1000ef16 	blt	r2,zero,2900 <___vfprintf_internal_r+0x2064>
    2544:	04000074 	movhi	r16,1
    2548:	d8802a15 	stw	r2,168(sp)
    254c:	dcc02d15 	stw	r19,180(sp)
    2550:	d8002915 	stw	zero,164(sp)
    2554:	d8003215 	stw	zero,200(sp)
    2558:	84055e04 	addi	r16,r16,5496
    255c:	0039883a 	mov	fp,zero
    2560:	003aa206 	br	fec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fec>
    2564:	0021883a 	mov	r16,zero
    2568:	003e0706 	br	1d88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001d88>
    256c:	d9002c17 	ldw	r4,176(sp)
    2570:	d9801e04 	addi	r6,sp,120
    2574:	b80b883a 	mov	r5,r23
    2578:	00073b40 	call	73b4 <__sprint_r>
    257c:	1039c91e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    2580:	d8802617 	ldw	r2,152(sp)
    2584:	d9403317 	ldw	r5,204(sp)
    2588:	d8c02017 	ldw	r3,128(sp)
    258c:	da000404 	addi	r8,sp,16
    2590:	2885c83a 	sub	r2,r5,r2
    2594:	003dfb06 	br	1d84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001d84>
    2598:	9080004c 	andi	r2,r18,1
    259c:	103e8f1e 	bne	r2,zero,1fdc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001fdc>
    25a0:	d8802117 	ldw	r2,132(sp)
    25a4:	003e9e06 	br	2020 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002020>
    25a8:	1025883a 	mov	r18,r2
    25ac:	0039883a 	mov	fp,zero
    25b0:	00800084 	movi	r2,2
    25b4:	003fd306 	br	2504 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002504>
    25b8:	07000b44 	movi	fp,45
    25bc:	df002785 	stb	fp,158(sp)
    25c0:	003a4006 	br	ec4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ec4>
    25c4:	00c00b44 	movi	r3,45
    25c8:	d8c02785 	stb	r3,158(sp)
    25cc:	d8802a15 	stw	r2,168(sp)
    25d0:	dc802b17 	ldw	r18,172(sp)
    25d4:	d8002915 	stw	zero,164(sp)
    25d8:	07000b44 	movi	fp,45
    25dc:	003a8006 	br	fe0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fe0>
    25e0:	04000074 	movhi	r16,1
    25e4:	84055304 	addi	r16,r16,5452
    25e8:	003f4706 	br	2308 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002308>
    25ec:	d8c02d17 	ldw	r3,180(sp)
    25f0:	d9002f17 	ldw	r4,188(sp)
    25f4:	18800017 	ldw	r2,0(r3)
    25f8:	18c00104 	addi	r3,r3,4
    25fc:	d8c02d15 	stw	r3,180(sp)
    2600:	11000015 	stw	r4,0(r2)
    2604:	0038dd06 	br	97c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700097c>
    2608:	dd802617 	ldw	r22,152(sp)
    260c:	00bfff44 	movi	r2,-3
    2610:	b0801c16 	blt	r22,r2,2684 <___vfprintf_internal_r+0x1de8>
    2614:	d9402917 	ldw	r5,164(sp)
    2618:	2d801a16 	blt	r5,r22,2684 <___vfprintf_internal_r+0x1de8>
    261c:	dd803215 	stw	r22,200(sp)
    2620:	003e8906 	br	2048 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002048>
    2624:	01000074 	movhi	r4,1
    2628:	21056084 	addi	r4,r4,5506
    262c:	d9002b15 	stw	r4,172(sp)
    2630:	003c9106 	br	1878 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001878>
    2634:	e005883a 	mov	r2,fp
    2638:	003e7906 	br	2020 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002020>
    263c:	d9402917 	ldw	r5,164(sp)
    2640:	df002783 	ldbu	fp,158(sp)
    2644:	dcc02d15 	stw	r19,180(sp)
    2648:	d9402a15 	stw	r5,168(sp)
    264c:	d9402e15 	stw	r5,184(sp)
    2650:	d8002915 	stw	zero,164(sp)
    2654:	d8003215 	stw	zero,200(sp)
    2658:	003a5d06 	br	fd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fd0>
    265c:	9080004c 	andi	r2,r18,1
    2660:	0039883a 	mov	fp,zero
    2664:	10000426 	beq	r2,zero,2678 <___vfprintf_internal_r+0x1ddc>
    2668:	00800c04 	movi	r2,48
    266c:	dc001dc4 	addi	r16,sp,119
    2670:	d8801dc5 	stb	r2,119(sp)
    2674:	003b8006 	br	1478 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001478>
    2678:	d8002e15 	stw	zero,184(sp)
    267c:	dc001e04 	addi	r16,sp,120
    2680:	003a4d06 	br	fb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fb8>
    2684:	8c7fff84 	addi	r17,r17,-2
    2688:	b5bfffc4 	addi	r22,r22,-1
    268c:	dd802615 	stw	r22,152(sp)
    2690:	dc4022c5 	stb	r17,139(sp)
    2694:	b000bf16 	blt	r22,zero,2994 <___vfprintf_internal_r+0x20f8>
    2698:	00800ac4 	movi	r2,43
    269c:	d8802305 	stb	r2,140(sp)
    26a0:	00800244 	movi	r2,9
    26a4:	15807016 	blt	r2,r22,2868 <___vfprintf_internal_r+0x1fcc>
    26a8:	00800c04 	movi	r2,48
    26ac:	b5800c04 	addi	r22,r22,48
    26b0:	d8802345 	stb	r2,141(sp)
    26b4:	dd802385 	stb	r22,142(sp)
    26b8:	d88023c4 	addi	r2,sp,143
    26bc:	df0022c4 	addi	fp,sp,139
    26c0:	d8c03317 	ldw	r3,204(sp)
    26c4:	1739c83a 	sub	fp,r2,fp
    26c8:	d9003317 	ldw	r4,204(sp)
    26cc:	e0c7883a 	add	r3,fp,r3
    26d0:	df003a15 	stw	fp,232(sp)
    26d4:	d8c02e15 	stw	r3,184(sp)
    26d8:	00800044 	movi	r2,1
    26dc:	1100b30e 	bge	r2,r4,29ac <___vfprintf_internal_r+0x2110>
    26e0:	d8c02e17 	ldw	r3,184(sp)
    26e4:	18c00044 	addi	r3,r3,1
    26e8:	d8c02e15 	stw	r3,184(sp)
    26ec:	1805883a 	mov	r2,r3
    26f0:	1800ac16 	blt	r3,zero,29a4 <___vfprintf_internal_r+0x2108>
    26f4:	d8003215 	stw	zero,200(sp)
    26f8:	003e5d06 	br	2070 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002070>
    26fc:	d9002c17 	ldw	r4,176(sp)
    2700:	d9801e04 	addi	r6,sp,120
    2704:	b80b883a 	mov	r5,r23
    2708:	00073b40 	call	73b4 <__sprint_r>
    270c:	1039651e 	bne	r2,zero,ca4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ca4>
    2710:	dc402617 	ldw	r17,152(sp)
    2714:	d8c02017 	ldw	r3,128(sp)
    2718:	d8801f17 	ldw	r2,124(sp)
    271c:	da000404 	addi	r8,sp,16
    2720:	003ed606 	br	227c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700227c>
    2724:	582b883a 	mov	r21,r11
    2728:	d8002915 	stw	zero,164(sp)
    272c:	0038bd06 	br	a24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a24>
    2730:	d8802917 	ldw	r2,164(sp)
    2734:	103e071e 	bne	r2,zero,1f54 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001f54>
    2738:	dc002915 	stw	r16,164(sp)
    273c:	003e0506 	br	1f54 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001f54>
    2740:	d9002917 	ldw	r4,164(sp)
    2744:	20c00044 	addi	r3,r4,1
    2748:	003e0f06 	br	1f88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001f88>
    274c:	01400184 	movi	r5,6
    2750:	d9402915 	stw	r5,164(sp)
    2754:	003dff06 	br	1f54 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001f54>
    2758:	d8802104 	addi	r2,sp,132
    275c:	d8800315 	stw	r2,12(sp)
    2760:	d8802504 	addi	r2,sp,148
    2764:	d8800215 	stw	r2,8(sp)
    2768:	d8802604 	addi	r2,sp,152
    276c:	d8800115 	stw	r2,4(sp)
    2770:	d8802917 	ldw	r2,164(sp)
    2774:	d9403617 	ldw	r5,216(sp)
    2778:	d9002c17 	ldw	r4,176(sp)
    277c:	d8800015 	stw	r2,0(sp)
    2780:	01c000c4 	movi	r7,3
    2784:	980d883a 	mov	r6,r19
    2788:	da003d15 	stw	r8,244(sp)
    278c:	0002ec00 	call	2ec0 <_dtoa_r>
    2790:	d8c02917 	ldw	r3,164(sp)
    2794:	da003d17 	ldw	r8,244(sp)
    2798:	1021883a 	mov	r16,r2
    279c:	10f9883a 	add	fp,r2,r3
    27a0:	81000007 	ldb	r4,0(r16)
    27a4:	00800c04 	movi	r2,48
    27a8:	20805e26 	beq	r4,r2,2924 <___vfprintf_internal_r+0x2088>
    27ac:	d8c02617 	ldw	r3,152(sp)
    27b0:	e0f9883a 	add	fp,fp,r3
    27b4:	003e0a06 	br	1fe0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001fe0>
    27b8:	00c00b44 	movi	r3,45
    27bc:	24e0003c 	xorhi	r19,r4,32768
    27c0:	d8c02a05 	stb	r3,168(sp)
    27c4:	003de906 	br	1f6c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001f6c>
    27c8:	d8c03217 	ldw	r3,200(sp)
    27cc:	00c07a0e 	bge	zero,r3,29b8 <___vfprintf_internal_r+0x211c>
    27d0:	00800044 	movi	r2,1
    27d4:	d9003317 	ldw	r4,204(sp)
    27d8:	1105883a 	add	r2,r2,r4
    27dc:	d8802e15 	stw	r2,184(sp)
    27e0:	10004e16 	blt	r2,zero,291c <___vfprintf_internal_r+0x2080>
    27e4:	044019c4 	movi	r17,103
    27e8:	003e2106 	br	2070 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002070>
    27ec:	d9002917 	ldw	r4,164(sp)
    27f0:	d8802104 	addi	r2,sp,132
    27f4:	d8800315 	stw	r2,12(sp)
    27f8:	d9000015 	stw	r4,0(sp)
    27fc:	d8802504 	addi	r2,sp,148
    2800:	d9403617 	ldw	r5,216(sp)
    2804:	d9002c17 	ldw	r4,176(sp)
    2808:	d8800215 	stw	r2,8(sp)
    280c:	d8802604 	addi	r2,sp,152
    2810:	d8800115 	stw	r2,4(sp)
    2814:	01c000c4 	movi	r7,3
    2818:	980d883a 	mov	r6,r19
    281c:	da003d15 	stw	r8,244(sp)
    2820:	0002ec00 	call	2ec0 <_dtoa_r>
    2824:	d8c02917 	ldw	r3,164(sp)
    2828:	da003d17 	ldw	r8,244(sp)
    282c:	1021883a 	mov	r16,r2
    2830:	00801184 	movi	r2,70
    2834:	80f9883a 	add	fp,r16,r3
    2838:	88bfd926 	beq	r17,r2,27a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70027a0>
    283c:	003de806 	br	1fe0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001fe0>
    2840:	d9002917 	ldw	r4,164(sp)
    2844:	00c04d0e 	bge	zero,r3,297c <___vfprintf_internal_r+0x20e0>
    2848:	2000441e 	bne	r4,zero,295c <___vfprintf_internal_r+0x20c0>
    284c:	9480004c 	andi	r18,r18,1
    2850:	9000421e 	bne	r18,zero,295c <___vfprintf_internal_r+0x20c0>
    2854:	1805883a 	mov	r2,r3
    2858:	18007016 	blt	r3,zero,2a1c <___vfprintf_internal_r+0x2180>
    285c:	d8c03217 	ldw	r3,200(sp)
    2860:	d8c02e15 	stw	r3,184(sp)
    2864:	003e0206 	br	2070 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002070>
    2868:	df0022c4 	addi	fp,sp,139
    286c:	dc002915 	stw	r16,164(sp)
    2870:	4027883a 	mov	r19,r8
    2874:	e021883a 	mov	r16,fp
    2878:	b009883a 	mov	r4,r22
    287c:	01400284 	movi	r5,10
    2880:	000a8e40 	call	a8e4 <__modsi3>
    2884:	10800c04 	addi	r2,r2,48
    2888:	843fffc4 	addi	r16,r16,-1
    288c:	b009883a 	mov	r4,r22
    2890:	01400284 	movi	r5,10
    2894:	80800005 	stb	r2,0(r16)
    2898:	000a8600 	call	a860 <__divsi3>
    289c:	102d883a 	mov	r22,r2
    28a0:	00800244 	movi	r2,9
    28a4:	15bff416 	blt	r2,r22,2878 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002878>
    28a8:	9811883a 	mov	r8,r19
    28ac:	b0800c04 	addi	r2,r22,48
    28b0:	8027883a 	mov	r19,r16
    28b4:	997fffc4 	addi	r5,r19,-1
    28b8:	98bfffc5 	stb	r2,-1(r19)
    28bc:	dc002917 	ldw	r16,164(sp)
    28c0:	2f006a2e 	bgeu	r5,fp,2a6c <___vfprintf_internal_r+0x21d0>
    28c4:	d9c02384 	addi	r7,sp,142
    28c8:	3ccfc83a 	sub	r7,r7,r19
    28cc:	d9002344 	addi	r4,sp,141
    28d0:	e1cf883a 	add	r7,fp,r7
    28d4:	00000106 	br	28dc <___vfprintf_internal_r+0x2040>
    28d8:	28800003 	ldbu	r2,0(r5)
    28dc:	20800005 	stb	r2,0(r4)
    28e0:	21000044 	addi	r4,r4,1
    28e4:	29400044 	addi	r5,r5,1
    28e8:	393ffb1e 	bne	r7,r4,28d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70028d8>
    28ec:	d8802304 	addi	r2,sp,140
    28f0:	14c5c83a 	sub	r2,r2,r19
    28f4:	d8c02344 	addi	r3,sp,141
    28f8:	1885883a 	add	r2,r3,r2
    28fc:	003f7006 	br	26c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70026c0>
    2900:	0005883a 	mov	r2,zero
    2904:	003f0f06 	br	2544 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002544>
    2908:	d8c03217 	ldw	r3,200(sp)
    290c:	18c00044 	addi	r3,r3,1
    2910:	d8c02e15 	stw	r3,184(sp)
    2914:	1805883a 	mov	r2,r3
    2918:	183fb20e 	bge	r3,zero,27e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70027e4>
    291c:	0005883a 	mov	r2,zero
    2920:	003fb006 	br	27e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70027e4>
    2924:	d9003617 	ldw	r4,216(sp)
    2928:	000d883a 	mov	r6,zero
    292c:	000f883a 	mov	r7,zero
    2930:	980b883a 	mov	r5,r19
    2934:	d8c03c15 	stw	r3,240(sp)
    2938:	da003d15 	stw	r8,244(sp)
    293c:	000bba80 	call	bba8 <__eqdf2>
    2940:	d8c03c17 	ldw	r3,240(sp)
    2944:	da003d17 	ldw	r8,244(sp)
    2948:	103f9826 	beq	r2,zero,27ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70027ac>
    294c:	00800044 	movi	r2,1
    2950:	10c7c83a 	sub	r3,r2,r3
    2954:	d8c02615 	stw	r3,152(sp)
    2958:	003f9506 	br	27b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70027b0>
    295c:	d9002917 	ldw	r4,164(sp)
    2960:	d8c03217 	ldw	r3,200(sp)
    2964:	20800044 	addi	r2,r4,1
    2968:	1885883a 	add	r2,r3,r2
    296c:	d8802e15 	stw	r2,184(sp)
    2970:	103dbf0e 	bge	r2,zero,2070 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002070>
    2974:	0005883a 	mov	r2,zero
    2978:	003dbd06 	br	2070 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002070>
    297c:	2000211e 	bne	r4,zero,2a04 <___vfprintf_internal_r+0x2168>
    2980:	9480004c 	andi	r18,r18,1
    2984:	90001f1e 	bne	r18,zero,2a04 <___vfprintf_internal_r+0x2168>
    2988:	00800044 	movi	r2,1
    298c:	d8802e15 	stw	r2,184(sp)
    2990:	003db706 	br	2070 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002070>
    2994:	00800b44 	movi	r2,45
    2998:	05adc83a 	sub	r22,zero,r22
    299c:	d8802305 	stb	r2,140(sp)
    29a0:	003f3f06 	br	26a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70026a0>
    29a4:	0005883a 	mov	r2,zero
    29a8:	003f5206 	br	26f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70026f4>
    29ac:	90a4703a 	and	r18,r18,r2
    29b0:	903f4e26 	beq	r18,zero,26ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70026ec>
    29b4:	003f4a06 	br	26e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70026e0>
    29b8:	00800084 	movi	r2,2
    29bc:	10c5c83a 	sub	r2,r2,r3
    29c0:	003f8406 	br	27d4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70027d4>
    29c4:	d8802d17 	ldw	r2,180(sp)
    29c8:	d9002d17 	ldw	r4,180(sp)
    29cc:	ac400043 	ldbu	r17,1(r21)
    29d0:	10800017 	ldw	r2,0(r2)
    29d4:	582b883a 	mov	r21,r11
    29d8:	d8802915 	stw	r2,164(sp)
    29dc:	20800104 	addi	r2,r4,4
    29e0:	d9002917 	ldw	r4,164(sp)
    29e4:	d8802d15 	stw	r2,180(sp)
    29e8:	203e7a0e 	bge	r4,zero,23d4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70023d4>
    29ec:	8c403fcc 	andi	r17,r17,255
    29f0:	00bfffc4 	movi	r2,-1
    29f4:	8c40201c 	xori	r17,r17,128
    29f8:	d8802915 	stw	r2,164(sp)
    29fc:	8c7fe004 	addi	r17,r17,-128
    2a00:	00380706 	br	a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000a20>
    2a04:	d8c02917 	ldw	r3,164(sp)
    2a08:	18c00084 	addi	r3,r3,2
    2a0c:	d8c02e15 	stw	r3,184(sp)
    2a10:	1805883a 	mov	r2,r3
    2a14:	183d960e 	bge	r3,zero,2070 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002070>
    2a18:	003fd606 	br	2974 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002974>
    2a1c:	0005883a 	mov	r2,zero
    2a20:	003f8e06 	br	285c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700285c>
    2a24:	9080004c 	andi	r2,r18,1
    2a28:	103f811e 	bne	r2,zero,2830 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002830>
    2a2c:	d8802117 	ldw	r2,132(sp)
    2a30:	1405c83a 	sub	r2,r2,r16
    2a34:	d8803315 	stw	r2,204(sp)
    2a38:	b47ef326 	beq	r22,r17,2608 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002608>
    2a3c:	dd802617 	ldw	r22,152(sp)
    2a40:	003f1106 	br	2688 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002688>
    2a44:	d9c02785 	stb	r7,158(sp)
    2a48:	00390406 	br	e5c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e5c>
    2a4c:	d9c02785 	stb	r7,158(sp)
    2a50:	0038d306 	br	da0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000da0>
    2a54:	d9c02785 	stb	r7,158(sp)
    2a58:	003a6106 	br	13e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70013e0>
    2a5c:	d9c02785 	stb	r7,158(sp)
    2a60:	003af806 	br	1644 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001644>
    2a64:	0005883a 	mov	r2,zero
    2a68:	003d7e06 	br	2064 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002064>
    2a6c:	d8802344 	addi	r2,sp,141
    2a70:	003f1306 	br	26c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70026c0>
    2a74:	d9c02785 	stb	r7,158(sp)
    2a78:	00392306 	br	f08 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f08>
    2a7c:	d9c02785 	stb	r7,158(sp)
    2a80:	003aa906 	br	1528 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001528>
    2a84:	d9c02785 	stb	r7,158(sp)
    2a88:	003a3d06 	br	1380 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001380>
    2a8c:	d9c02785 	stb	r7,158(sp)
    2a90:	003aca06 	br	15bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70015bc>

00002a94 <__vfprintf_internal>:
    2a94:	00800074 	movhi	r2,1
    2a98:	108d9004 	addi	r2,r2,13888
    2a9c:	300f883a 	mov	r7,r6
    2aa0:	280d883a 	mov	r6,r5
    2aa4:	200b883a 	mov	r5,r4
    2aa8:	11000017 	ldw	r4,0(r2)
    2aac:	000089c1 	jmpi	89c <___vfprintf_internal_r>

00002ab0 <__sbprintf>:
    2ab0:	2880030b 	ldhu	r2,12(r5)
    2ab4:	2ac01917 	ldw	r11,100(r5)
    2ab8:	2a80038b 	ldhu	r10,14(r5)
    2abc:	2a400717 	ldw	r9,28(r5)
    2ac0:	2a000917 	ldw	r8,36(r5)
    2ac4:	defee204 	addi	sp,sp,-1144
    2ac8:	00c10004 	movi	r3,1024
    2acc:	dc011a15 	stw	r16,1128(sp)
    2ad0:	10bfff4c 	andi	r2,r2,65533
    2ad4:	2821883a 	mov	r16,r5
    2ad8:	d8cb883a 	add	r5,sp,r3
    2adc:	dc811c15 	stw	r18,1136(sp)
    2ae0:	dc411b15 	stw	r17,1132(sp)
    2ae4:	dfc11d15 	stw	ra,1140(sp)
    2ae8:	2025883a 	mov	r18,r4
    2aec:	d881030d 	sth	r2,1036(sp)
    2af0:	dac11915 	stw	r11,1124(sp)
    2af4:	da81038d 	sth	r10,1038(sp)
    2af8:	da410715 	stw	r9,1052(sp)
    2afc:	da010915 	stw	r8,1060(sp)
    2b00:	dec10015 	stw	sp,1024(sp)
    2b04:	dec10415 	stw	sp,1040(sp)
    2b08:	d8c10215 	stw	r3,1032(sp)
    2b0c:	d8c10515 	stw	r3,1044(sp)
    2b10:	d8010615 	stw	zero,1048(sp)
    2b14:	000089c0 	call	89c <___vfprintf_internal_r>
    2b18:	1023883a 	mov	r17,r2
    2b1c:	10000416 	blt	r2,zero,2b30 <__sbprintf+0x80>
    2b20:	d9410004 	addi	r5,sp,1024
    2b24:	9009883a 	mov	r4,r18
    2b28:	00047640 	call	4764 <_fflush_r>
    2b2c:	10000d1e 	bne	r2,zero,2b64 <__sbprintf+0xb4>
    2b30:	d881030b 	ldhu	r2,1036(sp)
    2b34:	1080100c 	andi	r2,r2,64
    2b38:	10000326 	beq	r2,zero,2b48 <__sbprintf+0x98>
    2b3c:	8080030b 	ldhu	r2,12(r16)
    2b40:	10801014 	ori	r2,r2,64
    2b44:	8080030d 	sth	r2,12(r16)
    2b48:	8805883a 	mov	r2,r17
    2b4c:	dfc11d17 	ldw	ra,1140(sp)
    2b50:	dc811c17 	ldw	r18,1136(sp)
    2b54:	dc411b17 	ldw	r17,1132(sp)
    2b58:	dc011a17 	ldw	r16,1128(sp)
    2b5c:	dec11e04 	addi	sp,sp,1144
    2b60:	f800283a 	ret
    2b64:	047fffc4 	movi	r17,-1
    2b68:	003ff106 	br	2b30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002b30>

00002b6c <__swsetup_r>:
    2b6c:	00800074 	movhi	r2,1
    2b70:	defffd04 	addi	sp,sp,-12
    2b74:	108d9004 	addi	r2,r2,13888
    2b78:	dc400115 	stw	r17,4(sp)
    2b7c:	2023883a 	mov	r17,r4
    2b80:	11000017 	ldw	r4,0(r2)
    2b84:	dc000015 	stw	r16,0(sp)
    2b88:	dfc00215 	stw	ra,8(sp)
    2b8c:	2821883a 	mov	r16,r5
    2b90:	20000226 	beq	r4,zero,2b9c <__swsetup_r+0x30>
    2b94:	20800e17 	ldw	r2,56(r4)
    2b98:	10003126 	beq	r2,zero,2c60 <__swsetup_r+0xf4>
    2b9c:	8080030b 	ldhu	r2,12(r16)
    2ba0:	10c0020c 	andi	r3,r2,8
    2ba4:	1009883a 	mov	r4,r2
    2ba8:	18000f26 	beq	r3,zero,2be8 <__swsetup_r+0x7c>
    2bac:	80c00417 	ldw	r3,16(r16)
    2bb0:	18001526 	beq	r3,zero,2c08 <__swsetup_r+0x9c>
    2bb4:	1100004c 	andi	r4,r2,1
    2bb8:	20001c1e 	bne	r4,zero,2c2c <__swsetup_r+0xc0>
    2bbc:	1080008c 	andi	r2,r2,2
    2bc0:	1000291e 	bne	r2,zero,2c68 <__swsetup_r+0xfc>
    2bc4:	80800517 	ldw	r2,20(r16)
    2bc8:	80800215 	stw	r2,8(r16)
    2bcc:	18001c26 	beq	r3,zero,2c40 <__swsetup_r+0xd4>
    2bd0:	0005883a 	mov	r2,zero
    2bd4:	dfc00217 	ldw	ra,8(sp)
    2bd8:	dc400117 	ldw	r17,4(sp)
    2bdc:	dc000017 	ldw	r16,0(sp)
    2be0:	dec00304 	addi	sp,sp,12
    2be4:	f800283a 	ret
    2be8:	2080040c 	andi	r2,r4,16
    2bec:	10002e26 	beq	r2,zero,2ca8 <__swsetup_r+0x13c>
    2bf0:	2080010c 	andi	r2,r4,4
    2bf4:	10001e1e 	bne	r2,zero,2c70 <__swsetup_r+0x104>
    2bf8:	80c00417 	ldw	r3,16(r16)
    2bfc:	20800214 	ori	r2,r4,8
    2c00:	8080030d 	sth	r2,12(r16)
    2c04:	183feb1e 	bne	r3,zero,2bb4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002bb4>
    2c08:	1100a00c 	andi	r4,r2,640
    2c0c:	01408004 	movi	r5,512
    2c10:	217fe826 	beq	r4,r5,2bb4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002bb4>
    2c14:	800b883a 	mov	r5,r16
    2c18:	8809883a 	mov	r4,r17
    2c1c:	00052280 	call	5228 <__smakebuf_r>
    2c20:	8080030b 	ldhu	r2,12(r16)
    2c24:	80c00417 	ldw	r3,16(r16)
    2c28:	003fe206 	br	2bb4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002bb4>
    2c2c:	80800517 	ldw	r2,20(r16)
    2c30:	80000215 	stw	zero,8(r16)
    2c34:	0085c83a 	sub	r2,zero,r2
    2c38:	80800615 	stw	r2,24(r16)
    2c3c:	183fe41e 	bne	r3,zero,2bd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002bd0>
    2c40:	80c0030b 	ldhu	r3,12(r16)
    2c44:	0005883a 	mov	r2,zero
    2c48:	1900200c 	andi	r4,r3,128
    2c4c:	203fe126 	beq	r4,zero,2bd4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002bd4>
    2c50:	18c01014 	ori	r3,r3,64
    2c54:	80c0030d 	sth	r3,12(r16)
    2c58:	00bfffc4 	movi	r2,-1
    2c5c:	003fdd06 	br	2bd4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002bd4>
    2c60:	0004b400 	call	4b40 <__sinit>
    2c64:	003fcd06 	br	2b9c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002b9c>
    2c68:	0005883a 	mov	r2,zero
    2c6c:	003fd606 	br	2bc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002bc8>
    2c70:	81400c17 	ldw	r5,48(r16)
    2c74:	28000626 	beq	r5,zero,2c90 <__swsetup_r+0x124>
    2c78:	80801004 	addi	r2,r16,64
    2c7c:	28800326 	beq	r5,r2,2c8c <__swsetup_r+0x120>
    2c80:	8809883a 	mov	r4,r17
    2c84:	0004cb40 	call	4cb4 <_free_r>
    2c88:	8100030b 	ldhu	r4,12(r16)
    2c8c:	80000c15 	stw	zero,48(r16)
    2c90:	80c00417 	ldw	r3,16(r16)
    2c94:	00bff6c4 	movi	r2,-37
    2c98:	1108703a 	and	r4,r2,r4
    2c9c:	80000115 	stw	zero,4(r16)
    2ca0:	80c00015 	stw	r3,0(r16)
    2ca4:	003fd506 	br	2bfc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002bfc>
    2ca8:	00800244 	movi	r2,9
    2cac:	88800015 	stw	r2,0(r17)
    2cb0:	20801014 	ori	r2,r4,64
    2cb4:	8080030d 	sth	r2,12(r16)
    2cb8:	00bfffc4 	movi	r2,-1
    2cbc:	003fc506 	br	2bd4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002bd4>

00002cc0 <quorem>:
    2cc0:	defff704 	addi	sp,sp,-36
    2cc4:	dc800215 	stw	r18,8(sp)
    2cc8:	20800417 	ldw	r2,16(r4)
    2ccc:	2c800417 	ldw	r18,16(r5)
    2cd0:	dfc00815 	stw	ra,32(sp)
    2cd4:	ddc00715 	stw	r23,28(sp)
    2cd8:	dd800615 	stw	r22,24(sp)
    2cdc:	dd400515 	stw	r21,20(sp)
    2ce0:	dd000415 	stw	r20,16(sp)
    2ce4:	dcc00315 	stw	r19,12(sp)
    2ce8:	dc400115 	stw	r17,4(sp)
    2cec:	dc000015 	stw	r16,0(sp)
    2cf0:	14807116 	blt	r2,r18,2eb8 <quorem+0x1f8>
    2cf4:	94bfffc4 	addi	r18,r18,-1
    2cf8:	94ad883a 	add	r22,r18,r18
    2cfc:	b5ad883a 	add	r22,r22,r22
    2d00:	2c400504 	addi	r17,r5,20
    2d04:	8da9883a 	add	r20,r17,r22
    2d08:	25400504 	addi	r21,r4,20
    2d0c:	282f883a 	mov	r23,r5
    2d10:	adad883a 	add	r22,r21,r22
    2d14:	a1400017 	ldw	r5,0(r20)
    2d18:	2021883a 	mov	r16,r4
    2d1c:	b1000017 	ldw	r4,0(r22)
    2d20:	29400044 	addi	r5,r5,1
    2d24:	000a9580 	call	a958 <__udivsi3>
    2d28:	1027883a 	mov	r19,r2
    2d2c:	10002c26 	beq	r2,zero,2de0 <quorem+0x120>
    2d30:	a813883a 	mov	r9,r21
    2d34:	880b883a 	mov	r5,r17
    2d38:	0009883a 	mov	r4,zero
    2d3c:	000d883a 	mov	r6,zero
    2d40:	2a000017 	ldw	r8,0(r5)
    2d44:	49c00017 	ldw	r7,0(r9)
    2d48:	29400104 	addi	r5,r5,4
    2d4c:	40bfffcc 	andi	r2,r8,65535
    2d50:	14c5383a 	mul	r2,r2,r19
    2d54:	4010d43a 	srli	r8,r8,16
    2d58:	38ffffcc 	andi	r3,r7,65535
    2d5c:	1105883a 	add	r2,r2,r4
    2d60:	1008d43a 	srli	r4,r2,16
    2d64:	44d1383a 	mul	r8,r8,r19
    2d68:	198d883a 	add	r6,r3,r6
    2d6c:	10ffffcc 	andi	r3,r2,65535
    2d70:	30c7c83a 	sub	r3,r6,r3
    2d74:	380ed43a 	srli	r7,r7,16
    2d78:	4105883a 	add	r2,r8,r4
    2d7c:	180dd43a 	srai	r6,r3,16
    2d80:	113fffcc 	andi	r4,r2,65535
    2d84:	390fc83a 	sub	r7,r7,r4
    2d88:	398d883a 	add	r6,r7,r6
    2d8c:	300e943a 	slli	r7,r6,16
    2d90:	18ffffcc 	andi	r3,r3,65535
    2d94:	1008d43a 	srli	r4,r2,16
    2d98:	38ceb03a 	or	r7,r7,r3
    2d9c:	49c00015 	stw	r7,0(r9)
    2da0:	300dd43a 	srai	r6,r6,16
    2da4:	4a400104 	addi	r9,r9,4
    2da8:	a17fe52e 	bgeu	r20,r5,2d40 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002d40>
    2dac:	b0800017 	ldw	r2,0(r22)
    2db0:	10000b1e 	bne	r2,zero,2de0 <quorem+0x120>
    2db4:	b0bfff04 	addi	r2,r22,-4
    2db8:	a880082e 	bgeu	r21,r2,2ddc <quorem+0x11c>
    2dbc:	b0ffff17 	ldw	r3,-4(r22)
    2dc0:	18000326 	beq	r3,zero,2dd0 <quorem+0x110>
    2dc4:	00000506 	br	2ddc <quorem+0x11c>
    2dc8:	10c00017 	ldw	r3,0(r2)
    2dcc:	1800031e 	bne	r3,zero,2ddc <quorem+0x11c>
    2dd0:	10bfff04 	addi	r2,r2,-4
    2dd4:	94bfffc4 	addi	r18,r18,-1
    2dd8:	a8bffb36 	bltu	r21,r2,2dc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002dc8>
    2ddc:	84800415 	stw	r18,16(r16)
    2de0:	b80b883a 	mov	r5,r23
    2de4:	8009883a 	mov	r4,r16
    2de8:	000680c0 	call	680c <__mcmp>
    2dec:	10002616 	blt	r2,zero,2e88 <quorem+0x1c8>
    2df0:	9cc00044 	addi	r19,r19,1
    2df4:	a805883a 	mov	r2,r21
    2df8:	000b883a 	mov	r5,zero
    2dfc:	11000017 	ldw	r4,0(r2)
    2e00:	89800017 	ldw	r6,0(r17)
    2e04:	10800104 	addi	r2,r2,4
    2e08:	20ffffcc 	andi	r3,r4,65535
    2e0c:	194b883a 	add	r5,r3,r5
    2e10:	30ffffcc 	andi	r3,r6,65535
    2e14:	28c7c83a 	sub	r3,r5,r3
    2e18:	300cd43a 	srli	r6,r6,16
    2e1c:	2008d43a 	srli	r4,r4,16
    2e20:	180bd43a 	srai	r5,r3,16
    2e24:	18ffffcc 	andi	r3,r3,65535
    2e28:	2189c83a 	sub	r4,r4,r6
    2e2c:	2149883a 	add	r4,r4,r5
    2e30:	200c943a 	slli	r6,r4,16
    2e34:	8c400104 	addi	r17,r17,4
    2e38:	200bd43a 	srai	r5,r4,16
    2e3c:	30c6b03a 	or	r3,r6,r3
    2e40:	10ffff15 	stw	r3,-4(r2)
    2e44:	a47fed2e 	bgeu	r20,r17,2dfc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002dfc>
    2e48:	9485883a 	add	r2,r18,r18
    2e4c:	1085883a 	add	r2,r2,r2
    2e50:	a887883a 	add	r3,r21,r2
    2e54:	18800017 	ldw	r2,0(r3)
    2e58:	10000b1e 	bne	r2,zero,2e88 <quorem+0x1c8>
    2e5c:	18bfff04 	addi	r2,r3,-4
    2e60:	a880082e 	bgeu	r21,r2,2e84 <quorem+0x1c4>
    2e64:	18ffff17 	ldw	r3,-4(r3)
    2e68:	18000326 	beq	r3,zero,2e78 <quorem+0x1b8>
    2e6c:	00000506 	br	2e84 <quorem+0x1c4>
    2e70:	10c00017 	ldw	r3,0(r2)
    2e74:	1800031e 	bne	r3,zero,2e84 <quorem+0x1c4>
    2e78:	10bfff04 	addi	r2,r2,-4
    2e7c:	94bfffc4 	addi	r18,r18,-1
    2e80:	a8bffb36 	bltu	r21,r2,2e70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002e70>
    2e84:	84800415 	stw	r18,16(r16)
    2e88:	9805883a 	mov	r2,r19
    2e8c:	dfc00817 	ldw	ra,32(sp)
    2e90:	ddc00717 	ldw	r23,28(sp)
    2e94:	dd800617 	ldw	r22,24(sp)
    2e98:	dd400517 	ldw	r21,20(sp)
    2e9c:	dd000417 	ldw	r20,16(sp)
    2ea0:	dcc00317 	ldw	r19,12(sp)
    2ea4:	dc800217 	ldw	r18,8(sp)
    2ea8:	dc400117 	ldw	r17,4(sp)
    2eac:	dc000017 	ldw	r16,0(sp)
    2eb0:	dec00904 	addi	sp,sp,36
    2eb4:	f800283a 	ret
    2eb8:	0005883a 	mov	r2,zero
    2ebc:	003ff306 	br	2e8c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002e8c>

00002ec0 <_dtoa_r>:
    2ec0:	20801017 	ldw	r2,64(r4)
    2ec4:	deffde04 	addi	sp,sp,-136
    2ec8:	df002015 	stw	fp,128(sp)
    2ecc:	dcc01b15 	stw	r19,108(sp)
    2ed0:	dc801a15 	stw	r18,104(sp)
    2ed4:	dc401915 	stw	r17,100(sp)
    2ed8:	dc001815 	stw	r16,96(sp)
    2edc:	dfc02115 	stw	ra,132(sp)
    2ee0:	ddc01f15 	stw	r23,124(sp)
    2ee4:	dd801e15 	stw	r22,120(sp)
    2ee8:	dd401d15 	stw	r21,116(sp)
    2eec:	dd001c15 	stw	r20,112(sp)
    2ef0:	d9c00315 	stw	r7,12(sp)
    2ef4:	2039883a 	mov	fp,r4
    2ef8:	3023883a 	mov	r17,r6
    2efc:	2825883a 	mov	r18,r5
    2f00:	dc002417 	ldw	r16,144(sp)
    2f04:	3027883a 	mov	r19,r6
    2f08:	10000826 	beq	r2,zero,2f2c <_dtoa_r+0x6c>
    2f0c:	21801117 	ldw	r6,68(r4)
    2f10:	00c00044 	movi	r3,1
    2f14:	100b883a 	mov	r5,r2
    2f18:	1986983a 	sll	r3,r3,r6
    2f1c:	11800115 	stw	r6,4(r2)
    2f20:	10c00215 	stw	r3,8(r2)
    2f24:	0005fec0 	call	5fec <_Bfree>
    2f28:	e0001015 	stw	zero,64(fp)
    2f2c:	88002e16 	blt	r17,zero,2fe8 <_dtoa_r+0x128>
    2f30:	80000015 	stw	zero,0(r16)
    2f34:	889ffc2c 	andhi	r2,r17,32752
    2f38:	00dffc34 	movhi	r3,32752
    2f3c:	10c01c26 	beq	r2,r3,2fb0 <_dtoa_r+0xf0>
    2f40:	000d883a 	mov	r6,zero
    2f44:	000f883a 	mov	r7,zero
    2f48:	9009883a 	mov	r4,r18
    2f4c:	980b883a 	mov	r5,r19
    2f50:	000bba80 	call	bba8 <__eqdf2>
    2f54:	10002b1e 	bne	r2,zero,3004 <_dtoa_r+0x144>
    2f58:	d9c02317 	ldw	r7,140(sp)
    2f5c:	00800044 	movi	r2,1
    2f60:	38800015 	stw	r2,0(r7)
    2f64:	d8802517 	ldw	r2,148(sp)
    2f68:	10019e26 	beq	r2,zero,35e4 <_dtoa_r+0x724>
    2f6c:	d8c02517 	ldw	r3,148(sp)
    2f70:	00800074 	movhi	r2,1
    2f74:	10856044 	addi	r2,r2,5505
    2f78:	18800015 	stw	r2,0(r3)
    2f7c:	10bfffc4 	addi	r2,r2,-1
    2f80:	dfc02117 	ldw	ra,132(sp)
    2f84:	df002017 	ldw	fp,128(sp)
    2f88:	ddc01f17 	ldw	r23,124(sp)
    2f8c:	dd801e17 	ldw	r22,120(sp)
    2f90:	dd401d17 	ldw	r21,116(sp)
    2f94:	dd001c17 	ldw	r20,112(sp)
    2f98:	dcc01b17 	ldw	r19,108(sp)
    2f9c:	dc801a17 	ldw	r18,104(sp)
    2fa0:	dc401917 	ldw	r17,100(sp)
    2fa4:	dc001817 	ldw	r16,96(sp)
    2fa8:	dec02204 	addi	sp,sp,136
    2fac:	f800283a 	ret
    2fb0:	d8c02317 	ldw	r3,140(sp)
    2fb4:	0089c3c4 	movi	r2,9999
    2fb8:	18800015 	stw	r2,0(r3)
    2fbc:	90017726 	beq	r18,zero,359c <_dtoa_r+0x6dc>
    2fc0:	00800074 	movhi	r2,1
    2fc4:	10856c04 	addi	r2,r2,5552
    2fc8:	d9002517 	ldw	r4,148(sp)
    2fcc:	203fec26 	beq	r4,zero,2f80 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002f80>
    2fd0:	10c000c7 	ldb	r3,3(r2)
    2fd4:	1801781e 	bne	r3,zero,35b8 <_dtoa_r+0x6f8>
    2fd8:	10c000c4 	addi	r3,r2,3
    2fdc:	d9802517 	ldw	r6,148(sp)
    2fe0:	30c00015 	stw	r3,0(r6)
    2fe4:	003fe606 	br	2f80 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002f80>
    2fe8:	04e00034 	movhi	r19,32768
    2fec:	9cffffc4 	addi	r19,r19,-1
    2ff0:	00800044 	movi	r2,1
    2ff4:	8ce6703a 	and	r19,r17,r19
    2ff8:	80800015 	stw	r2,0(r16)
    2ffc:	9823883a 	mov	r17,r19
    3000:	003fcc06 	br	2f34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002f34>
    3004:	d8800204 	addi	r2,sp,8
    3008:	d8800015 	stw	r2,0(sp)
    300c:	d9c00104 	addi	r7,sp,4
    3010:	900b883a 	mov	r5,r18
    3014:	980d883a 	mov	r6,r19
    3018:	e009883a 	mov	r4,fp
    301c:	8820d53a 	srli	r16,r17,20
    3020:	0006bd80 	call	6bd8 <__d2b>
    3024:	d8800915 	stw	r2,36(sp)
    3028:	8001651e 	bne	r16,zero,35c0 <_dtoa_r+0x700>
    302c:	dd800217 	ldw	r22,8(sp)
    3030:	dc000117 	ldw	r16,4(sp)
    3034:	00800804 	movi	r2,32
    3038:	b421883a 	add	r16,r22,r16
    303c:	80c10c84 	addi	r3,r16,1074
    3040:	10c2d10e 	bge	r2,r3,3b88 <_dtoa_r+0xcc8>
    3044:	00801004 	movi	r2,64
    3048:	81010484 	addi	r4,r16,1042
    304c:	10c7c83a 	sub	r3,r2,r3
    3050:	9108d83a 	srl	r4,r18,r4
    3054:	88e2983a 	sll	r17,r17,r3
    3058:	2448b03a 	or	r4,r4,r17
    305c:	000cf700 	call	cf70 <__floatunsidf>
    3060:	017f8434 	movhi	r5,65040
    3064:	01800044 	movi	r6,1
    3068:	1009883a 	mov	r4,r2
    306c:	194b883a 	add	r5,r3,r5
    3070:	843fffc4 	addi	r16,r16,-1
    3074:	d9801115 	stw	r6,68(sp)
    3078:	000d883a 	mov	r6,zero
    307c:	01cffe34 	movhi	r7,16376
    3080:	000c5180 	call	c518 <__subdf3>
    3084:	0198dbf4 	movhi	r6,25455
    3088:	01cff4f4 	movhi	r7,16339
    308c:	3190d844 	addi	r6,r6,17249
    3090:	39e1e9c4 	addi	r7,r7,-30809
    3094:	1009883a 	mov	r4,r2
    3098:	180b883a 	mov	r5,r3
    309c:	000be000 	call	be00 <__muldf3>
    30a0:	01a2d874 	movhi	r6,35681
    30a4:	01cff1f4 	movhi	r7,16327
    30a8:	31b22cc4 	addi	r6,r6,-14157
    30ac:	39e28a04 	addi	r7,r7,-30168
    30b0:	180b883a 	mov	r5,r3
    30b4:	1009883a 	mov	r4,r2
    30b8:	000aa140 	call	aa14 <__adddf3>
    30bc:	8009883a 	mov	r4,r16
    30c0:	1029883a 	mov	r20,r2
    30c4:	1823883a 	mov	r17,r3
    30c8:	000ce940 	call	ce94 <__floatsidf>
    30cc:	019427f4 	movhi	r6,20639
    30d0:	01cff4f4 	movhi	r7,16339
    30d4:	319e7ec4 	addi	r6,r6,31227
    30d8:	39d104c4 	addi	r7,r7,17427
    30dc:	1009883a 	mov	r4,r2
    30e0:	180b883a 	mov	r5,r3
    30e4:	000be000 	call	be00 <__muldf3>
    30e8:	100d883a 	mov	r6,r2
    30ec:	180f883a 	mov	r7,r3
    30f0:	a009883a 	mov	r4,r20
    30f4:	880b883a 	mov	r5,r17
    30f8:	000aa140 	call	aa14 <__adddf3>
    30fc:	1009883a 	mov	r4,r2
    3100:	180b883a 	mov	r5,r3
    3104:	1029883a 	mov	r20,r2
    3108:	1823883a 	mov	r17,r3
    310c:	000ce140 	call	ce14 <__fixdfsi>
    3110:	000d883a 	mov	r6,zero
    3114:	000f883a 	mov	r7,zero
    3118:	a009883a 	mov	r4,r20
    311c:	880b883a 	mov	r5,r17
    3120:	d8800515 	stw	r2,20(sp)
    3124:	000bd0c0 	call	bd0c <__ledf2>
    3128:	10028716 	blt	r2,zero,3b48 <_dtoa_r+0xc88>
    312c:	d8c00517 	ldw	r3,20(sp)
    3130:	00800584 	movi	r2,22
    3134:	10c27536 	bltu	r2,r3,3b0c <_dtoa_r+0xc4c>
    3138:	180490fa 	slli	r2,r3,3
    313c:	00c00074 	movhi	r3,1
    3140:	18c58804 	addi	r3,r3,5664
    3144:	1885883a 	add	r2,r3,r2
    3148:	11000017 	ldw	r4,0(r2)
    314c:	11400117 	ldw	r5,4(r2)
    3150:	900d883a 	mov	r6,r18
    3154:	980f883a 	mov	r7,r19
    3158:	000bc300 	call	bc30 <__gedf2>
    315c:	00828d0e 	bge	zero,r2,3b94 <_dtoa_r+0xcd4>
    3160:	d9000517 	ldw	r4,20(sp)
    3164:	d8000e15 	stw	zero,56(sp)
    3168:	213fffc4 	addi	r4,r4,-1
    316c:	d9000515 	stw	r4,20(sp)
    3170:	b42dc83a 	sub	r22,r22,r16
    3174:	b5bfffc4 	addi	r22,r22,-1
    3178:	b0026f16 	blt	r22,zero,3b38 <_dtoa_r+0xc78>
    317c:	d8000815 	stw	zero,32(sp)
    3180:	d9c00517 	ldw	r7,20(sp)
    3184:	38026416 	blt	r7,zero,3b18 <_dtoa_r+0xc58>
    3188:	b1ed883a 	add	r22,r22,r7
    318c:	d9c00d15 	stw	r7,52(sp)
    3190:	d8000a15 	stw	zero,40(sp)
    3194:	d9800317 	ldw	r6,12(sp)
    3198:	00800244 	movi	r2,9
    319c:	11811436 	bltu	r2,r6,35f0 <_dtoa_r+0x730>
    31a0:	00800144 	movi	r2,5
    31a4:	1184e10e 	bge	r2,r6,452c <_dtoa_r+0x166c>
    31a8:	31bfff04 	addi	r6,r6,-4
    31ac:	d9800315 	stw	r6,12(sp)
    31b0:	0023883a 	mov	r17,zero
    31b4:	d9800317 	ldw	r6,12(sp)
    31b8:	008000c4 	movi	r2,3
    31bc:	30836726 	beq	r6,r2,3f5c <_dtoa_r+0x109c>
    31c0:	1183410e 	bge	r2,r6,3ec8 <_dtoa_r+0x1008>
    31c4:	d9c00317 	ldw	r7,12(sp)
    31c8:	00800104 	movi	r2,4
    31cc:	38827c26 	beq	r7,r2,3bc0 <_dtoa_r+0xd00>
    31d0:	00800144 	movi	r2,5
    31d4:	3884c41e 	bne	r7,r2,44e8 <_dtoa_r+0x1628>
    31d8:	00800044 	movi	r2,1
    31dc:	d8800b15 	stw	r2,44(sp)
    31e0:	d8c00517 	ldw	r3,20(sp)
    31e4:	d9002217 	ldw	r4,136(sp)
    31e8:	1907883a 	add	r3,r3,r4
    31ec:	19800044 	addi	r6,r3,1
    31f0:	d8c00c15 	stw	r3,48(sp)
    31f4:	d9800615 	stw	r6,24(sp)
    31f8:	0183a40e 	bge	zero,r6,408c <_dtoa_r+0x11cc>
    31fc:	d9800617 	ldw	r6,24(sp)
    3200:	3021883a 	mov	r16,r6
    3204:	e0001115 	stw	zero,68(fp)
    3208:	008005c4 	movi	r2,23
    320c:	1184c92e 	bgeu	r2,r6,4534 <_dtoa_r+0x1674>
    3210:	00c00044 	movi	r3,1
    3214:	00800104 	movi	r2,4
    3218:	1085883a 	add	r2,r2,r2
    321c:	11000504 	addi	r4,r2,20
    3220:	180b883a 	mov	r5,r3
    3224:	18c00044 	addi	r3,r3,1
    3228:	313ffb2e 	bgeu	r6,r4,3218 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003218>
    322c:	e1401115 	stw	r5,68(fp)
    3230:	e009883a 	mov	r4,fp
    3234:	0005f440 	call	5f44 <_Balloc>
    3238:	d8800715 	stw	r2,28(sp)
    323c:	e0801015 	stw	r2,64(fp)
    3240:	00800384 	movi	r2,14
    3244:	1400f736 	bltu	r2,r16,3624 <_dtoa_r+0x764>
    3248:	8800f626 	beq	r17,zero,3624 <_dtoa_r+0x764>
    324c:	d9c00517 	ldw	r7,20(sp)
    3250:	01c39a0e 	bge	zero,r7,40bc <_dtoa_r+0x11fc>
    3254:	388003cc 	andi	r2,r7,15
    3258:	100490fa 	slli	r2,r2,3
    325c:	382bd13a 	srai	r21,r7,4
    3260:	00c00074 	movhi	r3,1
    3264:	18c58804 	addi	r3,r3,5664
    3268:	1885883a 	add	r2,r3,r2
    326c:	a8c0040c 	andi	r3,r21,16
    3270:	12400017 	ldw	r9,0(r2)
    3274:	12000117 	ldw	r8,4(r2)
    3278:	18037926 	beq	r3,zero,4060 <_dtoa_r+0x11a0>
    327c:	00800074 	movhi	r2,1
    3280:	10857e04 	addi	r2,r2,5624
    3284:	11800817 	ldw	r6,32(r2)
    3288:	11c00917 	ldw	r7,36(r2)
    328c:	9009883a 	mov	r4,r18
    3290:	980b883a 	mov	r5,r19
    3294:	da001715 	stw	r8,92(sp)
    3298:	da401615 	stw	r9,88(sp)
    329c:	000b2c00 	call	b2c0 <__divdf3>
    32a0:	da001717 	ldw	r8,92(sp)
    32a4:	da401617 	ldw	r9,88(sp)
    32a8:	ad4003cc 	andi	r21,r21,15
    32ac:	040000c4 	movi	r16,3
    32b0:	1023883a 	mov	r17,r2
    32b4:	1829883a 	mov	r20,r3
    32b8:	a8001126 	beq	r21,zero,3300 <_dtoa_r+0x440>
    32bc:	05c00074 	movhi	r23,1
    32c0:	bdc57e04 	addi	r23,r23,5624
    32c4:	4805883a 	mov	r2,r9
    32c8:	4007883a 	mov	r3,r8
    32cc:	a980004c 	andi	r6,r21,1
    32d0:	1009883a 	mov	r4,r2
    32d4:	a82bd07a 	srai	r21,r21,1
    32d8:	180b883a 	mov	r5,r3
    32dc:	30000426 	beq	r6,zero,32f0 <_dtoa_r+0x430>
    32e0:	b9800017 	ldw	r6,0(r23)
    32e4:	b9c00117 	ldw	r7,4(r23)
    32e8:	84000044 	addi	r16,r16,1
    32ec:	000be000 	call	be00 <__muldf3>
    32f0:	bdc00204 	addi	r23,r23,8
    32f4:	a83ff51e 	bne	r21,zero,32cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70032cc>
    32f8:	1013883a 	mov	r9,r2
    32fc:	1811883a 	mov	r8,r3
    3300:	480d883a 	mov	r6,r9
    3304:	400f883a 	mov	r7,r8
    3308:	8809883a 	mov	r4,r17
    330c:	a00b883a 	mov	r5,r20
    3310:	000b2c00 	call	b2c0 <__divdf3>
    3314:	d8800f15 	stw	r2,60(sp)
    3318:	d8c01015 	stw	r3,64(sp)
    331c:	d8c00e17 	ldw	r3,56(sp)
    3320:	18000626 	beq	r3,zero,333c <_dtoa_r+0x47c>
    3324:	d9000f17 	ldw	r4,60(sp)
    3328:	d9401017 	ldw	r5,64(sp)
    332c:	000d883a 	mov	r6,zero
    3330:	01cffc34 	movhi	r7,16368
    3334:	000bd0c0 	call	bd0c <__ledf2>
    3338:	10040b16 	blt	r2,zero,4368 <_dtoa_r+0x14a8>
    333c:	8009883a 	mov	r4,r16
    3340:	000ce940 	call	ce94 <__floatsidf>
    3344:	d9800f17 	ldw	r6,60(sp)
    3348:	d9c01017 	ldw	r7,64(sp)
    334c:	1009883a 	mov	r4,r2
    3350:	180b883a 	mov	r5,r3
    3354:	000be000 	call	be00 <__muldf3>
    3358:	000d883a 	mov	r6,zero
    335c:	01d00734 	movhi	r7,16412
    3360:	1009883a 	mov	r4,r2
    3364:	180b883a 	mov	r5,r3
    3368:	000aa140 	call	aa14 <__adddf3>
    336c:	1021883a 	mov	r16,r2
    3370:	d8800617 	ldw	r2,24(sp)
    3374:	047f3034 	movhi	r17,64704
    3378:	1c63883a 	add	r17,r3,r17
    337c:	10031826 	beq	r2,zero,3fe0 <_dtoa_r+0x1120>
    3380:	d8c00517 	ldw	r3,20(sp)
    3384:	db000617 	ldw	r12,24(sp)
    3388:	d8c01315 	stw	r3,76(sp)
    338c:	d9000b17 	ldw	r4,44(sp)
    3390:	20038f26 	beq	r4,zero,41d0 <_dtoa_r+0x1310>
    3394:	60bfffc4 	addi	r2,r12,-1
    3398:	100490fa 	slli	r2,r2,3
    339c:	00c00074 	movhi	r3,1
    33a0:	18c58804 	addi	r3,r3,5664
    33a4:	1885883a 	add	r2,r3,r2
    33a8:	11800017 	ldw	r6,0(r2)
    33ac:	11c00117 	ldw	r7,4(r2)
    33b0:	d8800717 	ldw	r2,28(sp)
    33b4:	0009883a 	mov	r4,zero
    33b8:	014ff834 	movhi	r5,16352
    33bc:	db001615 	stw	r12,88(sp)
    33c0:	15c00044 	addi	r23,r2,1
    33c4:	000b2c00 	call	b2c0 <__divdf3>
    33c8:	800d883a 	mov	r6,r16
    33cc:	880f883a 	mov	r7,r17
    33d0:	1009883a 	mov	r4,r2
    33d4:	180b883a 	mov	r5,r3
    33d8:	000c5180 	call	c518 <__subdf3>
    33dc:	d9401017 	ldw	r5,64(sp)
    33e0:	d9000f17 	ldw	r4,60(sp)
    33e4:	102b883a 	mov	r21,r2
    33e8:	d8c01215 	stw	r3,72(sp)
    33ec:	000ce140 	call	ce14 <__fixdfsi>
    33f0:	1009883a 	mov	r4,r2
    33f4:	1029883a 	mov	r20,r2
    33f8:	000ce940 	call	ce94 <__floatsidf>
    33fc:	d9000f17 	ldw	r4,60(sp)
    3400:	d9401017 	ldw	r5,64(sp)
    3404:	100d883a 	mov	r6,r2
    3408:	180f883a 	mov	r7,r3
    340c:	000c5180 	call	c518 <__subdf3>
    3410:	1823883a 	mov	r17,r3
    3414:	d8c00717 	ldw	r3,28(sp)
    3418:	d9401217 	ldw	r5,72(sp)
    341c:	a2000c04 	addi	r8,r20,48
    3420:	1021883a 	mov	r16,r2
    3424:	1a000005 	stb	r8,0(r3)
    3428:	800d883a 	mov	r6,r16
    342c:	880f883a 	mov	r7,r17
    3430:	a809883a 	mov	r4,r21
    3434:	4029883a 	mov	r20,r8
    3438:	000bc300 	call	bc30 <__gedf2>
    343c:	00841d16 	blt	zero,r2,44b4 <_dtoa_r+0x15f4>
    3440:	800d883a 	mov	r6,r16
    3444:	880f883a 	mov	r7,r17
    3448:	0009883a 	mov	r4,zero
    344c:	014ffc34 	movhi	r5,16368
    3450:	000c5180 	call	c518 <__subdf3>
    3454:	d9401217 	ldw	r5,72(sp)
    3458:	100d883a 	mov	r6,r2
    345c:	180f883a 	mov	r7,r3
    3460:	a809883a 	mov	r4,r21
    3464:	000bc300 	call	bc30 <__gedf2>
    3468:	db001617 	ldw	r12,88(sp)
    346c:	00840e16 	blt	zero,r2,44a8 <_dtoa_r+0x15e8>
    3470:	00800044 	movi	r2,1
    3474:	13006b0e 	bge	r2,r12,3624 <_dtoa_r+0x764>
    3478:	d9000717 	ldw	r4,28(sp)
    347c:	dd800f15 	stw	r22,60(sp)
    3480:	dcc01015 	stw	r19,64(sp)
    3484:	2319883a 	add	r12,r4,r12
    3488:	dcc01217 	ldw	r19,72(sp)
    348c:	602d883a 	mov	r22,r12
    3490:	dc801215 	stw	r18,72(sp)
    3494:	b825883a 	mov	r18,r23
    3498:	00000906 	br	34c0 <_dtoa_r+0x600>
    349c:	000c5180 	call	c518 <__subdf3>
    34a0:	a80d883a 	mov	r6,r21
    34a4:	980f883a 	mov	r7,r19
    34a8:	1009883a 	mov	r4,r2
    34ac:	180b883a 	mov	r5,r3
    34b0:	000bd0c0 	call	bd0c <__ledf2>
    34b4:	1003e816 	blt	r2,zero,4458 <_dtoa_r+0x1598>
    34b8:	b825883a 	mov	r18,r23
    34bc:	bd83e926 	beq	r23,r22,4464 <_dtoa_r+0x15a4>
    34c0:	a809883a 	mov	r4,r21
    34c4:	980b883a 	mov	r5,r19
    34c8:	000d883a 	mov	r6,zero
    34cc:	01d00934 	movhi	r7,16420
    34d0:	000be000 	call	be00 <__muldf3>
    34d4:	000d883a 	mov	r6,zero
    34d8:	01d00934 	movhi	r7,16420
    34dc:	8009883a 	mov	r4,r16
    34e0:	880b883a 	mov	r5,r17
    34e4:	102b883a 	mov	r21,r2
    34e8:	1827883a 	mov	r19,r3
    34ec:	000be000 	call	be00 <__muldf3>
    34f0:	180b883a 	mov	r5,r3
    34f4:	1009883a 	mov	r4,r2
    34f8:	1821883a 	mov	r16,r3
    34fc:	1023883a 	mov	r17,r2
    3500:	000ce140 	call	ce14 <__fixdfsi>
    3504:	1009883a 	mov	r4,r2
    3508:	1029883a 	mov	r20,r2
    350c:	000ce940 	call	ce94 <__floatsidf>
    3510:	8809883a 	mov	r4,r17
    3514:	800b883a 	mov	r5,r16
    3518:	100d883a 	mov	r6,r2
    351c:	180f883a 	mov	r7,r3
    3520:	000c5180 	call	c518 <__subdf3>
    3524:	a5000c04 	addi	r20,r20,48
    3528:	a80d883a 	mov	r6,r21
    352c:	980f883a 	mov	r7,r19
    3530:	1009883a 	mov	r4,r2
    3534:	180b883a 	mov	r5,r3
    3538:	95000005 	stb	r20,0(r18)
    353c:	1021883a 	mov	r16,r2
    3540:	1823883a 	mov	r17,r3
    3544:	000bd0c0 	call	bd0c <__ledf2>
    3548:	bdc00044 	addi	r23,r23,1
    354c:	800d883a 	mov	r6,r16
    3550:	880f883a 	mov	r7,r17
    3554:	0009883a 	mov	r4,zero
    3558:	014ffc34 	movhi	r5,16368
    355c:	103fcf0e 	bge	r2,zero,349c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700349c>
    3560:	d8c01317 	ldw	r3,76(sp)
    3564:	d8c00515 	stw	r3,20(sp)
    3568:	d9400917 	ldw	r5,36(sp)
    356c:	e009883a 	mov	r4,fp
    3570:	0005fec0 	call	5fec <_Bfree>
    3574:	d9000517 	ldw	r4,20(sp)
    3578:	d9802317 	ldw	r6,140(sp)
    357c:	d9c02517 	ldw	r7,148(sp)
    3580:	b8000005 	stb	zero,0(r23)
    3584:	20800044 	addi	r2,r4,1
    3588:	30800015 	stw	r2,0(r6)
    358c:	3802aa26 	beq	r7,zero,4038 <_dtoa_r+0x1178>
    3590:	3dc00015 	stw	r23,0(r7)
    3594:	d8800717 	ldw	r2,28(sp)
    3598:	003e7906 	br	2f80 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002f80>
    359c:	00800434 	movhi	r2,16
    35a0:	10bfffc4 	addi	r2,r2,-1
    35a4:	88a2703a 	and	r17,r17,r2
    35a8:	883e851e 	bne	r17,zero,2fc0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002fc0>
    35ac:	00800074 	movhi	r2,1
    35b0:	10856904 	addi	r2,r2,5540
    35b4:	003e8406 	br	2fc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002fc8>
    35b8:	10c00204 	addi	r3,r2,8
    35bc:	003e8706 	br	2fdc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002fdc>
    35c0:	01400434 	movhi	r5,16
    35c4:	297fffc4 	addi	r5,r5,-1
    35c8:	994a703a 	and	r5,r19,r5
    35cc:	9009883a 	mov	r4,r18
    35d0:	843f0044 	addi	r16,r16,-1023
    35d4:	294ffc34 	orhi	r5,r5,16368
    35d8:	dd800217 	ldw	r22,8(sp)
    35dc:	d8001115 	stw	zero,68(sp)
    35e0:	003ea506 	br	3078 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003078>
    35e4:	00800074 	movhi	r2,1
    35e8:	10856004 	addi	r2,r2,5504
    35ec:	003e6406 	br	2f80 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002f80>
    35f0:	e0001115 	stw	zero,68(fp)
    35f4:	000b883a 	mov	r5,zero
    35f8:	e009883a 	mov	r4,fp
    35fc:	0005f440 	call	5f44 <_Balloc>
    3600:	01bfffc4 	movi	r6,-1
    3604:	01c00044 	movi	r7,1
    3608:	d8800715 	stw	r2,28(sp)
    360c:	d9800c15 	stw	r6,48(sp)
    3610:	e0801015 	stw	r2,64(fp)
    3614:	d8000315 	stw	zero,12(sp)
    3618:	d9c00b15 	stw	r7,44(sp)
    361c:	d9800615 	stw	r6,24(sp)
    3620:	d8002215 	stw	zero,136(sp)
    3624:	d8800117 	ldw	r2,4(sp)
    3628:	10008916 	blt	r2,zero,3850 <_dtoa_r+0x990>
    362c:	d9000517 	ldw	r4,20(sp)
    3630:	00c00384 	movi	r3,14
    3634:	19008616 	blt	r3,r4,3850 <_dtoa_r+0x990>
    3638:	200490fa 	slli	r2,r4,3
    363c:	00c00074 	movhi	r3,1
    3640:	d9802217 	ldw	r6,136(sp)
    3644:	18c58804 	addi	r3,r3,5664
    3648:	1885883a 	add	r2,r3,r2
    364c:	14000017 	ldw	r16,0(r2)
    3650:	14400117 	ldw	r17,4(r2)
    3654:	30016316 	blt	r6,zero,3be4 <_dtoa_r+0xd24>
    3658:	800d883a 	mov	r6,r16
    365c:	880f883a 	mov	r7,r17
    3660:	9009883a 	mov	r4,r18
    3664:	980b883a 	mov	r5,r19
    3668:	000b2c00 	call	b2c0 <__divdf3>
    366c:	180b883a 	mov	r5,r3
    3670:	1009883a 	mov	r4,r2
    3674:	000ce140 	call	ce14 <__fixdfsi>
    3678:	1009883a 	mov	r4,r2
    367c:	102b883a 	mov	r21,r2
    3680:	000ce940 	call	ce94 <__floatsidf>
    3684:	800d883a 	mov	r6,r16
    3688:	880f883a 	mov	r7,r17
    368c:	1009883a 	mov	r4,r2
    3690:	180b883a 	mov	r5,r3
    3694:	000be000 	call	be00 <__muldf3>
    3698:	100d883a 	mov	r6,r2
    369c:	180f883a 	mov	r7,r3
    36a0:	9009883a 	mov	r4,r18
    36a4:	980b883a 	mov	r5,r19
    36a8:	000c5180 	call	c518 <__subdf3>
    36ac:	d9c00717 	ldw	r7,28(sp)
    36b0:	1009883a 	mov	r4,r2
    36b4:	a8800c04 	addi	r2,r21,48
    36b8:	38800005 	stb	r2,0(r7)
    36bc:	3dc00044 	addi	r23,r7,1
    36c0:	d9c00617 	ldw	r7,24(sp)
    36c4:	01800044 	movi	r6,1
    36c8:	180b883a 	mov	r5,r3
    36cc:	2005883a 	mov	r2,r4
    36d0:	39803826 	beq	r7,r6,37b4 <_dtoa_r+0x8f4>
    36d4:	000d883a 	mov	r6,zero
    36d8:	01d00934 	movhi	r7,16420
    36dc:	000be000 	call	be00 <__muldf3>
    36e0:	000d883a 	mov	r6,zero
    36e4:	000f883a 	mov	r7,zero
    36e8:	1009883a 	mov	r4,r2
    36ec:	180b883a 	mov	r5,r3
    36f0:	1025883a 	mov	r18,r2
    36f4:	1827883a 	mov	r19,r3
    36f8:	000bba80 	call	bba8 <__eqdf2>
    36fc:	103f9a26 	beq	r2,zero,3568 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003568>
    3700:	d9c00617 	ldw	r7,24(sp)
    3704:	d8c00717 	ldw	r3,28(sp)
    3708:	b829883a 	mov	r20,r23
    370c:	38bfffc4 	addi	r2,r7,-1
    3710:	18ad883a 	add	r22,r3,r2
    3714:	00000a06 	br	3740 <_dtoa_r+0x880>
    3718:	000be000 	call	be00 <__muldf3>
    371c:	000d883a 	mov	r6,zero
    3720:	000f883a 	mov	r7,zero
    3724:	1009883a 	mov	r4,r2
    3728:	180b883a 	mov	r5,r3
    372c:	1025883a 	mov	r18,r2
    3730:	1827883a 	mov	r19,r3
    3734:	b829883a 	mov	r20,r23
    3738:	000bba80 	call	bba8 <__eqdf2>
    373c:	103f8a26 	beq	r2,zero,3568 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003568>
    3740:	800d883a 	mov	r6,r16
    3744:	880f883a 	mov	r7,r17
    3748:	9009883a 	mov	r4,r18
    374c:	980b883a 	mov	r5,r19
    3750:	000b2c00 	call	b2c0 <__divdf3>
    3754:	180b883a 	mov	r5,r3
    3758:	1009883a 	mov	r4,r2
    375c:	000ce140 	call	ce14 <__fixdfsi>
    3760:	1009883a 	mov	r4,r2
    3764:	102b883a 	mov	r21,r2
    3768:	000ce940 	call	ce94 <__floatsidf>
    376c:	800d883a 	mov	r6,r16
    3770:	880f883a 	mov	r7,r17
    3774:	1009883a 	mov	r4,r2
    3778:	180b883a 	mov	r5,r3
    377c:	000be000 	call	be00 <__muldf3>
    3780:	100d883a 	mov	r6,r2
    3784:	180f883a 	mov	r7,r3
    3788:	9009883a 	mov	r4,r18
    378c:	980b883a 	mov	r5,r19
    3790:	000c5180 	call	c518 <__subdf3>
    3794:	aa000c04 	addi	r8,r21,48
    3798:	a2000005 	stb	r8,0(r20)
    379c:	000d883a 	mov	r6,zero
    37a0:	01d00934 	movhi	r7,16420
    37a4:	1009883a 	mov	r4,r2
    37a8:	180b883a 	mov	r5,r3
    37ac:	a5c00044 	addi	r23,r20,1
    37b0:	b53fd91e 	bne	r22,r20,3718 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003718>
    37b4:	100d883a 	mov	r6,r2
    37b8:	180f883a 	mov	r7,r3
    37bc:	1009883a 	mov	r4,r2
    37c0:	180b883a 	mov	r5,r3
    37c4:	000aa140 	call	aa14 <__adddf3>
    37c8:	100d883a 	mov	r6,r2
    37cc:	180f883a 	mov	r7,r3
    37d0:	8009883a 	mov	r4,r16
    37d4:	880b883a 	mov	r5,r17
    37d8:	1027883a 	mov	r19,r2
    37dc:	1825883a 	mov	r18,r3
    37e0:	000bd0c0 	call	bd0c <__ledf2>
    37e4:	10000816 	blt	r2,zero,3808 <_dtoa_r+0x948>
    37e8:	980d883a 	mov	r6,r19
    37ec:	900f883a 	mov	r7,r18
    37f0:	8009883a 	mov	r4,r16
    37f4:	880b883a 	mov	r5,r17
    37f8:	000bba80 	call	bba8 <__eqdf2>
    37fc:	103f5a1e 	bne	r2,zero,3568 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003568>
    3800:	ad40004c 	andi	r21,r21,1
    3804:	a83f5826 	beq	r21,zero,3568 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003568>
    3808:	bd3fffc3 	ldbu	r20,-1(r23)
    380c:	b8bfffc4 	addi	r2,r23,-1
    3810:	1007883a 	mov	r3,r2
    3814:	01400e44 	movi	r5,57
    3818:	d9800717 	ldw	r6,28(sp)
    381c:	00000506 	br	3834 <_dtoa_r+0x974>
    3820:	18ffffc4 	addi	r3,r3,-1
    3824:	11824726 	beq	r2,r6,4144 <_dtoa_r+0x1284>
    3828:	1d000003 	ldbu	r20,0(r3)
    382c:	102f883a 	mov	r23,r2
    3830:	10bfffc4 	addi	r2,r2,-1
    3834:	a1003fcc 	andi	r4,r20,255
    3838:	2100201c 	xori	r4,r4,128
    383c:	213fe004 	addi	r4,r4,-128
    3840:	217ff726 	beq	r4,r5,3820 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003820>
    3844:	a2000044 	addi	r8,r20,1
    3848:	12000005 	stb	r8,0(r2)
    384c:	003f4606 	br	3568 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003568>
    3850:	d9000b17 	ldw	r4,44(sp)
    3854:	2000c826 	beq	r4,zero,3b78 <_dtoa_r+0xcb8>
    3858:	d9800317 	ldw	r6,12(sp)
    385c:	00c00044 	movi	r3,1
    3860:	1980f90e 	bge	r3,r6,3c48 <_dtoa_r+0xd88>
    3864:	d8800617 	ldw	r2,24(sp)
    3868:	d8c00a17 	ldw	r3,40(sp)
    386c:	157fffc4 	addi	r21,r2,-1
    3870:	1d41f316 	blt	r3,r21,4040 <_dtoa_r+0x1180>
    3874:	1d6bc83a 	sub	r21,r3,r21
    3878:	d9c00617 	ldw	r7,24(sp)
    387c:	3802aa16 	blt	r7,zero,4328 <_dtoa_r+0x1468>
    3880:	dd000817 	ldw	r20,32(sp)
    3884:	d8800617 	ldw	r2,24(sp)
    3888:	d8c00817 	ldw	r3,32(sp)
    388c:	01400044 	movi	r5,1
    3890:	e009883a 	mov	r4,fp
    3894:	1887883a 	add	r3,r3,r2
    3898:	d8c00815 	stw	r3,32(sp)
    389c:	b0ad883a 	add	r22,r22,r2
    38a0:	00063500 	call	6350 <__i2b>
    38a4:	1023883a 	mov	r17,r2
    38a8:	a0000826 	beq	r20,zero,38cc <_dtoa_r+0xa0c>
    38ac:	0580070e 	bge	zero,r22,38cc <_dtoa_r+0xa0c>
    38b0:	a005883a 	mov	r2,r20
    38b4:	b500b916 	blt	r22,r20,3b9c <_dtoa_r+0xcdc>
    38b8:	d9000817 	ldw	r4,32(sp)
    38bc:	a0a9c83a 	sub	r20,r20,r2
    38c0:	b0adc83a 	sub	r22,r22,r2
    38c4:	2089c83a 	sub	r4,r4,r2
    38c8:	d9000815 	stw	r4,32(sp)
    38cc:	d9800a17 	ldw	r6,40(sp)
    38d0:	0181810e 	bge	zero,r6,3ed8 <_dtoa_r+0x1018>
    38d4:	d9c00b17 	ldw	r7,44(sp)
    38d8:	3800b326 	beq	r7,zero,3ba8 <_dtoa_r+0xce8>
    38dc:	a800b226 	beq	r21,zero,3ba8 <_dtoa_r+0xce8>
    38e0:	880b883a 	mov	r5,r17
    38e4:	a80d883a 	mov	r6,r21
    38e8:	e009883a 	mov	r4,fp
    38ec:	00065840 	call	6584 <__pow5mult>
    38f0:	d9800917 	ldw	r6,36(sp)
    38f4:	100b883a 	mov	r5,r2
    38f8:	e009883a 	mov	r4,fp
    38fc:	1023883a 	mov	r17,r2
    3900:	000638c0 	call	638c <__multiply>
    3904:	1021883a 	mov	r16,r2
    3908:	d8800a17 	ldw	r2,40(sp)
    390c:	d9400917 	ldw	r5,36(sp)
    3910:	e009883a 	mov	r4,fp
    3914:	1545c83a 	sub	r2,r2,r21
    3918:	d8800a15 	stw	r2,40(sp)
    391c:	0005fec0 	call	5fec <_Bfree>
    3920:	d8c00a17 	ldw	r3,40(sp)
    3924:	18009f1e 	bne	r3,zero,3ba4 <_dtoa_r+0xce4>
    3928:	05c00044 	movi	r23,1
    392c:	e009883a 	mov	r4,fp
    3930:	b80b883a 	mov	r5,r23
    3934:	00063500 	call	6350 <__i2b>
    3938:	d9000d17 	ldw	r4,52(sp)
    393c:	102b883a 	mov	r21,r2
    3940:	2000ce26 	beq	r4,zero,3c7c <_dtoa_r+0xdbc>
    3944:	200d883a 	mov	r6,r4
    3948:	100b883a 	mov	r5,r2
    394c:	e009883a 	mov	r4,fp
    3950:	00065840 	call	6584 <__pow5mult>
    3954:	d9800317 	ldw	r6,12(sp)
    3958:	102b883a 	mov	r21,r2
    395c:	b981810e 	bge	r23,r6,3f64 <_dtoa_r+0x10a4>
    3960:	0027883a 	mov	r19,zero
    3964:	a8800417 	ldw	r2,16(r21)
    3968:	05c00804 	movi	r23,32
    396c:	10800104 	addi	r2,r2,4
    3970:	1085883a 	add	r2,r2,r2
    3974:	1085883a 	add	r2,r2,r2
    3978:	a885883a 	add	r2,r21,r2
    397c:	11000017 	ldw	r4,0(r2)
    3980:	00062380 	call	6238 <__hi0bits>
    3984:	b885c83a 	sub	r2,r23,r2
    3988:	1585883a 	add	r2,r2,r22
    398c:	108007cc 	andi	r2,r2,31
    3990:	1000b326 	beq	r2,zero,3c60 <_dtoa_r+0xda0>
    3994:	00c00804 	movi	r3,32
    3998:	1887c83a 	sub	r3,r3,r2
    399c:	01000104 	movi	r4,4
    39a0:	20c2cd0e 	bge	r4,r3,44d8 <_dtoa_r+0x1618>
    39a4:	00c00704 	movi	r3,28
    39a8:	1885c83a 	sub	r2,r3,r2
    39ac:	d8c00817 	ldw	r3,32(sp)
    39b0:	a0a9883a 	add	r20,r20,r2
    39b4:	b0ad883a 	add	r22,r22,r2
    39b8:	1887883a 	add	r3,r3,r2
    39bc:	d8c00815 	stw	r3,32(sp)
    39c0:	d9800817 	ldw	r6,32(sp)
    39c4:	0180040e 	bge	zero,r6,39d8 <_dtoa_r+0xb18>
    39c8:	800b883a 	mov	r5,r16
    39cc:	e009883a 	mov	r4,fp
    39d0:	00066c40 	call	66c4 <__lshift>
    39d4:	1021883a 	mov	r16,r2
    39d8:	0580050e 	bge	zero,r22,39f0 <_dtoa_r+0xb30>
    39dc:	a80b883a 	mov	r5,r21
    39e0:	b00d883a 	mov	r6,r22
    39e4:	e009883a 	mov	r4,fp
    39e8:	00066c40 	call	66c4 <__lshift>
    39ec:	102b883a 	mov	r21,r2
    39f0:	d9c00e17 	ldw	r7,56(sp)
    39f4:	3801211e 	bne	r7,zero,3e7c <_dtoa_r+0xfbc>
    39f8:	d9800617 	ldw	r6,24(sp)
    39fc:	0181380e 	bge	zero,r6,3ee0 <_dtoa_r+0x1020>
    3a00:	d8c00b17 	ldw	r3,44(sp)
    3a04:	1800ab1e 	bne	r3,zero,3cb4 <_dtoa_r+0xdf4>
    3a08:	dc800717 	ldw	r18,28(sp)
    3a0c:	dcc00617 	ldw	r19,24(sp)
    3a10:	9029883a 	mov	r20,r18
    3a14:	00000206 	br	3a20 <_dtoa_r+0xb60>
    3a18:	00060140 	call	6014 <__multadd>
    3a1c:	1021883a 	mov	r16,r2
    3a20:	a80b883a 	mov	r5,r21
    3a24:	8009883a 	mov	r4,r16
    3a28:	0002cc00 	call	2cc0 <quorem>
    3a2c:	10800c04 	addi	r2,r2,48
    3a30:	90800005 	stb	r2,0(r18)
    3a34:	94800044 	addi	r18,r18,1
    3a38:	9507c83a 	sub	r3,r18,r20
    3a3c:	000f883a 	mov	r7,zero
    3a40:	01800284 	movi	r6,10
    3a44:	800b883a 	mov	r5,r16
    3a48:	e009883a 	mov	r4,fp
    3a4c:	1cfff216 	blt	r3,r19,3a18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a18>
    3a50:	1011883a 	mov	r8,r2
    3a54:	d8800617 	ldw	r2,24(sp)
    3a58:	0082370e 	bge	zero,r2,4338 <_dtoa_r+0x1478>
    3a5c:	d9000717 	ldw	r4,28(sp)
    3a60:	0025883a 	mov	r18,zero
    3a64:	20af883a 	add	r23,r4,r2
    3a68:	01800044 	movi	r6,1
    3a6c:	800b883a 	mov	r5,r16
    3a70:	e009883a 	mov	r4,fp
    3a74:	da001715 	stw	r8,92(sp)
    3a78:	00066c40 	call	66c4 <__lshift>
    3a7c:	a80b883a 	mov	r5,r21
    3a80:	1009883a 	mov	r4,r2
    3a84:	d8800915 	stw	r2,36(sp)
    3a88:	000680c0 	call	680c <__mcmp>
    3a8c:	da001717 	ldw	r8,92(sp)
    3a90:	0081800e 	bge	zero,r2,4094 <_dtoa_r+0x11d4>
    3a94:	b93fffc3 	ldbu	r4,-1(r23)
    3a98:	b8bfffc4 	addi	r2,r23,-1
    3a9c:	1007883a 	mov	r3,r2
    3aa0:	01800e44 	movi	r6,57
    3aa4:	d9c00717 	ldw	r7,28(sp)
    3aa8:	00000506 	br	3ac0 <_dtoa_r+0xc00>
    3aac:	18ffffc4 	addi	r3,r3,-1
    3ab0:	11c12326 	beq	r2,r7,3f40 <_dtoa_r+0x1080>
    3ab4:	19000003 	ldbu	r4,0(r3)
    3ab8:	102f883a 	mov	r23,r2
    3abc:	10bfffc4 	addi	r2,r2,-1
    3ac0:	21403fcc 	andi	r5,r4,255
    3ac4:	2940201c 	xori	r5,r5,128
    3ac8:	297fe004 	addi	r5,r5,-128
    3acc:	29bff726 	beq	r5,r6,3aac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003aac>
    3ad0:	21000044 	addi	r4,r4,1
    3ad4:	11000005 	stb	r4,0(r2)
    3ad8:	a80b883a 	mov	r5,r21
    3adc:	e009883a 	mov	r4,fp
    3ae0:	0005fec0 	call	5fec <_Bfree>
    3ae4:	883ea026 	beq	r17,zero,3568 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003568>
    3ae8:	90000426 	beq	r18,zero,3afc <_dtoa_r+0xc3c>
    3aec:	94400326 	beq	r18,r17,3afc <_dtoa_r+0xc3c>
    3af0:	900b883a 	mov	r5,r18
    3af4:	e009883a 	mov	r4,fp
    3af8:	0005fec0 	call	5fec <_Bfree>
    3afc:	880b883a 	mov	r5,r17
    3b00:	e009883a 	mov	r4,fp
    3b04:	0005fec0 	call	5fec <_Bfree>
    3b08:	003e9706 	br	3568 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003568>
    3b0c:	01800044 	movi	r6,1
    3b10:	d9800e15 	stw	r6,56(sp)
    3b14:	003d9606 	br	3170 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003170>
    3b18:	d8800817 	ldw	r2,32(sp)
    3b1c:	d8c00517 	ldw	r3,20(sp)
    3b20:	d8000d15 	stw	zero,52(sp)
    3b24:	10c5c83a 	sub	r2,r2,r3
    3b28:	00c9c83a 	sub	r4,zero,r3
    3b2c:	d8800815 	stw	r2,32(sp)
    3b30:	d9000a15 	stw	r4,40(sp)
    3b34:	003d9706 	br	3194 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003194>
    3b38:	05adc83a 	sub	r22,zero,r22
    3b3c:	dd800815 	stw	r22,32(sp)
    3b40:	002d883a 	mov	r22,zero
    3b44:	003d8e06 	br	3180 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003180>
    3b48:	d9000517 	ldw	r4,20(sp)
    3b4c:	000ce940 	call	ce94 <__floatsidf>
    3b50:	100d883a 	mov	r6,r2
    3b54:	180f883a 	mov	r7,r3
    3b58:	a009883a 	mov	r4,r20
    3b5c:	880b883a 	mov	r5,r17
    3b60:	000bba80 	call	bba8 <__eqdf2>
    3b64:	103d7126 	beq	r2,zero,312c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700312c>
    3b68:	d9c00517 	ldw	r7,20(sp)
    3b6c:	39ffffc4 	addi	r7,r7,-1
    3b70:	d9c00515 	stw	r7,20(sp)
    3b74:	003d6d06 	br	312c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700312c>
    3b78:	dd400a17 	ldw	r21,40(sp)
    3b7c:	dd000817 	ldw	r20,32(sp)
    3b80:	0023883a 	mov	r17,zero
    3b84:	003f4806 	br	38a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70038a8>
    3b88:	10e3c83a 	sub	r17,r2,r3
    3b8c:	9448983a 	sll	r4,r18,r17
    3b90:	003d3206 	br	305c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700305c>
    3b94:	d8000e15 	stw	zero,56(sp)
    3b98:	003d7506 	br	3170 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003170>
    3b9c:	b005883a 	mov	r2,r22
    3ba0:	003f4506 	br	38b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70038b8>
    3ba4:	dc000915 	stw	r16,36(sp)
    3ba8:	d9800a17 	ldw	r6,40(sp)
    3bac:	d9400917 	ldw	r5,36(sp)
    3bb0:	e009883a 	mov	r4,fp
    3bb4:	00065840 	call	6584 <__pow5mult>
    3bb8:	1021883a 	mov	r16,r2
    3bbc:	003f5a06 	br	3928 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003928>
    3bc0:	01c00044 	movi	r7,1
    3bc4:	d9c00b15 	stw	r7,44(sp)
    3bc8:	d8802217 	ldw	r2,136(sp)
    3bcc:	0081280e 	bge	zero,r2,4070 <_dtoa_r+0x11b0>
    3bd0:	100d883a 	mov	r6,r2
    3bd4:	1021883a 	mov	r16,r2
    3bd8:	d8800c15 	stw	r2,48(sp)
    3bdc:	d8800615 	stw	r2,24(sp)
    3be0:	003d8806 	br	3204 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003204>
    3be4:	d8800617 	ldw	r2,24(sp)
    3be8:	00be9b16 	blt	zero,r2,3658 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003658>
    3bec:	10010f1e 	bne	r2,zero,402c <_dtoa_r+0x116c>
    3bf0:	880b883a 	mov	r5,r17
    3bf4:	000d883a 	mov	r6,zero
    3bf8:	01d00534 	movhi	r7,16404
    3bfc:	8009883a 	mov	r4,r16
    3c00:	000be000 	call	be00 <__muldf3>
    3c04:	900d883a 	mov	r6,r18
    3c08:	980f883a 	mov	r7,r19
    3c0c:	1009883a 	mov	r4,r2
    3c10:	180b883a 	mov	r5,r3
    3c14:	000bc300 	call	bc30 <__gedf2>
    3c18:	002b883a 	mov	r21,zero
    3c1c:	0023883a 	mov	r17,zero
    3c20:	1000bf16 	blt	r2,zero,3f20 <_dtoa_r+0x1060>
    3c24:	d9802217 	ldw	r6,136(sp)
    3c28:	ddc00717 	ldw	r23,28(sp)
    3c2c:	018c303a 	nor	r6,zero,r6
    3c30:	d9800515 	stw	r6,20(sp)
    3c34:	a80b883a 	mov	r5,r21
    3c38:	e009883a 	mov	r4,fp
    3c3c:	0005fec0 	call	5fec <_Bfree>
    3c40:	883e4926 	beq	r17,zero,3568 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003568>
    3c44:	003fad06 	br	3afc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003afc>
    3c48:	d9c01117 	ldw	r7,68(sp)
    3c4c:	3801bc26 	beq	r7,zero,4340 <_dtoa_r+0x1480>
    3c50:	10810cc4 	addi	r2,r2,1075
    3c54:	dd400a17 	ldw	r21,40(sp)
    3c58:	dd000817 	ldw	r20,32(sp)
    3c5c:	003f0a06 	br	3888 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003888>
    3c60:	00800704 	movi	r2,28
    3c64:	d9000817 	ldw	r4,32(sp)
    3c68:	a0a9883a 	add	r20,r20,r2
    3c6c:	b0ad883a 	add	r22,r22,r2
    3c70:	2089883a 	add	r4,r4,r2
    3c74:	d9000815 	stw	r4,32(sp)
    3c78:	003f5106 	br	39c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70039c0>
    3c7c:	d8c00317 	ldw	r3,12(sp)
    3c80:	b8c1fc0e 	bge	r23,r3,4474 <_dtoa_r+0x15b4>
    3c84:	0027883a 	mov	r19,zero
    3c88:	b805883a 	mov	r2,r23
    3c8c:	003f3e06 	br	3988 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003988>
    3c90:	880b883a 	mov	r5,r17
    3c94:	e009883a 	mov	r4,fp
    3c98:	000f883a 	mov	r7,zero
    3c9c:	01800284 	movi	r6,10
    3ca0:	00060140 	call	6014 <__multadd>
    3ca4:	d9000c17 	ldw	r4,48(sp)
    3ca8:	1023883a 	mov	r17,r2
    3cac:	0102040e 	bge	zero,r4,44c0 <_dtoa_r+0x1600>
    3cb0:	d9000615 	stw	r4,24(sp)
    3cb4:	0500050e 	bge	zero,r20,3ccc <_dtoa_r+0xe0c>
    3cb8:	880b883a 	mov	r5,r17
    3cbc:	a00d883a 	mov	r6,r20
    3cc0:	e009883a 	mov	r4,fp
    3cc4:	00066c40 	call	66c4 <__lshift>
    3cc8:	1023883a 	mov	r17,r2
    3ccc:	9801241e 	bne	r19,zero,4160 <_dtoa_r+0x12a0>
    3cd0:	8829883a 	mov	r20,r17
    3cd4:	d9000617 	ldw	r4,24(sp)
    3cd8:	dcc00717 	ldw	r19,28(sp)
    3cdc:	9480004c 	andi	r18,r18,1
    3ce0:	20bfffc4 	addi	r2,r4,-1
    3ce4:	9885883a 	add	r2,r19,r2
    3ce8:	d8800415 	stw	r2,16(sp)
    3cec:	dc800615 	stw	r18,24(sp)
    3cf0:	a80b883a 	mov	r5,r21
    3cf4:	8009883a 	mov	r4,r16
    3cf8:	0002cc00 	call	2cc0 <quorem>
    3cfc:	880b883a 	mov	r5,r17
    3d00:	8009883a 	mov	r4,r16
    3d04:	102f883a 	mov	r23,r2
    3d08:	000680c0 	call	680c <__mcmp>
    3d0c:	a80b883a 	mov	r5,r21
    3d10:	a00d883a 	mov	r6,r20
    3d14:	e009883a 	mov	r4,fp
    3d18:	102d883a 	mov	r22,r2
    3d1c:	000686c0 	call	686c <__mdiff>
    3d20:	1007883a 	mov	r3,r2
    3d24:	10800317 	ldw	r2,12(r2)
    3d28:	bc800c04 	addi	r18,r23,48
    3d2c:	180b883a 	mov	r5,r3
    3d30:	10004e1e 	bne	r2,zero,3e6c <_dtoa_r+0xfac>
    3d34:	8009883a 	mov	r4,r16
    3d38:	d8c01615 	stw	r3,88(sp)
    3d3c:	000680c0 	call	680c <__mcmp>
    3d40:	d8c01617 	ldw	r3,88(sp)
    3d44:	e009883a 	mov	r4,fp
    3d48:	d8801615 	stw	r2,88(sp)
    3d4c:	180b883a 	mov	r5,r3
    3d50:	0005fec0 	call	5fec <_Bfree>
    3d54:	d8801617 	ldw	r2,88(sp)
    3d58:	1000041e 	bne	r2,zero,3d6c <_dtoa_r+0xeac>
    3d5c:	d9800317 	ldw	r6,12(sp)
    3d60:	3000021e 	bne	r6,zero,3d6c <_dtoa_r+0xeac>
    3d64:	d8c00617 	ldw	r3,24(sp)
    3d68:	18003726 	beq	r3,zero,3e48 <_dtoa_r+0xf88>
    3d6c:	b0002016 	blt	r22,zero,3df0 <_dtoa_r+0xf30>
    3d70:	b000041e 	bne	r22,zero,3d84 <_dtoa_r+0xec4>
    3d74:	d9000317 	ldw	r4,12(sp)
    3d78:	2000021e 	bne	r4,zero,3d84 <_dtoa_r+0xec4>
    3d7c:	d8c00617 	ldw	r3,24(sp)
    3d80:	18001b26 	beq	r3,zero,3df0 <_dtoa_r+0xf30>
    3d84:	00810716 	blt	zero,r2,41a4 <_dtoa_r+0x12e4>
    3d88:	d8c00417 	ldw	r3,16(sp)
    3d8c:	9d800044 	addi	r22,r19,1
    3d90:	9c800005 	stb	r18,0(r19)
    3d94:	b02f883a 	mov	r23,r22
    3d98:	98c10626 	beq	r19,r3,41b4 <_dtoa_r+0x12f4>
    3d9c:	800b883a 	mov	r5,r16
    3da0:	000f883a 	mov	r7,zero
    3da4:	01800284 	movi	r6,10
    3da8:	e009883a 	mov	r4,fp
    3dac:	00060140 	call	6014 <__multadd>
    3db0:	1021883a 	mov	r16,r2
    3db4:	000f883a 	mov	r7,zero
    3db8:	01800284 	movi	r6,10
    3dbc:	880b883a 	mov	r5,r17
    3dc0:	e009883a 	mov	r4,fp
    3dc4:	8d002526 	beq	r17,r20,3e5c <_dtoa_r+0xf9c>
    3dc8:	00060140 	call	6014 <__multadd>
    3dcc:	a00b883a 	mov	r5,r20
    3dd0:	000f883a 	mov	r7,zero
    3dd4:	01800284 	movi	r6,10
    3dd8:	e009883a 	mov	r4,fp
    3ddc:	1023883a 	mov	r17,r2
    3de0:	00060140 	call	6014 <__multadd>
    3de4:	1029883a 	mov	r20,r2
    3de8:	b027883a 	mov	r19,r22
    3dec:	003fc006 	br	3cf0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003cf0>
    3df0:	9011883a 	mov	r8,r18
    3df4:	00800e0e 	bge	zero,r2,3e30 <_dtoa_r+0xf70>
    3df8:	800b883a 	mov	r5,r16
    3dfc:	01800044 	movi	r6,1
    3e00:	e009883a 	mov	r4,fp
    3e04:	da001715 	stw	r8,92(sp)
    3e08:	00066c40 	call	66c4 <__lshift>
    3e0c:	a80b883a 	mov	r5,r21
    3e10:	1009883a 	mov	r4,r2
    3e14:	1021883a 	mov	r16,r2
    3e18:	000680c0 	call	680c <__mcmp>
    3e1c:	da001717 	ldw	r8,92(sp)
    3e20:	0081960e 	bge	zero,r2,447c <_dtoa_r+0x15bc>
    3e24:	00800e44 	movi	r2,57
    3e28:	40817026 	beq	r8,r2,43ec <_dtoa_r+0x152c>
    3e2c:	ba000c44 	addi	r8,r23,49
    3e30:	8825883a 	mov	r18,r17
    3e34:	9dc00044 	addi	r23,r19,1
    3e38:	9a000005 	stb	r8,0(r19)
    3e3c:	a023883a 	mov	r17,r20
    3e40:	dc000915 	stw	r16,36(sp)
    3e44:	003f2406 	br	3ad8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003ad8>
    3e48:	00800e44 	movi	r2,57
    3e4c:	9011883a 	mov	r8,r18
    3e50:	90816626 	beq	r18,r2,43ec <_dtoa_r+0x152c>
    3e54:	05bff516 	blt	zero,r22,3e2c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e2c>
    3e58:	003ff506 	br	3e30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e30>
    3e5c:	00060140 	call	6014 <__multadd>
    3e60:	1023883a 	mov	r17,r2
    3e64:	1029883a 	mov	r20,r2
    3e68:	003fdf06 	br	3de8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003de8>
    3e6c:	e009883a 	mov	r4,fp
    3e70:	0005fec0 	call	5fec <_Bfree>
    3e74:	00800044 	movi	r2,1
    3e78:	003fbc06 	br	3d6c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003d6c>
    3e7c:	a80b883a 	mov	r5,r21
    3e80:	8009883a 	mov	r4,r16
    3e84:	000680c0 	call	680c <__mcmp>
    3e88:	103edb0e 	bge	r2,zero,39f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70039f8>
    3e8c:	800b883a 	mov	r5,r16
    3e90:	000f883a 	mov	r7,zero
    3e94:	01800284 	movi	r6,10
    3e98:	e009883a 	mov	r4,fp
    3e9c:	00060140 	call	6014 <__multadd>
    3ea0:	1021883a 	mov	r16,r2
    3ea4:	d8800517 	ldw	r2,20(sp)
    3ea8:	d8c00b17 	ldw	r3,44(sp)
    3eac:	10bfffc4 	addi	r2,r2,-1
    3eb0:	d8800515 	stw	r2,20(sp)
    3eb4:	183f761e 	bne	r3,zero,3c90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003c90>
    3eb8:	d9000c17 	ldw	r4,48(sp)
    3ebc:	0101730e 	bge	zero,r4,448c <_dtoa_r+0x15cc>
    3ec0:	d9000615 	stw	r4,24(sp)
    3ec4:	003ed006 	br	3a08 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a08>
    3ec8:	00800084 	movi	r2,2
    3ecc:	3081861e 	bne	r6,r2,44e8 <_dtoa_r+0x1628>
    3ed0:	d8000b15 	stw	zero,44(sp)
    3ed4:	003f3c06 	br	3bc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003bc8>
    3ed8:	dc000917 	ldw	r16,36(sp)
    3edc:	003e9206 	br	3928 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003928>
    3ee0:	d9c00317 	ldw	r7,12(sp)
    3ee4:	00800084 	movi	r2,2
    3ee8:	11fec50e 	bge	r2,r7,3a00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a00>
    3eec:	d9000617 	ldw	r4,24(sp)
    3ef0:	20013c1e 	bne	r4,zero,43e4 <_dtoa_r+0x1524>
    3ef4:	a80b883a 	mov	r5,r21
    3ef8:	000f883a 	mov	r7,zero
    3efc:	01800144 	movi	r6,5
    3f00:	e009883a 	mov	r4,fp
    3f04:	00060140 	call	6014 <__multadd>
    3f08:	100b883a 	mov	r5,r2
    3f0c:	8009883a 	mov	r4,r16
    3f10:	102b883a 	mov	r21,r2
    3f14:	000680c0 	call	680c <__mcmp>
    3f18:	dc000915 	stw	r16,36(sp)
    3f1c:	00bf410e 	bge	zero,r2,3c24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003c24>
    3f20:	d9c00717 	ldw	r7,28(sp)
    3f24:	00800c44 	movi	r2,49
    3f28:	38800005 	stb	r2,0(r7)
    3f2c:	d8800517 	ldw	r2,20(sp)
    3f30:	3dc00044 	addi	r23,r7,1
    3f34:	10800044 	addi	r2,r2,1
    3f38:	d8800515 	stw	r2,20(sp)
    3f3c:	003f3d06 	br	3c34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003c34>
    3f40:	d9800517 	ldw	r6,20(sp)
    3f44:	d9c00717 	ldw	r7,28(sp)
    3f48:	00800c44 	movi	r2,49
    3f4c:	31800044 	addi	r6,r6,1
    3f50:	d9800515 	stw	r6,20(sp)
    3f54:	38800005 	stb	r2,0(r7)
    3f58:	003edf06 	br	3ad8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003ad8>
    3f5c:	d8000b15 	stw	zero,44(sp)
    3f60:	003c9f06 	br	31e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70031e0>
    3f64:	903e7e1e 	bne	r18,zero,3960 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003960>
    3f68:	00800434 	movhi	r2,16
    3f6c:	10bfffc4 	addi	r2,r2,-1
    3f70:	9884703a 	and	r2,r19,r2
    3f74:	1000ea1e 	bne	r2,zero,4320 <_dtoa_r+0x1460>
    3f78:	9cdffc2c 	andhi	r19,r19,32752
    3f7c:	9800e826 	beq	r19,zero,4320 <_dtoa_r+0x1460>
    3f80:	d9c00817 	ldw	r7,32(sp)
    3f84:	b5800044 	addi	r22,r22,1
    3f88:	04c00044 	movi	r19,1
    3f8c:	39c00044 	addi	r7,r7,1
    3f90:	d9c00815 	stw	r7,32(sp)
    3f94:	d8800d17 	ldw	r2,52(sp)
    3f98:	103e721e 	bne	r2,zero,3964 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003964>
    3f9c:	00800044 	movi	r2,1
    3fa0:	003e7906 	br	3988 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003988>
    3fa4:	8009883a 	mov	r4,r16
    3fa8:	000ce940 	call	ce94 <__floatsidf>
    3fac:	d9800f17 	ldw	r6,60(sp)
    3fb0:	d9c01017 	ldw	r7,64(sp)
    3fb4:	1009883a 	mov	r4,r2
    3fb8:	180b883a 	mov	r5,r3
    3fbc:	000be000 	call	be00 <__muldf3>
    3fc0:	000d883a 	mov	r6,zero
    3fc4:	01d00734 	movhi	r7,16412
    3fc8:	1009883a 	mov	r4,r2
    3fcc:	180b883a 	mov	r5,r3
    3fd0:	000aa140 	call	aa14 <__adddf3>
    3fd4:	047f3034 	movhi	r17,64704
    3fd8:	1021883a 	mov	r16,r2
    3fdc:	1c63883a 	add	r17,r3,r17
    3fe0:	d9000f17 	ldw	r4,60(sp)
    3fe4:	d9401017 	ldw	r5,64(sp)
    3fe8:	000d883a 	mov	r6,zero
    3fec:	01d00534 	movhi	r7,16404
    3ff0:	000c5180 	call	c518 <__subdf3>
    3ff4:	800d883a 	mov	r6,r16
    3ff8:	880f883a 	mov	r7,r17
    3ffc:	1009883a 	mov	r4,r2
    4000:	180b883a 	mov	r5,r3
    4004:	102b883a 	mov	r21,r2
    4008:	1829883a 	mov	r20,r3
    400c:	000bc300 	call	bc30 <__gedf2>
    4010:	00806c16 	blt	zero,r2,41c4 <_dtoa_r+0x1304>
    4014:	89e0003c 	xorhi	r7,r17,32768
    4018:	800d883a 	mov	r6,r16
    401c:	a809883a 	mov	r4,r21
    4020:	a00b883a 	mov	r5,r20
    4024:	000bd0c0 	call	bd0c <__ledf2>
    4028:	103d7e0e 	bge	r2,zero,3624 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003624>
    402c:	002b883a 	mov	r21,zero
    4030:	0023883a 	mov	r17,zero
    4034:	003efb06 	br	3c24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003c24>
    4038:	d8800717 	ldw	r2,28(sp)
    403c:	003bd006 	br	2f80 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002f80>
    4040:	d9000a17 	ldw	r4,40(sp)
    4044:	d9800d17 	ldw	r6,52(sp)
    4048:	dd400a15 	stw	r21,40(sp)
    404c:	a905c83a 	sub	r2,r21,r4
    4050:	308d883a 	add	r6,r6,r2
    4054:	d9800d15 	stw	r6,52(sp)
    4058:	002b883a 	mov	r21,zero
    405c:	003e0606 	br	3878 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003878>
    4060:	9023883a 	mov	r17,r18
    4064:	9829883a 	mov	r20,r19
    4068:	04000084 	movi	r16,2
    406c:	003c9206 	br	32b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70032b8>
    4070:	04000044 	movi	r16,1
    4074:	dc000c15 	stw	r16,48(sp)
    4078:	dc000615 	stw	r16,24(sp)
    407c:	dc002215 	stw	r16,136(sp)
    4080:	e0001115 	stw	zero,68(fp)
    4084:	000b883a 	mov	r5,zero
    4088:	003c6906 	br	3230 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003230>
    408c:	3021883a 	mov	r16,r6
    4090:	003ffb06 	br	4080 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004080>
    4094:	1000021e 	bne	r2,zero,40a0 <_dtoa_r+0x11e0>
    4098:	4200004c 	andi	r8,r8,1
    409c:	403e7d1e 	bne	r8,zero,3a94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a94>
    40a0:	01000c04 	movi	r4,48
    40a4:	00000106 	br	40ac <_dtoa_r+0x11ec>
    40a8:	102f883a 	mov	r23,r2
    40ac:	b8bfffc4 	addi	r2,r23,-1
    40b0:	10c00007 	ldb	r3,0(r2)
    40b4:	193ffc26 	beq	r3,r4,40a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70040a8>
    40b8:	003e8706 	br	3ad8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003ad8>
    40bc:	d8800517 	ldw	r2,20(sp)
    40c0:	00a3c83a 	sub	r17,zero,r2
    40c4:	8800a426 	beq	r17,zero,4358 <_dtoa_r+0x1498>
    40c8:	888003cc 	andi	r2,r17,15
    40cc:	100490fa 	slli	r2,r2,3
    40d0:	00c00074 	movhi	r3,1
    40d4:	18c58804 	addi	r3,r3,5664
    40d8:	1885883a 	add	r2,r3,r2
    40dc:	11800017 	ldw	r6,0(r2)
    40e0:	11c00117 	ldw	r7,4(r2)
    40e4:	9009883a 	mov	r4,r18
    40e8:	980b883a 	mov	r5,r19
    40ec:	8823d13a 	srai	r17,r17,4
    40f0:	000be000 	call	be00 <__muldf3>
    40f4:	d8800f15 	stw	r2,60(sp)
    40f8:	d8c01015 	stw	r3,64(sp)
    40fc:	8800e826 	beq	r17,zero,44a0 <_dtoa_r+0x15e0>
    4100:	05000074 	movhi	r20,1
    4104:	a5057e04 	addi	r20,r20,5624
    4108:	04000084 	movi	r16,2
    410c:	8980004c 	andi	r6,r17,1
    4110:	1009883a 	mov	r4,r2
    4114:	8823d07a 	srai	r17,r17,1
    4118:	180b883a 	mov	r5,r3
    411c:	30000426 	beq	r6,zero,4130 <_dtoa_r+0x1270>
    4120:	a1800017 	ldw	r6,0(r20)
    4124:	a1c00117 	ldw	r7,4(r20)
    4128:	84000044 	addi	r16,r16,1
    412c:	000be000 	call	be00 <__muldf3>
    4130:	a5000204 	addi	r20,r20,8
    4134:	883ff51e 	bne	r17,zero,410c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700410c>
    4138:	d8800f15 	stw	r2,60(sp)
    413c:	d8c01015 	stw	r3,64(sp)
    4140:	003c7606 	br	331c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700331c>
    4144:	00c00c04 	movi	r3,48
    4148:	10c00005 	stb	r3,0(r2)
    414c:	d8c00517 	ldw	r3,20(sp)
    4150:	bd3fffc3 	ldbu	r20,-1(r23)
    4154:	18c00044 	addi	r3,r3,1
    4158:	d8c00515 	stw	r3,20(sp)
    415c:	003db906 	br	3844 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003844>
    4160:	89400117 	ldw	r5,4(r17)
    4164:	e009883a 	mov	r4,fp
    4168:	0005f440 	call	5f44 <_Balloc>
    416c:	89800417 	ldw	r6,16(r17)
    4170:	89400304 	addi	r5,r17,12
    4174:	11000304 	addi	r4,r2,12
    4178:	31800084 	addi	r6,r6,2
    417c:	318d883a 	add	r6,r6,r6
    4180:	318d883a 	add	r6,r6,r6
    4184:	1027883a 	mov	r19,r2
    4188:	0005cd40 	call	5cd4 <memcpy>
    418c:	01800044 	movi	r6,1
    4190:	980b883a 	mov	r5,r19
    4194:	e009883a 	mov	r4,fp
    4198:	00066c40 	call	66c4 <__lshift>
    419c:	1029883a 	mov	r20,r2
    41a0:	003ecc06 	br	3cd4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003cd4>
    41a4:	00800e44 	movi	r2,57
    41a8:	90809026 	beq	r18,r2,43ec <_dtoa_r+0x152c>
    41ac:	92000044 	addi	r8,r18,1
    41b0:	003f1f06 	br	3e30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e30>
    41b4:	9011883a 	mov	r8,r18
    41b8:	8825883a 	mov	r18,r17
    41bc:	a023883a 	mov	r17,r20
    41c0:	003e2906 	br	3a68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a68>
    41c4:	002b883a 	mov	r21,zero
    41c8:	0023883a 	mov	r17,zero
    41cc:	003f5406 	br	3f20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003f20>
    41d0:	61bfffc4 	addi	r6,r12,-1
    41d4:	300490fa 	slli	r2,r6,3
    41d8:	00c00074 	movhi	r3,1
    41dc:	18c58804 	addi	r3,r3,5664
    41e0:	1885883a 	add	r2,r3,r2
    41e4:	11000017 	ldw	r4,0(r2)
    41e8:	11400117 	ldw	r5,4(r2)
    41ec:	d8800717 	ldw	r2,28(sp)
    41f0:	880f883a 	mov	r7,r17
    41f4:	d9801215 	stw	r6,72(sp)
    41f8:	800d883a 	mov	r6,r16
    41fc:	db001615 	stw	r12,88(sp)
    4200:	15c00044 	addi	r23,r2,1
    4204:	000be000 	call	be00 <__muldf3>
    4208:	d9401017 	ldw	r5,64(sp)
    420c:	d9000f17 	ldw	r4,60(sp)
    4210:	d8c01515 	stw	r3,84(sp)
    4214:	d8801415 	stw	r2,80(sp)
    4218:	000ce140 	call	ce14 <__fixdfsi>
    421c:	1009883a 	mov	r4,r2
    4220:	1021883a 	mov	r16,r2
    4224:	000ce940 	call	ce94 <__floatsidf>
    4228:	d9000f17 	ldw	r4,60(sp)
    422c:	d9401017 	ldw	r5,64(sp)
    4230:	100d883a 	mov	r6,r2
    4234:	180f883a 	mov	r7,r3
    4238:	000c5180 	call	c518 <__subdf3>
    423c:	1829883a 	mov	r20,r3
    4240:	d8c00717 	ldw	r3,28(sp)
    4244:	84000c04 	addi	r16,r16,48
    4248:	1023883a 	mov	r17,r2
    424c:	1c000005 	stb	r16,0(r3)
    4250:	db001617 	ldw	r12,88(sp)
    4254:	00800044 	movi	r2,1
    4258:	60802226 	beq	r12,r2,42e4 <_dtoa_r+0x1424>
    425c:	d9c00717 	ldw	r7,28(sp)
    4260:	8805883a 	mov	r2,r17
    4264:	b82b883a 	mov	r21,r23
    4268:	3b19883a 	add	r12,r7,r12
    426c:	6023883a 	mov	r17,r12
    4270:	a007883a 	mov	r3,r20
    4274:	dc800f15 	stw	r18,60(sp)
    4278:	000d883a 	mov	r6,zero
    427c:	01d00934 	movhi	r7,16420
    4280:	1009883a 	mov	r4,r2
    4284:	180b883a 	mov	r5,r3
    4288:	000be000 	call	be00 <__muldf3>
    428c:	180b883a 	mov	r5,r3
    4290:	1009883a 	mov	r4,r2
    4294:	1829883a 	mov	r20,r3
    4298:	1025883a 	mov	r18,r2
    429c:	000ce140 	call	ce14 <__fixdfsi>
    42a0:	1009883a 	mov	r4,r2
    42a4:	1021883a 	mov	r16,r2
    42a8:	000ce940 	call	ce94 <__floatsidf>
    42ac:	100d883a 	mov	r6,r2
    42b0:	180f883a 	mov	r7,r3
    42b4:	9009883a 	mov	r4,r18
    42b8:	a00b883a 	mov	r5,r20
    42bc:	84000c04 	addi	r16,r16,48
    42c0:	000c5180 	call	c518 <__subdf3>
    42c4:	ad400044 	addi	r21,r21,1
    42c8:	ac3fffc5 	stb	r16,-1(r21)
    42cc:	ac7fea1e 	bne	r21,r17,4278 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004278>
    42d0:	1023883a 	mov	r17,r2
    42d4:	d8801217 	ldw	r2,72(sp)
    42d8:	dc800f17 	ldw	r18,60(sp)
    42dc:	1829883a 	mov	r20,r3
    42e0:	b8af883a 	add	r23,r23,r2
    42e4:	d9001417 	ldw	r4,80(sp)
    42e8:	d9401517 	ldw	r5,84(sp)
    42ec:	000d883a 	mov	r6,zero
    42f0:	01cff834 	movhi	r7,16352
    42f4:	000aa140 	call	aa14 <__adddf3>
    42f8:	880d883a 	mov	r6,r17
    42fc:	a00f883a 	mov	r7,r20
    4300:	1009883a 	mov	r4,r2
    4304:	180b883a 	mov	r5,r3
    4308:	000bd0c0 	call	bd0c <__ledf2>
    430c:	10003e0e 	bge	r2,zero,4408 <_dtoa_r+0x1548>
    4310:	d9001317 	ldw	r4,76(sp)
    4314:	bd3fffc3 	ldbu	r20,-1(r23)
    4318:	d9000515 	stw	r4,20(sp)
    431c:	003d3b06 	br	380c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700380c>
    4320:	0027883a 	mov	r19,zero
    4324:	003f1b06 	br	3f94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003f94>
    4328:	d8800817 	ldw	r2,32(sp)
    432c:	11e9c83a 	sub	r20,r2,r7
    4330:	0005883a 	mov	r2,zero
    4334:	003d5406 	br	3888 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003888>
    4338:	00800044 	movi	r2,1
    433c:	003dc706 	br	3a5c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a5c>
    4340:	d8c00217 	ldw	r3,8(sp)
    4344:	00800d84 	movi	r2,54
    4348:	dd400a17 	ldw	r21,40(sp)
    434c:	10c5c83a 	sub	r2,r2,r3
    4350:	dd000817 	ldw	r20,32(sp)
    4354:	003d4c06 	br	3888 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003888>
    4358:	dc800f15 	stw	r18,60(sp)
    435c:	dcc01015 	stw	r19,64(sp)
    4360:	04000084 	movi	r16,2
    4364:	003bed06 	br	331c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700331c>
    4368:	d9000617 	ldw	r4,24(sp)
    436c:	203f0d26 	beq	r4,zero,3fa4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003fa4>
    4370:	d9800c17 	ldw	r6,48(sp)
    4374:	01bcab0e 	bge	zero,r6,3624 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003624>
    4378:	d9401017 	ldw	r5,64(sp)
    437c:	d9000f17 	ldw	r4,60(sp)
    4380:	000d883a 	mov	r6,zero
    4384:	01d00934 	movhi	r7,16420
    4388:	000be000 	call	be00 <__muldf3>
    438c:	81000044 	addi	r4,r16,1
    4390:	d8800f15 	stw	r2,60(sp)
    4394:	d8c01015 	stw	r3,64(sp)
    4398:	000ce940 	call	ce94 <__floatsidf>
    439c:	d9800f17 	ldw	r6,60(sp)
    43a0:	d9c01017 	ldw	r7,64(sp)
    43a4:	1009883a 	mov	r4,r2
    43a8:	180b883a 	mov	r5,r3
    43ac:	000be000 	call	be00 <__muldf3>
    43b0:	01d00734 	movhi	r7,16412
    43b4:	000d883a 	mov	r6,zero
    43b8:	1009883a 	mov	r4,r2
    43bc:	180b883a 	mov	r5,r3
    43c0:	000aa140 	call	aa14 <__adddf3>
    43c4:	d9c00517 	ldw	r7,20(sp)
    43c8:	047f3034 	movhi	r17,64704
    43cc:	1021883a 	mov	r16,r2
    43d0:	39ffffc4 	addi	r7,r7,-1
    43d4:	d9c01315 	stw	r7,76(sp)
    43d8:	1c63883a 	add	r17,r3,r17
    43dc:	db000c17 	ldw	r12,48(sp)
    43e0:	003bea06 	br	338c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700338c>
    43e4:	dc000915 	stw	r16,36(sp)
    43e8:	003e0e06 	br	3c24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003c24>
    43ec:	01000e44 	movi	r4,57
    43f0:	8825883a 	mov	r18,r17
    43f4:	9dc00044 	addi	r23,r19,1
    43f8:	99000005 	stb	r4,0(r19)
    43fc:	a023883a 	mov	r17,r20
    4400:	dc000915 	stw	r16,36(sp)
    4404:	003da406 	br	3a98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a98>
    4408:	d9801417 	ldw	r6,80(sp)
    440c:	d9c01517 	ldw	r7,84(sp)
    4410:	0009883a 	mov	r4,zero
    4414:	014ff834 	movhi	r5,16352
    4418:	000c5180 	call	c518 <__subdf3>
    441c:	880d883a 	mov	r6,r17
    4420:	a00f883a 	mov	r7,r20
    4424:	1009883a 	mov	r4,r2
    4428:	180b883a 	mov	r5,r3
    442c:	000bc300 	call	bc30 <__gedf2>
    4430:	00bc7c0e 	bge	zero,r2,3624 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003624>
    4434:	01000c04 	movi	r4,48
    4438:	00000106 	br	4440 <_dtoa_r+0x1580>
    443c:	102f883a 	mov	r23,r2
    4440:	b8bfffc4 	addi	r2,r23,-1
    4444:	10c00007 	ldb	r3,0(r2)
    4448:	193ffc26 	beq	r3,r4,443c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700443c>
    444c:	d9801317 	ldw	r6,76(sp)
    4450:	d9800515 	stw	r6,20(sp)
    4454:	003c4406 	br	3568 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003568>
    4458:	d9801317 	ldw	r6,76(sp)
    445c:	d9800515 	stw	r6,20(sp)
    4460:	003cea06 	br	380c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700380c>
    4464:	dd800f17 	ldw	r22,60(sp)
    4468:	dcc01017 	ldw	r19,64(sp)
    446c:	dc801217 	ldw	r18,72(sp)
    4470:	003c6c06 	br	3624 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003624>
    4474:	903e031e 	bne	r18,zero,3c84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003c84>
    4478:	003ebb06 	br	3f68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003f68>
    447c:	103e6c1e 	bne	r2,zero,3e30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e30>
    4480:	4080004c 	andi	r2,r8,1
    4484:	103e6a26 	beq	r2,zero,3e30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e30>
    4488:	003e6606 	br	3e24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e24>
    448c:	d8c00317 	ldw	r3,12(sp)
    4490:	00800084 	movi	r2,2
    4494:	10c02916 	blt	r2,r3,453c <_dtoa_r+0x167c>
    4498:	d9000c17 	ldw	r4,48(sp)
    449c:	003e8806 	br	3ec0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003ec0>
    44a0:	04000084 	movi	r16,2
    44a4:	003b9d06 	br	331c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700331c>
    44a8:	d9001317 	ldw	r4,76(sp)
    44ac:	d9000515 	stw	r4,20(sp)
    44b0:	003cd606 	br	380c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700380c>
    44b4:	d8801317 	ldw	r2,76(sp)
    44b8:	d8800515 	stw	r2,20(sp)
    44bc:	003c2a06 	br	3568 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003568>
    44c0:	d9800317 	ldw	r6,12(sp)
    44c4:	00800084 	movi	r2,2
    44c8:	11801516 	blt	r2,r6,4520 <_dtoa_r+0x1660>
    44cc:	d9c00c17 	ldw	r7,48(sp)
    44d0:	d9c00615 	stw	r7,24(sp)
    44d4:	003df706 	br	3cb4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003cb4>
    44d8:	193d3926 	beq	r3,r4,39c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70039c0>
    44dc:	00c00f04 	movi	r3,60
    44e0:	1885c83a 	sub	r2,r3,r2
    44e4:	003ddf06 	br	3c64 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003c64>
    44e8:	e009883a 	mov	r4,fp
    44ec:	e0001115 	stw	zero,68(fp)
    44f0:	000b883a 	mov	r5,zero
    44f4:	0005f440 	call	5f44 <_Balloc>
    44f8:	d8800715 	stw	r2,28(sp)
    44fc:	d8c00717 	ldw	r3,28(sp)
    4500:	00bfffc4 	movi	r2,-1
    4504:	01000044 	movi	r4,1
    4508:	d8800c15 	stw	r2,48(sp)
    450c:	e0c01015 	stw	r3,64(fp)
    4510:	d9000b15 	stw	r4,44(sp)
    4514:	d8800615 	stw	r2,24(sp)
    4518:	d8002215 	stw	zero,136(sp)
    451c:	003c4106 	br	3624 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003624>
    4520:	d8c00c17 	ldw	r3,48(sp)
    4524:	d8c00615 	stw	r3,24(sp)
    4528:	003e7006 	br	3eec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003eec>
    452c:	04400044 	movi	r17,1
    4530:	003b2006 	br	31b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70031b4>
    4534:	000b883a 	mov	r5,zero
    4538:	003b3d06 	br	3230 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003230>
    453c:	d8800c17 	ldw	r2,48(sp)
    4540:	d8800615 	stw	r2,24(sp)
    4544:	003e6906 	br	3eec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003eec>

00004548 <__sflush_r>:
    4548:	2880030b 	ldhu	r2,12(r5)
    454c:	defffb04 	addi	sp,sp,-20
    4550:	dcc00315 	stw	r19,12(sp)
    4554:	dc400115 	stw	r17,4(sp)
    4558:	dfc00415 	stw	ra,16(sp)
    455c:	dc800215 	stw	r18,8(sp)
    4560:	dc000015 	stw	r16,0(sp)
    4564:	10c0020c 	andi	r3,r2,8
    4568:	2823883a 	mov	r17,r5
    456c:	2027883a 	mov	r19,r4
    4570:	1800311e 	bne	r3,zero,4638 <__sflush_r+0xf0>
    4574:	28c00117 	ldw	r3,4(r5)
    4578:	10820014 	ori	r2,r2,2048
    457c:	2880030d 	sth	r2,12(r5)
    4580:	00c04b0e 	bge	zero,r3,46b0 <__sflush_r+0x168>
    4584:	8a000a17 	ldw	r8,40(r17)
    4588:	40002326 	beq	r8,zero,4618 <__sflush_r+0xd0>
    458c:	9c000017 	ldw	r16,0(r19)
    4590:	10c4000c 	andi	r3,r2,4096
    4594:	98000015 	stw	zero,0(r19)
    4598:	18004826 	beq	r3,zero,46bc <__sflush_r+0x174>
    459c:	89801417 	ldw	r6,80(r17)
    45a0:	10c0010c 	andi	r3,r2,4
    45a4:	18000626 	beq	r3,zero,45c0 <__sflush_r+0x78>
    45a8:	88c00117 	ldw	r3,4(r17)
    45ac:	88800c17 	ldw	r2,48(r17)
    45b0:	30cdc83a 	sub	r6,r6,r3
    45b4:	10000226 	beq	r2,zero,45c0 <__sflush_r+0x78>
    45b8:	88800f17 	ldw	r2,60(r17)
    45bc:	308dc83a 	sub	r6,r6,r2
    45c0:	89400717 	ldw	r5,28(r17)
    45c4:	000f883a 	mov	r7,zero
    45c8:	9809883a 	mov	r4,r19
    45cc:	403ee83a 	callr	r8
    45d0:	00ffffc4 	movi	r3,-1
    45d4:	10c04426 	beq	r2,r3,46e8 <__sflush_r+0x1a0>
    45d8:	88c0030b 	ldhu	r3,12(r17)
    45dc:	89000417 	ldw	r4,16(r17)
    45e0:	88000115 	stw	zero,4(r17)
    45e4:	197dffcc 	andi	r5,r3,63487
    45e8:	8940030d 	sth	r5,12(r17)
    45ec:	89000015 	stw	r4,0(r17)
    45f0:	18c4000c 	andi	r3,r3,4096
    45f4:	18002c1e 	bne	r3,zero,46a8 <__sflush_r+0x160>
    45f8:	89400c17 	ldw	r5,48(r17)
    45fc:	9c000015 	stw	r16,0(r19)
    4600:	28000526 	beq	r5,zero,4618 <__sflush_r+0xd0>
    4604:	88801004 	addi	r2,r17,64
    4608:	28800226 	beq	r5,r2,4614 <__sflush_r+0xcc>
    460c:	9809883a 	mov	r4,r19
    4610:	0004cb40 	call	4cb4 <_free_r>
    4614:	88000c15 	stw	zero,48(r17)
    4618:	0005883a 	mov	r2,zero
    461c:	dfc00417 	ldw	ra,16(sp)
    4620:	dcc00317 	ldw	r19,12(sp)
    4624:	dc800217 	ldw	r18,8(sp)
    4628:	dc400117 	ldw	r17,4(sp)
    462c:	dc000017 	ldw	r16,0(sp)
    4630:	dec00504 	addi	sp,sp,20
    4634:	f800283a 	ret
    4638:	2c800417 	ldw	r18,16(r5)
    463c:	903ff626 	beq	r18,zero,4618 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004618>
    4640:	2c000017 	ldw	r16,0(r5)
    4644:	108000cc 	andi	r2,r2,3
    4648:	2c800015 	stw	r18,0(r5)
    464c:	84a1c83a 	sub	r16,r16,r18
    4650:	1000131e 	bne	r2,zero,46a0 <__sflush_r+0x158>
    4654:	28800517 	ldw	r2,20(r5)
    4658:	88800215 	stw	r2,8(r17)
    465c:	04000316 	blt	zero,r16,466c <__sflush_r+0x124>
    4660:	003fed06 	br	4618 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004618>
    4664:	90a5883a 	add	r18,r18,r2
    4668:	043feb0e 	bge	zero,r16,4618 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004618>
    466c:	88800917 	ldw	r2,36(r17)
    4670:	89400717 	ldw	r5,28(r17)
    4674:	800f883a 	mov	r7,r16
    4678:	900d883a 	mov	r6,r18
    467c:	9809883a 	mov	r4,r19
    4680:	103ee83a 	callr	r2
    4684:	80a1c83a 	sub	r16,r16,r2
    4688:	00bff616 	blt	zero,r2,4664 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004664>
    468c:	88c0030b 	ldhu	r3,12(r17)
    4690:	00bfffc4 	movi	r2,-1
    4694:	18c01014 	ori	r3,r3,64
    4698:	88c0030d 	sth	r3,12(r17)
    469c:	003fdf06 	br	461c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700461c>
    46a0:	0005883a 	mov	r2,zero
    46a4:	003fec06 	br	4658 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004658>
    46a8:	88801415 	stw	r2,80(r17)
    46ac:	003fd206 	br	45f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70045f8>
    46b0:	28c00f17 	ldw	r3,60(r5)
    46b4:	00ffb316 	blt	zero,r3,4584 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004584>
    46b8:	003fd706 	br	4618 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004618>
    46bc:	89400717 	ldw	r5,28(r17)
    46c0:	000d883a 	mov	r6,zero
    46c4:	01c00044 	movi	r7,1
    46c8:	9809883a 	mov	r4,r19
    46cc:	403ee83a 	callr	r8
    46d0:	100d883a 	mov	r6,r2
    46d4:	00bfffc4 	movi	r2,-1
    46d8:	30801426 	beq	r6,r2,472c <__sflush_r+0x1e4>
    46dc:	8880030b 	ldhu	r2,12(r17)
    46e0:	8a000a17 	ldw	r8,40(r17)
    46e4:	003fae06 	br	45a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70045a0>
    46e8:	98c00017 	ldw	r3,0(r19)
    46ec:	183fba26 	beq	r3,zero,45d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70045d8>
    46f0:	01000744 	movi	r4,29
    46f4:	19000626 	beq	r3,r4,4710 <__sflush_r+0x1c8>
    46f8:	01000584 	movi	r4,22
    46fc:	19000426 	beq	r3,r4,4710 <__sflush_r+0x1c8>
    4700:	88c0030b 	ldhu	r3,12(r17)
    4704:	18c01014 	ori	r3,r3,64
    4708:	88c0030d 	sth	r3,12(r17)
    470c:	003fc306 	br	461c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700461c>
    4710:	8880030b 	ldhu	r2,12(r17)
    4714:	88c00417 	ldw	r3,16(r17)
    4718:	88000115 	stw	zero,4(r17)
    471c:	10bdffcc 	andi	r2,r2,63487
    4720:	8880030d 	sth	r2,12(r17)
    4724:	88c00015 	stw	r3,0(r17)
    4728:	003fb306 	br	45f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70045f8>
    472c:	98800017 	ldw	r2,0(r19)
    4730:	103fea26 	beq	r2,zero,46dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70046dc>
    4734:	00c00744 	movi	r3,29
    4738:	10c00226 	beq	r2,r3,4744 <__sflush_r+0x1fc>
    473c:	00c00584 	movi	r3,22
    4740:	10c0031e 	bne	r2,r3,4750 <__sflush_r+0x208>
    4744:	9c000015 	stw	r16,0(r19)
    4748:	0005883a 	mov	r2,zero
    474c:	003fb306 	br	461c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700461c>
    4750:	88c0030b 	ldhu	r3,12(r17)
    4754:	3005883a 	mov	r2,r6
    4758:	18c01014 	ori	r3,r3,64
    475c:	88c0030d 	sth	r3,12(r17)
    4760:	003fae06 	br	461c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700461c>

00004764 <_fflush_r>:
    4764:	defffd04 	addi	sp,sp,-12
    4768:	dc000115 	stw	r16,4(sp)
    476c:	dfc00215 	stw	ra,8(sp)
    4770:	2021883a 	mov	r16,r4
    4774:	20000226 	beq	r4,zero,4780 <_fflush_r+0x1c>
    4778:	20800e17 	ldw	r2,56(r4)
    477c:	10000c26 	beq	r2,zero,47b0 <_fflush_r+0x4c>
    4780:	2880030f 	ldh	r2,12(r5)
    4784:	1000051e 	bne	r2,zero,479c <_fflush_r+0x38>
    4788:	0005883a 	mov	r2,zero
    478c:	dfc00217 	ldw	ra,8(sp)
    4790:	dc000117 	ldw	r16,4(sp)
    4794:	dec00304 	addi	sp,sp,12
    4798:	f800283a 	ret
    479c:	8009883a 	mov	r4,r16
    47a0:	dfc00217 	ldw	ra,8(sp)
    47a4:	dc000117 	ldw	r16,4(sp)
    47a8:	dec00304 	addi	sp,sp,12
    47ac:	00045481 	jmpi	4548 <__sflush_r>
    47b0:	d9400015 	stw	r5,0(sp)
    47b4:	0004b400 	call	4b40 <__sinit>
    47b8:	d9400017 	ldw	r5,0(sp)
    47bc:	003ff006 	br	4780 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004780>

000047c0 <fflush>:
    47c0:	20000526 	beq	r4,zero,47d8 <fflush+0x18>
    47c4:	00800074 	movhi	r2,1
    47c8:	108d9004 	addi	r2,r2,13888
    47cc:	200b883a 	mov	r5,r4
    47d0:	11000017 	ldw	r4,0(r2)
    47d4:	00047641 	jmpi	4764 <_fflush_r>
    47d8:	00800074 	movhi	r2,1
    47dc:	108d8f04 	addi	r2,r2,13884
    47e0:	11000017 	ldw	r4,0(r2)
    47e4:	01400034 	movhi	r5,0
    47e8:	2951d904 	addi	r5,r5,18276
    47ec:	00050881 	jmpi	5088 <_fwalk_reent>

000047f0 <__fp_unlock>:
    47f0:	0005883a 	mov	r2,zero
    47f4:	f800283a 	ret

000047f8 <_cleanup_r>:
    47f8:	01400074 	movhi	r5,1
    47fc:	29629e04 	addi	r5,r5,-30088
    4800:	00050881 	jmpi	5088 <_fwalk_reent>

00004804 <__sinit.part.1>:
    4804:	defff704 	addi	sp,sp,-36
    4808:	00c00034 	movhi	r3,0
    480c:	dfc00815 	stw	ra,32(sp)
    4810:	ddc00715 	stw	r23,28(sp)
    4814:	dd800615 	stw	r22,24(sp)
    4818:	dd400515 	stw	r21,20(sp)
    481c:	dd000415 	stw	r20,16(sp)
    4820:	dcc00315 	stw	r19,12(sp)
    4824:	dc800215 	stw	r18,8(sp)
    4828:	dc400115 	stw	r17,4(sp)
    482c:	dc000015 	stw	r16,0(sp)
    4830:	18d1fe04 	addi	r3,r3,18424
    4834:	24000117 	ldw	r16,4(r4)
    4838:	20c00f15 	stw	r3,60(r4)
    483c:	2080bb04 	addi	r2,r4,748
    4840:	00c000c4 	movi	r3,3
    4844:	20c0b915 	stw	r3,740(r4)
    4848:	2080ba15 	stw	r2,744(r4)
    484c:	2000b815 	stw	zero,736(r4)
    4850:	05c00204 	movi	r23,8
    4854:	00800104 	movi	r2,4
    4858:	2025883a 	mov	r18,r4
    485c:	b80d883a 	mov	r6,r23
    4860:	81001704 	addi	r4,r16,92
    4864:	000b883a 	mov	r5,zero
    4868:	80000015 	stw	zero,0(r16)
    486c:	80000115 	stw	zero,4(r16)
    4870:	80000215 	stw	zero,8(r16)
    4874:	8080030d 	sth	r2,12(r16)
    4878:	80001915 	stw	zero,100(r16)
    487c:	8000038d 	sth	zero,14(r16)
    4880:	80000415 	stw	zero,16(r16)
    4884:	80000515 	stw	zero,20(r16)
    4888:	80000615 	stw	zero,24(r16)
    488c:	0005e1c0 	call	5e1c <memset>
    4890:	05800034 	movhi	r22,0
    4894:	94400217 	ldw	r17,8(r18)
    4898:	05400034 	movhi	r21,0
    489c:	05000034 	movhi	r20,0
    48a0:	04c00034 	movhi	r19,0
    48a4:	b59c0204 	addi	r22,r22,28680
    48a8:	ad5c1904 	addi	r21,r21,28772
    48ac:	a51c3804 	addi	r20,r20,28896
    48b0:	9cdc4f04 	addi	r19,r19,28988
    48b4:	85800815 	stw	r22,32(r16)
    48b8:	85400915 	stw	r21,36(r16)
    48bc:	85000a15 	stw	r20,40(r16)
    48c0:	84c00b15 	stw	r19,44(r16)
    48c4:	84000715 	stw	r16,28(r16)
    48c8:	00800284 	movi	r2,10
    48cc:	8880030d 	sth	r2,12(r17)
    48d0:	00800044 	movi	r2,1
    48d4:	b80d883a 	mov	r6,r23
    48d8:	89001704 	addi	r4,r17,92
    48dc:	000b883a 	mov	r5,zero
    48e0:	88000015 	stw	zero,0(r17)
    48e4:	88000115 	stw	zero,4(r17)
    48e8:	88000215 	stw	zero,8(r17)
    48ec:	88001915 	stw	zero,100(r17)
    48f0:	8880038d 	sth	r2,14(r17)
    48f4:	88000415 	stw	zero,16(r17)
    48f8:	88000515 	stw	zero,20(r17)
    48fc:	88000615 	stw	zero,24(r17)
    4900:	0005e1c0 	call	5e1c <memset>
    4904:	94000317 	ldw	r16,12(r18)
    4908:	00800484 	movi	r2,18
    490c:	8c400715 	stw	r17,28(r17)
    4910:	8d800815 	stw	r22,32(r17)
    4914:	8d400915 	stw	r21,36(r17)
    4918:	8d000a15 	stw	r20,40(r17)
    491c:	8cc00b15 	stw	r19,44(r17)
    4920:	8080030d 	sth	r2,12(r16)
    4924:	00800084 	movi	r2,2
    4928:	80000015 	stw	zero,0(r16)
    492c:	80000115 	stw	zero,4(r16)
    4930:	80000215 	stw	zero,8(r16)
    4934:	80001915 	stw	zero,100(r16)
    4938:	8080038d 	sth	r2,14(r16)
    493c:	80000415 	stw	zero,16(r16)
    4940:	80000515 	stw	zero,20(r16)
    4944:	80000615 	stw	zero,24(r16)
    4948:	b80d883a 	mov	r6,r23
    494c:	000b883a 	mov	r5,zero
    4950:	81001704 	addi	r4,r16,92
    4954:	0005e1c0 	call	5e1c <memset>
    4958:	00800044 	movi	r2,1
    495c:	84000715 	stw	r16,28(r16)
    4960:	85800815 	stw	r22,32(r16)
    4964:	85400915 	stw	r21,36(r16)
    4968:	85000a15 	stw	r20,40(r16)
    496c:	84c00b15 	stw	r19,44(r16)
    4970:	90800e15 	stw	r2,56(r18)
    4974:	dfc00817 	ldw	ra,32(sp)
    4978:	ddc00717 	ldw	r23,28(sp)
    497c:	dd800617 	ldw	r22,24(sp)
    4980:	dd400517 	ldw	r21,20(sp)
    4984:	dd000417 	ldw	r20,16(sp)
    4988:	dcc00317 	ldw	r19,12(sp)
    498c:	dc800217 	ldw	r18,8(sp)
    4990:	dc400117 	ldw	r17,4(sp)
    4994:	dc000017 	ldw	r16,0(sp)
    4998:	dec00904 	addi	sp,sp,36
    499c:	f800283a 	ret

000049a0 <__fp_lock>:
    49a0:	0005883a 	mov	r2,zero
    49a4:	f800283a 	ret

000049a8 <__sfmoreglue>:
    49a8:	defffc04 	addi	sp,sp,-16
    49ac:	dc400115 	stw	r17,4(sp)
    49b0:	2c7fffc4 	addi	r17,r5,-1
    49b4:	8c401a24 	muli	r17,r17,104
    49b8:	dc800215 	stw	r18,8(sp)
    49bc:	2825883a 	mov	r18,r5
    49c0:	89401d04 	addi	r5,r17,116
    49c4:	dc000015 	stw	r16,0(sp)
    49c8:	dfc00315 	stw	ra,12(sp)
    49cc:	00053e40 	call	53e4 <_malloc_r>
    49d0:	1021883a 	mov	r16,r2
    49d4:	10000726 	beq	r2,zero,49f4 <__sfmoreglue+0x4c>
    49d8:	11000304 	addi	r4,r2,12
    49dc:	10000015 	stw	zero,0(r2)
    49e0:	14800115 	stw	r18,4(r2)
    49e4:	11000215 	stw	r4,8(r2)
    49e8:	89801a04 	addi	r6,r17,104
    49ec:	000b883a 	mov	r5,zero
    49f0:	0005e1c0 	call	5e1c <memset>
    49f4:	8005883a 	mov	r2,r16
    49f8:	dfc00317 	ldw	ra,12(sp)
    49fc:	dc800217 	ldw	r18,8(sp)
    4a00:	dc400117 	ldw	r17,4(sp)
    4a04:	dc000017 	ldw	r16,0(sp)
    4a08:	dec00404 	addi	sp,sp,16
    4a0c:	f800283a 	ret

00004a10 <__sfp>:
    4a10:	defffb04 	addi	sp,sp,-20
    4a14:	dc000015 	stw	r16,0(sp)
    4a18:	04000074 	movhi	r16,1
    4a1c:	840d8f04 	addi	r16,r16,13884
    4a20:	dcc00315 	stw	r19,12(sp)
    4a24:	2027883a 	mov	r19,r4
    4a28:	81000017 	ldw	r4,0(r16)
    4a2c:	dfc00415 	stw	ra,16(sp)
    4a30:	dc800215 	stw	r18,8(sp)
    4a34:	20800e17 	ldw	r2,56(r4)
    4a38:	dc400115 	stw	r17,4(sp)
    4a3c:	1000021e 	bne	r2,zero,4a48 <__sfp+0x38>
    4a40:	00048040 	call	4804 <__sinit.part.1>
    4a44:	81000017 	ldw	r4,0(r16)
    4a48:	2480b804 	addi	r18,r4,736
    4a4c:	047fffc4 	movi	r17,-1
    4a50:	91000117 	ldw	r4,4(r18)
    4a54:	94000217 	ldw	r16,8(r18)
    4a58:	213fffc4 	addi	r4,r4,-1
    4a5c:	20000a16 	blt	r4,zero,4a88 <__sfp+0x78>
    4a60:	8080030f 	ldh	r2,12(r16)
    4a64:	10000c26 	beq	r2,zero,4a98 <__sfp+0x88>
    4a68:	80c01d04 	addi	r3,r16,116
    4a6c:	00000206 	br	4a78 <__sfp+0x68>
    4a70:	18bfe60f 	ldh	r2,-104(r3)
    4a74:	10000826 	beq	r2,zero,4a98 <__sfp+0x88>
    4a78:	213fffc4 	addi	r4,r4,-1
    4a7c:	1c3ffd04 	addi	r16,r3,-12
    4a80:	18c01a04 	addi	r3,r3,104
    4a84:	247ffa1e 	bne	r4,r17,4a70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004a70>
    4a88:	90800017 	ldw	r2,0(r18)
    4a8c:	10001d26 	beq	r2,zero,4b04 <__sfp+0xf4>
    4a90:	1025883a 	mov	r18,r2
    4a94:	003fee06 	br	4a50 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004a50>
    4a98:	00bfffc4 	movi	r2,-1
    4a9c:	8080038d 	sth	r2,14(r16)
    4aa0:	00800044 	movi	r2,1
    4aa4:	8080030d 	sth	r2,12(r16)
    4aa8:	80001915 	stw	zero,100(r16)
    4aac:	80000015 	stw	zero,0(r16)
    4ab0:	80000215 	stw	zero,8(r16)
    4ab4:	80000115 	stw	zero,4(r16)
    4ab8:	80000415 	stw	zero,16(r16)
    4abc:	80000515 	stw	zero,20(r16)
    4ac0:	80000615 	stw	zero,24(r16)
    4ac4:	01800204 	movi	r6,8
    4ac8:	000b883a 	mov	r5,zero
    4acc:	81001704 	addi	r4,r16,92
    4ad0:	0005e1c0 	call	5e1c <memset>
    4ad4:	8005883a 	mov	r2,r16
    4ad8:	80000c15 	stw	zero,48(r16)
    4adc:	80000d15 	stw	zero,52(r16)
    4ae0:	80001115 	stw	zero,68(r16)
    4ae4:	80001215 	stw	zero,72(r16)
    4ae8:	dfc00417 	ldw	ra,16(sp)
    4aec:	dcc00317 	ldw	r19,12(sp)
    4af0:	dc800217 	ldw	r18,8(sp)
    4af4:	dc400117 	ldw	r17,4(sp)
    4af8:	dc000017 	ldw	r16,0(sp)
    4afc:	dec00504 	addi	sp,sp,20
    4b00:	f800283a 	ret
    4b04:	01400104 	movi	r5,4
    4b08:	9809883a 	mov	r4,r19
    4b0c:	00049a80 	call	49a8 <__sfmoreglue>
    4b10:	90800015 	stw	r2,0(r18)
    4b14:	103fde1e 	bne	r2,zero,4a90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004a90>
    4b18:	00800304 	movi	r2,12
    4b1c:	98800015 	stw	r2,0(r19)
    4b20:	0005883a 	mov	r2,zero
    4b24:	003ff006 	br	4ae8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004ae8>

00004b28 <_cleanup>:
    4b28:	00800074 	movhi	r2,1
    4b2c:	108d8f04 	addi	r2,r2,13884
    4b30:	11000017 	ldw	r4,0(r2)
    4b34:	01400074 	movhi	r5,1
    4b38:	29629e04 	addi	r5,r5,-30088
    4b3c:	00050881 	jmpi	5088 <_fwalk_reent>

00004b40 <__sinit>:
    4b40:	20800e17 	ldw	r2,56(r4)
    4b44:	10000126 	beq	r2,zero,4b4c <__sinit+0xc>
    4b48:	f800283a 	ret
    4b4c:	00048041 	jmpi	4804 <__sinit.part.1>

00004b50 <__sfp_lock_acquire>:
    4b50:	f800283a 	ret

00004b54 <__sfp_lock_release>:
    4b54:	f800283a 	ret

00004b58 <__sinit_lock_acquire>:
    4b58:	f800283a 	ret

00004b5c <__sinit_lock_release>:
    4b5c:	f800283a 	ret

00004b60 <__fp_lock_all>:
    4b60:	00800074 	movhi	r2,1
    4b64:	108d9004 	addi	r2,r2,13888
    4b68:	11000017 	ldw	r4,0(r2)
    4b6c:	01400034 	movhi	r5,0
    4b70:	29526804 	addi	r5,r5,18848
    4b74:	0004fc41 	jmpi	4fc4 <_fwalk>

00004b78 <__fp_unlock_all>:
    4b78:	00800074 	movhi	r2,1
    4b7c:	108d9004 	addi	r2,r2,13888
    4b80:	11000017 	ldw	r4,0(r2)
    4b84:	01400034 	movhi	r5,0
    4b88:	2951fc04 	addi	r5,r5,18416
    4b8c:	0004fc41 	jmpi	4fc4 <_fwalk>

00004b90 <_malloc_trim_r>:
    4b90:	defffb04 	addi	sp,sp,-20
    4b94:	dcc00315 	stw	r19,12(sp)
    4b98:	04c00074 	movhi	r19,1
    4b9c:	dc800215 	stw	r18,8(sp)
    4ba0:	dc400115 	stw	r17,4(sp)
    4ba4:	dc000015 	stw	r16,0(sp)
    4ba8:	dfc00415 	stw	ra,16(sp)
    4bac:	2821883a 	mov	r16,r5
    4bb0:	9cc74704 	addi	r19,r19,7452
    4bb4:	2025883a 	mov	r18,r4
    4bb8:	000d7680 	call	d768 <__malloc_lock>
    4bbc:	98800217 	ldw	r2,8(r19)
    4bc0:	14400117 	ldw	r17,4(r2)
    4bc4:	00bfff04 	movi	r2,-4
    4bc8:	88a2703a 	and	r17,r17,r2
    4bcc:	8c21c83a 	sub	r16,r17,r16
    4bd0:	8403fbc4 	addi	r16,r16,4079
    4bd4:	8020d33a 	srli	r16,r16,12
    4bd8:	0083ffc4 	movi	r2,4095
    4bdc:	843fffc4 	addi	r16,r16,-1
    4be0:	8020933a 	slli	r16,r16,12
    4be4:	1400060e 	bge	r2,r16,4c00 <_malloc_trim_r+0x70>
    4be8:	000b883a 	mov	r5,zero
    4bec:	9009883a 	mov	r4,r18
    4bf0:	0006fb40 	call	6fb4 <_sbrk_r>
    4bf4:	98c00217 	ldw	r3,8(r19)
    4bf8:	1c47883a 	add	r3,r3,r17
    4bfc:	10c00a26 	beq	r2,r3,4c28 <_malloc_trim_r+0x98>
    4c00:	9009883a 	mov	r4,r18
    4c04:	000d78c0 	call	d78c <__malloc_unlock>
    4c08:	0005883a 	mov	r2,zero
    4c0c:	dfc00417 	ldw	ra,16(sp)
    4c10:	dcc00317 	ldw	r19,12(sp)
    4c14:	dc800217 	ldw	r18,8(sp)
    4c18:	dc400117 	ldw	r17,4(sp)
    4c1c:	dc000017 	ldw	r16,0(sp)
    4c20:	dec00504 	addi	sp,sp,20
    4c24:	f800283a 	ret
    4c28:	040bc83a 	sub	r5,zero,r16
    4c2c:	9009883a 	mov	r4,r18
    4c30:	0006fb40 	call	6fb4 <_sbrk_r>
    4c34:	00ffffc4 	movi	r3,-1
    4c38:	10c00d26 	beq	r2,r3,4c70 <_malloc_trim_r+0xe0>
    4c3c:	00c00074 	movhi	r3,1
    4c40:	18d53404 	addi	r3,r3,21712
    4c44:	18800017 	ldw	r2,0(r3)
    4c48:	99000217 	ldw	r4,8(r19)
    4c4c:	8c23c83a 	sub	r17,r17,r16
    4c50:	8c400054 	ori	r17,r17,1
    4c54:	1421c83a 	sub	r16,r2,r16
    4c58:	24400115 	stw	r17,4(r4)
    4c5c:	9009883a 	mov	r4,r18
    4c60:	1c000015 	stw	r16,0(r3)
    4c64:	000d78c0 	call	d78c <__malloc_unlock>
    4c68:	00800044 	movi	r2,1
    4c6c:	003fe706 	br	4c0c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004c0c>
    4c70:	000b883a 	mov	r5,zero
    4c74:	9009883a 	mov	r4,r18
    4c78:	0006fb40 	call	6fb4 <_sbrk_r>
    4c7c:	99000217 	ldw	r4,8(r19)
    4c80:	014003c4 	movi	r5,15
    4c84:	1107c83a 	sub	r3,r2,r4
    4c88:	28ffdd0e 	bge	r5,r3,4c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004c00>
    4c8c:	01400074 	movhi	r5,1
    4c90:	294d9204 	addi	r5,r5,13896
    4c94:	29400017 	ldw	r5,0(r5)
    4c98:	18c00054 	ori	r3,r3,1
    4c9c:	20c00115 	stw	r3,4(r4)
    4ca0:	00c00074 	movhi	r3,1
    4ca4:	1145c83a 	sub	r2,r2,r5
    4ca8:	18d53404 	addi	r3,r3,21712
    4cac:	18800015 	stw	r2,0(r3)
    4cb0:	003fd306 	br	4c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004c00>

00004cb4 <_free_r>:
    4cb4:	28004126 	beq	r5,zero,4dbc <_free_r+0x108>
    4cb8:	defffd04 	addi	sp,sp,-12
    4cbc:	dc400115 	stw	r17,4(sp)
    4cc0:	dc000015 	stw	r16,0(sp)
    4cc4:	2023883a 	mov	r17,r4
    4cc8:	2821883a 	mov	r16,r5
    4ccc:	dfc00215 	stw	ra,8(sp)
    4cd0:	000d7680 	call	d768 <__malloc_lock>
    4cd4:	81ffff17 	ldw	r7,-4(r16)
    4cd8:	00bfff84 	movi	r2,-2
    4cdc:	01000074 	movhi	r4,1
    4ce0:	81bffe04 	addi	r6,r16,-8
    4ce4:	3884703a 	and	r2,r7,r2
    4ce8:	21074704 	addi	r4,r4,7452
    4cec:	308b883a 	add	r5,r6,r2
    4cf0:	2a400117 	ldw	r9,4(r5)
    4cf4:	22000217 	ldw	r8,8(r4)
    4cf8:	00ffff04 	movi	r3,-4
    4cfc:	48c6703a 	and	r3,r9,r3
    4d00:	2a005726 	beq	r5,r8,4e60 <_free_r+0x1ac>
    4d04:	28c00115 	stw	r3,4(r5)
    4d08:	39c0004c 	andi	r7,r7,1
    4d0c:	3800091e 	bne	r7,zero,4d34 <_free_r+0x80>
    4d10:	823ffe17 	ldw	r8,-8(r16)
    4d14:	22400204 	addi	r9,r4,8
    4d18:	320dc83a 	sub	r6,r6,r8
    4d1c:	31c00217 	ldw	r7,8(r6)
    4d20:	1205883a 	add	r2,r2,r8
    4d24:	3a406526 	beq	r7,r9,4ebc <_free_r+0x208>
    4d28:	32000317 	ldw	r8,12(r6)
    4d2c:	3a000315 	stw	r8,12(r7)
    4d30:	41c00215 	stw	r7,8(r8)
    4d34:	28cf883a 	add	r7,r5,r3
    4d38:	39c00117 	ldw	r7,4(r7)
    4d3c:	39c0004c 	andi	r7,r7,1
    4d40:	38003a26 	beq	r7,zero,4e2c <_free_r+0x178>
    4d44:	10c00054 	ori	r3,r2,1
    4d48:	30c00115 	stw	r3,4(r6)
    4d4c:	3087883a 	add	r3,r6,r2
    4d50:	18800015 	stw	r2,0(r3)
    4d54:	00c07fc4 	movi	r3,511
    4d58:	18801936 	bltu	r3,r2,4dc0 <_free_r+0x10c>
    4d5c:	1004d0fa 	srli	r2,r2,3
    4d60:	01c00044 	movi	r7,1
    4d64:	21400117 	ldw	r5,4(r4)
    4d68:	10c00044 	addi	r3,r2,1
    4d6c:	18c7883a 	add	r3,r3,r3
    4d70:	1005d0ba 	srai	r2,r2,2
    4d74:	18c7883a 	add	r3,r3,r3
    4d78:	18c7883a 	add	r3,r3,r3
    4d7c:	1907883a 	add	r3,r3,r4
    4d80:	3884983a 	sll	r2,r7,r2
    4d84:	19c00017 	ldw	r7,0(r3)
    4d88:	1a3ffe04 	addi	r8,r3,-8
    4d8c:	1144b03a 	or	r2,r2,r5
    4d90:	32000315 	stw	r8,12(r6)
    4d94:	31c00215 	stw	r7,8(r6)
    4d98:	20800115 	stw	r2,4(r4)
    4d9c:	19800015 	stw	r6,0(r3)
    4da0:	39800315 	stw	r6,12(r7)
    4da4:	8809883a 	mov	r4,r17
    4da8:	dfc00217 	ldw	ra,8(sp)
    4dac:	dc400117 	ldw	r17,4(sp)
    4db0:	dc000017 	ldw	r16,0(sp)
    4db4:	dec00304 	addi	sp,sp,12
    4db8:	000d78c1 	jmpi	d78c <__malloc_unlock>
    4dbc:	f800283a 	ret
    4dc0:	100ad27a 	srli	r5,r2,9
    4dc4:	00c00104 	movi	r3,4
    4dc8:	19404a36 	bltu	r3,r5,4ef4 <_free_r+0x240>
    4dcc:	100ad1ba 	srli	r5,r2,6
    4dd0:	28c00e44 	addi	r3,r5,57
    4dd4:	18c7883a 	add	r3,r3,r3
    4dd8:	29400e04 	addi	r5,r5,56
    4ddc:	18c7883a 	add	r3,r3,r3
    4de0:	18c7883a 	add	r3,r3,r3
    4de4:	1909883a 	add	r4,r3,r4
    4de8:	20c00017 	ldw	r3,0(r4)
    4dec:	01c00074 	movhi	r7,1
    4df0:	213ffe04 	addi	r4,r4,-8
    4df4:	39c74704 	addi	r7,r7,7452
    4df8:	20c04426 	beq	r4,r3,4f0c <_free_r+0x258>
    4dfc:	01ffff04 	movi	r7,-4
    4e00:	19400117 	ldw	r5,4(r3)
    4e04:	29ca703a 	and	r5,r5,r7
    4e08:	1140022e 	bgeu	r2,r5,4e14 <_free_r+0x160>
    4e0c:	18c00217 	ldw	r3,8(r3)
    4e10:	20fffb1e 	bne	r4,r3,4e00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004e00>
    4e14:	19000317 	ldw	r4,12(r3)
    4e18:	31000315 	stw	r4,12(r6)
    4e1c:	30c00215 	stw	r3,8(r6)
    4e20:	21800215 	stw	r6,8(r4)
    4e24:	19800315 	stw	r6,12(r3)
    4e28:	003fde06 	br	4da4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004da4>
    4e2c:	29c00217 	ldw	r7,8(r5)
    4e30:	10c5883a 	add	r2,r2,r3
    4e34:	00c00074 	movhi	r3,1
    4e38:	18c74904 	addi	r3,r3,7460
    4e3c:	38c03b26 	beq	r7,r3,4f2c <_free_r+0x278>
    4e40:	2a000317 	ldw	r8,12(r5)
    4e44:	11400054 	ori	r5,r2,1
    4e48:	3087883a 	add	r3,r6,r2
    4e4c:	3a000315 	stw	r8,12(r7)
    4e50:	41c00215 	stw	r7,8(r8)
    4e54:	31400115 	stw	r5,4(r6)
    4e58:	18800015 	stw	r2,0(r3)
    4e5c:	003fbd06 	br	4d54 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004d54>
    4e60:	39c0004c 	andi	r7,r7,1
    4e64:	10c5883a 	add	r2,r2,r3
    4e68:	3800071e 	bne	r7,zero,4e88 <_free_r+0x1d4>
    4e6c:	81fffe17 	ldw	r7,-8(r16)
    4e70:	31cdc83a 	sub	r6,r6,r7
    4e74:	30c00317 	ldw	r3,12(r6)
    4e78:	31400217 	ldw	r5,8(r6)
    4e7c:	11c5883a 	add	r2,r2,r7
    4e80:	28c00315 	stw	r3,12(r5)
    4e84:	19400215 	stw	r5,8(r3)
    4e88:	10c00054 	ori	r3,r2,1
    4e8c:	30c00115 	stw	r3,4(r6)
    4e90:	00c00074 	movhi	r3,1
    4e94:	18cd9304 	addi	r3,r3,13900
    4e98:	18c00017 	ldw	r3,0(r3)
    4e9c:	21800215 	stw	r6,8(r4)
    4ea0:	10ffc036 	bltu	r2,r3,4da4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004da4>
    4ea4:	00800074 	movhi	r2,1
    4ea8:	10952704 	addi	r2,r2,21660
    4eac:	11400017 	ldw	r5,0(r2)
    4eb0:	8809883a 	mov	r4,r17
    4eb4:	0004b900 	call	4b90 <_malloc_trim_r>
    4eb8:	003fba06 	br	4da4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004da4>
    4ebc:	28c9883a 	add	r4,r5,r3
    4ec0:	21000117 	ldw	r4,4(r4)
    4ec4:	2100004c 	andi	r4,r4,1
    4ec8:	2000391e 	bne	r4,zero,4fb0 <_free_r+0x2fc>
    4ecc:	29c00217 	ldw	r7,8(r5)
    4ed0:	29000317 	ldw	r4,12(r5)
    4ed4:	1885883a 	add	r2,r3,r2
    4ed8:	10c00054 	ori	r3,r2,1
    4edc:	39000315 	stw	r4,12(r7)
    4ee0:	21c00215 	stw	r7,8(r4)
    4ee4:	30c00115 	stw	r3,4(r6)
    4ee8:	308d883a 	add	r6,r6,r2
    4eec:	30800015 	stw	r2,0(r6)
    4ef0:	003fac06 	br	4da4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004da4>
    4ef4:	00c00504 	movi	r3,20
    4ef8:	19401536 	bltu	r3,r5,4f50 <_free_r+0x29c>
    4efc:	28c01704 	addi	r3,r5,92
    4f00:	18c7883a 	add	r3,r3,r3
    4f04:	294016c4 	addi	r5,r5,91
    4f08:	003fb406 	br	4ddc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004ddc>
    4f0c:	280bd0ba 	srai	r5,r5,2
    4f10:	00c00044 	movi	r3,1
    4f14:	38800117 	ldw	r2,4(r7)
    4f18:	194a983a 	sll	r5,r3,r5
    4f1c:	2007883a 	mov	r3,r4
    4f20:	2884b03a 	or	r2,r5,r2
    4f24:	38800115 	stw	r2,4(r7)
    4f28:	003fbb06 	br	4e18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004e18>
    4f2c:	21800515 	stw	r6,20(r4)
    4f30:	21800415 	stw	r6,16(r4)
    4f34:	10c00054 	ori	r3,r2,1
    4f38:	31c00315 	stw	r7,12(r6)
    4f3c:	31c00215 	stw	r7,8(r6)
    4f40:	30c00115 	stw	r3,4(r6)
    4f44:	308d883a 	add	r6,r6,r2
    4f48:	30800015 	stw	r2,0(r6)
    4f4c:	003f9506 	br	4da4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004da4>
    4f50:	00c01504 	movi	r3,84
    4f54:	19400536 	bltu	r3,r5,4f6c <_free_r+0x2b8>
    4f58:	100ad33a 	srli	r5,r2,12
    4f5c:	28c01bc4 	addi	r3,r5,111
    4f60:	18c7883a 	add	r3,r3,r3
    4f64:	29401b84 	addi	r5,r5,110
    4f68:	003f9c06 	br	4ddc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004ddc>
    4f6c:	00c05504 	movi	r3,340
    4f70:	19400536 	bltu	r3,r5,4f88 <_free_r+0x2d4>
    4f74:	100ad3fa 	srli	r5,r2,15
    4f78:	28c01e04 	addi	r3,r5,120
    4f7c:	18c7883a 	add	r3,r3,r3
    4f80:	29401dc4 	addi	r5,r5,119
    4f84:	003f9506 	br	4ddc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004ddc>
    4f88:	00c15504 	movi	r3,1364
    4f8c:	19400536 	bltu	r3,r5,4fa4 <_free_r+0x2f0>
    4f90:	100ad4ba 	srli	r5,r2,18
    4f94:	28c01f44 	addi	r3,r5,125
    4f98:	18c7883a 	add	r3,r3,r3
    4f9c:	29401f04 	addi	r5,r5,124
    4fa0:	003f8e06 	br	4ddc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004ddc>
    4fa4:	00c03f84 	movi	r3,254
    4fa8:	01401f84 	movi	r5,126
    4fac:	003f8b06 	br	4ddc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004ddc>
    4fb0:	10c00054 	ori	r3,r2,1
    4fb4:	30c00115 	stw	r3,4(r6)
    4fb8:	308d883a 	add	r6,r6,r2
    4fbc:	30800015 	stw	r2,0(r6)
    4fc0:	003f7806 	br	4da4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004da4>

00004fc4 <_fwalk>:
    4fc4:	defff704 	addi	sp,sp,-36
    4fc8:	dd000415 	stw	r20,16(sp)
    4fcc:	dfc00815 	stw	ra,32(sp)
    4fd0:	ddc00715 	stw	r23,28(sp)
    4fd4:	dd800615 	stw	r22,24(sp)
    4fd8:	dd400515 	stw	r21,20(sp)
    4fdc:	dcc00315 	stw	r19,12(sp)
    4fe0:	dc800215 	stw	r18,8(sp)
    4fe4:	dc400115 	stw	r17,4(sp)
    4fe8:	dc000015 	stw	r16,0(sp)
    4fec:	2500b804 	addi	r20,r4,736
    4ff0:	a0002326 	beq	r20,zero,5080 <_fwalk+0xbc>
    4ff4:	282b883a 	mov	r21,r5
    4ff8:	002f883a 	mov	r23,zero
    4ffc:	05800044 	movi	r22,1
    5000:	04ffffc4 	movi	r19,-1
    5004:	a4400117 	ldw	r17,4(r20)
    5008:	a4800217 	ldw	r18,8(r20)
    500c:	8c7fffc4 	addi	r17,r17,-1
    5010:	88000d16 	blt	r17,zero,5048 <_fwalk+0x84>
    5014:	94000304 	addi	r16,r18,12
    5018:	94800384 	addi	r18,r18,14
    501c:	8080000b 	ldhu	r2,0(r16)
    5020:	8c7fffc4 	addi	r17,r17,-1
    5024:	813ffd04 	addi	r4,r16,-12
    5028:	b080042e 	bgeu	r22,r2,503c <_fwalk+0x78>
    502c:	9080000f 	ldh	r2,0(r18)
    5030:	14c00226 	beq	r2,r19,503c <_fwalk+0x78>
    5034:	a83ee83a 	callr	r21
    5038:	b8aeb03a 	or	r23,r23,r2
    503c:	84001a04 	addi	r16,r16,104
    5040:	94801a04 	addi	r18,r18,104
    5044:	8cfff51e 	bne	r17,r19,501c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700501c>
    5048:	a5000017 	ldw	r20,0(r20)
    504c:	a03fed1e 	bne	r20,zero,5004 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005004>
    5050:	b805883a 	mov	r2,r23
    5054:	dfc00817 	ldw	ra,32(sp)
    5058:	ddc00717 	ldw	r23,28(sp)
    505c:	dd800617 	ldw	r22,24(sp)
    5060:	dd400517 	ldw	r21,20(sp)
    5064:	dd000417 	ldw	r20,16(sp)
    5068:	dcc00317 	ldw	r19,12(sp)
    506c:	dc800217 	ldw	r18,8(sp)
    5070:	dc400117 	ldw	r17,4(sp)
    5074:	dc000017 	ldw	r16,0(sp)
    5078:	dec00904 	addi	sp,sp,36
    507c:	f800283a 	ret
    5080:	002f883a 	mov	r23,zero
    5084:	003ff206 	br	5050 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005050>

00005088 <_fwalk_reent>:
    5088:	defff704 	addi	sp,sp,-36
    508c:	dd000415 	stw	r20,16(sp)
    5090:	dfc00815 	stw	ra,32(sp)
    5094:	ddc00715 	stw	r23,28(sp)
    5098:	dd800615 	stw	r22,24(sp)
    509c:	dd400515 	stw	r21,20(sp)
    50a0:	dcc00315 	stw	r19,12(sp)
    50a4:	dc800215 	stw	r18,8(sp)
    50a8:	dc400115 	stw	r17,4(sp)
    50ac:	dc000015 	stw	r16,0(sp)
    50b0:	2500b804 	addi	r20,r4,736
    50b4:	a0002326 	beq	r20,zero,5144 <_fwalk_reent+0xbc>
    50b8:	282b883a 	mov	r21,r5
    50bc:	2027883a 	mov	r19,r4
    50c0:	002f883a 	mov	r23,zero
    50c4:	05800044 	movi	r22,1
    50c8:	04bfffc4 	movi	r18,-1
    50cc:	a4400117 	ldw	r17,4(r20)
    50d0:	a4000217 	ldw	r16,8(r20)
    50d4:	8c7fffc4 	addi	r17,r17,-1
    50d8:	88000c16 	blt	r17,zero,510c <_fwalk_reent+0x84>
    50dc:	84000304 	addi	r16,r16,12
    50e0:	8080000b 	ldhu	r2,0(r16)
    50e4:	8c7fffc4 	addi	r17,r17,-1
    50e8:	817ffd04 	addi	r5,r16,-12
    50ec:	b080052e 	bgeu	r22,r2,5104 <_fwalk_reent+0x7c>
    50f0:	8080008f 	ldh	r2,2(r16)
    50f4:	9809883a 	mov	r4,r19
    50f8:	14800226 	beq	r2,r18,5104 <_fwalk_reent+0x7c>
    50fc:	a83ee83a 	callr	r21
    5100:	b8aeb03a 	or	r23,r23,r2
    5104:	84001a04 	addi	r16,r16,104
    5108:	8cbff51e 	bne	r17,r18,50e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70050e0>
    510c:	a5000017 	ldw	r20,0(r20)
    5110:	a03fee1e 	bne	r20,zero,50cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70050cc>
    5114:	b805883a 	mov	r2,r23
    5118:	dfc00817 	ldw	ra,32(sp)
    511c:	ddc00717 	ldw	r23,28(sp)
    5120:	dd800617 	ldw	r22,24(sp)
    5124:	dd400517 	ldw	r21,20(sp)
    5128:	dd000417 	ldw	r20,16(sp)
    512c:	dcc00317 	ldw	r19,12(sp)
    5130:	dc800217 	ldw	r18,8(sp)
    5134:	dc400117 	ldw	r17,4(sp)
    5138:	dc000017 	ldw	r16,0(sp)
    513c:	dec00904 	addi	sp,sp,36
    5140:	f800283a 	ret
    5144:	002f883a 	mov	r23,zero
    5148:	003ff206 	br	5114 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005114>

0000514c <_setlocale_r>:
    514c:	30001b26 	beq	r6,zero,51bc <_setlocale_r+0x70>
    5150:	01400074 	movhi	r5,1
    5154:	defffe04 	addi	sp,sp,-8
    5158:	29456e04 	addi	r5,r5,5560
    515c:	3009883a 	mov	r4,r6
    5160:	dc000015 	stw	r16,0(sp)
    5164:	dfc00115 	stw	ra,4(sp)
    5168:	3021883a 	mov	r16,r6
    516c:	00071440 	call	7144 <strcmp>
    5170:	1000061e 	bne	r2,zero,518c <_setlocale_r+0x40>
    5174:	00800074 	movhi	r2,1
    5178:	10856d04 	addi	r2,r2,5556
    517c:	dfc00117 	ldw	ra,4(sp)
    5180:	dc000017 	ldw	r16,0(sp)
    5184:	dec00204 	addi	sp,sp,8
    5188:	f800283a 	ret
    518c:	01400074 	movhi	r5,1
    5190:	29456d04 	addi	r5,r5,5556
    5194:	8009883a 	mov	r4,r16
    5198:	00071440 	call	7144 <strcmp>
    519c:	103ff526 	beq	r2,zero,5174 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005174>
    51a0:	01400074 	movhi	r5,1
    51a4:	29455804 	addi	r5,r5,5472
    51a8:	8009883a 	mov	r4,r16
    51ac:	00071440 	call	7144 <strcmp>
    51b0:	103ff026 	beq	r2,zero,5174 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005174>
    51b4:	0005883a 	mov	r2,zero
    51b8:	003ff006 	br	517c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700517c>
    51bc:	00800074 	movhi	r2,1
    51c0:	10856d04 	addi	r2,r2,5556
    51c4:	f800283a 	ret

000051c8 <__locale_charset>:
    51c8:	00800074 	movhi	r2,1
    51cc:	10873104 	addi	r2,r2,7364
    51d0:	f800283a 	ret

000051d4 <__locale_mb_cur_max>:
    51d4:	00800074 	movhi	r2,1
    51d8:	108d9104 	addi	r2,r2,13892
    51dc:	10800017 	ldw	r2,0(r2)
    51e0:	f800283a 	ret

000051e4 <__locale_msgcharset>:
    51e4:	00800074 	movhi	r2,1
    51e8:	10872904 	addi	r2,r2,7332
    51ec:	f800283a 	ret

000051f0 <__locale_cjk_lang>:
    51f0:	0005883a 	mov	r2,zero
    51f4:	f800283a 	ret

000051f8 <_localeconv_r>:
    51f8:	00800074 	movhi	r2,1
    51fc:	10873904 	addi	r2,r2,7396
    5200:	f800283a 	ret

00005204 <setlocale>:
    5204:	00800074 	movhi	r2,1
    5208:	108d9004 	addi	r2,r2,13888
    520c:	280d883a 	mov	r6,r5
    5210:	200b883a 	mov	r5,r4
    5214:	11000017 	ldw	r4,0(r2)
    5218:	000514c1 	jmpi	514c <_setlocale_r>

0000521c <localeconv>:
    521c:	00800074 	movhi	r2,1
    5220:	10873904 	addi	r2,r2,7396
    5224:	f800283a 	ret

00005228 <__smakebuf_r>:
    5228:	2880030b 	ldhu	r2,12(r5)
    522c:	10c0008c 	andi	r3,r2,2
    5230:	1800411e 	bne	r3,zero,5338 <__smakebuf_r+0x110>
    5234:	deffec04 	addi	sp,sp,-80
    5238:	dc000f15 	stw	r16,60(sp)
    523c:	2821883a 	mov	r16,r5
    5240:	2940038f 	ldh	r5,14(r5)
    5244:	dc401015 	stw	r17,64(sp)
    5248:	dfc01315 	stw	ra,76(sp)
    524c:	dcc01215 	stw	r19,72(sp)
    5250:	dc801115 	stw	r18,68(sp)
    5254:	2023883a 	mov	r17,r4
    5258:	28001c16 	blt	r5,zero,52cc <__smakebuf_r+0xa4>
    525c:	d80d883a 	mov	r6,sp
    5260:	0008d840 	call	8d84 <_fstat_r>
    5264:	10001816 	blt	r2,zero,52c8 <__smakebuf_r+0xa0>
    5268:	d8800117 	ldw	r2,4(sp)
    526c:	00e00014 	movui	r3,32768
    5270:	10bc000c 	andi	r2,r2,61440
    5274:	14c80020 	cmpeqi	r19,r2,8192
    5278:	10c03726 	beq	r2,r3,5358 <__smakebuf_r+0x130>
    527c:	80c0030b 	ldhu	r3,12(r16)
    5280:	18c20014 	ori	r3,r3,2048
    5284:	80c0030d 	sth	r3,12(r16)
    5288:	00c80004 	movi	r3,8192
    528c:	10c0521e 	bne	r2,r3,53d8 <__smakebuf_r+0x1b0>
    5290:	8140038f 	ldh	r5,14(r16)
    5294:	8809883a 	mov	r4,r17
    5298:	000929c0 	call	929c <_isatty_r>
    529c:	10004c26 	beq	r2,zero,53d0 <__smakebuf_r+0x1a8>
    52a0:	8080030b 	ldhu	r2,12(r16)
    52a4:	80c010c4 	addi	r3,r16,67
    52a8:	80c00015 	stw	r3,0(r16)
    52ac:	10800054 	ori	r2,r2,1
    52b0:	8080030d 	sth	r2,12(r16)
    52b4:	00800044 	movi	r2,1
    52b8:	80c00415 	stw	r3,16(r16)
    52bc:	80800515 	stw	r2,20(r16)
    52c0:	04810004 	movi	r18,1024
    52c4:	00000706 	br	52e4 <__smakebuf_r+0xbc>
    52c8:	8080030b 	ldhu	r2,12(r16)
    52cc:	10c0200c 	andi	r3,r2,128
    52d0:	18001f1e 	bne	r3,zero,5350 <__smakebuf_r+0x128>
    52d4:	04810004 	movi	r18,1024
    52d8:	10820014 	ori	r2,r2,2048
    52dc:	8080030d 	sth	r2,12(r16)
    52e0:	0027883a 	mov	r19,zero
    52e4:	900b883a 	mov	r5,r18
    52e8:	8809883a 	mov	r4,r17
    52ec:	00053e40 	call	53e4 <_malloc_r>
    52f0:	10002c26 	beq	r2,zero,53a4 <__smakebuf_r+0x17c>
    52f4:	80c0030b 	ldhu	r3,12(r16)
    52f8:	01000034 	movhi	r4,0
    52fc:	2111fe04 	addi	r4,r4,18424
    5300:	89000f15 	stw	r4,60(r17)
    5304:	18c02014 	ori	r3,r3,128
    5308:	80c0030d 	sth	r3,12(r16)
    530c:	80800015 	stw	r2,0(r16)
    5310:	80800415 	stw	r2,16(r16)
    5314:	84800515 	stw	r18,20(r16)
    5318:	98001a1e 	bne	r19,zero,5384 <__smakebuf_r+0x15c>
    531c:	dfc01317 	ldw	ra,76(sp)
    5320:	dcc01217 	ldw	r19,72(sp)
    5324:	dc801117 	ldw	r18,68(sp)
    5328:	dc401017 	ldw	r17,64(sp)
    532c:	dc000f17 	ldw	r16,60(sp)
    5330:	dec01404 	addi	sp,sp,80
    5334:	f800283a 	ret
    5338:	288010c4 	addi	r2,r5,67
    533c:	28800015 	stw	r2,0(r5)
    5340:	28800415 	stw	r2,16(r5)
    5344:	00800044 	movi	r2,1
    5348:	28800515 	stw	r2,20(r5)
    534c:	f800283a 	ret
    5350:	04801004 	movi	r18,64
    5354:	003fe006 	br	52d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70052d8>
    5358:	81000a17 	ldw	r4,40(r16)
    535c:	00c00034 	movhi	r3,0
    5360:	18dc3804 	addi	r3,r3,28896
    5364:	20ffc51e 	bne	r4,r3,527c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700527c>
    5368:	8080030b 	ldhu	r2,12(r16)
    536c:	04810004 	movi	r18,1024
    5370:	84801315 	stw	r18,76(r16)
    5374:	1484b03a 	or	r2,r2,r18
    5378:	8080030d 	sth	r2,12(r16)
    537c:	0027883a 	mov	r19,zero
    5380:	003fd806 	br	52e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70052e4>
    5384:	8140038f 	ldh	r5,14(r16)
    5388:	8809883a 	mov	r4,r17
    538c:	000929c0 	call	929c <_isatty_r>
    5390:	103fe226 	beq	r2,zero,531c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700531c>
    5394:	8080030b 	ldhu	r2,12(r16)
    5398:	10800054 	ori	r2,r2,1
    539c:	8080030d 	sth	r2,12(r16)
    53a0:	003fde06 	br	531c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700531c>
    53a4:	8080030b 	ldhu	r2,12(r16)
    53a8:	10c0800c 	andi	r3,r2,512
    53ac:	183fdb1e 	bne	r3,zero,531c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700531c>
    53b0:	10800094 	ori	r2,r2,2
    53b4:	80c010c4 	addi	r3,r16,67
    53b8:	8080030d 	sth	r2,12(r16)
    53bc:	00800044 	movi	r2,1
    53c0:	80c00015 	stw	r3,0(r16)
    53c4:	80c00415 	stw	r3,16(r16)
    53c8:	80800515 	stw	r2,20(r16)
    53cc:	003fd306 	br	531c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700531c>
    53d0:	04810004 	movi	r18,1024
    53d4:	003fc306 	br	52e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70052e4>
    53d8:	0027883a 	mov	r19,zero
    53dc:	04810004 	movi	r18,1024
    53e0:	003fc006 	br	52e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70052e4>

000053e4 <_malloc_r>:
    53e4:	defff504 	addi	sp,sp,-44
    53e8:	dc800315 	stw	r18,12(sp)
    53ec:	dfc00a15 	stw	ra,40(sp)
    53f0:	df000915 	stw	fp,36(sp)
    53f4:	ddc00815 	stw	r23,32(sp)
    53f8:	dd800715 	stw	r22,28(sp)
    53fc:	dd400615 	stw	r21,24(sp)
    5400:	dd000515 	stw	r20,20(sp)
    5404:	dcc00415 	stw	r19,16(sp)
    5408:	dc400215 	stw	r17,8(sp)
    540c:	dc000115 	stw	r16,4(sp)
    5410:	288002c4 	addi	r2,r5,11
    5414:	00c00584 	movi	r3,22
    5418:	2025883a 	mov	r18,r4
    541c:	18807f2e 	bgeu	r3,r2,561c <_malloc_r+0x238>
    5420:	047ffe04 	movi	r17,-8
    5424:	1462703a 	and	r17,r2,r17
    5428:	8800a316 	blt	r17,zero,56b8 <_malloc_r+0x2d4>
    542c:	8940a236 	bltu	r17,r5,56b8 <_malloc_r+0x2d4>
    5430:	000d7680 	call	d768 <__malloc_lock>
    5434:	00807dc4 	movi	r2,503
    5438:	1441e92e 	bgeu	r2,r17,5be0 <_malloc_r+0x7fc>
    543c:	8804d27a 	srli	r2,r17,9
    5440:	1000a126 	beq	r2,zero,56c8 <_malloc_r+0x2e4>
    5444:	00c00104 	movi	r3,4
    5448:	18811e36 	bltu	r3,r2,58c4 <_malloc_r+0x4e0>
    544c:	8804d1ba 	srli	r2,r17,6
    5450:	12000e44 	addi	r8,r2,57
    5454:	11c00e04 	addi	r7,r2,56
    5458:	4209883a 	add	r4,r8,r8
    545c:	04c00074 	movhi	r19,1
    5460:	2109883a 	add	r4,r4,r4
    5464:	9cc74704 	addi	r19,r19,7452
    5468:	2109883a 	add	r4,r4,r4
    546c:	9909883a 	add	r4,r19,r4
    5470:	24000117 	ldw	r16,4(r4)
    5474:	213ffe04 	addi	r4,r4,-8
    5478:	24009726 	beq	r4,r16,56d8 <_malloc_r+0x2f4>
    547c:	80800117 	ldw	r2,4(r16)
    5480:	01bfff04 	movi	r6,-4
    5484:	014003c4 	movi	r5,15
    5488:	1184703a 	and	r2,r2,r6
    548c:	1447c83a 	sub	r3,r2,r17
    5490:	28c00716 	blt	r5,r3,54b0 <_malloc_r+0xcc>
    5494:	1800920e 	bge	r3,zero,56e0 <_malloc_r+0x2fc>
    5498:	84000317 	ldw	r16,12(r16)
    549c:	24008e26 	beq	r4,r16,56d8 <_malloc_r+0x2f4>
    54a0:	80800117 	ldw	r2,4(r16)
    54a4:	1184703a 	and	r2,r2,r6
    54a8:	1447c83a 	sub	r3,r2,r17
    54ac:	28fff90e 	bge	r5,r3,5494 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005494>
    54b0:	3809883a 	mov	r4,r7
    54b4:	01800074 	movhi	r6,1
    54b8:	9c000417 	ldw	r16,16(r19)
    54bc:	31874704 	addi	r6,r6,7452
    54c0:	32000204 	addi	r8,r6,8
    54c4:	82013426 	beq	r16,r8,5998 <_malloc_r+0x5b4>
    54c8:	80c00117 	ldw	r3,4(r16)
    54cc:	00bfff04 	movi	r2,-4
    54d0:	188e703a 	and	r7,r3,r2
    54d4:	3c45c83a 	sub	r2,r7,r17
    54d8:	00c003c4 	movi	r3,15
    54dc:	18811f16 	blt	r3,r2,595c <_malloc_r+0x578>
    54e0:	32000515 	stw	r8,20(r6)
    54e4:	32000415 	stw	r8,16(r6)
    54e8:	10007f0e 	bge	r2,zero,56e8 <_malloc_r+0x304>
    54ec:	00807fc4 	movi	r2,511
    54f0:	11c0fd36 	bltu	r2,r7,58e8 <_malloc_r+0x504>
    54f4:	3806d0fa 	srli	r3,r7,3
    54f8:	01c00044 	movi	r7,1
    54fc:	30800117 	ldw	r2,4(r6)
    5500:	19400044 	addi	r5,r3,1
    5504:	294b883a 	add	r5,r5,r5
    5508:	1807d0ba 	srai	r3,r3,2
    550c:	294b883a 	add	r5,r5,r5
    5510:	294b883a 	add	r5,r5,r5
    5514:	298b883a 	add	r5,r5,r6
    5518:	38c6983a 	sll	r3,r7,r3
    551c:	29c00017 	ldw	r7,0(r5)
    5520:	2a7ffe04 	addi	r9,r5,-8
    5524:	1886b03a 	or	r3,r3,r2
    5528:	82400315 	stw	r9,12(r16)
    552c:	81c00215 	stw	r7,8(r16)
    5530:	30c00115 	stw	r3,4(r6)
    5534:	2c000015 	stw	r16,0(r5)
    5538:	3c000315 	stw	r16,12(r7)
    553c:	2005d0ba 	srai	r2,r4,2
    5540:	01400044 	movi	r5,1
    5544:	288a983a 	sll	r5,r5,r2
    5548:	19406f36 	bltu	r3,r5,5708 <_malloc_r+0x324>
    554c:	28c4703a 	and	r2,r5,r3
    5550:	10000a1e 	bne	r2,zero,557c <_malloc_r+0x198>
    5554:	00bfff04 	movi	r2,-4
    5558:	294b883a 	add	r5,r5,r5
    555c:	2088703a 	and	r4,r4,r2
    5560:	28c4703a 	and	r2,r5,r3
    5564:	21000104 	addi	r4,r4,4
    5568:	1000041e 	bne	r2,zero,557c <_malloc_r+0x198>
    556c:	294b883a 	add	r5,r5,r5
    5570:	28c4703a 	and	r2,r5,r3
    5574:	21000104 	addi	r4,r4,4
    5578:	103ffc26 	beq	r2,zero,556c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700556c>
    557c:	02bfff04 	movi	r10,-4
    5580:	024003c4 	movi	r9,15
    5584:	21800044 	addi	r6,r4,1
    5588:	318d883a 	add	r6,r6,r6
    558c:	318d883a 	add	r6,r6,r6
    5590:	318d883a 	add	r6,r6,r6
    5594:	998d883a 	add	r6,r19,r6
    5598:	333ffe04 	addi	r12,r6,-8
    559c:	2017883a 	mov	r11,r4
    55a0:	31800104 	addi	r6,r6,4
    55a4:	34000017 	ldw	r16,0(r6)
    55a8:	31fffd04 	addi	r7,r6,-12
    55ac:	81c0041e 	bne	r16,r7,55c0 <_malloc_r+0x1dc>
    55b0:	0000fb06 	br	59a0 <_malloc_r+0x5bc>
    55b4:	1801030e 	bge	r3,zero,59c4 <_malloc_r+0x5e0>
    55b8:	84000317 	ldw	r16,12(r16)
    55bc:	81c0f826 	beq	r16,r7,59a0 <_malloc_r+0x5bc>
    55c0:	80800117 	ldw	r2,4(r16)
    55c4:	1284703a 	and	r2,r2,r10
    55c8:	1447c83a 	sub	r3,r2,r17
    55cc:	48fff90e 	bge	r9,r3,55b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70055b4>
    55d0:	80800317 	ldw	r2,12(r16)
    55d4:	81000217 	ldw	r4,8(r16)
    55d8:	89400054 	ori	r5,r17,1
    55dc:	81400115 	stw	r5,4(r16)
    55e0:	20800315 	stw	r2,12(r4)
    55e4:	11000215 	stw	r4,8(r2)
    55e8:	8463883a 	add	r17,r16,r17
    55ec:	9c400515 	stw	r17,20(r19)
    55f0:	9c400415 	stw	r17,16(r19)
    55f4:	18800054 	ori	r2,r3,1
    55f8:	88800115 	stw	r2,4(r17)
    55fc:	8a000315 	stw	r8,12(r17)
    5600:	8a000215 	stw	r8,8(r17)
    5604:	88e3883a 	add	r17,r17,r3
    5608:	88c00015 	stw	r3,0(r17)
    560c:	9009883a 	mov	r4,r18
    5610:	000d78c0 	call	d78c <__malloc_unlock>
    5614:	80800204 	addi	r2,r16,8
    5618:	00001b06 	br	5688 <_malloc_r+0x2a4>
    561c:	04400404 	movi	r17,16
    5620:	89402536 	bltu	r17,r5,56b8 <_malloc_r+0x2d4>
    5624:	000d7680 	call	d768 <__malloc_lock>
    5628:	00800184 	movi	r2,6
    562c:	01000084 	movi	r4,2
    5630:	04c00074 	movhi	r19,1
    5634:	1085883a 	add	r2,r2,r2
    5638:	9cc74704 	addi	r19,r19,7452
    563c:	1085883a 	add	r2,r2,r2
    5640:	9885883a 	add	r2,r19,r2
    5644:	14000117 	ldw	r16,4(r2)
    5648:	10fffe04 	addi	r3,r2,-8
    564c:	80c0d926 	beq	r16,r3,59b4 <_malloc_r+0x5d0>
    5650:	80c00117 	ldw	r3,4(r16)
    5654:	81000317 	ldw	r4,12(r16)
    5658:	00bfff04 	movi	r2,-4
    565c:	1884703a 	and	r2,r3,r2
    5660:	81400217 	ldw	r5,8(r16)
    5664:	8085883a 	add	r2,r16,r2
    5668:	10c00117 	ldw	r3,4(r2)
    566c:	29000315 	stw	r4,12(r5)
    5670:	21400215 	stw	r5,8(r4)
    5674:	18c00054 	ori	r3,r3,1
    5678:	10c00115 	stw	r3,4(r2)
    567c:	9009883a 	mov	r4,r18
    5680:	000d78c0 	call	d78c <__malloc_unlock>
    5684:	80800204 	addi	r2,r16,8
    5688:	dfc00a17 	ldw	ra,40(sp)
    568c:	df000917 	ldw	fp,36(sp)
    5690:	ddc00817 	ldw	r23,32(sp)
    5694:	dd800717 	ldw	r22,28(sp)
    5698:	dd400617 	ldw	r21,24(sp)
    569c:	dd000517 	ldw	r20,20(sp)
    56a0:	dcc00417 	ldw	r19,16(sp)
    56a4:	dc800317 	ldw	r18,12(sp)
    56a8:	dc400217 	ldw	r17,8(sp)
    56ac:	dc000117 	ldw	r16,4(sp)
    56b0:	dec00b04 	addi	sp,sp,44
    56b4:	f800283a 	ret
    56b8:	00800304 	movi	r2,12
    56bc:	90800015 	stw	r2,0(r18)
    56c0:	0005883a 	mov	r2,zero
    56c4:	003ff006 	br	5688 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005688>
    56c8:	01002004 	movi	r4,128
    56cc:	02001004 	movi	r8,64
    56d0:	01c00fc4 	movi	r7,63
    56d4:	003f6106 	br	545c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700545c>
    56d8:	4009883a 	mov	r4,r8
    56dc:	003f7506 	br	54b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70054b4>
    56e0:	81000317 	ldw	r4,12(r16)
    56e4:	003fde06 	br	5660 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005660>
    56e8:	81c5883a 	add	r2,r16,r7
    56ec:	11400117 	ldw	r5,4(r2)
    56f0:	9009883a 	mov	r4,r18
    56f4:	29400054 	ori	r5,r5,1
    56f8:	11400115 	stw	r5,4(r2)
    56fc:	000d78c0 	call	d78c <__malloc_unlock>
    5700:	80800204 	addi	r2,r16,8
    5704:	003fe006 	br	5688 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005688>
    5708:	9c000217 	ldw	r16,8(r19)
    570c:	00bfff04 	movi	r2,-4
    5710:	85800117 	ldw	r22,4(r16)
    5714:	b0ac703a 	and	r22,r22,r2
    5718:	b4400336 	bltu	r22,r17,5728 <_malloc_r+0x344>
    571c:	b445c83a 	sub	r2,r22,r17
    5720:	00c003c4 	movi	r3,15
    5724:	18805d16 	blt	r3,r2,589c <_malloc_r+0x4b8>
    5728:	05c00074 	movhi	r23,1
    572c:	00800074 	movhi	r2,1
    5730:	10952704 	addi	r2,r2,21660
    5734:	bdcd9204 	addi	r23,r23,13896
    5738:	15400017 	ldw	r21,0(r2)
    573c:	b8c00017 	ldw	r3,0(r23)
    5740:	00bfffc4 	movi	r2,-1
    5744:	858d883a 	add	r6,r16,r22
    5748:	8d6b883a 	add	r21,r17,r21
    574c:	1880ea26 	beq	r3,r2,5af8 <_malloc_r+0x714>
    5750:	ad4403c4 	addi	r21,r21,4111
    5754:	00bc0004 	movi	r2,-4096
    5758:	a8aa703a 	and	r21,r21,r2
    575c:	a80b883a 	mov	r5,r21
    5760:	9009883a 	mov	r4,r18
    5764:	d9800015 	stw	r6,0(sp)
    5768:	0006fb40 	call	6fb4 <_sbrk_r>
    576c:	1029883a 	mov	r20,r2
    5770:	00bfffc4 	movi	r2,-1
    5774:	d9800017 	ldw	r6,0(sp)
    5778:	a080e826 	beq	r20,r2,5b1c <_malloc_r+0x738>
    577c:	a180a636 	bltu	r20,r6,5a18 <_malloc_r+0x634>
    5780:	07000074 	movhi	fp,1
    5784:	e7153404 	addi	fp,fp,21712
    5788:	e0800017 	ldw	r2,0(fp)
    578c:	a887883a 	add	r3,r21,r2
    5790:	e0c00015 	stw	r3,0(fp)
    5794:	3500e626 	beq	r6,r20,5b30 <_malloc_r+0x74c>
    5798:	b9000017 	ldw	r4,0(r23)
    579c:	00bfffc4 	movi	r2,-1
    57a0:	2080ee26 	beq	r4,r2,5b5c <_malloc_r+0x778>
    57a4:	a185c83a 	sub	r2,r20,r6
    57a8:	10c5883a 	add	r2,r2,r3
    57ac:	e0800015 	stw	r2,0(fp)
    57b0:	a0c001cc 	andi	r3,r20,7
    57b4:	1800bc26 	beq	r3,zero,5aa8 <_malloc_r+0x6c4>
    57b8:	a0e9c83a 	sub	r20,r20,r3
    57bc:	00840204 	movi	r2,4104
    57c0:	a5000204 	addi	r20,r20,8
    57c4:	10c7c83a 	sub	r3,r2,r3
    57c8:	a545883a 	add	r2,r20,r21
    57cc:	1083ffcc 	andi	r2,r2,4095
    57d0:	18abc83a 	sub	r21,r3,r2
    57d4:	a80b883a 	mov	r5,r21
    57d8:	9009883a 	mov	r4,r18
    57dc:	0006fb40 	call	6fb4 <_sbrk_r>
    57e0:	00ffffc4 	movi	r3,-1
    57e4:	10c0e126 	beq	r2,r3,5b6c <_malloc_r+0x788>
    57e8:	1505c83a 	sub	r2,r2,r20
    57ec:	1545883a 	add	r2,r2,r21
    57f0:	10800054 	ori	r2,r2,1
    57f4:	e0c00017 	ldw	r3,0(fp)
    57f8:	9d000215 	stw	r20,8(r19)
    57fc:	a0800115 	stw	r2,4(r20)
    5800:	a8c7883a 	add	r3,r21,r3
    5804:	e0c00015 	stw	r3,0(fp)
    5808:	84c00e26 	beq	r16,r19,5844 <_malloc_r+0x460>
    580c:	018003c4 	movi	r6,15
    5810:	3580a72e 	bgeu	r6,r22,5ab0 <_malloc_r+0x6cc>
    5814:	81400117 	ldw	r5,4(r16)
    5818:	013ffe04 	movi	r4,-8
    581c:	b0bffd04 	addi	r2,r22,-12
    5820:	1104703a 	and	r2,r2,r4
    5824:	2900004c 	andi	r4,r5,1
    5828:	2088b03a 	or	r4,r4,r2
    582c:	81000115 	stw	r4,4(r16)
    5830:	01400144 	movi	r5,5
    5834:	8089883a 	add	r4,r16,r2
    5838:	21400115 	stw	r5,4(r4)
    583c:	21400215 	stw	r5,8(r4)
    5840:	3080cd36 	bltu	r6,r2,5b78 <_malloc_r+0x794>
    5844:	00800074 	movhi	r2,1
    5848:	10952604 	addi	r2,r2,21656
    584c:	11000017 	ldw	r4,0(r2)
    5850:	20c0012e 	bgeu	r4,r3,5858 <_malloc_r+0x474>
    5854:	10c00015 	stw	r3,0(r2)
    5858:	00800074 	movhi	r2,1
    585c:	10952504 	addi	r2,r2,21652
    5860:	11000017 	ldw	r4,0(r2)
    5864:	9c000217 	ldw	r16,8(r19)
    5868:	20c0012e 	bgeu	r4,r3,5870 <_malloc_r+0x48c>
    586c:	10c00015 	stw	r3,0(r2)
    5870:	80c00117 	ldw	r3,4(r16)
    5874:	00bfff04 	movi	r2,-4
    5878:	1886703a 	and	r3,r3,r2
    587c:	1c45c83a 	sub	r2,r3,r17
    5880:	1c400236 	bltu	r3,r17,588c <_malloc_r+0x4a8>
    5884:	00c003c4 	movi	r3,15
    5888:	18800416 	blt	r3,r2,589c <_malloc_r+0x4b8>
    588c:	9009883a 	mov	r4,r18
    5890:	000d78c0 	call	d78c <__malloc_unlock>
    5894:	0005883a 	mov	r2,zero
    5898:	003f7b06 	br	5688 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005688>
    589c:	88c00054 	ori	r3,r17,1
    58a0:	80c00115 	stw	r3,4(r16)
    58a4:	8463883a 	add	r17,r16,r17
    58a8:	10800054 	ori	r2,r2,1
    58ac:	9c400215 	stw	r17,8(r19)
    58b0:	88800115 	stw	r2,4(r17)
    58b4:	9009883a 	mov	r4,r18
    58b8:	000d78c0 	call	d78c <__malloc_unlock>
    58bc:	80800204 	addi	r2,r16,8
    58c0:	003f7106 	br	5688 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005688>
    58c4:	00c00504 	movi	r3,20
    58c8:	18804a2e 	bgeu	r3,r2,59f4 <_malloc_r+0x610>
    58cc:	00c01504 	movi	r3,84
    58d0:	18806e36 	bltu	r3,r2,5a8c <_malloc_r+0x6a8>
    58d4:	8804d33a 	srli	r2,r17,12
    58d8:	12001bc4 	addi	r8,r2,111
    58dc:	11c01b84 	addi	r7,r2,110
    58e0:	4209883a 	add	r4,r8,r8
    58e4:	003edd06 	br	545c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700545c>
    58e8:	3804d27a 	srli	r2,r7,9
    58ec:	00c00104 	movi	r3,4
    58f0:	1880442e 	bgeu	r3,r2,5a04 <_malloc_r+0x620>
    58f4:	00c00504 	movi	r3,20
    58f8:	18808136 	bltu	r3,r2,5b00 <_malloc_r+0x71c>
    58fc:	11401704 	addi	r5,r2,92
    5900:	10c016c4 	addi	r3,r2,91
    5904:	294b883a 	add	r5,r5,r5
    5908:	294b883a 	add	r5,r5,r5
    590c:	294b883a 	add	r5,r5,r5
    5910:	994b883a 	add	r5,r19,r5
    5914:	28800017 	ldw	r2,0(r5)
    5918:	01800074 	movhi	r6,1
    591c:	297ffe04 	addi	r5,r5,-8
    5920:	31874704 	addi	r6,r6,7452
    5924:	28806526 	beq	r5,r2,5abc <_malloc_r+0x6d8>
    5928:	01bfff04 	movi	r6,-4
    592c:	10c00117 	ldw	r3,4(r2)
    5930:	1986703a 	and	r3,r3,r6
    5934:	38c0022e 	bgeu	r7,r3,5940 <_malloc_r+0x55c>
    5938:	10800217 	ldw	r2,8(r2)
    593c:	28bffb1e 	bne	r5,r2,592c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700592c>
    5940:	11400317 	ldw	r5,12(r2)
    5944:	98c00117 	ldw	r3,4(r19)
    5948:	81400315 	stw	r5,12(r16)
    594c:	80800215 	stw	r2,8(r16)
    5950:	2c000215 	stw	r16,8(r5)
    5954:	14000315 	stw	r16,12(r2)
    5958:	003ef806 	br	553c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700553c>
    595c:	88c00054 	ori	r3,r17,1
    5960:	80c00115 	stw	r3,4(r16)
    5964:	8463883a 	add	r17,r16,r17
    5968:	34400515 	stw	r17,20(r6)
    596c:	34400415 	stw	r17,16(r6)
    5970:	10c00054 	ori	r3,r2,1
    5974:	8a000315 	stw	r8,12(r17)
    5978:	8a000215 	stw	r8,8(r17)
    597c:	88c00115 	stw	r3,4(r17)
    5980:	88a3883a 	add	r17,r17,r2
    5984:	88800015 	stw	r2,0(r17)
    5988:	9009883a 	mov	r4,r18
    598c:	000d78c0 	call	d78c <__malloc_unlock>
    5990:	80800204 	addi	r2,r16,8
    5994:	003f3c06 	br	5688 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005688>
    5998:	30c00117 	ldw	r3,4(r6)
    599c:	003ee706 	br	553c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700553c>
    59a0:	5ac00044 	addi	r11,r11,1
    59a4:	588000cc 	andi	r2,r11,3
    59a8:	31800204 	addi	r6,r6,8
    59ac:	103efd1e 	bne	r2,zero,55a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70055a4>
    59b0:	00002406 	br	5a44 <_malloc_r+0x660>
    59b4:	14000317 	ldw	r16,12(r2)
    59b8:	143f251e 	bne	r2,r16,5650 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005650>
    59bc:	21000084 	addi	r4,r4,2
    59c0:	003ebc06 	br	54b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70054b4>
    59c4:	8085883a 	add	r2,r16,r2
    59c8:	10c00117 	ldw	r3,4(r2)
    59cc:	81000317 	ldw	r4,12(r16)
    59d0:	81400217 	ldw	r5,8(r16)
    59d4:	18c00054 	ori	r3,r3,1
    59d8:	10c00115 	stw	r3,4(r2)
    59dc:	29000315 	stw	r4,12(r5)
    59e0:	21400215 	stw	r5,8(r4)
    59e4:	9009883a 	mov	r4,r18
    59e8:	000d78c0 	call	d78c <__malloc_unlock>
    59ec:	80800204 	addi	r2,r16,8
    59f0:	003f2506 	br	5688 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005688>
    59f4:	12001704 	addi	r8,r2,92
    59f8:	11c016c4 	addi	r7,r2,91
    59fc:	4209883a 	add	r4,r8,r8
    5a00:	003e9606 	br	545c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700545c>
    5a04:	3804d1ba 	srli	r2,r7,6
    5a08:	11400e44 	addi	r5,r2,57
    5a0c:	10c00e04 	addi	r3,r2,56
    5a10:	294b883a 	add	r5,r5,r5
    5a14:	003fbc06 	br	5908 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005908>
    5a18:	84ff5926 	beq	r16,r19,5780 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005780>
    5a1c:	00800074 	movhi	r2,1
    5a20:	10874704 	addi	r2,r2,7452
    5a24:	14000217 	ldw	r16,8(r2)
    5a28:	00bfff04 	movi	r2,-4
    5a2c:	80c00117 	ldw	r3,4(r16)
    5a30:	1886703a 	and	r3,r3,r2
    5a34:	003f9106 	br	587c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700587c>
    5a38:	60800217 	ldw	r2,8(r12)
    5a3c:	213fffc4 	addi	r4,r4,-1
    5a40:	1300651e 	bne	r2,r12,5bd8 <_malloc_r+0x7f4>
    5a44:	208000cc 	andi	r2,r4,3
    5a48:	633ffe04 	addi	r12,r12,-8
    5a4c:	103ffa1e 	bne	r2,zero,5a38 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005a38>
    5a50:	98800117 	ldw	r2,4(r19)
    5a54:	0146303a 	nor	r3,zero,r5
    5a58:	1884703a 	and	r2,r3,r2
    5a5c:	98800115 	stw	r2,4(r19)
    5a60:	294b883a 	add	r5,r5,r5
    5a64:	117f2836 	bltu	r2,r5,5708 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005708>
    5a68:	283f2726 	beq	r5,zero,5708 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005708>
    5a6c:	2886703a 	and	r3,r5,r2
    5a70:	5809883a 	mov	r4,r11
    5a74:	183ec31e 	bne	r3,zero,5584 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005584>
    5a78:	294b883a 	add	r5,r5,r5
    5a7c:	2886703a 	and	r3,r5,r2
    5a80:	21000104 	addi	r4,r4,4
    5a84:	183ffc26 	beq	r3,zero,5a78 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005a78>
    5a88:	003ebe06 	br	5584 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005584>
    5a8c:	00c05504 	movi	r3,340
    5a90:	18801236 	bltu	r3,r2,5adc <_malloc_r+0x6f8>
    5a94:	8804d3fa 	srli	r2,r17,15
    5a98:	12001e04 	addi	r8,r2,120
    5a9c:	11c01dc4 	addi	r7,r2,119
    5aa0:	4209883a 	add	r4,r8,r8
    5aa4:	003e6d06 	br	545c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700545c>
    5aa8:	00c40004 	movi	r3,4096
    5aac:	003f4606 	br	57c8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70057c8>
    5ab0:	00800044 	movi	r2,1
    5ab4:	a0800115 	stw	r2,4(r20)
    5ab8:	003f7406 	br	588c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700588c>
    5abc:	1805d0ba 	srai	r2,r3,2
    5ac0:	01c00044 	movi	r7,1
    5ac4:	30c00117 	ldw	r3,4(r6)
    5ac8:	388e983a 	sll	r7,r7,r2
    5acc:	2805883a 	mov	r2,r5
    5ad0:	38c6b03a 	or	r3,r7,r3
    5ad4:	30c00115 	stw	r3,4(r6)
    5ad8:	003f9b06 	br	5948 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005948>
    5adc:	00c15504 	movi	r3,1364
    5ae0:	18801a36 	bltu	r3,r2,5b4c <_malloc_r+0x768>
    5ae4:	8804d4ba 	srli	r2,r17,18
    5ae8:	12001f44 	addi	r8,r2,125
    5aec:	11c01f04 	addi	r7,r2,124
    5af0:	4209883a 	add	r4,r8,r8
    5af4:	003e5906 	br	545c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700545c>
    5af8:	ad400404 	addi	r21,r21,16
    5afc:	003f1706 	br	575c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700575c>
    5b00:	00c01504 	movi	r3,84
    5b04:	18802336 	bltu	r3,r2,5b94 <_malloc_r+0x7b0>
    5b08:	3804d33a 	srli	r2,r7,12
    5b0c:	11401bc4 	addi	r5,r2,111
    5b10:	10c01b84 	addi	r3,r2,110
    5b14:	294b883a 	add	r5,r5,r5
    5b18:	003f7b06 	br	5908 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005908>
    5b1c:	9c000217 	ldw	r16,8(r19)
    5b20:	00bfff04 	movi	r2,-4
    5b24:	80c00117 	ldw	r3,4(r16)
    5b28:	1886703a 	and	r3,r3,r2
    5b2c:	003f5306 	br	587c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700587c>
    5b30:	3083ffcc 	andi	r2,r6,4095
    5b34:	103f181e 	bne	r2,zero,5798 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005798>
    5b38:	99000217 	ldw	r4,8(r19)
    5b3c:	b545883a 	add	r2,r22,r21
    5b40:	10800054 	ori	r2,r2,1
    5b44:	20800115 	stw	r2,4(r4)
    5b48:	003f3e06 	br	5844 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005844>
    5b4c:	01003f84 	movi	r4,254
    5b50:	02001fc4 	movi	r8,127
    5b54:	01c01f84 	movi	r7,126
    5b58:	003e4006 	br	545c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700545c>
    5b5c:	00800074 	movhi	r2,1
    5b60:	108d9204 	addi	r2,r2,13896
    5b64:	15000015 	stw	r20,0(r2)
    5b68:	003f1106 	br	57b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70057b0>
    5b6c:	00800044 	movi	r2,1
    5b70:	002b883a 	mov	r21,zero
    5b74:	003f1f06 	br	57f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70057f4>
    5b78:	81400204 	addi	r5,r16,8
    5b7c:	9009883a 	mov	r4,r18
    5b80:	0004cb40 	call	4cb4 <_free_r>
    5b84:	00800074 	movhi	r2,1
    5b88:	10953404 	addi	r2,r2,21712
    5b8c:	10c00017 	ldw	r3,0(r2)
    5b90:	003f2c06 	br	5844 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005844>
    5b94:	00c05504 	movi	r3,340
    5b98:	18800536 	bltu	r3,r2,5bb0 <_malloc_r+0x7cc>
    5b9c:	3804d3fa 	srli	r2,r7,15
    5ba0:	11401e04 	addi	r5,r2,120
    5ba4:	10c01dc4 	addi	r3,r2,119
    5ba8:	294b883a 	add	r5,r5,r5
    5bac:	003f5606 	br	5908 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005908>
    5bb0:	00c15504 	movi	r3,1364
    5bb4:	18800536 	bltu	r3,r2,5bcc <_malloc_r+0x7e8>
    5bb8:	3804d4ba 	srli	r2,r7,18
    5bbc:	11401f44 	addi	r5,r2,125
    5bc0:	10c01f04 	addi	r3,r2,124
    5bc4:	294b883a 	add	r5,r5,r5
    5bc8:	003f4f06 	br	5908 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005908>
    5bcc:	01403f84 	movi	r5,254
    5bd0:	00c01f84 	movi	r3,126
    5bd4:	003f4c06 	br	5908 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005908>
    5bd8:	98800117 	ldw	r2,4(r19)
    5bdc:	003fa006 	br	5a60 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005a60>
    5be0:	8808d0fa 	srli	r4,r17,3
    5be4:	20800044 	addi	r2,r4,1
    5be8:	1085883a 	add	r2,r2,r2
    5bec:	003e9006 	br	5630 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005630>

00005bf0 <memchr>:
    5bf0:	208000cc 	andi	r2,r4,3
    5bf4:	280f883a 	mov	r7,r5
    5bf8:	10003426 	beq	r2,zero,5ccc <memchr+0xdc>
    5bfc:	30bfffc4 	addi	r2,r6,-1
    5c00:	30001a26 	beq	r6,zero,5c6c <memchr+0x7c>
    5c04:	20c00003 	ldbu	r3,0(r4)
    5c08:	29803fcc 	andi	r6,r5,255
    5c0c:	30c0051e 	bne	r6,r3,5c24 <memchr+0x34>
    5c10:	00001806 	br	5c74 <memchr+0x84>
    5c14:	10001526 	beq	r2,zero,5c6c <memchr+0x7c>
    5c18:	20c00003 	ldbu	r3,0(r4)
    5c1c:	10bfffc4 	addi	r2,r2,-1
    5c20:	30c01426 	beq	r6,r3,5c74 <memchr+0x84>
    5c24:	21000044 	addi	r4,r4,1
    5c28:	20c000cc 	andi	r3,r4,3
    5c2c:	183ff91e 	bne	r3,zero,5c14 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005c14>
    5c30:	020000c4 	movi	r8,3
    5c34:	40801136 	bltu	r8,r2,5c7c <memchr+0x8c>
    5c38:	10000c26 	beq	r2,zero,5c6c <memchr+0x7c>
    5c3c:	20c00003 	ldbu	r3,0(r4)
    5c40:	29403fcc 	andi	r5,r5,255
    5c44:	28c00b26 	beq	r5,r3,5c74 <memchr+0x84>
    5c48:	20c00044 	addi	r3,r4,1
    5c4c:	39803fcc 	andi	r6,r7,255
    5c50:	2089883a 	add	r4,r4,r2
    5c54:	00000306 	br	5c64 <memchr+0x74>
    5c58:	18c00044 	addi	r3,r3,1
    5c5c:	197fffc3 	ldbu	r5,-1(r3)
    5c60:	31400526 	beq	r6,r5,5c78 <memchr+0x88>
    5c64:	1805883a 	mov	r2,r3
    5c68:	20fffb1e 	bne	r4,r3,5c58 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005c58>
    5c6c:	0005883a 	mov	r2,zero
    5c70:	f800283a 	ret
    5c74:	2005883a 	mov	r2,r4
    5c78:	f800283a 	ret
    5c7c:	28c03fcc 	andi	r3,r5,255
    5c80:	1812923a 	slli	r9,r3,8
    5c84:	02ffbff4 	movhi	r11,65279
    5c88:	02a02074 	movhi	r10,32897
    5c8c:	48d2b03a 	or	r9,r9,r3
    5c90:	4806943a 	slli	r3,r9,16
    5c94:	5affbfc4 	addi	r11,r11,-257
    5c98:	52a02004 	addi	r10,r10,-32640
    5c9c:	48d2b03a 	or	r9,r9,r3
    5ca0:	20c00017 	ldw	r3,0(r4)
    5ca4:	48c6f03a 	xor	r3,r9,r3
    5ca8:	1acd883a 	add	r6,r3,r11
    5cac:	00c6303a 	nor	r3,zero,r3
    5cb0:	30c6703a 	and	r3,r6,r3
    5cb4:	1a86703a 	and	r3,r3,r10
    5cb8:	183fe01e 	bne	r3,zero,5c3c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005c3c>
    5cbc:	10bfff04 	addi	r2,r2,-4
    5cc0:	21000104 	addi	r4,r4,4
    5cc4:	40bff636 	bltu	r8,r2,5ca0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005ca0>
    5cc8:	003fdb06 	br	5c38 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005c38>
    5ccc:	3005883a 	mov	r2,r6
    5cd0:	003fd706 	br	5c30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005c30>

00005cd4 <memcpy>:
    5cd4:	defffd04 	addi	sp,sp,-12
    5cd8:	dfc00215 	stw	ra,8(sp)
    5cdc:	dc400115 	stw	r17,4(sp)
    5ce0:	dc000015 	stw	r16,0(sp)
    5ce4:	00c003c4 	movi	r3,15
    5ce8:	2005883a 	mov	r2,r4
    5cec:	1980452e 	bgeu	r3,r6,5e04 <memcpy+0x130>
    5cf0:	2906b03a 	or	r3,r5,r4
    5cf4:	18c000cc 	andi	r3,r3,3
    5cf8:	1800441e 	bne	r3,zero,5e0c <memcpy+0x138>
    5cfc:	347ffc04 	addi	r17,r6,-16
    5d00:	8822d13a 	srli	r17,r17,4
    5d04:	28c00104 	addi	r3,r5,4
    5d08:	23400104 	addi	r13,r4,4
    5d0c:	8820913a 	slli	r16,r17,4
    5d10:	2b000204 	addi	r12,r5,8
    5d14:	22c00204 	addi	r11,r4,8
    5d18:	84000504 	addi	r16,r16,20
    5d1c:	2a800304 	addi	r10,r5,12
    5d20:	22400304 	addi	r9,r4,12
    5d24:	2c21883a 	add	r16,r5,r16
    5d28:	2811883a 	mov	r8,r5
    5d2c:	200f883a 	mov	r7,r4
    5d30:	41000017 	ldw	r4,0(r8)
    5d34:	1fc00017 	ldw	ra,0(r3)
    5d38:	63c00017 	ldw	r15,0(r12)
    5d3c:	39000015 	stw	r4,0(r7)
    5d40:	53800017 	ldw	r14,0(r10)
    5d44:	6fc00015 	stw	ra,0(r13)
    5d48:	5bc00015 	stw	r15,0(r11)
    5d4c:	4b800015 	stw	r14,0(r9)
    5d50:	18c00404 	addi	r3,r3,16
    5d54:	39c00404 	addi	r7,r7,16
    5d58:	42000404 	addi	r8,r8,16
    5d5c:	6b400404 	addi	r13,r13,16
    5d60:	63000404 	addi	r12,r12,16
    5d64:	5ac00404 	addi	r11,r11,16
    5d68:	52800404 	addi	r10,r10,16
    5d6c:	4a400404 	addi	r9,r9,16
    5d70:	1c3fef1e 	bne	r3,r16,5d30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005d30>
    5d74:	89c00044 	addi	r7,r17,1
    5d78:	380e913a 	slli	r7,r7,4
    5d7c:	310003cc 	andi	r4,r6,15
    5d80:	02c000c4 	movi	r11,3
    5d84:	11c7883a 	add	r3,r2,r7
    5d88:	29cb883a 	add	r5,r5,r7
    5d8c:	5900212e 	bgeu	r11,r4,5e14 <memcpy+0x140>
    5d90:	1813883a 	mov	r9,r3
    5d94:	2811883a 	mov	r8,r5
    5d98:	200f883a 	mov	r7,r4
    5d9c:	42800017 	ldw	r10,0(r8)
    5da0:	4a400104 	addi	r9,r9,4
    5da4:	39ffff04 	addi	r7,r7,-4
    5da8:	4abfff15 	stw	r10,-4(r9)
    5dac:	42000104 	addi	r8,r8,4
    5db0:	59fffa36 	bltu	r11,r7,5d9c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005d9c>
    5db4:	213fff04 	addi	r4,r4,-4
    5db8:	2008d0ba 	srli	r4,r4,2
    5dbc:	318000cc 	andi	r6,r6,3
    5dc0:	21000044 	addi	r4,r4,1
    5dc4:	2109883a 	add	r4,r4,r4
    5dc8:	2109883a 	add	r4,r4,r4
    5dcc:	1907883a 	add	r3,r3,r4
    5dd0:	290b883a 	add	r5,r5,r4
    5dd4:	30000626 	beq	r6,zero,5df0 <memcpy+0x11c>
    5dd8:	198d883a 	add	r6,r3,r6
    5ddc:	29c00003 	ldbu	r7,0(r5)
    5de0:	18c00044 	addi	r3,r3,1
    5de4:	29400044 	addi	r5,r5,1
    5de8:	19ffffc5 	stb	r7,-1(r3)
    5dec:	19bffb1e 	bne	r3,r6,5ddc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005ddc>
    5df0:	dfc00217 	ldw	ra,8(sp)
    5df4:	dc400117 	ldw	r17,4(sp)
    5df8:	dc000017 	ldw	r16,0(sp)
    5dfc:	dec00304 	addi	sp,sp,12
    5e00:	f800283a 	ret
    5e04:	2007883a 	mov	r3,r4
    5e08:	003ff206 	br	5dd4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005dd4>
    5e0c:	2007883a 	mov	r3,r4
    5e10:	003ff106 	br	5dd8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005dd8>
    5e14:	200d883a 	mov	r6,r4
    5e18:	003fee06 	br	5dd4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005dd4>

00005e1c <memset>:
    5e1c:	20c000cc 	andi	r3,r4,3
    5e20:	2005883a 	mov	r2,r4
    5e24:	18004426 	beq	r3,zero,5f38 <memset+0x11c>
    5e28:	31ffffc4 	addi	r7,r6,-1
    5e2c:	30004026 	beq	r6,zero,5f30 <memset+0x114>
    5e30:	2813883a 	mov	r9,r5
    5e34:	200d883a 	mov	r6,r4
    5e38:	2007883a 	mov	r3,r4
    5e3c:	00000406 	br	5e50 <memset+0x34>
    5e40:	3a3fffc4 	addi	r8,r7,-1
    5e44:	31800044 	addi	r6,r6,1
    5e48:	38003926 	beq	r7,zero,5f30 <memset+0x114>
    5e4c:	400f883a 	mov	r7,r8
    5e50:	18c00044 	addi	r3,r3,1
    5e54:	32400005 	stb	r9,0(r6)
    5e58:	1a0000cc 	andi	r8,r3,3
    5e5c:	403ff81e 	bne	r8,zero,5e40 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005e40>
    5e60:	010000c4 	movi	r4,3
    5e64:	21c02d2e 	bgeu	r4,r7,5f1c <memset+0x100>
    5e68:	29003fcc 	andi	r4,r5,255
    5e6c:	200c923a 	slli	r6,r4,8
    5e70:	3108b03a 	or	r4,r6,r4
    5e74:	200c943a 	slli	r6,r4,16
    5e78:	218cb03a 	or	r6,r4,r6
    5e7c:	010003c4 	movi	r4,15
    5e80:	21c0182e 	bgeu	r4,r7,5ee4 <memset+0xc8>
    5e84:	3b3ffc04 	addi	r12,r7,-16
    5e88:	6018d13a 	srli	r12,r12,4
    5e8c:	1a000104 	addi	r8,r3,4
    5e90:	1ac00204 	addi	r11,r3,8
    5e94:	6008913a 	slli	r4,r12,4
    5e98:	1a800304 	addi	r10,r3,12
    5e9c:	1813883a 	mov	r9,r3
    5ea0:	21000504 	addi	r4,r4,20
    5ea4:	1909883a 	add	r4,r3,r4
    5ea8:	49800015 	stw	r6,0(r9)
    5eac:	41800015 	stw	r6,0(r8)
    5eb0:	59800015 	stw	r6,0(r11)
    5eb4:	51800015 	stw	r6,0(r10)
    5eb8:	42000404 	addi	r8,r8,16
    5ebc:	4a400404 	addi	r9,r9,16
    5ec0:	5ac00404 	addi	r11,r11,16
    5ec4:	52800404 	addi	r10,r10,16
    5ec8:	413ff71e 	bne	r8,r4,5ea8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005ea8>
    5ecc:	63000044 	addi	r12,r12,1
    5ed0:	6018913a 	slli	r12,r12,4
    5ed4:	39c003cc 	andi	r7,r7,15
    5ed8:	010000c4 	movi	r4,3
    5edc:	1b07883a 	add	r3,r3,r12
    5ee0:	21c00e2e 	bgeu	r4,r7,5f1c <memset+0x100>
    5ee4:	1813883a 	mov	r9,r3
    5ee8:	3811883a 	mov	r8,r7
    5eec:	010000c4 	movi	r4,3
    5ef0:	49800015 	stw	r6,0(r9)
    5ef4:	423fff04 	addi	r8,r8,-4
    5ef8:	4a400104 	addi	r9,r9,4
    5efc:	223ffc36 	bltu	r4,r8,5ef0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005ef0>
    5f00:	393fff04 	addi	r4,r7,-4
    5f04:	2008d0ba 	srli	r4,r4,2
    5f08:	39c000cc 	andi	r7,r7,3
    5f0c:	21000044 	addi	r4,r4,1
    5f10:	2109883a 	add	r4,r4,r4
    5f14:	2109883a 	add	r4,r4,r4
    5f18:	1907883a 	add	r3,r3,r4
    5f1c:	38000526 	beq	r7,zero,5f34 <memset+0x118>
    5f20:	19cf883a 	add	r7,r3,r7
    5f24:	19400005 	stb	r5,0(r3)
    5f28:	18c00044 	addi	r3,r3,1
    5f2c:	38fffd1e 	bne	r7,r3,5f24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005f24>
    5f30:	f800283a 	ret
    5f34:	f800283a 	ret
    5f38:	2007883a 	mov	r3,r4
    5f3c:	300f883a 	mov	r7,r6
    5f40:	003fc706 	br	5e60 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005e60>

00005f44 <_Balloc>:
    5f44:	20801317 	ldw	r2,76(r4)
    5f48:	defffc04 	addi	sp,sp,-16
    5f4c:	dc400115 	stw	r17,4(sp)
    5f50:	dc000015 	stw	r16,0(sp)
    5f54:	dfc00315 	stw	ra,12(sp)
    5f58:	dc800215 	stw	r18,8(sp)
    5f5c:	2023883a 	mov	r17,r4
    5f60:	2821883a 	mov	r16,r5
    5f64:	10000f26 	beq	r2,zero,5fa4 <_Balloc+0x60>
    5f68:	8407883a 	add	r3,r16,r16
    5f6c:	18c7883a 	add	r3,r3,r3
    5f70:	10c7883a 	add	r3,r2,r3
    5f74:	18800017 	ldw	r2,0(r3)
    5f78:	10001126 	beq	r2,zero,5fc0 <_Balloc+0x7c>
    5f7c:	11000017 	ldw	r4,0(r2)
    5f80:	19000015 	stw	r4,0(r3)
    5f84:	10000415 	stw	zero,16(r2)
    5f88:	10000315 	stw	zero,12(r2)
    5f8c:	dfc00317 	ldw	ra,12(sp)
    5f90:	dc800217 	ldw	r18,8(sp)
    5f94:	dc400117 	ldw	r17,4(sp)
    5f98:	dc000017 	ldw	r16,0(sp)
    5f9c:	dec00404 	addi	sp,sp,16
    5fa0:	f800283a 	ret
    5fa4:	01800844 	movi	r6,33
    5fa8:	01400104 	movi	r5,4
    5fac:	00089b40 	call	89b4 <_calloc_r>
    5fb0:	88801315 	stw	r2,76(r17)
    5fb4:	103fec1e 	bne	r2,zero,5f68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005f68>
    5fb8:	0005883a 	mov	r2,zero
    5fbc:	003ff306 	br	5f8c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005f8c>
    5fc0:	01400044 	movi	r5,1
    5fc4:	2c24983a 	sll	r18,r5,r16
    5fc8:	8809883a 	mov	r4,r17
    5fcc:	91800144 	addi	r6,r18,5
    5fd0:	318d883a 	add	r6,r6,r6
    5fd4:	318d883a 	add	r6,r6,r6
    5fd8:	00089b40 	call	89b4 <_calloc_r>
    5fdc:	103ff626 	beq	r2,zero,5fb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005fb8>
    5fe0:	14000115 	stw	r16,4(r2)
    5fe4:	14800215 	stw	r18,8(r2)
    5fe8:	003fe606 	br	5f84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005f84>

00005fec <_Bfree>:
    5fec:	28000826 	beq	r5,zero,6010 <_Bfree+0x24>
    5ff0:	28c00117 	ldw	r3,4(r5)
    5ff4:	20801317 	ldw	r2,76(r4)
    5ff8:	18c7883a 	add	r3,r3,r3
    5ffc:	18c7883a 	add	r3,r3,r3
    6000:	10c5883a 	add	r2,r2,r3
    6004:	10c00017 	ldw	r3,0(r2)
    6008:	28c00015 	stw	r3,0(r5)
    600c:	11400015 	stw	r5,0(r2)
    6010:	f800283a 	ret

00006014 <__multadd>:
    6014:	defffa04 	addi	sp,sp,-24
    6018:	dc800315 	stw	r18,12(sp)
    601c:	dc400215 	stw	r17,8(sp)
    6020:	dc000115 	stw	r16,4(sp)
    6024:	2823883a 	mov	r17,r5
    6028:	2c000417 	ldw	r16,16(r5)
    602c:	dfc00515 	stw	ra,20(sp)
    6030:	dcc00415 	stw	r19,16(sp)
    6034:	2025883a 	mov	r18,r4
    6038:	29400504 	addi	r5,r5,20
    603c:	0011883a 	mov	r8,zero
    6040:	28c00017 	ldw	r3,0(r5)
    6044:	29400104 	addi	r5,r5,4
    6048:	42000044 	addi	r8,r8,1
    604c:	18bfffcc 	andi	r2,r3,65535
    6050:	1185383a 	mul	r2,r2,r6
    6054:	1806d43a 	srli	r3,r3,16
    6058:	11cf883a 	add	r7,r2,r7
    605c:	3808d43a 	srli	r4,r7,16
    6060:	1987383a 	mul	r3,r3,r6
    6064:	38bfffcc 	andi	r2,r7,65535
    6068:	1907883a 	add	r3,r3,r4
    606c:	1808943a 	slli	r4,r3,16
    6070:	180ed43a 	srli	r7,r3,16
    6074:	2085883a 	add	r2,r4,r2
    6078:	28bfff15 	stw	r2,-4(r5)
    607c:	443ff016 	blt	r8,r16,6040 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006040>
    6080:	38000926 	beq	r7,zero,60a8 <__multadd+0x94>
    6084:	88800217 	ldw	r2,8(r17)
    6088:	80800f0e 	bge	r16,r2,60c8 <__multadd+0xb4>
    608c:	80800144 	addi	r2,r16,5
    6090:	1085883a 	add	r2,r2,r2
    6094:	1085883a 	add	r2,r2,r2
    6098:	8885883a 	add	r2,r17,r2
    609c:	11c00015 	stw	r7,0(r2)
    60a0:	84000044 	addi	r16,r16,1
    60a4:	8c000415 	stw	r16,16(r17)
    60a8:	8805883a 	mov	r2,r17
    60ac:	dfc00517 	ldw	ra,20(sp)
    60b0:	dcc00417 	ldw	r19,16(sp)
    60b4:	dc800317 	ldw	r18,12(sp)
    60b8:	dc400217 	ldw	r17,8(sp)
    60bc:	dc000117 	ldw	r16,4(sp)
    60c0:	dec00604 	addi	sp,sp,24
    60c4:	f800283a 	ret
    60c8:	89400117 	ldw	r5,4(r17)
    60cc:	9009883a 	mov	r4,r18
    60d0:	d9c00015 	stw	r7,0(sp)
    60d4:	29400044 	addi	r5,r5,1
    60d8:	0005f440 	call	5f44 <_Balloc>
    60dc:	89800417 	ldw	r6,16(r17)
    60e0:	89400304 	addi	r5,r17,12
    60e4:	11000304 	addi	r4,r2,12
    60e8:	31800084 	addi	r6,r6,2
    60ec:	318d883a 	add	r6,r6,r6
    60f0:	318d883a 	add	r6,r6,r6
    60f4:	1027883a 	mov	r19,r2
    60f8:	0005cd40 	call	5cd4 <memcpy>
    60fc:	d9c00017 	ldw	r7,0(sp)
    6100:	88000a26 	beq	r17,zero,612c <__multadd+0x118>
    6104:	88c00117 	ldw	r3,4(r17)
    6108:	90801317 	ldw	r2,76(r18)
    610c:	18c7883a 	add	r3,r3,r3
    6110:	18c7883a 	add	r3,r3,r3
    6114:	10c5883a 	add	r2,r2,r3
    6118:	10c00017 	ldw	r3,0(r2)
    611c:	88c00015 	stw	r3,0(r17)
    6120:	14400015 	stw	r17,0(r2)
    6124:	9823883a 	mov	r17,r19
    6128:	003fd806 	br	608c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700608c>
    612c:	9823883a 	mov	r17,r19
    6130:	003fd606 	br	608c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700608c>

00006134 <__s2b>:
    6134:	defff904 	addi	sp,sp,-28
    6138:	dc400115 	stw	r17,4(sp)
    613c:	dc000015 	stw	r16,0(sp)
    6140:	2023883a 	mov	r17,r4
    6144:	2821883a 	mov	r16,r5
    6148:	39000204 	addi	r4,r7,8
    614c:	01400244 	movi	r5,9
    6150:	dcc00315 	stw	r19,12(sp)
    6154:	dc800215 	stw	r18,8(sp)
    6158:	dfc00615 	stw	ra,24(sp)
    615c:	dd400515 	stw	r21,20(sp)
    6160:	dd000415 	stw	r20,16(sp)
    6164:	3825883a 	mov	r18,r7
    6168:	3027883a 	mov	r19,r6
    616c:	000a8600 	call	a860 <__divsi3>
    6170:	00c00044 	movi	r3,1
    6174:	000b883a 	mov	r5,zero
    6178:	1880030e 	bge	r3,r2,6188 <__s2b+0x54>
    617c:	18c7883a 	add	r3,r3,r3
    6180:	29400044 	addi	r5,r5,1
    6184:	18bffd16 	blt	r3,r2,617c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700617c>
    6188:	8809883a 	mov	r4,r17
    618c:	0005f440 	call	5f44 <_Balloc>
    6190:	d8c00717 	ldw	r3,28(sp)
    6194:	10c00515 	stw	r3,20(r2)
    6198:	00c00044 	movi	r3,1
    619c:	10c00415 	stw	r3,16(r2)
    61a0:	00c00244 	movi	r3,9
    61a4:	1cc0210e 	bge	r3,r19,622c <__s2b+0xf8>
    61a8:	80eb883a 	add	r21,r16,r3
    61ac:	a829883a 	mov	r20,r21
    61b0:	84e1883a 	add	r16,r16,r19
    61b4:	a1c00007 	ldb	r7,0(r20)
    61b8:	01800284 	movi	r6,10
    61bc:	a5000044 	addi	r20,r20,1
    61c0:	100b883a 	mov	r5,r2
    61c4:	39fff404 	addi	r7,r7,-48
    61c8:	8809883a 	mov	r4,r17
    61cc:	00060140 	call	6014 <__multadd>
    61d0:	a43ff81e 	bne	r20,r16,61b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70061b4>
    61d4:	ace1883a 	add	r16,r21,r19
    61d8:	843ffe04 	addi	r16,r16,-8
    61dc:	9c800a0e 	bge	r19,r18,6208 <__s2b+0xd4>
    61e0:	94e5c83a 	sub	r18,r18,r19
    61e4:	84a5883a 	add	r18,r16,r18
    61e8:	81c00007 	ldb	r7,0(r16)
    61ec:	01800284 	movi	r6,10
    61f0:	84000044 	addi	r16,r16,1
    61f4:	100b883a 	mov	r5,r2
    61f8:	39fff404 	addi	r7,r7,-48
    61fc:	8809883a 	mov	r4,r17
    6200:	00060140 	call	6014 <__multadd>
    6204:	84bff81e 	bne	r16,r18,61e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70061e8>
    6208:	dfc00617 	ldw	ra,24(sp)
    620c:	dd400517 	ldw	r21,20(sp)
    6210:	dd000417 	ldw	r20,16(sp)
    6214:	dcc00317 	ldw	r19,12(sp)
    6218:	dc800217 	ldw	r18,8(sp)
    621c:	dc400117 	ldw	r17,4(sp)
    6220:	dc000017 	ldw	r16,0(sp)
    6224:	dec00704 	addi	sp,sp,28
    6228:	f800283a 	ret
    622c:	84000284 	addi	r16,r16,10
    6230:	1827883a 	mov	r19,r3
    6234:	003fe906 	br	61dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70061dc>

00006238 <__hi0bits>:
    6238:	20bfffec 	andhi	r2,r4,65535
    623c:	1000141e 	bne	r2,zero,6290 <__hi0bits+0x58>
    6240:	2008943a 	slli	r4,r4,16
    6244:	00800404 	movi	r2,16
    6248:	20ffc02c 	andhi	r3,r4,65280
    624c:	1800021e 	bne	r3,zero,6258 <__hi0bits+0x20>
    6250:	2008923a 	slli	r4,r4,8
    6254:	10800204 	addi	r2,r2,8
    6258:	20fc002c 	andhi	r3,r4,61440
    625c:	1800021e 	bne	r3,zero,6268 <__hi0bits+0x30>
    6260:	2008913a 	slli	r4,r4,4
    6264:	10800104 	addi	r2,r2,4
    6268:	20f0002c 	andhi	r3,r4,49152
    626c:	1800031e 	bne	r3,zero,627c <__hi0bits+0x44>
    6270:	2109883a 	add	r4,r4,r4
    6274:	10800084 	addi	r2,r2,2
    6278:	2109883a 	add	r4,r4,r4
    627c:	20000316 	blt	r4,zero,628c <__hi0bits+0x54>
    6280:	2110002c 	andhi	r4,r4,16384
    6284:	2000041e 	bne	r4,zero,6298 <__hi0bits+0x60>
    6288:	00800804 	movi	r2,32
    628c:	f800283a 	ret
    6290:	0005883a 	mov	r2,zero
    6294:	003fec06 	br	6248 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006248>
    6298:	10800044 	addi	r2,r2,1
    629c:	f800283a 	ret

000062a0 <__lo0bits>:
    62a0:	20c00017 	ldw	r3,0(r4)
    62a4:	188001cc 	andi	r2,r3,7
    62a8:	10000826 	beq	r2,zero,62cc <__lo0bits+0x2c>
    62ac:	1880004c 	andi	r2,r3,1
    62b0:	1000211e 	bne	r2,zero,6338 <__lo0bits+0x98>
    62b4:	1880008c 	andi	r2,r3,2
    62b8:	1000211e 	bne	r2,zero,6340 <__lo0bits+0xa0>
    62bc:	1806d0ba 	srli	r3,r3,2
    62c0:	00800084 	movi	r2,2
    62c4:	20c00015 	stw	r3,0(r4)
    62c8:	f800283a 	ret
    62cc:	18bfffcc 	andi	r2,r3,65535
    62d0:	10001326 	beq	r2,zero,6320 <__lo0bits+0x80>
    62d4:	0005883a 	mov	r2,zero
    62d8:	19403fcc 	andi	r5,r3,255
    62dc:	2800021e 	bne	r5,zero,62e8 <__lo0bits+0x48>
    62e0:	1806d23a 	srli	r3,r3,8
    62e4:	10800204 	addi	r2,r2,8
    62e8:	194003cc 	andi	r5,r3,15
    62ec:	2800021e 	bne	r5,zero,62f8 <__lo0bits+0x58>
    62f0:	1806d13a 	srli	r3,r3,4
    62f4:	10800104 	addi	r2,r2,4
    62f8:	194000cc 	andi	r5,r3,3
    62fc:	2800021e 	bne	r5,zero,6308 <__lo0bits+0x68>
    6300:	1806d0ba 	srli	r3,r3,2
    6304:	10800084 	addi	r2,r2,2
    6308:	1940004c 	andi	r5,r3,1
    630c:	2800081e 	bne	r5,zero,6330 <__lo0bits+0x90>
    6310:	1806d07a 	srli	r3,r3,1
    6314:	1800051e 	bne	r3,zero,632c <__lo0bits+0x8c>
    6318:	00800804 	movi	r2,32
    631c:	f800283a 	ret
    6320:	1806d43a 	srli	r3,r3,16
    6324:	00800404 	movi	r2,16
    6328:	003feb06 	br	62d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70062d8>
    632c:	10800044 	addi	r2,r2,1
    6330:	20c00015 	stw	r3,0(r4)
    6334:	f800283a 	ret
    6338:	0005883a 	mov	r2,zero
    633c:	f800283a 	ret
    6340:	1806d07a 	srli	r3,r3,1
    6344:	00800044 	movi	r2,1
    6348:	20c00015 	stw	r3,0(r4)
    634c:	f800283a 	ret

00006350 <__i2b>:
    6350:	defffd04 	addi	sp,sp,-12
    6354:	dc000015 	stw	r16,0(sp)
    6358:	04000044 	movi	r16,1
    635c:	dc400115 	stw	r17,4(sp)
    6360:	2823883a 	mov	r17,r5
    6364:	800b883a 	mov	r5,r16
    6368:	dfc00215 	stw	ra,8(sp)
    636c:	0005f440 	call	5f44 <_Balloc>
    6370:	14400515 	stw	r17,20(r2)
    6374:	14000415 	stw	r16,16(r2)
    6378:	dfc00217 	ldw	ra,8(sp)
    637c:	dc400117 	ldw	r17,4(sp)
    6380:	dc000017 	ldw	r16,0(sp)
    6384:	dec00304 	addi	sp,sp,12
    6388:	f800283a 	ret

0000638c <__multiply>:
    638c:	defffa04 	addi	sp,sp,-24
    6390:	dcc00315 	stw	r19,12(sp)
    6394:	dc800215 	stw	r18,8(sp)
    6398:	34c00417 	ldw	r19,16(r6)
    639c:	2c800417 	ldw	r18,16(r5)
    63a0:	dd000415 	stw	r20,16(sp)
    63a4:	dc400115 	stw	r17,4(sp)
    63a8:	dfc00515 	stw	ra,20(sp)
    63ac:	dc000015 	stw	r16,0(sp)
    63b0:	2829883a 	mov	r20,r5
    63b4:	3023883a 	mov	r17,r6
    63b8:	94c0050e 	bge	r18,r19,63d0 <__multiply+0x44>
    63bc:	9007883a 	mov	r3,r18
    63c0:	3029883a 	mov	r20,r6
    63c4:	9825883a 	mov	r18,r19
    63c8:	2823883a 	mov	r17,r5
    63cc:	1827883a 	mov	r19,r3
    63d0:	a0800217 	ldw	r2,8(r20)
    63d4:	94e1883a 	add	r16,r18,r19
    63d8:	a1400117 	ldw	r5,4(r20)
    63dc:	1400010e 	bge	r2,r16,63e4 <__multiply+0x58>
    63e0:	29400044 	addi	r5,r5,1
    63e4:	0005f440 	call	5f44 <_Balloc>
    63e8:	8415883a 	add	r10,r16,r16
    63ec:	12c00504 	addi	r11,r2,20
    63f0:	5295883a 	add	r10,r10,r10
    63f4:	5a95883a 	add	r10,r11,r10
    63f8:	5807883a 	mov	r3,r11
    63fc:	5a80032e 	bgeu	r11,r10,640c <__multiply+0x80>
    6400:	18000015 	stw	zero,0(r3)
    6404:	18c00104 	addi	r3,r3,4
    6408:	1abffd36 	bltu	r3,r10,6400 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006400>
    640c:	9ce7883a 	add	r19,r19,r19
    6410:	94a5883a 	add	r18,r18,r18
    6414:	89800504 	addi	r6,r17,20
    6418:	9ce7883a 	add	r19,r19,r19
    641c:	a3400504 	addi	r13,r20,20
    6420:	94a5883a 	add	r18,r18,r18
    6424:	34d9883a 	add	r12,r6,r19
    6428:	6c93883a 	add	r9,r13,r18
    642c:	3300422e 	bgeu	r6,r12,6538 <__multiply+0x1ac>
    6430:	37c00017 	ldw	ra,0(r6)
    6434:	fbffffcc 	andi	r15,ra,65535
    6438:	78001b26 	beq	r15,zero,64a8 <__multiply+0x11c>
    643c:	5811883a 	mov	r8,r11
    6440:	681d883a 	mov	r14,r13
    6444:	000f883a 	mov	r7,zero
    6448:	71000017 	ldw	r4,0(r14)
    644c:	40c00017 	ldw	r3,0(r8)
    6450:	73800104 	addi	r14,r14,4
    6454:	217fffcc 	andi	r5,r4,65535
    6458:	2bcb383a 	mul	r5,r5,r15
    645c:	2008d43a 	srli	r4,r4,16
    6460:	1c7fffcc 	andi	r17,r3,65535
    6464:	2c4b883a 	add	r5,r5,r17
    6468:	29cb883a 	add	r5,r5,r7
    646c:	23c9383a 	mul	r4,r4,r15
    6470:	1806d43a 	srli	r3,r3,16
    6474:	280ed43a 	srli	r7,r5,16
    6478:	297fffcc 	andi	r5,r5,65535
    647c:	20c7883a 	add	r3,r4,r3
    6480:	19c7883a 	add	r3,r3,r7
    6484:	1808943a 	slli	r4,r3,16
    6488:	4023883a 	mov	r17,r8
    648c:	180ed43a 	srli	r7,r3,16
    6490:	214ab03a 	or	r5,r4,r5
    6494:	41400015 	stw	r5,0(r8)
    6498:	42000104 	addi	r8,r8,4
    649c:	727fea36 	bltu	r14,r9,6448 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006448>
    64a0:	89c00115 	stw	r7,4(r17)
    64a4:	37c00017 	ldw	ra,0(r6)
    64a8:	f83ed43a 	srli	ra,ra,16
    64ac:	f8001f26 	beq	ra,zero,652c <__multiply+0x1a0>
    64b0:	58c00017 	ldw	r3,0(r11)
    64b4:	681d883a 	mov	r14,r13
    64b8:	581f883a 	mov	r15,r11
    64bc:	1811883a 	mov	r8,r3
    64c0:	5825883a 	mov	r18,r11
    64c4:	000f883a 	mov	r7,zero
    64c8:	00000106 	br	64d0 <__multiply+0x144>
    64cc:	8825883a 	mov	r18,r17
    64d0:	7140000b 	ldhu	r5,0(r14)
    64d4:	4010d43a 	srli	r8,r8,16
    64d8:	193fffcc 	andi	r4,r3,65535
    64dc:	2fcb383a 	mul	r5,r5,ra
    64e0:	7bc00104 	addi	r15,r15,4
    64e4:	73800104 	addi	r14,r14,4
    64e8:	2a0b883a 	add	r5,r5,r8
    64ec:	29cb883a 	add	r5,r5,r7
    64f0:	2806943a 	slli	r3,r5,16
    64f4:	94400104 	addi	r17,r18,4
    64f8:	280ad43a 	srli	r5,r5,16
    64fc:	1908b03a 	or	r4,r3,r4
    6500:	793fff15 	stw	r4,-4(r15)
    6504:	70ffff17 	ldw	r3,-4(r14)
    6508:	8a000017 	ldw	r8,0(r17)
    650c:	1806d43a 	srli	r3,r3,16
    6510:	413fffcc 	andi	r4,r8,65535
    6514:	1fc7383a 	mul	r3,r3,ra
    6518:	1907883a 	add	r3,r3,r4
    651c:	1947883a 	add	r3,r3,r5
    6520:	180ed43a 	srli	r7,r3,16
    6524:	727fe936 	bltu	r14,r9,64cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70064cc>
    6528:	90c00115 	stw	r3,4(r18)
    652c:	31800104 	addi	r6,r6,4
    6530:	5ac00104 	addi	r11,r11,4
    6534:	333fbe36 	bltu	r6,r12,6430 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006430>
    6538:	0400090e 	bge	zero,r16,6560 <__multiply+0x1d4>
    653c:	50ffff17 	ldw	r3,-4(r10)
    6540:	52bfff04 	addi	r10,r10,-4
    6544:	18000326 	beq	r3,zero,6554 <__multiply+0x1c8>
    6548:	00000506 	br	6560 <__multiply+0x1d4>
    654c:	50c00017 	ldw	r3,0(r10)
    6550:	1800031e 	bne	r3,zero,6560 <__multiply+0x1d4>
    6554:	843fffc4 	addi	r16,r16,-1
    6558:	52bfff04 	addi	r10,r10,-4
    655c:	803ffb1e 	bne	r16,zero,654c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700654c>
    6560:	14000415 	stw	r16,16(r2)
    6564:	dfc00517 	ldw	ra,20(sp)
    6568:	dd000417 	ldw	r20,16(sp)
    656c:	dcc00317 	ldw	r19,12(sp)
    6570:	dc800217 	ldw	r18,8(sp)
    6574:	dc400117 	ldw	r17,4(sp)
    6578:	dc000017 	ldw	r16,0(sp)
    657c:	dec00604 	addi	sp,sp,24
    6580:	f800283a 	ret

00006584 <__pow5mult>:
    6584:	defffa04 	addi	sp,sp,-24
    6588:	dcc00315 	stw	r19,12(sp)
    658c:	dc000015 	stw	r16,0(sp)
    6590:	dfc00515 	stw	ra,20(sp)
    6594:	dd000415 	stw	r20,16(sp)
    6598:	dc800215 	stw	r18,8(sp)
    659c:	dc400115 	stw	r17,4(sp)
    65a0:	308000cc 	andi	r2,r6,3
    65a4:	3021883a 	mov	r16,r6
    65a8:	2027883a 	mov	r19,r4
    65ac:	10002f1e 	bne	r2,zero,666c <__pow5mult+0xe8>
    65b0:	2825883a 	mov	r18,r5
    65b4:	8021d0ba 	srai	r16,r16,2
    65b8:	80001a26 	beq	r16,zero,6624 <__pow5mult+0xa0>
    65bc:	9c401217 	ldw	r17,72(r19)
    65c0:	8800061e 	bne	r17,zero,65dc <__pow5mult+0x58>
    65c4:	00003406 	br	6698 <__pow5mult+0x114>
    65c8:	8021d07a 	srai	r16,r16,1
    65cc:	80001526 	beq	r16,zero,6624 <__pow5mult+0xa0>
    65d0:	88800017 	ldw	r2,0(r17)
    65d4:	10001c26 	beq	r2,zero,6648 <__pow5mult+0xc4>
    65d8:	1023883a 	mov	r17,r2
    65dc:	8080004c 	andi	r2,r16,1
    65e0:	103ff926 	beq	r2,zero,65c8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70065c8>
    65e4:	880d883a 	mov	r6,r17
    65e8:	900b883a 	mov	r5,r18
    65ec:	9809883a 	mov	r4,r19
    65f0:	000638c0 	call	638c <__multiply>
    65f4:	90001b26 	beq	r18,zero,6664 <__pow5mult+0xe0>
    65f8:	91000117 	ldw	r4,4(r18)
    65fc:	98c01317 	ldw	r3,76(r19)
    6600:	8021d07a 	srai	r16,r16,1
    6604:	2109883a 	add	r4,r4,r4
    6608:	2109883a 	add	r4,r4,r4
    660c:	1907883a 	add	r3,r3,r4
    6610:	19000017 	ldw	r4,0(r3)
    6614:	91000015 	stw	r4,0(r18)
    6618:	1c800015 	stw	r18,0(r3)
    661c:	1025883a 	mov	r18,r2
    6620:	803feb1e 	bne	r16,zero,65d0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70065d0>
    6624:	9005883a 	mov	r2,r18
    6628:	dfc00517 	ldw	ra,20(sp)
    662c:	dd000417 	ldw	r20,16(sp)
    6630:	dcc00317 	ldw	r19,12(sp)
    6634:	dc800217 	ldw	r18,8(sp)
    6638:	dc400117 	ldw	r17,4(sp)
    663c:	dc000017 	ldw	r16,0(sp)
    6640:	dec00604 	addi	sp,sp,24
    6644:	f800283a 	ret
    6648:	880d883a 	mov	r6,r17
    664c:	880b883a 	mov	r5,r17
    6650:	9809883a 	mov	r4,r19
    6654:	000638c0 	call	638c <__multiply>
    6658:	88800015 	stw	r2,0(r17)
    665c:	10000015 	stw	zero,0(r2)
    6660:	003fdd06 	br	65d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70065d8>
    6664:	1025883a 	mov	r18,r2
    6668:	003fd706 	br	65c8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70065c8>
    666c:	10bfffc4 	addi	r2,r2,-1
    6670:	1085883a 	add	r2,r2,r2
    6674:	00c00074 	movhi	r3,1
    6678:	18c57104 	addi	r3,r3,5572
    667c:	1085883a 	add	r2,r2,r2
    6680:	1885883a 	add	r2,r3,r2
    6684:	11800017 	ldw	r6,0(r2)
    6688:	000f883a 	mov	r7,zero
    668c:	00060140 	call	6014 <__multadd>
    6690:	1025883a 	mov	r18,r2
    6694:	003fc706 	br	65b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70065b4>
    6698:	05000044 	movi	r20,1
    669c:	a00b883a 	mov	r5,r20
    66a0:	9809883a 	mov	r4,r19
    66a4:	0005f440 	call	5f44 <_Balloc>
    66a8:	1023883a 	mov	r17,r2
    66ac:	00809c44 	movi	r2,625
    66b0:	88800515 	stw	r2,20(r17)
    66b4:	8d000415 	stw	r20,16(r17)
    66b8:	9c401215 	stw	r17,72(r19)
    66bc:	88000015 	stw	zero,0(r17)
    66c0:	003fc606 	br	65dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70065dc>

000066c4 <__lshift>:
    66c4:	defff904 	addi	sp,sp,-28
    66c8:	dd400515 	stw	r21,20(sp)
    66cc:	dcc00315 	stw	r19,12(sp)
    66d0:	302bd17a 	srai	r21,r6,5
    66d4:	2cc00417 	ldw	r19,16(r5)
    66d8:	28800217 	ldw	r2,8(r5)
    66dc:	dd000415 	stw	r20,16(sp)
    66e0:	ace7883a 	add	r19,r21,r19
    66e4:	dc800215 	stw	r18,8(sp)
    66e8:	dc400115 	stw	r17,4(sp)
    66ec:	dc000015 	stw	r16,0(sp)
    66f0:	dfc00615 	stw	ra,24(sp)
    66f4:	9c000044 	addi	r16,r19,1
    66f8:	2823883a 	mov	r17,r5
    66fc:	3029883a 	mov	r20,r6
    6700:	2025883a 	mov	r18,r4
    6704:	29400117 	ldw	r5,4(r5)
    6708:	1400030e 	bge	r2,r16,6718 <__lshift+0x54>
    670c:	1085883a 	add	r2,r2,r2
    6710:	29400044 	addi	r5,r5,1
    6714:	143ffd16 	blt	r2,r16,670c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700670c>
    6718:	9009883a 	mov	r4,r18
    671c:	0005f440 	call	5f44 <_Balloc>
    6720:	10c00504 	addi	r3,r2,20
    6724:	0540070e 	bge	zero,r21,6744 <__lshift+0x80>
    6728:	ad6b883a 	add	r21,r21,r21
    672c:	ad6b883a 	add	r21,r21,r21
    6730:	1809883a 	mov	r4,r3
    6734:	1d47883a 	add	r3,r3,r21
    6738:	20000015 	stw	zero,0(r4)
    673c:	21000104 	addi	r4,r4,4
    6740:	193ffd1e 	bne	r3,r4,6738 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006738>
    6744:	8a000417 	ldw	r8,16(r17)
    6748:	89000504 	addi	r4,r17,20
    674c:	a18007cc 	andi	r6,r20,31
    6750:	4211883a 	add	r8,r8,r8
    6754:	4211883a 	add	r8,r8,r8
    6758:	2211883a 	add	r8,r4,r8
    675c:	30002326 	beq	r6,zero,67ec <__lshift+0x128>
    6760:	02400804 	movi	r9,32
    6764:	4993c83a 	sub	r9,r9,r6
    6768:	000b883a 	mov	r5,zero
    676c:	21c00017 	ldw	r7,0(r4)
    6770:	1815883a 	mov	r10,r3
    6774:	18c00104 	addi	r3,r3,4
    6778:	398e983a 	sll	r7,r7,r6
    677c:	21000104 	addi	r4,r4,4
    6780:	394ab03a 	or	r5,r7,r5
    6784:	197fff15 	stw	r5,-4(r3)
    6788:	217fff17 	ldw	r5,-4(r4)
    678c:	2a4ad83a 	srl	r5,r5,r9
    6790:	223ff636 	bltu	r4,r8,676c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700676c>
    6794:	51400115 	stw	r5,4(r10)
    6798:	28001a1e 	bne	r5,zero,6804 <__lshift+0x140>
    679c:	843fffc4 	addi	r16,r16,-1
    67a0:	14000415 	stw	r16,16(r2)
    67a4:	88000826 	beq	r17,zero,67c8 <__lshift+0x104>
    67a8:	89000117 	ldw	r4,4(r17)
    67ac:	90c01317 	ldw	r3,76(r18)
    67b0:	2109883a 	add	r4,r4,r4
    67b4:	2109883a 	add	r4,r4,r4
    67b8:	1907883a 	add	r3,r3,r4
    67bc:	19000017 	ldw	r4,0(r3)
    67c0:	89000015 	stw	r4,0(r17)
    67c4:	1c400015 	stw	r17,0(r3)
    67c8:	dfc00617 	ldw	ra,24(sp)
    67cc:	dd400517 	ldw	r21,20(sp)
    67d0:	dd000417 	ldw	r20,16(sp)
    67d4:	dcc00317 	ldw	r19,12(sp)
    67d8:	dc800217 	ldw	r18,8(sp)
    67dc:	dc400117 	ldw	r17,4(sp)
    67e0:	dc000017 	ldw	r16,0(sp)
    67e4:	dec00704 	addi	sp,sp,28
    67e8:	f800283a 	ret
    67ec:	21400017 	ldw	r5,0(r4)
    67f0:	18c00104 	addi	r3,r3,4
    67f4:	21000104 	addi	r4,r4,4
    67f8:	197fff15 	stw	r5,-4(r3)
    67fc:	223ffb36 	bltu	r4,r8,67ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70067ec>
    6800:	003fe606 	br	679c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700679c>
    6804:	9c000084 	addi	r16,r19,2
    6808:	003fe406 	br	679c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700679c>

0000680c <__mcmp>:
    680c:	20800417 	ldw	r2,16(r4)
    6810:	28c00417 	ldw	r3,16(r5)
    6814:	10c5c83a 	sub	r2,r2,r3
    6818:	1000111e 	bne	r2,zero,6860 <__mcmp+0x54>
    681c:	18c7883a 	add	r3,r3,r3
    6820:	18c7883a 	add	r3,r3,r3
    6824:	21000504 	addi	r4,r4,20
    6828:	29400504 	addi	r5,r5,20
    682c:	20c5883a 	add	r2,r4,r3
    6830:	28cb883a 	add	r5,r5,r3
    6834:	00000106 	br	683c <__mcmp+0x30>
    6838:	20800a2e 	bgeu	r4,r2,6864 <__mcmp+0x58>
    683c:	10bfff04 	addi	r2,r2,-4
    6840:	297fff04 	addi	r5,r5,-4
    6844:	11800017 	ldw	r6,0(r2)
    6848:	28c00017 	ldw	r3,0(r5)
    684c:	30fffa26 	beq	r6,r3,6838 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006838>
    6850:	30c00236 	bltu	r6,r3,685c <__mcmp+0x50>
    6854:	00800044 	movi	r2,1
    6858:	f800283a 	ret
    685c:	00bfffc4 	movi	r2,-1
    6860:	f800283a 	ret
    6864:	0005883a 	mov	r2,zero
    6868:	f800283a 	ret

0000686c <__mdiff>:
    686c:	28c00417 	ldw	r3,16(r5)
    6870:	30800417 	ldw	r2,16(r6)
    6874:	defffa04 	addi	sp,sp,-24
    6878:	dcc00315 	stw	r19,12(sp)
    687c:	dc800215 	stw	r18,8(sp)
    6880:	dfc00515 	stw	ra,20(sp)
    6884:	dd000415 	stw	r20,16(sp)
    6888:	dc400115 	stw	r17,4(sp)
    688c:	dc000015 	stw	r16,0(sp)
    6890:	1887c83a 	sub	r3,r3,r2
    6894:	2825883a 	mov	r18,r5
    6898:	3027883a 	mov	r19,r6
    689c:	1800141e 	bne	r3,zero,68f0 <__mdiff+0x84>
    68a0:	1085883a 	add	r2,r2,r2
    68a4:	1085883a 	add	r2,r2,r2
    68a8:	2a000504 	addi	r8,r5,20
    68ac:	34000504 	addi	r16,r6,20
    68b0:	4087883a 	add	r3,r8,r2
    68b4:	8085883a 	add	r2,r16,r2
    68b8:	00000106 	br	68c0 <__mdiff+0x54>
    68bc:	40c0592e 	bgeu	r8,r3,6a24 <__mdiff+0x1b8>
    68c0:	18ffff04 	addi	r3,r3,-4
    68c4:	10bfff04 	addi	r2,r2,-4
    68c8:	19c00017 	ldw	r7,0(r3)
    68cc:	11400017 	ldw	r5,0(r2)
    68d0:	397ffa26 	beq	r7,r5,68bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70068bc>
    68d4:	3940592e 	bgeu	r7,r5,6a3c <__mdiff+0x1d0>
    68d8:	9005883a 	mov	r2,r18
    68dc:	4023883a 	mov	r17,r8
    68e0:	9825883a 	mov	r18,r19
    68e4:	05000044 	movi	r20,1
    68e8:	1027883a 	mov	r19,r2
    68ec:	00000406 	br	6900 <__mdiff+0x94>
    68f0:	18005616 	blt	r3,zero,6a4c <__mdiff+0x1e0>
    68f4:	34400504 	addi	r17,r6,20
    68f8:	2c000504 	addi	r16,r5,20
    68fc:	0029883a 	mov	r20,zero
    6900:	91400117 	ldw	r5,4(r18)
    6904:	0005f440 	call	5f44 <_Balloc>
    6908:	92400417 	ldw	r9,16(r18)
    690c:	9b000417 	ldw	r12,16(r19)
    6910:	12c00504 	addi	r11,r2,20
    6914:	4a51883a 	add	r8,r9,r9
    6918:	6319883a 	add	r12,r12,r12
    691c:	4211883a 	add	r8,r8,r8
    6920:	6319883a 	add	r12,r12,r12
    6924:	15000315 	stw	r20,12(r2)
    6928:	8211883a 	add	r8,r16,r8
    692c:	8b19883a 	add	r12,r17,r12
    6930:	0007883a 	mov	r3,zero
    6934:	81400017 	ldw	r5,0(r16)
    6938:	89c00017 	ldw	r7,0(r17)
    693c:	59800104 	addi	r6,r11,4
    6940:	293fffcc 	andi	r4,r5,65535
    6944:	20c7883a 	add	r3,r4,r3
    6948:	393fffcc 	andi	r4,r7,65535
    694c:	1909c83a 	sub	r4,r3,r4
    6950:	280ad43a 	srli	r5,r5,16
    6954:	380ed43a 	srli	r7,r7,16
    6958:	2007d43a 	srai	r3,r4,16
    695c:	213fffcc 	andi	r4,r4,65535
    6960:	29cbc83a 	sub	r5,r5,r7
    6964:	28c7883a 	add	r3,r5,r3
    6968:	180a943a 	slli	r5,r3,16
    696c:	8c400104 	addi	r17,r17,4
    6970:	84000104 	addi	r16,r16,4
    6974:	2908b03a 	or	r4,r5,r4
    6978:	59000015 	stw	r4,0(r11)
    697c:	1807d43a 	srai	r3,r3,16
    6980:	3015883a 	mov	r10,r6
    6984:	3017883a 	mov	r11,r6
    6988:	8b3fea36 	bltu	r17,r12,6934 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006934>
    698c:	8200162e 	bgeu	r16,r8,69e8 <__mdiff+0x17c>
    6990:	8017883a 	mov	r11,r16
    6994:	59400017 	ldw	r5,0(r11)
    6998:	31800104 	addi	r6,r6,4
    699c:	5ac00104 	addi	r11,r11,4
    69a0:	293fffcc 	andi	r4,r5,65535
    69a4:	20c7883a 	add	r3,r4,r3
    69a8:	280ed43a 	srli	r7,r5,16
    69ac:	180bd43a 	srai	r5,r3,16
    69b0:	193fffcc 	andi	r4,r3,65535
    69b4:	3947883a 	add	r3,r7,r5
    69b8:	180a943a 	slli	r5,r3,16
    69bc:	1807d43a 	srai	r3,r3,16
    69c0:	2908b03a 	or	r4,r5,r4
    69c4:	313fff15 	stw	r4,-4(r6)
    69c8:	5a3ff236 	bltu	r11,r8,6994 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006994>
    69cc:	0406303a 	nor	r3,zero,r16
    69d0:	1a07883a 	add	r3,r3,r8
    69d4:	1806d0ba 	srli	r3,r3,2
    69d8:	18c00044 	addi	r3,r3,1
    69dc:	18c7883a 	add	r3,r3,r3
    69e0:	18c7883a 	add	r3,r3,r3
    69e4:	50d5883a 	add	r10,r10,r3
    69e8:	50ffff04 	addi	r3,r10,-4
    69ec:	2000041e 	bne	r4,zero,6a00 <__mdiff+0x194>
    69f0:	18ffff04 	addi	r3,r3,-4
    69f4:	19000017 	ldw	r4,0(r3)
    69f8:	4a7fffc4 	addi	r9,r9,-1
    69fc:	203ffc26 	beq	r4,zero,69f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70069f0>
    6a00:	12400415 	stw	r9,16(r2)
    6a04:	dfc00517 	ldw	ra,20(sp)
    6a08:	dd000417 	ldw	r20,16(sp)
    6a0c:	dcc00317 	ldw	r19,12(sp)
    6a10:	dc800217 	ldw	r18,8(sp)
    6a14:	dc400117 	ldw	r17,4(sp)
    6a18:	dc000017 	ldw	r16,0(sp)
    6a1c:	dec00604 	addi	sp,sp,24
    6a20:	f800283a 	ret
    6a24:	000b883a 	mov	r5,zero
    6a28:	0005f440 	call	5f44 <_Balloc>
    6a2c:	00c00044 	movi	r3,1
    6a30:	10c00415 	stw	r3,16(r2)
    6a34:	10000515 	stw	zero,20(r2)
    6a38:	003ff206 	br	6a04 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006a04>
    6a3c:	8023883a 	mov	r17,r16
    6a40:	0029883a 	mov	r20,zero
    6a44:	4021883a 	mov	r16,r8
    6a48:	003fad06 	br	6900 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006900>
    6a4c:	9005883a 	mov	r2,r18
    6a50:	94400504 	addi	r17,r18,20
    6a54:	9c000504 	addi	r16,r19,20
    6a58:	9825883a 	mov	r18,r19
    6a5c:	05000044 	movi	r20,1
    6a60:	1027883a 	mov	r19,r2
    6a64:	003fa606 	br	6900 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006900>

00006a68 <__ulp>:
    6a68:	295ffc2c 	andhi	r5,r5,32752
    6a6c:	00bf3034 	movhi	r2,64704
    6a70:	2887883a 	add	r3,r5,r2
    6a74:	00c0020e 	bge	zero,r3,6a80 <__ulp+0x18>
    6a78:	0005883a 	mov	r2,zero
    6a7c:	f800283a 	ret
    6a80:	00c7c83a 	sub	r3,zero,r3
    6a84:	1807d53a 	srai	r3,r3,20
    6a88:	008004c4 	movi	r2,19
    6a8c:	10c00b0e 	bge	r2,r3,6abc <__ulp+0x54>
    6a90:	18bffb04 	addi	r2,r3,-20
    6a94:	01000784 	movi	r4,30
    6a98:	0007883a 	mov	r3,zero
    6a9c:	20800516 	blt	r4,r2,6ab4 <__ulp+0x4c>
    6aa0:	010007c4 	movi	r4,31
    6aa4:	2089c83a 	sub	r4,r4,r2
    6aa8:	00800044 	movi	r2,1
    6aac:	1104983a 	sll	r2,r2,r4
    6ab0:	f800283a 	ret
    6ab4:	00800044 	movi	r2,1
    6ab8:	f800283a 	ret
    6abc:	01400234 	movhi	r5,8
    6ac0:	28c7d83a 	sra	r3,r5,r3
    6ac4:	0005883a 	mov	r2,zero
    6ac8:	f800283a 	ret

00006acc <__b2d>:
    6acc:	defffa04 	addi	sp,sp,-24
    6ad0:	dc000015 	stw	r16,0(sp)
    6ad4:	24000417 	ldw	r16,16(r4)
    6ad8:	dc400115 	stw	r17,4(sp)
    6adc:	24400504 	addi	r17,r4,20
    6ae0:	8421883a 	add	r16,r16,r16
    6ae4:	8421883a 	add	r16,r16,r16
    6ae8:	8c21883a 	add	r16,r17,r16
    6aec:	dc800215 	stw	r18,8(sp)
    6af0:	84bfff17 	ldw	r18,-4(r16)
    6af4:	dd000415 	stw	r20,16(sp)
    6af8:	dcc00315 	stw	r19,12(sp)
    6afc:	9009883a 	mov	r4,r18
    6b00:	2829883a 	mov	r20,r5
    6b04:	dfc00515 	stw	ra,20(sp)
    6b08:	00062380 	call	6238 <__hi0bits>
    6b0c:	00c00804 	movi	r3,32
    6b10:	1889c83a 	sub	r4,r3,r2
    6b14:	a1000015 	stw	r4,0(r20)
    6b18:	01000284 	movi	r4,10
    6b1c:	84ffff04 	addi	r19,r16,-4
    6b20:	20801216 	blt	r4,r2,6b6c <__b2d+0xa0>
    6b24:	018002c4 	movi	r6,11
    6b28:	308dc83a 	sub	r6,r6,r2
    6b2c:	9186d83a 	srl	r3,r18,r6
    6b30:	18cffc34 	orhi	r3,r3,16368
    6b34:	8cc0212e 	bgeu	r17,r19,6bbc <__b2d+0xf0>
    6b38:	813ffe17 	ldw	r4,-8(r16)
    6b3c:	218cd83a 	srl	r6,r4,r6
    6b40:	10800544 	addi	r2,r2,21
    6b44:	9084983a 	sll	r2,r18,r2
    6b48:	1184b03a 	or	r2,r2,r6
    6b4c:	dfc00517 	ldw	ra,20(sp)
    6b50:	dd000417 	ldw	r20,16(sp)
    6b54:	dcc00317 	ldw	r19,12(sp)
    6b58:	dc800217 	ldw	r18,8(sp)
    6b5c:	dc400117 	ldw	r17,4(sp)
    6b60:	dc000017 	ldw	r16,0(sp)
    6b64:	dec00604 	addi	sp,sp,24
    6b68:	f800283a 	ret
    6b6c:	8cc00f2e 	bgeu	r17,r19,6bac <__b2d+0xe0>
    6b70:	117ffd44 	addi	r5,r2,-11
    6b74:	80bffe17 	ldw	r2,-8(r16)
    6b78:	28000e26 	beq	r5,zero,6bb4 <__b2d+0xe8>
    6b7c:	1949c83a 	sub	r4,r3,r5
    6b80:	9164983a 	sll	r18,r18,r5
    6b84:	1106d83a 	srl	r3,r2,r4
    6b88:	81bffe04 	addi	r6,r16,-8
    6b8c:	948ffc34 	orhi	r18,r18,16368
    6b90:	90c6b03a 	or	r3,r18,r3
    6b94:	89800e2e 	bgeu	r17,r6,6bd0 <__b2d+0x104>
    6b98:	81bffd17 	ldw	r6,-12(r16)
    6b9c:	1144983a 	sll	r2,r2,r5
    6ba0:	310ad83a 	srl	r5,r6,r4
    6ba4:	2884b03a 	or	r2,r5,r2
    6ba8:	003fe806 	br	6b4c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006b4c>
    6bac:	10bffd44 	addi	r2,r2,-11
    6bb0:	1000041e 	bne	r2,zero,6bc4 <__b2d+0xf8>
    6bb4:	90cffc34 	orhi	r3,r18,16368
    6bb8:	003fe406 	br	6b4c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006b4c>
    6bbc:	000d883a 	mov	r6,zero
    6bc0:	003fdf06 	br	6b40 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006b40>
    6bc4:	90a4983a 	sll	r18,r18,r2
    6bc8:	0005883a 	mov	r2,zero
    6bcc:	003ff906 	br	6bb4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006bb4>
    6bd0:	1144983a 	sll	r2,r2,r5
    6bd4:	003fdd06 	br	6b4c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006b4c>

00006bd8 <__d2b>:
    6bd8:	defff804 	addi	sp,sp,-32
    6bdc:	dc000215 	stw	r16,8(sp)
    6be0:	3021883a 	mov	r16,r6
    6be4:	dc400315 	stw	r17,12(sp)
    6be8:	8022907a 	slli	r17,r16,1
    6bec:	dd000615 	stw	r20,24(sp)
    6bf0:	2829883a 	mov	r20,r5
    6bf4:	01400044 	movi	r5,1
    6bf8:	dcc00515 	stw	r19,20(sp)
    6bfc:	dc800415 	stw	r18,16(sp)
    6c00:	dfc00715 	stw	ra,28(sp)
    6c04:	3825883a 	mov	r18,r7
    6c08:	8822d57a 	srli	r17,r17,21
    6c0c:	0005f440 	call	5f44 <_Balloc>
    6c10:	1027883a 	mov	r19,r2
    6c14:	00800434 	movhi	r2,16
    6c18:	10bfffc4 	addi	r2,r2,-1
    6c1c:	808c703a 	and	r6,r16,r2
    6c20:	88000126 	beq	r17,zero,6c28 <__d2b+0x50>
    6c24:	31800434 	orhi	r6,r6,16
    6c28:	d9800015 	stw	r6,0(sp)
    6c2c:	a0002426 	beq	r20,zero,6cc0 <__d2b+0xe8>
    6c30:	d9000104 	addi	r4,sp,4
    6c34:	dd000115 	stw	r20,4(sp)
    6c38:	00062a00 	call	62a0 <__lo0bits>
    6c3c:	d8c00017 	ldw	r3,0(sp)
    6c40:	10002f1e 	bne	r2,zero,6d00 <__d2b+0x128>
    6c44:	d9000117 	ldw	r4,4(sp)
    6c48:	99000515 	stw	r4,20(r19)
    6c4c:	1821003a 	cmpeq	r16,r3,zero
    6c50:	01000084 	movi	r4,2
    6c54:	2421c83a 	sub	r16,r4,r16
    6c58:	98c00615 	stw	r3,24(r19)
    6c5c:	9c000415 	stw	r16,16(r19)
    6c60:	88001f1e 	bne	r17,zero,6ce0 <__d2b+0x108>
    6c64:	10bef384 	addi	r2,r2,-1074
    6c68:	90800015 	stw	r2,0(r18)
    6c6c:	00900034 	movhi	r2,16384
    6c70:	10bfffc4 	addi	r2,r2,-1
    6c74:	8085883a 	add	r2,r16,r2
    6c78:	1085883a 	add	r2,r2,r2
    6c7c:	1085883a 	add	r2,r2,r2
    6c80:	9885883a 	add	r2,r19,r2
    6c84:	11000517 	ldw	r4,20(r2)
    6c88:	8020917a 	slli	r16,r16,5
    6c8c:	00062380 	call	6238 <__hi0bits>
    6c90:	d8c00817 	ldw	r3,32(sp)
    6c94:	8085c83a 	sub	r2,r16,r2
    6c98:	18800015 	stw	r2,0(r3)
    6c9c:	9805883a 	mov	r2,r19
    6ca0:	dfc00717 	ldw	ra,28(sp)
    6ca4:	dd000617 	ldw	r20,24(sp)
    6ca8:	dcc00517 	ldw	r19,20(sp)
    6cac:	dc800417 	ldw	r18,16(sp)
    6cb0:	dc400317 	ldw	r17,12(sp)
    6cb4:	dc000217 	ldw	r16,8(sp)
    6cb8:	dec00804 	addi	sp,sp,32
    6cbc:	f800283a 	ret
    6cc0:	d809883a 	mov	r4,sp
    6cc4:	00062a00 	call	62a0 <__lo0bits>
    6cc8:	d8c00017 	ldw	r3,0(sp)
    6ccc:	04000044 	movi	r16,1
    6cd0:	9c000415 	stw	r16,16(r19)
    6cd4:	98c00515 	stw	r3,20(r19)
    6cd8:	10800804 	addi	r2,r2,32
    6cdc:	883fe126 	beq	r17,zero,6c64 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006c64>
    6ce0:	00c00d44 	movi	r3,53
    6ce4:	8c7ef344 	addi	r17,r17,-1075
    6ce8:	88a3883a 	add	r17,r17,r2
    6cec:	1885c83a 	sub	r2,r3,r2
    6cf0:	d8c00817 	ldw	r3,32(sp)
    6cf4:	94400015 	stw	r17,0(r18)
    6cf8:	18800015 	stw	r2,0(r3)
    6cfc:	003fe706 	br	6c9c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006c9c>
    6d00:	01000804 	movi	r4,32
    6d04:	2089c83a 	sub	r4,r4,r2
    6d08:	1908983a 	sll	r4,r3,r4
    6d0c:	d9400117 	ldw	r5,4(sp)
    6d10:	1886d83a 	srl	r3,r3,r2
    6d14:	2148b03a 	or	r4,r4,r5
    6d18:	99000515 	stw	r4,20(r19)
    6d1c:	d8c00015 	stw	r3,0(sp)
    6d20:	003fca06 	br	6c4c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006c4c>

00006d24 <__ratio>:
    6d24:	defff904 	addi	sp,sp,-28
    6d28:	dc400315 	stw	r17,12(sp)
    6d2c:	2823883a 	mov	r17,r5
    6d30:	d9400104 	addi	r5,sp,4
    6d34:	dfc00615 	stw	ra,24(sp)
    6d38:	dcc00515 	stw	r19,20(sp)
    6d3c:	dc800415 	stw	r18,16(sp)
    6d40:	2027883a 	mov	r19,r4
    6d44:	dc000215 	stw	r16,8(sp)
    6d48:	0006acc0 	call	6acc <__b2d>
    6d4c:	d80b883a 	mov	r5,sp
    6d50:	8809883a 	mov	r4,r17
    6d54:	1025883a 	mov	r18,r2
    6d58:	1821883a 	mov	r16,r3
    6d5c:	0006acc0 	call	6acc <__b2d>
    6d60:	8a000417 	ldw	r8,16(r17)
    6d64:	99000417 	ldw	r4,16(r19)
    6d68:	d9400117 	ldw	r5,4(sp)
    6d6c:	2209c83a 	sub	r4,r4,r8
    6d70:	2010917a 	slli	r8,r4,5
    6d74:	d9000017 	ldw	r4,0(sp)
    6d78:	2909c83a 	sub	r4,r5,r4
    6d7c:	4109883a 	add	r4,r8,r4
    6d80:	01000e0e 	bge	zero,r4,6dbc <__ratio+0x98>
    6d84:	2008953a 	slli	r4,r4,20
    6d88:	2421883a 	add	r16,r4,r16
    6d8c:	100d883a 	mov	r6,r2
    6d90:	180f883a 	mov	r7,r3
    6d94:	9009883a 	mov	r4,r18
    6d98:	800b883a 	mov	r5,r16
    6d9c:	000b2c00 	call	b2c0 <__divdf3>
    6da0:	dfc00617 	ldw	ra,24(sp)
    6da4:	dcc00517 	ldw	r19,20(sp)
    6da8:	dc800417 	ldw	r18,16(sp)
    6dac:	dc400317 	ldw	r17,12(sp)
    6db0:	dc000217 	ldw	r16,8(sp)
    6db4:	dec00704 	addi	sp,sp,28
    6db8:	f800283a 	ret
    6dbc:	2008953a 	slli	r4,r4,20
    6dc0:	1907c83a 	sub	r3,r3,r4
    6dc4:	003ff106 	br	6d8c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006d8c>

00006dc8 <_mprec_log10>:
    6dc8:	defffe04 	addi	sp,sp,-8
    6dcc:	dc000015 	stw	r16,0(sp)
    6dd0:	dfc00115 	stw	ra,4(sp)
    6dd4:	008005c4 	movi	r2,23
    6dd8:	2021883a 	mov	r16,r4
    6ddc:	11000d0e 	bge	r2,r4,6e14 <_mprec_log10+0x4c>
    6de0:	0005883a 	mov	r2,zero
    6de4:	00cffc34 	movhi	r3,16368
    6de8:	843fffc4 	addi	r16,r16,-1
    6dec:	000d883a 	mov	r6,zero
    6df0:	01d00934 	movhi	r7,16420
    6df4:	1009883a 	mov	r4,r2
    6df8:	180b883a 	mov	r5,r3
    6dfc:	000be000 	call	be00 <__muldf3>
    6e00:	803ff91e 	bne	r16,zero,6de8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006de8>
    6e04:	dfc00117 	ldw	ra,4(sp)
    6e08:	dc000017 	ldw	r16,0(sp)
    6e0c:	dec00204 	addi	sp,sp,8
    6e10:	f800283a 	ret
    6e14:	202090fa 	slli	r16,r4,3
    6e18:	00800074 	movhi	r2,1
    6e1c:	10858804 	addi	r2,r2,5664
    6e20:	1421883a 	add	r16,r2,r16
    6e24:	80800017 	ldw	r2,0(r16)
    6e28:	80c00117 	ldw	r3,4(r16)
    6e2c:	dfc00117 	ldw	ra,4(sp)
    6e30:	dc000017 	ldw	r16,0(sp)
    6e34:	dec00204 	addi	sp,sp,8
    6e38:	f800283a 	ret

00006e3c <__copybits>:
    6e3c:	297fffc4 	addi	r5,r5,-1
    6e40:	280fd17a 	srai	r7,r5,5
    6e44:	30c00417 	ldw	r3,16(r6)
    6e48:	30800504 	addi	r2,r6,20
    6e4c:	39c00044 	addi	r7,r7,1
    6e50:	18c7883a 	add	r3,r3,r3
    6e54:	39cf883a 	add	r7,r7,r7
    6e58:	18c7883a 	add	r3,r3,r3
    6e5c:	39cf883a 	add	r7,r7,r7
    6e60:	10c7883a 	add	r3,r2,r3
    6e64:	21cf883a 	add	r7,r4,r7
    6e68:	10c00d2e 	bgeu	r2,r3,6ea0 <__copybits+0x64>
    6e6c:	200b883a 	mov	r5,r4
    6e70:	12000017 	ldw	r8,0(r2)
    6e74:	29400104 	addi	r5,r5,4
    6e78:	10800104 	addi	r2,r2,4
    6e7c:	2a3fff15 	stw	r8,-4(r5)
    6e80:	10fffb36 	bltu	r2,r3,6e70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006e70>
    6e84:	1985c83a 	sub	r2,r3,r6
    6e88:	10bffac4 	addi	r2,r2,-21
    6e8c:	1004d0ba 	srli	r2,r2,2
    6e90:	10800044 	addi	r2,r2,1
    6e94:	1085883a 	add	r2,r2,r2
    6e98:	1085883a 	add	r2,r2,r2
    6e9c:	2089883a 	add	r4,r4,r2
    6ea0:	21c0032e 	bgeu	r4,r7,6eb0 <__copybits+0x74>
    6ea4:	20000015 	stw	zero,0(r4)
    6ea8:	21000104 	addi	r4,r4,4
    6eac:	21fffd36 	bltu	r4,r7,6ea4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006ea4>
    6eb0:	f800283a 	ret

00006eb4 <__any_on>:
    6eb4:	20c00417 	ldw	r3,16(r4)
    6eb8:	2805d17a 	srai	r2,r5,5
    6ebc:	21000504 	addi	r4,r4,20
    6ec0:	18800d0e 	bge	r3,r2,6ef8 <__any_on+0x44>
    6ec4:	18c7883a 	add	r3,r3,r3
    6ec8:	18c7883a 	add	r3,r3,r3
    6ecc:	20c7883a 	add	r3,r4,r3
    6ed0:	20c0192e 	bgeu	r4,r3,6f38 <__any_on+0x84>
    6ed4:	18bfff17 	ldw	r2,-4(r3)
    6ed8:	18ffff04 	addi	r3,r3,-4
    6edc:	1000041e 	bne	r2,zero,6ef0 <__any_on+0x3c>
    6ee0:	20c0142e 	bgeu	r4,r3,6f34 <__any_on+0x80>
    6ee4:	18ffff04 	addi	r3,r3,-4
    6ee8:	19400017 	ldw	r5,0(r3)
    6eec:	283ffc26 	beq	r5,zero,6ee0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006ee0>
    6ef0:	00800044 	movi	r2,1
    6ef4:	f800283a 	ret
    6ef8:	10c00a0e 	bge	r2,r3,6f24 <__any_on+0x70>
    6efc:	1085883a 	add	r2,r2,r2
    6f00:	1085883a 	add	r2,r2,r2
    6f04:	294007cc 	andi	r5,r5,31
    6f08:	2087883a 	add	r3,r4,r2
    6f0c:	283ff026 	beq	r5,zero,6ed0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006ed0>
    6f10:	19800017 	ldw	r6,0(r3)
    6f14:	3144d83a 	srl	r2,r6,r5
    6f18:	114a983a 	sll	r5,r2,r5
    6f1c:	317ff41e 	bne	r6,r5,6ef0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006ef0>
    6f20:	003feb06 	br	6ed0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006ed0>
    6f24:	1085883a 	add	r2,r2,r2
    6f28:	1085883a 	add	r2,r2,r2
    6f2c:	2087883a 	add	r3,r4,r2
    6f30:	003fe706 	br	6ed0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006ed0>
    6f34:	f800283a 	ret
    6f38:	0005883a 	mov	r2,zero
    6f3c:	f800283a 	ret

00006f40 <__fpclassifyd>:
    6f40:	00a00034 	movhi	r2,32768
    6f44:	10bfffc4 	addi	r2,r2,-1
    6f48:	2884703a 	and	r2,r5,r2
    6f4c:	10000726 	beq	r2,zero,6f6c <__fpclassifyd+0x2c>
    6f50:	00fffc34 	movhi	r3,65520
    6f54:	019ff834 	movhi	r6,32736
    6f58:	28c7883a 	add	r3,r5,r3
    6f5c:	31bfffc4 	addi	r6,r6,-1
    6f60:	30c00536 	bltu	r6,r3,6f78 <__fpclassifyd+0x38>
    6f64:	00800104 	movi	r2,4
    6f68:	f800283a 	ret
    6f6c:	2000021e 	bne	r4,zero,6f78 <__fpclassifyd+0x38>
    6f70:	00800084 	movi	r2,2
    6f74:	f800283a 	ret
    6f78:	00dffc34 	movhi	r3,32752
    6f7c:	019ff834 	movhi	r6,32736
    6f80:	28cb883a 	add	r5,r5,r3
    6f84:	31bfffc4 	addi	r6,r6,-1
    6f88:	317ff62e 	bgeu	r6,r5,6f64 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006f64>
    6f8c:	01400434 	movhi	r5,16
    6f90:	297fffc4 	addi	r5,r5,-1
    6f94:	28800236 	bltu	r5,r2,6fa0 <__fpclassifyd+0x60>
    6f98:	008000c4 	movi	r2,3
    6f9c:	f800283a 	ret
    6fa0:	10c00226 	beq	r2,r3,6fac <__fpclassifyd+0x6c>
    6fa4:	0005883a 	mov	r2,zero
    6fa8:	f800283a 	ret
    6fac:	2005003a 	cmpeq	r2,r4,zero
    6fb0:	f800283a 	ret

00006fb4 <_sbrk_r>:
    6fb4:	defffd04 	addi	sp,sp,-12
    6fb8:	dc000015 	stw	r16,0(sp)
    6fbc:	04000074 	movhi	r16,1
    6fc0:	dc400115 	stw	r17,4(sp)
    6fc4:	84152804 	addi	r16,r16,21664
    6fc8:	2023883a 	mov	r17,r4
    6fcc:	2809883a 	mov	r4,r5
    6fd0:	dfc00215 	stw	ra,8(sp)
    6fd4:	80000015 	stw	zero,0(r16)
    6fd8:	000d94c0 	call	d94c <sbrk>
    6fdc:	00ffffc4 	movi	r3,-1
    6fe0:	10c00526 	beq	r2,r3,6ff8 <_sbrk_r+0x44>
    6fe4:	dfc00217 	ldw	ra,8(sp)
    6fe8:	dc400117 	ldw	r17,4(sp)
    6fec:	dc000017 	ldw	r16,0(sp)
    6ff0:	dec00304 	addi	sp,sp,12
    6ff4:	f800283a 	ret
    6ff8:	80c00017 	ldw	r3,0(r16)
    6ffc:	183ff926 	beq	r3,zero,6fe4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006fe4>
    7000:	88c00015 	stw	r3,0(r17)
    7004:	003ff706 	br	6fe4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006fe4>

00007008 <__sread>:
    7008:	defffe04 	addi	sp,sp,-8
    700c:	dc000015 	stw	r16,0(sp)
    7010:	2821883a 	mov	r16,r5
    7014:	2940038f 	ldh	r5,14(r5)
    7018:	dfc00115 	stw	ra,4(sp)
    701c:	00094ac0 	call	94ac <_read_r>
    7020:	10000716 	blt	r2,zero,7040 <__sread+0x38>
    7024:	80c01417 	ldw	r3,80(r16)
    7028:	1887883a 	add	r3,r3,r2
    702c:	80c01415 	stw	r3,80(r16)
    7030:	dfc00117 	ldw	ra,4(sp)
    7034:	dc000017 	ldw	r16,0(sp)
    7038:	dec00204 	addi	sp,sp,8
    703c:	f800283a 	ret
    7040:	80c0030b 	ldhu	r3,12(r16)
    7044:	18fbffcc 	andi	r3,r3,61439
    7048:	80c0030d 	sth	r3,12(r16)
    704c:	dfc00117 	ldw	ra,4(sp)
    7050:	dc000017 	ldw	r16,0(sp)
    7054:	dec00204 	addi	sp,sp,8
    7058:	f800283a 	ret

0000705c <__seofread>:
    705c:	0005883a 	mov	r2,zero
    7060:	f800283a 	ret

00007064 <__swrite>:
    7064:	2880030b 	ldhu	r2,12(r5)
    7068:	defffb04 	addi	sp,sp,-20
    706c:	dcc00315 	stw	r19,12(sp)
    7070:	dc800215 	stw	r18,8(sp)
    7074:	dc400115 	stw	r17,4(sp)
    7078:	dc000015 	stw	r16,0(sp)
    707c:	dfc00415 	stw	ra,16(sp)
    7080:	10c0400c 	andi	r3,r2,256
    7084:	2821883a 	mov	r16,r5
    7088:	2023883a 	mov	r17,r4
    708c:	3025883a 	mov	r18,r6
    7090:	3827883a 	mov	r19,r7
    7094:	18000526 	beq	r3,zero,70ac <__swrite+0x48>
    7098:	2940038f 	ldh	r5,14(r5)
    709c:	01c00084 	movi	r7,2
    70a0:	000d883a 	mov	r6,zero
    70a4:	00092f00 	call	92f0 <_lseek_r>
    70a8:	8080030b 	ldhu	r2,12(r16)
    70ac:	8140038f 	ldh	r5,14(r16)
    70b0:	10bbffcc 	andi	r2,r2,61439
    70b4:	980f883a 	mov	r7,r19
    70b8:	900d883a 	mov	r6,r18
    70bc:	8809883a 	mov	r4,r17
    70c0:	8080030d 	sth	r2,12(r16)
    70c4:	dfc00417 	ldw	ra,16(sp)
    70c8:	dcc00317 	ldw	r19,12(sp)
    70cc:	dc800217 	ldw	r18,8(sp)
    70d0:	dc400117 	ldw	r17,4(sp)
    70d4:	dc000017 	ldw	r16,0(sp)
    70d8:	dec00504 	addi	sp,sp,20
    70dc:	00089001 	jmpi	8900 <_write_r>

000070e0 <__sseek>:
    70e0:	defffe04 	addi	sp,sp,-8
    70e4:	dc000015 	stw	r16,0(sp)
    70e8:	2821883a 	mov	r16,r5
    70ec:	2940038f 	ldh	r5,14(r5)
    70f0:	dfc00115 	stw	ra,4(sp)
    70f4:	00092f00 	call	92f0 <_lseek_r>
    70f8:	00ffffc4 	movi	r3,-1
    70fc:	10c00826 	beq	r2,r3,7120 <__sseek+0x40>
    7100:	80c0030b 	ldhu	r3,12(r16)
    7104:	80801415 	stw	r2,80(r16)
    7108:	18c40014 	ori	r3,r3,4096
    710c:	80c0030d 	sth	r3,12(r16)
    7110:	dfc00117 	ldw	ra,4(sp)
    7114:	dc000017 	ldw	r16,0(sp)
    7118:	dec00204 	addi	sp,sp,8
    711c:	f800283a 	ret
    7120:	80c0030b 	ldhu	r3,12(r16)
    7124:	18fbffcc 	andi	r3,r3,61439
    7128:	80c0030d 	sth	r3,12(r16)
    712c:	dfc00117 	ldw	ra,4(sp)
    7130:	dc000017 	ldw	r16,0(sp)
    7134:	dec00204 	addi	sp,sp,8
    7138:	f800283a 	ret

0000713c <__sclose>:
    713c:	2940038f 	ldh	r5,14(r5)
    7140:	00089601 	jmpi	8960 <_close_r>

00007144 <strcmp>:
    7144:	2144b03a 	or	r2,r4,r5
    7148:	108000cc 	andi	r2,r2,3
    714c:	1000171e 	bne	r2,zero,71ac <strcmp+0x68>
    7150:	20800017 	ldw	r2,0(r4)
    7154:	28c00017 	ldw	r3,0(r5)
    7158:	10c0141e 	bne	r2,r3,71ac <strcmp+0x68>
    715c:	027fbff4 	movhi	r9,65279
    7160:	4a7fbfc4 	addi	r9,r9,-257
    7164:	0086303a 	nor	r3,zero,r2
    7168:	02202074 	movhi	r8,32897
    716c:	1245883a 	add	r2,r2,r9
    7170:	42202004 	addi	r8,r8,-32640
    7174:	10c4703a 	and	r2,r2,r3
    7178:	1204703a 	and	r2,r2,r8
    717c:	10000226 	beq	r2,zero,7188 <strcmp+0x44>
    7180:	00002306 	br	7210 <strcmp+0xcc>
    7184:	1000221e 	bne	r2,zero,7210 <strcmp+0xcc>
    7188:	21000104 	addi	r4,r4,4
    718c:	20c00017 	ldw	r3,0(r4)
    7190:	29400104 	addi	r5,r5,4
    7194:	29800017 	ldw	r6,0(r5)
    7198:	1a4f883a 	add	r7,r3,r9
    719c:	00c4303a 	nor	r2,zero,r3
    71a0:	3884703a 	and	r2,r7,r2
    71a4:	1204703a 	and	r2,r2,r8
    71a8:	19bff626 	beq	r3,r6,7184 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007184>
    71ac:	20800003 	ldbu	r2,0(r4)
    71b0:	10c03fcc 	andi	r3,r2,255
    71b4:	18c0201c 	xori	r3,r3,128
    71b8:	18ffe004 	addi	r3,r3,-128
    71bc:	18000c26 	beq	r3,zero,71f0 <strcmp+0xac>
    71c0:	29800007 	ldb	r6,0(r5)
    71c4:	19800326 	beq	r3,r6,71d4 <strcmp+0x90>
    71c8:	00001306 	br	7218 <strcmp+0xd4>
    71cc:	29800007 	ldb	r6,0(r5)
    71d0:	11800b1e 	bne	r2,r6,7200 <strcmp+0xbc>
    71d4:	21000044 	addi	r4,r4,1
    71d8:	20c00003 	ldbu	r3,0(r4)
    71dc:	29400044 	addi	r5,r5,1
    71e0:	18803fcc 	andi	r2,r3,255
    71e4:	1080201c 	xori	r2,r2,128
    71e8:	10bfe004 	addi	r2,r2,-128
    71ec:	103ff71e 	bne	r2,zero,71cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70071cc>
    71f0:	0007883a 	mov	r3,zero
    71f4:	28800003 	ldbu	r2,0(r5)
    71f8:	1885c83a 	sub	r2,r3,r2
    71fc:	f800283a 	ret
    7200:	28800003 	ldbu	r2,0(r5)
    7204:	18c03fcc 	andi	r3,r3,255
    7208:	1885c83a 	sub	r2,r3,r2
    720c:	f800283a 	ret
    7210:	0005883a 	mov	r2,zero
    7214:	f800283a 	ret
    7218:	10c03fcc 	andi	r3,r2,255
    721c:	003ff506 	br	71f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70071f4>

00007220 <strlen>:
    7220:	208000cc 	andi	r2,r4,3
    7224:	10002026 	beq	r2,zero,72a8 <strlen+0x88>
    7228:	20800007 	ldb	r2,0(r4)
    722c:	10002026 	beq	r2,zero,72b0 <strlen+0x90>
    7230:	2005883a 	mov	r2,r4
    7234:	00000206 	br	7240 <strlen+0x20>
    7238:	10c00007 	ldb	r3,0(r2)
    723c:	18001826 	beq	r3,zero,72a0 <strlen+0x80>
    7240:	10800044 	addi	r2,r2,1
    7244:	10c000cc 	andi	r3,r2,3
    7248:	183ffb1e 	bne	r3,zero,7238 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007238>
    724c:	10c00017 	ldw	r3,0(r2)
    7250:	01ffbff4 	movhi	r7,65279
    7254:	39ffbfc4 	addi	r7,r7,-257
    7258:	00ca303a 	nor	r5,zero,r3
    725c:	01a02074 	movhi	r6,32897
    7260:	19c7883a 	add	r3,r3,r7
    7264:	31a02004 	addi	r6,r6,-32640
    7268:	1946703a 	and	r3,r3,r5
    726c:	1986703a 	and	r3,r3,r6
    7270:	1800091e 	bne	r3,zero,7298 <strlen+0x78>
    7274:	10800104 	addi	r2,r2,4
    7278:	10c00017 	ldw	r3,0(r2)
    727c:	19cb883a 	add	r5,r3,r7
    7280:	00c6303a 	nor	r3,zero,r3
    7284:	28c6703a 	and	r3,r5,r3
    7288:	1986703a 	and	r3,r3,r6
    728c:	183ff926 	beq	r3,zero,7274 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007274>
    7290:	00000106 	br	7298 <strlen+0x78>
    7294:	10800044 	addi	r2,r2,1
    7298:	10c00007 	ldb	r3,0(r2)
    729c:	183ffd1e 	bne	r3,zero,7294 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007294>
    72a0:	1105c83a 	sub	r2,r2,r4
    72a4:	f800283a 	ret
    72a8:	2005883a 	mov	r2,r4
    72ac:	003fe706 	br	724c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700724c>
    72b0:	0005883a 	mov	r2,zero
    72b4:	f800283a 	ret

000072b8 <__sprint_r.part.0>:
    72b8:	28801917 	ldw	r2,100(r5)
    72bc:	defff604 	addi	sp,sp,-40
    72c0:	dd400515 	stw	r21,20(sp)
    72c4:	dfc00915 	stw	ra,36(sp)
    72c8:	df000815 	stw	fp,32(sp)
    72cc:	ddc00715 	stw	r23,28(sp)
    72d0:	dd800615 	stw	r22,24(sp)
    72d4:	dd000415 	stw	r20,16(sp)
    72d8:	dcc00315 	stw	r19,12(sp)
    72dc:	dc800215 	stw	r18,8(sp)
    72e0:	dc400115 	stw	r17,4(sp)
    72e4:	dc000015 	stw	r16,0(sp)
    72e8:	1088000c 	andi	r2,r2,8192
    72ec:	302b883a 	mov	r21,r6
    72f0:	10002e26 	beq	r2,zero,73ac <__sprint_r.part.0+0xf4>
    72f4:	30800217 	ldw	r2,8(r6)
    72f8:	35800017 	ldw	r22,0(r6)
    72fc:	10002926 	beq	r2,zero,73a4 <__sprint_r.part.0+0xec>
    7300:	2827883a 	mov	r19,r5
    7304:	2029883a 	mov	r20,r4
    7308:	b5c00104 	addi	r23,r22,4
    730c:	04bfffc4 	movi	r18,-1
    7310:	bc400017 	ldw	r17,0(r23)
    7314:	b4000017 	ldw	r16,0(r22)
    7318:	0039883a 	mov	fp,zero
    731c:	8822d0ba 	srli	r17,r17,2
    7320:	8800031e 	bne	r17,zero,7330 <__sprint_r.part.0+0x78>
    7324:	00001806 	br	7388 <__sprint_r.part.0+0xd0>
    7328:	84000104 	addi	r16,r16,4
    732c:	8f001526 	beq	r17,fp,7384 <__sprint_r.part.0+0xcc>
    7330:	81400017 	ldw	r5,0(r16)
    7334:	980d883a 	mov	r6,r19
    7338:	a009883a 	mov	r4,r20
    733c:	0008ce00 	call	8ce0 <_fputwc_r>
    7340:	e7000044 	addi	fp,fp,1
    7344:	14bff81e 	bne	r2,r18,7328 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007328>
    7348:	9005883a 	mov	r2,r18
    734c:	a8000215 	stw	zero,8(r21)
    7350:	a8000115 	stw	zero,4(r21)
    7354:	dfc00917 	ldw	ra,36(sp)
    7358:	df000817 	ldw	fp,32(sp)
    735c:	ddc00717 	ldw	r23,28(sp)
    7360:	dd800617 	ldw	r22,24(sp)
    7364:	dd400517 	ldw	r21,20(sp)
    7368:	dd000417 	ldw	r20,16(sp)
    736c:	dcc00317 	ldw	r19,12(sp)
    7370:	dc800217 	ldw	r18,8(sp)
    7374:	dc400117 	ldw	r17,4(sp)
    7378:	dc000017 	ldw	r16,0(sp)
    737c:	dec00a04 	addi	sp,sp,40
    7380:	f800283a 	ret
    7384:	a8800217 	ldw	r2,8(r21)
    7388:	8c63883a 	add	r17,r17,r17
    738c:	8c63883a 	add	r17,r17,r17
    7390:	1445c83a 	sub	r2,r2,r17
    7394:	a8800215 	stw	r2,8(r21)
    7398:	b5800204 	addi	r22,r22,8
    739c:	bdc00204 	addi	r23,r23,8
    73a0:	103fdb1e 	bne	r2,zero,7310 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007310>
    73a4:	0005883a 	mov	r2,zero
    73a8:	003fe806 	br	734c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700734c>
    73ac:	0008de00 	call	8de0 <__sfvwrite_r>
    73b0:	003fe606 	br	734c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700734c>

000073b4 <__sprint_r>:
    73b4:	30c00217 	ldw	r3,8(r6)
    73b8:	18000126 	beq	r3,zero,73c0 <__sprint_r+0xc>
    73bc:	00072b81 	jmpi	72b8 <__sprint_r.part.0>
    73c0:	30000115 	stw	zero,4(r6)
    73c4:	0005883a 	mov	r2,zero
    73c8:	f800283a 	ret

000073cc <___vfiprintf_internal_r>:
    73cc:	deffc904 	addi	sp,sp,-220
    73d0:	df003515 	stw	fp,212(sp)
    73d4:	dd003115 	stw	r20,196(sp)
    73d8:	dfc03615 	stw	ra,216(sp)
    73dc:	ddc03415 	stw	r23,208(sp)
    73e0:	dd803315 	stw	r22,204(sp)
    73e4:	dd403215 	stw	r21,200(sp)
    73e8:	dcc03015 	stw	r19,192(sp)
    73ec:	dc802f15 	stw	r18,188(sp)
    73f0:	dc402e15 	stw	r17,184(sp)
    73f4:	dc002d15 	stw	r16,180(sp)
    73f8:	d9002015 	stw	r4,128(sp)
    73fc:	d9c02215 	stw	r7,136(sp)
    7400:	2829883a 	mov	r20,r5
    7404:	3039883a 	mov	fp,r6
    7408:	20000226 	beq	r4,zero,7414 <___vfiprintf_internal_r+0x48>
    740c:	20800e17 	ldw	r2,56(r4)
    7410:	1000cf26 	beq	r2,zero,7750 <___vfiprintf_internal_r+0x384>
    7414:	a080030b 	ldhu	r2,12(r20)
    7418:	10c8000c 	andi	r3,r2,8192
    741c:	1800061e 	bne	r3,zero,7438 <___vfiprintf_internal_r+0x6c>
    7420:	a1001917 	ldw	r4,100(r20)
    7424:	00f7ffc4 	movi	r3,-8193
    7428:	10880014 	ori	r2,r2,8192
    742c:	20c6703a 	and	r3,r4,r3
    7430:	a080030d 	sth	r2,12(r20)
    7434:	a0c01915 	stw	r3,100(r20)
    7438:	10c0020c 	andi	r3,r2,8
    743c:	1800a926 	beq	r3,zero,76e4 <___vfiprintf_internal_r+0x318>
    7440:	a0c00417 	ldw	r3,16(r20)
    7444:	1800a726 	beq	r3,zero,76e4 <___vfiprintf_internal_r+0x318>
    7448:	1080068c 	andi	r2,r2,26
    744c:	00c00284 	movi	r3,10
    7450:	10c0ac26 	beq	r2,r3,7704 <___vfiprintf_internal_r+0x338>
    7454:	da801a04 	addi	r10,sp,104
    7458:	da801e15 	stw	r10,120(sp)
    745c:	d8801e17 	ldw	r2,120(sp)
    7460:	da8019c4 	addi	r10,sp,103
    7464:	05800074 	movhi	r22,1
    7468:	05c00074 	movhi	r23,1
    746c:	da801f15 	stw	r10,124(sp)
    7470:	1295c83a 	sub	r10,r2,r10
    7474:	b585be04 	addi	r22,r22,5880
    7478:	bdc5ba04 	addi	r23,r23,5864
    747c:	dec01a15 	stw	sp,104(sp)
    7480:	d8001c15 	stw	zero,112(sp)
    7484:	d8001b15 	stw	zero,108(sp)
    7488:	d8002615 	stw	zero,152(sp)
    748c:	d8002315 	stw	zero,140(sp)
    7490:	da802715 	stw	r10,156(sp)
    7494:	d811883a 	mov	r8,sp
    7498:	dd002115 	stw	r20,132(sp)
    749c:	e021883a 	mov	r16,fp
    74a0:	80800007 	ldb	r2,0(r16)
    74a4:	1003ea26 	beq	r2,zero,8450 <___vfiprintf_internal_r+0x1084>
    74a8:	00c00944 	movi	r3,37
    74ac:	8025883a 	mov	r18,r16
    74b0:	10c0021e 	bne	r2,r3,74bc <___vfiprintf_internal_r+0xf0>
    74b4:	00001606 	br	7510 <___vfiprintf_internal_r+0x144>
    74b8:	10c00326 	beq	r2,r3,74c8 <___vfiprintf_internal_r+0xfc>
    74bc:	94800044 	addi	r18,r18,1
    74c0:	90800007 	ldb	r2,0(r18)
    74c4:	103ffc1e 	bne	r2,zero,74b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70074b8>
    74c8:	9423c83a 	sub	r17,r18,r16
    74cc:	88001026 	beq	r17,zero,7510 <___vfiprintf_internal_r+0x144>
    74d0:	d8c01c17 	ldw	r3,112(sp)
    74d4:	d8801b17 	ldw	r2,108(sp)
    74d8:	44000015 	stw	r16,0(r8)
    74dc:	88c7883a 	add	r3,r17,r3
    74e0:	10800044 	addi	r2,r2,1
    74e4:	44400115 	stw	r17,4(r8)
    74e8:	d8c01c15 	stw	r3,112(sp)
    74ec:	d8801b15 	stw	r2,108(sp)
    74f0:	010001c4 	movi	r4,7
    74f4:	2080760e 	bge	r4,r2,76d0 <___vfiprintf_internal_r+0x304>
    74f8:	1803821e 	bne	r3,zero,8304 <___vfiprintf_internal_r+0xf38>
    74fc:	da802317 	ldw	r10,140(sp)
    7500:	d8001b15 	stw	zero,108(sp)
    7504:	d811883a 	mov	r8,sp
    7508:	5455883a 	add	r10,r10,r17
    750c:	da802315 	stw	r10,140(sp)
    7510:	90800007 	ldb	r2,0(r18)
    7514:	10044626 	beq	r2,zero,8630 <___vfiprintf_internal_r+0x1264>
    7518:	90c00047 	ldb	r3,1(r18)
    751c:	94000044 	addi	r16,r18,1
    7520:	d8001d85 	stb	zero,118(sp)
    7524:	0009883a 	mov	r4,zero
    7528:	000f883a 	mov	r7,zero
    752c:	027fffc4 	movi	r9,-1
    7530:	0023883a 	mov	r17,zero
    7534:	0029883a 	mov	r20,zero
    7538:	01401604 	movi	r5,88
    753c:	01800244 	movi	r6,9
    7540:	03400a84 	movi	r13,42
    7544:	03001b04 	movi	r12,108
    7548:	84000044 	addi	r16,r16,1
    754c:	18bff804 	addi	r2,r3,-32
    7550:	28827336 	bltu	r5,r2,7f20 <___vfiprintf_internal_r+0xb54>
    7554:	100490ba 	slli	r2,r2,2
    7558:	02800034 	movhi	r10,0
    755c:	529d5b04 	addi	r10,r10,30060
    7560:	1285883a 	add	r2,r2,r10
    7564:	10800017 	ldw	r2,0(r2)
    7568:	1000683a 	jmp	r2
    756c:	00007c54 	movui	zero,497
    7570:	00007f20 	cmpeqi	zero,zero,508
    7574:	00007f20 	cmpeqi	zero,zero,508
    7578:	00007c74 	movhi	zero,497
    757c:	00007f20 	cmpeqi	zero,zero,508
    7580:	00007f20 	cmpeqi	zero,zero,508
    7584:	00007f20 	cmpeqi	zero,zero,508
    7588:	00007f20 	cmpeqi	zero,zero,508
    758c:	00007f20 	cmpeqi	zero,zero,508
    7590:	00007f20 	cmpeqi	zero,zero,508
    7594:	00007e5c 	xori	zero,zero,505
    7598:	00007e78 	rdprs	zero,zero,505
    759c:	00007f20 	cmpeqi	zero,zero,508
    75a0:	00007760 	cmpeqi	zero,zero,477
    75a4:	00007e88 	cmpgei	zero,zero,506
    75a8:	00007f20 	cmpeqi	zero,zero,508
    75ac:	00007c80 	call	7c8 <__floatsisf+0x120>
    75b0:	00007c8c 	andi	zero,zero,498
    75b4:	00007c8c 	andi	zero,zero,498
    75b8:	00007c8c 	andi	zero,zero,498
    75bc:	00007c8c 	andi	zero,zero,498
    75c0:	00007c8c 	andi	zero,zero,498
    75c4:	00007c8c 	andi	zero,zero,498
    75c8:	00007c8c 	andi	zero,zero,498
    75cc:	00007c8c 	andi	zero,zero,498
    75d0:	00007c8c 	andi	zero,zero,498
    75d4:	00007f20 	cmpeqi	zero,zero,508
    75d8:	00007f20 	cmpeqi	zero,zero,508
    75dc:	00007f20 	cmpeqi	zero,zero,508
    75e0:	00007f20 	cmpeqi	zero,zero,508
    75e4:	00007f20 	cmpeqi	zero,zero,508
    75e8:	00007f20 	cmpeqi	zero,zero,508
    75ec:	00007f20 	cmpeqi	zero,zero,508
    75f0:	00007f20 	cmpeqi	zero,zero,508
    75f4:	00007f20 	cmpeqi	zero,zero,508
    75f8:	00007f20 	cmpeqi	zero,zero,508
    75fc:	00007cb8 	rdprs	zero,zero,498
    7600:	00007f20 	cmpeqi	zero,zero,508
    7604:	00007f20 	cmpeqi	zero,zero,508
    7608:	00007f20 	cmpeqi	zero,zero,508
    760c:	00007f20 	cmpeqi	zero,zero,508
    7610:	00007f20 	cmpeqi	zero,zero,508
    7614:	00007f20 	cmpeqi	zero,zero,508
    7618:	00007f20 	cmpeqi	zero,zero,508
    761c:	00007f20 	cmpeqi	zero,zero,508
    7620:	00007f20 	cmpeqi	zero,zero,508
    7624:	00007f20 	cmpeqi	zero,zero,508
    7628:	00007cf0 	cmpltui	zero,zero,499
    762c:	00007f20 	cmpeqi	zero,zero,508
    7630:	00007f20 	cmpeqi	zero,zero,508
    7634:	00007f20 	cmpeqi	zero,zero,508
    7638:	00007f20 	cmpeqi	zero,zero,508
    763c:	00007f20 	cmpeqi	zero,zero,508
    7640:	00007d48 	cmpgei	zero,zero,501
    7644:	00007f20 	cmpeqi	zero,zero,508
    7648:	00007f20 	cmpeqi	zero,zero,508
    764c:	00007db8 	rdprs	zero,zero,502
    7650:	00007f20 	cmpeqi	zero,zero,508
    7654:	00007f20 	cmpeqi	zero,zero,508
    7658:	00007f20 	cmpeqi	zero,zero,508
    765c:	00007f20 	cmpeqi	zero,zero,508
    7660:	00007f20 	cmpeqi	zero,zero,508
    7664:	00007f20 	cmpeqi	zero,zero,508
    7668:	00007f20 	cmpeqi	zero,zero,508
    766c:	00007f20 	cmpeqi	zero,zero,508
    7670:	00007f20 	cmpeqi	zero,zero,508
    7674:	00007f20 	cmpeqi	zero,zero,508
    7678:	00007b64 	muli	zero,zero,493
    767c:	00007b90 	cmplti	zero,zero,494
    7680:	00007f20 	cmpeqi	zero,zero,508
    7684:	00007f20 	cmpeqi	zero,zero,508
    7688:	00007f20 	cmpeqi	zero,zero,508
    768c:	00007ec8 	cmpgei	zero,zero,507
    7690:	00007b90 	cmplti	zero,zero,494
    7694:	00007f20 	cmpeqi	zero,zero,508
    7698:	00007f20 	cmpeqi	zero,zero,508
    769c:	00007a24 	muli	zero,zero,488
    76a0:	00007f20 	cmpeqi	zero,zero,508
    76a4:	00007a34 	movhi	zero,488
    76a8:	00007a70 	cmpltui	zero,zero,489
    76ac:	0000776c 	andhi	zero,zero,477
    76b0:	00007a18 	cmpnei	zero,zero,488
    76b4:	00007f20 	cmpeqi	zero,zero,508
    76b8:	00007df4 	movhi	zero,503
    76bc:	00007f20 	cmpeqi	zero,zero,508
    76c0:	00007e4c 	andi	zero,zero,505
    76c4:	00007f20 	cmpeqi	zero,zero,508
    76c8:	00007f20 	cmpeqi	zero,zero,508
    76cc:	00007b10 	cmplti	zero,zero,492
    76d0:	42000204 	addi	r8,r8,8
    76d4:	da802317 	ldw	r10,140(sp)
    76d8:	5455883a 	add	r10,r10,r17
    76dc:	da802315 	stw	r10,140(sp)
    76e0:	003f8b06 	br	7510 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007510>
    76e4:	d9002017 	ldw	r4,128(sp)
    76e8:	a00b883a 	mov	r5,r20
    76ec:	0002b6c0 	call	2b6c <__swsetup_r>
    76f0:	1003b11e 	bne	r2,zero,85b8 <___vfiprintf_internal_r+0x11ec>
    76f4:	a080030b 	ldhu	r2,12(r20)
    76f8:	00c00284 	movi	r3,10
    76fc:	1080068c 	andi	r2,r2,26
    7700:	10ff541e 	bne	r2,r3,7454 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007454>
    7704:	a080038f 	ldh	r2,14(r20)
    7708:	103f5216 	blt	r2,zero,7454 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007454>
    770c:	d9c02217 	ldw	r7,136(sp)
    7710:	d9002017 	ldw	r4,128(sp)
    7714:	e00d883a 	mov	r6,fp
    7718:	a00b883a 	mov	r5,r20
    771c:	00088440 	call	8844 <__sbprintf>
    7720:	dfc03617 	ldw	ra,216(sp)
    7724:	df003517 	ldw	fp,212(sp)
    7728:	ddc03417 	ldw	r23,208(sp)
    772c:	dd803317 	ldw	r22,204(sp)
    7730:	dd403217 	ldw	r21,200(sp)
    7734:	dd003117 	ldw	r20,196(sp)
    7738:	dcc03017 	ldw	r19,192(sp)
    773c:	dc802f17 	ldw	r18,188(sp)
    7740:	dc402e17 	ldw	r17,184(sp)
    7744:	dc002d17 	ldw	r16,180(sp)
    7748:	dec03704 	addi	sp,sp,220
    774c:	f800283a 	ret
    7750:	0004b400 	call	4b40 <__sinit>
    7754:	003f2f06 	br	7414 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007414>
    7758:	0463c83a 	sub	r17,zero,r17
    775c:	d8802215 	stw	r2,136(sp)
    7760:	a5000114 	ori	r20,r20,4
    7764:	80c00007 	ldb	r3,0(r16)
    7768:	003f7706 	br	7548 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007548>
    776c:	00800c04 	movi	r2,48
    7770:	da802217 	ldw	r10,136(sp)
    7774:	d8801d05 	stb	r2,116(sp)
    7778:	00801e04 	movi	r2,120
    777c:	d8801d45 	stb	r2,117(sp)
    7780:	d8001d85 	stb	zero,118(sp)
    7784:	50c00104 	addi	r3,r10,4
    7788:	54800017 	ldw	r18,0(r10)
    778c:	0027883a 	mov	r19,zero
    7790:	a0800094 	ori	r2,r20,2
    7794:	48030b16 	blt	r9,zero,83c4 <___vfiprintf_internal_r+0xff8>
    7798:	00bfdfc4 	movi	r2,-129
    779c:	a096703a 	and	r11,r20,r2
    77a0:	d8c02215 	stw	r3,136(sp)
    77a4:	5d000094 	ori	r20,r11,2
    77a8:	90032b1e 	bne	r18,zero,8458 <___vfiprintf_internal_r+0x108c>
    77ac:	00800074 	movhi	r2,1
    77b0:	10855904 	addi	r2,r2,5476
    77b4:	d8802615 	stw	r2,152(sp)
    77b8:	0039883a 	mov	fp,zero
    77bc:	48017b1e 	bne	r9,zero,7dac <___vfiprintf_internal_r+0x9e0>
    77c0:	0013883a 	mov	r9,zero
    77c4:	0027883a 	mov	r19,zero
    77c8:	dd401a04 	addi	r21,sp,104
    77cc:	4825883a 	mov	r18,r9
    77d0:	4cc0010e 	bge	r9,r19,77d8 <___vfiprintf_internal_r+0x40c>
    77d4:	9825883a 	mov	r18,r19
    77d8:	e7003fcc 	andi	fp,fp,255
    77dc:	e700201c 	xori	fp,fp,128
    77e0:	e73fe004 	addi	fp,fp,-128
    77e4:	e0000126 	beq	fp,zero,77ec <___vfiprintf_internal_r+0x420>
    77e8:	94800044 	addi	r18,r18,1
    77ec:	a380008c 	andi	r14,r20,2
    77f0:	70000126 	beq	r14,zero,77f8 <___vfiprintf_internal_r+0x42c>
    77f4:	94800084 	addi	r18,r18,2
    77f8:	a700210c 	andi	fp,r20,132
    77fc:	e001df1e 	bne	fp,zero,7f7c <___vfiprintf_internal_r+0xbb0>
    7800:	8c87c83a 	sub	r3,r17,r18
    7804:	00c1dd0e 	bge	zero,r3,7f7c <___vfiprintf_internal_r+0xbb0>
    7808:	01c00404 	movi	r7,16
    780c:	d8801c17 	ldw	r2,112(sp)
    7810:	38c3ad0e 	bge	r7,r3,86c8 <___vfiprintf_internal_r+0x12fc>
    7814:	02800074 	movhi	r10,1
    7818:	5285be04 	addi	r10,r10,5880
    781c:	dc002915 	stw	r16,164(sp)
    7820:	d9801b17 	ldw	r6,108(sp)
    7824:	da802415 	stw	r10,144(sp)
    7828:	03c001c4 	movi	r15,7
    782c:	da402515 	stw	r9,148(sp)
    7830:	db802815 	stw	r14,160(sp)
    7834:	1821883a 	mov	r16,r3
    7838:	00000506 	br	7850 <___vfiprintf_internal_r+0x484>
    783c:	31400084 	addi	r5,r6,2
    7840:	42000204 	addi	r8,r8,8
    7844:	200d883a 	mov	r6,r4
    7848:	843ffc04 	addi	r16,r16,-16
    784c:	3c000d0e 	bge	r7,r16,7884 <___vfiprintf_internal_r+0x4b8>
    7850:	10800404 	addi	r2,r2,16
    7854:	31000044 	addi	r4,r6,1
    7858:	45800015 	stw	r22,0(r8)
    785c:	41c00115 	stw	r7,4(r8)
    7860:	d8801c15 	stw	r2,112(sp)
    7864:	d9001b15 	stw	r4,108(sp)
    7868:	793ff40e 	bge	r15,r4,783c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700783c>
    786c:	1001b51e 	bne	r2,zero,7f44 <___vfiprintf_internal_r+0xb78>
    7870:	843ffc04 	addi	r16,r16,-16
    7874:	000d883a 	mov	r6,zero
    7878:	01400044 	movi	r5,1
    787c:	d811883a 	mov	r8,sp
    7880:	3c3ff316 	blt	r7,r16,7850 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007850>
    7884:	8007883a 	mov	r3,r16
    7888:	da402517 	ldw	r9,148(sp)
    788c:	db802817 	ldw	r14,160(sp)
    7890:	dc002917 	ldw	r16,164(sp)
    7894:	da802417 	ldw	r10,144(sp)
    7898:	1885883a 	add	r2,r3,r2
    789c:	40c00115 	stw	r3,4(r8)
    78a0:	42800015 	stw	r10,0(r8)
    78a4:	d8801c15 	stw	r2,112(sp)
    78a8:	d9401b15 	stw	r5,108(sp)
    78ac:	00c001c4 	movi	r3,7
    78b0:	19426016 	blt	r3,r5,8234 <___vfiprintf_internal_r+0xe68>
    78b4:	d8c01d87 	ldb	r3,118(sp)
    78b8:	42000204 	addi	r8,r8,8
    78bc:	29000044 	addi	r4,r5,1
    78c0:	1801b31e 	bne	r3,zero,7f90 <___vfiprintf_internal_r+0xbc4>
    78c4:	7001c026 	beq	r14,zero,7fc8 <___vfiprintf_internal_r+0xbfc>
    78c8:	d8c01d04 	addi	r3,sp,116
    78cc:	10800084 	addi	r2,r2,2
    78d0:	40c00015 	stw	r3,0(r8)
    78d4:	00c00084 	movi	r3,2
    78d8:	40c00115 	stw	r3,4(r8)
    78dc:	d8801c15 	stw	r2,112(sp)
    78e0:	d9001b15 	stw	r4,108(sp)
    78e4:	00c001c4 	movi	r3,7
    78e8:	1902650e 	bge	r3,r4,8280 <___vfiprintf_internal_r+0xeb4>
    78ec:	10029a1e 	bne	r2,zero,8358 <___vfiprintf_internal_r+0xf8c>
    78f0:	00c02004 	movi	r3,128
    78f4:	01000044 	movi	r4,1
    78f8:	000b883a 	mov	r5,zero
    78fc:	d811883a 	mov	r8,sp
    7900:	e0c1b31e 	bne	fp,r3,7fd0 <___vfiprintf_internal_r+0xc04>
    7904:	8cb9c83a 	sub	fp,r17,r18
    7908:	0701b10e 	bge	zero,fp,7fd0 <___vfiprintf_internal_r+0xc04>
    790c:	01c00404 	movi	r7,16
    7910:	3f03890e 	bge	r7,fp,8738 <___vfiprintf_internal_r+0x136c>
    7914:	00c00074 	movhi	r3,1
    7918:	18c5ba04 	addi	r3,r3,5864
    791c:	d8c02415 	stw	r3,144(sp)
    7920:	8007883a 	mov	r3,r16
    7924:	034001c4 	movi	r13,7
    7928:	e021883a 	mov	r16,fp
    792c:	da402515 	stw	r9,148(sp)
    7930:	1839883a 	mov	fp,r3
    7934:	00000506 	br	794c <___vfiprintf_internal_r+0x580>
    7938:	29800084 	addi	r6,r5,2
    793c:	42000204 	addi	r8,r8,8
    7940:	180b883a 	mov	r5,r3
    7944:	843ffc04 	addi	r16,r16,-16
    7948:	3c000d0e 	bge	r7,r16,7980 <___vfiprintf_internal_r+0x5b4>
    794c:	10800404 	addi	r2,r2,16
    7950:	28c00044 	addi	r3,r5,1
    7954:	45c00015 	stw	r23,0(r8)
    7958:	41c00115 	stw	r7,4(r8)
    795c:	d8801c15 	stw	r2,112(sp)
    7960:	d8c01b15 	stw	r3,108(sp)
    7964:	68fff40e 	bge	r13,r3,7938 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007938>
    7968:	1002241e 	bne	r2,zero,81fc <___vfiprintf_internal_r+0xe30>
    796c:	843ffc04 	addi	r16,r16,-16
    7970:	01800044 	movi	r6,1
    7974:	000b883a 	mov	r5,zero
    7978:	d811883a 	mov	r8,sp
    797c:	3c3ff316 	blt	r7,r16,794c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700794c>
    7980:	da402517 	ldw	r9,148(sp)
    7984:	e007883a 	mov	r3,fp
    7988:	8039883a 	mov	fp,r16
    798c:	1821883a 	mov	r16,r3
    7990:	d8c02417 	ldw	r3,144(sp)
    7994:	1705883a 	add	r2,r2,fp
    7998:	47000115 	stw	fp,4(r8)
    799c:	40c00015 	stw	r3,0(r8)
    79a0:	d8801c15 	stw	r2,112(sp)
    79a4:	d9801b15 	stw	r6,108(sp)
    79a8:	00c001c4 	movi	r3,7
    79ac:	19827616 	blt	r3,r6,8388 <___vfiprintf_internal_r+0xfbc>
    79b0:	4cf9c83a 	sub	fp,r9,r19
    79b4:	42000204 	addi	r8,r8,8
    79b8:	31000044 	addi	r4,r6,1
    79bc:	300b883a 	mov	r5,r6
    79c0:	07018516 	blt	zero,fp,7fd8 <___vfiprintf_internal_r+0xc0c>
    79c4:	9885883a 	add	r2,r19,r2
    79c8:	45400015 	stw	r21,0(r8)
    79cc:	44c00115 	stw	r19,4(r8)
    79d0:	d8801c15 	stw	r2,112(sp)
    79d4:	d9001b15 	stw	r4,108(sp)
    79d8:	00c001c4 	movi	r3,7
    79dc:	1901dd0e 	bge	r3,r4,8154 <___vfiprintf_internal_r+0xd88>
    79e0:	1002401e 	bne	r2,zero,82e4 <___vfiprintf_internal_r+0xf18>
    79e4:	d8001b15 	stw	zero,108(sp)
    79e8:	a2c0010c 	andi	r11,r20,4
    79ec:	58000226 	beq	r11,zero,79f8 <___vfiprintf_internal_r+0x62c>
    79f0:	8ca7c83a 	sub	r19,r17,r18
    79f4:	04c2f216 	blt	zero,r19,85c0 <___vfiprintf_internal_r+0x11f4>
    79f8:	8c80010e 	bge	r17,r18,7a00 <___vfiprintf_internal_r+0x634>
    79fc:	9023883a 	mov	r17,r18
    7a00:	da802317 	ldw	r10,140(sp)
    7a04:	5455883a 	add	r10,r10,r17
    7a08:	da802315 	stw	r10,140(sp)
    7a0c:	d8001b15 	stw	zero,108(sp)
    7a10:	d811883a 	mov	r8,sp
    7a14:	003ea206 	br	74a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70074a0>
    7a18:	a5000814 	ori	r20,r20,32
    7a1c:	80c00007 	ldb	r3,0(r16)
    7a20:	003ec906 	br	7548 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007548>
    7a24:	80c00007 	ldb	r3,0(r16)
    7a28:	1b030926 	beq	r3,r12,8650 <___vfiprintf_internal_r+0x1284>
    7a2c:	a5000414 	ori	r20,r20,16
    7a30:	003ec506 	br	7548 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007548>
    7a34:	21003fcc 	andi	r4,r4,255
    7a38:	20035e1e 	bne	r4,zero,87b4 <___vfiprintf_internal_r+0x13e8>
    7a3c:	a080080c 	andi	r2,r20,32
    7a40:	1002a526 	beq	r2,zero,84d8 <___vfiprintf_internal_r+0x110c>
    7a44:	da802217 	ldw	r10,136(sp)
    7a48:	50800017 	ldw	r2,0(r10)
    7a4c:	da802317 	ldw	r10,140(sp)
    7a50:	5007d7fa 	srai	r3,r10,31
    7a54:	da802217 	ldw	r10,136(sp)
    7a58:	10c00115 	stw	r3,4(r2)
    7a5c:	52800104 	addi	r10,r10,4
    7a60:	da802215 	stw	r10,136(sp)
    7a64:	da802317 	ldw	r10,140(sp)
    7a68:	12800015 	stw	r10,0(r2)
    7a6c:	003e8c06 	br	74a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70074a0>
    7a70:	21003fcc 	andi	r4,r4,255
    7a74:	2003511e 	bne	r4,zero,87bc <___vfiprintf_internal_r+0x13f0>
    7a78:	a080080c 	andi	r2,r20,32
    7a7c:	1000a126 	beq	r2,zero,7d04 <___vfiprintf_internal_r+0x938>
    7a80:	da802217 	ldw	r10,136(sp)
    7a84:	d8001d85 	stb	zero,118(sp)
    7a88:	50800204 	addi	r2,r10,8
    7a8c:	54800017 	ldw	r18,0(r10)
    7a90:	54c00117 	ldw	r19,4(r10)
    7a94:	4802b416 	blt	r9,zero,8568 <___vfiprintf_internal_r+0x119c>
    7a98:	013fdfc4 	movi	r4,-129
    7a9c:	94c6b03a 	or	r3,r18,r19
    7aa0:	d8802215 	stw	r2,136(sp)
    7aa4:	a128703a 	and	r20,r20,r4
    7aa8:	1800a226 	beq	r3,zero,7d34 <___vfiprintf_internal_r+0x968>
    7aac:	0039883a 	mov	fp,zero
    7ab0:	dd401a04 	addi	r21,sp,104
    7ab4:	9006d0fa 	srli	r3,r18,3
    7ab8:	9808977a 	slli	r4,r19,29
    7abc:	9826d0fa 	srli	r19,r19,3
    7ac0:	948001cc 	andi	r18,r18,7
    7ac4:	90800c04 	addi	r2,r18,48
    7ac8:	ad7fffc4 	addi	r21,r21,-1
    7acc:	20e4b03a 	or	r18,r4,r3
    7ad0:	a8800005 	stb	r2,0(r21)
    7ad4:	94c6b03a 	or	r3,r18,r19
    7ad8:	183ff61e 	bne	r3,zero,7ab4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007ab4>
    7adc:	a0c0004c 	andi	r3,r20,1
    7ae0:	18005926 	beq	r3,zero,7c48 <___vfiprintf_internal_r+0x87c>
    7ae4:	10803fcc 	andi	r2,r2,255
    7ae8:	1080201c 	xori	r2,r2,128
    7aec:	10bfe004 	addi	r2,r2,-128
    7af0:	00c00c04 	movi	r3,48
    7af4:	10c05426 	beq	r2,r3,7c48 <___vfiprintf_internal_r+0x87c>
    7af8:	da801e17 	ldw	r10,120(sp)
    7afc:	a8bfffc4 	addi	r2,r21,-1
    7b00:	a8ffffc5 	stb	r3,-1(r21)
    7b04:	50a7c83a 	sub	r19,r10,r2
    7b08:	102b883a 	mov	r21,r2
    7b0c:	003f2f06 	br	77cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70077cc>
    7b10:	21003fcc 	andi	r4,r4,255
    7b14:	2003421e 	bne	r4,zero,8820 <___vfiprintf_internal_r+0x1454>
    7b18:	00800074 	movhi	r2,1
    7b1c:	10855904 	addi	r2,r2,5476
    7b20:	d8802615 	stw	r2,152(sp)
    7b24:	a080080c 	andi	r2,r20,32
    7b28:	1000aa26 	beq	r2,zero,7dd4 <___vfiprintf_internal_r+0xa08>
    7b2c:	da802217 	ldw	r10,136(sp)
    7b30:	54800017 	ldw	r18,0(r10)
    7b34:	54c00117 	ldw	r19,4(r10)
    7b38:	52800204 	addi	r10,r10,8
    7b3c:	da802215 	stw	r10,136(sp)
    7b40:	a080004c 	andi	r2,r20,1
    7b44:	1001d226 	beq	r2,zero,8290 <___vfiprintf_internal_r+0xec4>
    7b48:	94c4b03a 	or	r2,r18,r19
    7b4c:	1002351e 	bne	r2,zero,8424 <___vfiprintf_internal_r+0x1058>
    7b50:	d8001d85 	stb	zero,118(sp)
    7b54:	48022216 	blt	r9,zero,83e0 <___vfiprintf_internal_r+0x1014>
    7b58:	00bfdfc4 	movi	r2,-129
    7b5c:	a0a8703a 	and	r20,r20,r2
    7b60:	003f1506 	br	77b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70077b8>
    7b64:	da802217 	ldw	r10,136(sp)
    7b68:	04800044 	movi	r18,1
    7b6c:	d8001d85 	stb	zero,118(sp)
    7b70:	50800017 	ldw	r2,0(r10)
    7b74:	52800104 	addi	r10,r10,4
    7b78:	da802215 	stw	r10,136(sp)
    7b7c:	d8801005 	stb	r2,64(sp)
    7b80:	9027883a 	mov	r19,r18
    7b84:	dd401004 	addi	r21,sp,64
    7b88:	0013883a 	mov	r9,zero
    7b8c:	003f1706 	br	77ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70077ec>
    7b90:	21003fcc 	andi	r4,r4,255
    7b94:	2003201e 	bne	r4,zero,8818 <___vfiprintf_internal_r+0x144c>
    7b98:	a080080c 	andi	r2,r20,32
    7b9c:	10004b26 	beq	r2,zero,7ccc <___vfiprintf_internal_r+0x900>
    7ba0:	da802217 	ldw	r10,136(sp)
    7ba4:	50800117 	ldw	r2,4(r10)
    7ba8:	54800017 	ldw	r18,0(r10)
    7bac:	52800204 	addi	r10,r10,8
    7bb0:	da802215 	stw	r10,136(sp)
    7bb4:	1027883a 	mov	r19,r2
    7bb8:	10022c16 	blt	r2,zero,846c <___vfiprintf_internal_r+0x10a0>
    7bbc:	df001d83 	ldbu	fp,118(sp)
    7bc0:	48007216 	blt	r9,zero,7d8c <___vfiprintf_internal_r+0x9c0>
    7bc4:	00ffdfc4 	movi	r3,-129
    7bc8:	94c4b03a 	or	r2,r18,r19
    7bcc:	a0e8703a 	and	r20,r20,r3
    7bd0:	1000cc26 	beq	r2,zero,7f04 <___vfiprintf_internal_r+0xb38>
    7bd4:	98021026 	beq	r19,zero,8418 <___vfiprintf_internal_r+0x104c>
    7bd8:	dc402415 	stw	r17,144(sp)
    7bdc:	dc002515 	stw	r16,148(sp)
    7be0:	9823883a 	mov	r17,r19
    7be4:	9021883a 	mov	r16,r18
    7be8:	dd401a04 	addi	r21,sp,104
    7bec:	4825883a 	mov	r18,r9
    7bf0:	4027883a 	mov	r19,r8
    7bf4:	8009883a 	mov	r4,r16
    7bf8:	880b883a 	mov	r5,r17
    7bfc:	01800284 	movi	r6,10
    7c00:	000f883a 	mov	r7,zero
    7c04:	000a3280 	call	a328 <__umoddi3>
    7c08:	10800c04 	addi	r2,r2,48
    7c0c:	ad7fffc4 	addi	r21,r21,-1
    7c10:	8009883a 	mov	r4,r16
    7c14:	880b883a 	mov	r5,r17
    7c18:	a8800005 	stb	r2,0(r21)
    7c1c:	01800284 	movi	r6,10
    7c20:	000f883a 	mov	r7,zero
    7c24:	0009db00 	call	9db0 <__udivdi3>
    7c28:	1021883a 	mov	r16,r2
    7c2c:	10c4b03a 	or	r2,r2,r3
    7c30:	1823883a 	mov	r17,r3
    7c34:	103fef1e 	bne	r2,zero,7bf4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007bf4>
    7c38:	dc402417 	ldw	r17,144(sp)
    7c3c:	dc002517 	ldw	r16,148(sp)
    7c40:	9013883a 	mov	r9,r18
    7c44:	9811883a 	mov	r8,r19
    7c48:	da801e17 	ldw	r10,120(sp)
    7c4c:	5567c83a 	sub	r19,r10,r21
    7c50:	003ede06 	br	77cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70077cc>
    7c54:	38803fcc 	andi	r2,r7,255
    7c58:	1080201c 	xori	r2,r2,128
    7c5c:	10bfe004 	addi	r2,r2,-128
    7c60:	1002371e 	bne	r2,zero,8540 <___vfiprintf_internal_r+0x1174>
    7c64:	01000044 	movi	r4,1
    7c68:	01c00804 	movi	r7,32
    7c6c:	80c00007 	ldb	r3,0(r16)
    7c70:	003e3506 	br	7548 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007548>
    7c74:	a5000054 	ori	r20,r20,1
    7c78:	80c00007 	ldb	r3,0(r16)
    7c7c:	003e3206 	br	7548 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007548>
    7c80:	a5002014 	ori	r20,r20,128
    7c84:	80c00007 	ldb	r3,0(r16)
    7c88:	003e2f06 	br	7548 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007548>
    7c8c:	8015883a 	mov	r10,r16
    7c90:	0023883a 	mov	r17,zero
    7c94:	18bff404 	addi	r2,r3,-48
    7c98:	50c00007 	ldb	r3,0(r10)
    7c9c:	8c4002a4 	muli	r17,r17,10
    7ca0:	84000044 	addi	r16,r16,1
    7ca4:	8015883a 	mov	r10,r16
    7ca8:	1463883a 	add	r17,r2,r17
    7cac:	18bff404 	addi	r2,r3,-48
    7cb0:	30bff92e 	bgeu	r6,r2,7c98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007c98>
    7cb4:	003e2506 	br	754c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700754c>
    7cb8:	21003fcc 	andi	r4,r4,255
    7cbc:	2002d41e 	bne	r4,zero,8810 <___vfiprintf_internal_r+0x1444>
    7cc0:	a5000414 	ori	r20,r20,16
    7cc4:	a080080c 	andi	r2,r20,32
    7cc8:	103fb51e 	bne	r2,zero,7ba0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007ba0>
    7ccc:	a080040c 	andi	r2,r20,16
    7cd0:	1001f826 	beq	r2,zero,84b4 <___vfiprintf_internal_r+0x10e8>
    7cd4:	da802217 	ldw	r10,136(sp)
    7cd8:	54800017 	ldw	r18,0(r10)
    7cdc:	52800104 	addi	r10,r10,4
    7ce0:	da802215 	stw	r10,136(sp)
    7ce4:	9027d7fa 	srai	r19,r18,31
    7ce8:	9805883a 	mov	r2,r19
    7cec:	003fb206 	br	7bb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007bb8>
    7cf0:	21003fcc 	andi	r4,r4,255
    7cf4:	2002c41e 	bne	r4,zero,8808 <___vfiprintf_internal_r+0x143c>
    7cf8:	a5000414 	ori	r20,r20,16
    7cfc:	a080080c 	andi	r2,r20,32
    7d00:	103f5f1e 	bne	r2,zero,7a80 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007a80>
    7d04:	a080040c 	andi	r2,r20,16
    7d08:	10020f26 	beq	r2,zero,8548 <___vfiprintf_internal_r+0x117c>
    7d0c:	da802217 	ldw	r10,136(sp)
    7d10:	d8001d85 	stb	zero,118(sp)
    7d14:	0027883a 	mov	r19,zero
    7d18:	50800104 	addi	r2,r10,4
    7d1c:	54800017 	ldw	r18,0(r10)
    7d20:	48021116 	blt	r9,zero,8568 <___vfiprintf_internal_r+0x119c>
    7d24:	00ffdfc4 	movi	r3,-129
    7d28:	d8802215 	stw	r2,136(sp)
    7d2c:	a0e8703a 	and	r20,r20,r3
    7d30:	903f5e1e 	bne	r18,zero,7aac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007aac>
    7d34:	0039883a 	mov	fp,zero
    7d38:	4802a626 	beq	r9,zero,87d4 <___vfiprintf_internal_r+0x1408>
    7d3c:	0025883a 	mov	r18,zero
    7d40:	0027883a 	mov	r19,zero
    7d44:	003f5a06 	br	7ab0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007ab0>
    7d48:	21003fcc 	andi	r4,r4,255
    7d4c:	20029f1e 	bne	r4,zero,87cc <___vfiprintf_internal_r+0x1400>
    7d50:	a5000414 	ori	r20,r20,16
    7d54:	a080080c 	andi	r2,r20,32
    7d58:	10005e1e 	bne	r2,zero,7ed4 <___vfiprintf_internal_r+0xb08>
    7d5c:	a080040c 	andi	r2,r20,16
    7d60:	1001a21e 	bne	r2,zero,83ec <___vfiprintf_internal_r+0x1020>
    7d64:	a080100c 	andi	r2,r20,64
    7d68:	d8001d85 	stb	zero,118(sp)
    7d6c:	da802217 	ldw	r10,136(sp)
    7d70:	1002231e 	bne	r2,zero,8600 <___vfiprintf_internal_r+0x1234>
    7d74:	50800104 	addi	r2,r10,4
    7d78:	54800017 	ldw	r18,0(r10)
    7d7c:	0027883a 	mov	r19,zero
    7d80:	4801a00e 	bge	r9,zero,8404 <___vfiprintf_internal_r+0x1038>
    7d84:	d8802215 	stw	r2,136(sp)
    7d88:	0039883a 	mov	fp,zero
    7d8c:	94c4b03a 	or	r2,r18,r19
    7d90:	103f901e 	bne	r2,zero,7bd4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007bd4>
    7d94:	00800044 	movi	r2,1
    7d98:	10803fcc 	andi	r2,r2,255
    7d9c:	00c00044 	movi	r3,1
    7da0:	10c05926 	beq	r2,r3,7f08 <___vfiprintf_internal_r+0xb3c>
    7da4:	00c00084 	movi	r3,2
    7da8:	10ffe41e 	bne	r2,r3,7d3c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d3c>
    7dac:	0025883a 	mov	r18,zero
    7db0:	0027883a 	mov	r19,zero
    7db4:	00013d06 	br	82ac <___vfiprintf_internal_r+0xee0>
    7db8:	21003fcc 	andi	r4,r4,255
    7dbc:	2002811e 	bne	r4,zero,87c4 <___vfiprintf_internal_r+0x13f8>
    7dc0:	00800074 	movhi	r2,1
    7dc4:	10855404 	addi	r2,r2,5456
    7dc8:	d8802615 	stw	r2,152(sp)
    7dcc:	a080080c 	andi	r2,r20,32
    7dd0:	103f561e 	bne	r2,zero,7b2c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007b2c>
    7dd4:	a080040c 	andi	r2,r20,16
    7dd8:	1001d126 	beq	r2,zero,8520 <___vfiprintf_internal_r+0x1154>
    7ddc:	da802217 	ldw	r10,136(sp)
    7de0:	0027883a 	mov	r19,zero
    7de4:	54800017 	ldw	r18,0(r10)
    7de8:	52800104 	addi	r10,r10,4
    7dec:	da802215 	stw	r10,136(sp)
    7df0:	003f5306 	br	7b40 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007b40>
    7df4:	da802217 	ldw	r10,136(sp)
    7df8:	d8001d85 	stb	zero,118(sp)
    7dfc:	55400017 	ldw	r21,0(r10)
    7e00:	50c00104 	addi	r3,r10,4
    7e04:	a8024226 	beq	r21,zero,8710 <___vfiprintf_internal_r+0x1344>
    7e08:	48021816 	blt	r9,zero,866c <___vfiprintf_internal_r+0x12a0>
    7e0c:	480d883a 	mov	r6,r9
    7e10:	000b883a 	mov	r5,zero
    7e14:	a809883a 	mov	r4,r21
    7e18:	d8c02a15 	stw	r3,168(sp)
    7e1c:	da002b15 	stw	r8,172(sp)
    7e20:	da402c15 	stw	r9,176(sp)
    7e24:	0005bf00 	call	5bf0 <memchr>
    7e28:	d8c02a17 	ldw	r3,168(sp)
    7e2c:	da002b17 	ldw	r8,172(sp)
    7e30:	da402c17 	ldw	r9,176(sp)
    7e34:	10024826 	beq	r2,zero,8758 <___vfiprintf_internal_r+0x138c>
    7e38:	1567c83a 	sub	r19,r2,r21
    7e3c:	df001d83 	ldbu	fp,118(sp)
    7e40:	d8c02215 	stw	r3,136(sp)
    7e44:	0013883a 	mov	r9,zero
    7e48:	003e6006 	br	77cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70077cc>
    7e4c:	21003fcc 	andi	r4,r4,255
    7e50:	203fc026 	beq	r4,zero,7d54 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d54>
    7e54:	d9c01d85 	stb	r7,118(sp)
    7e58:	003fbe06 	br	7d54 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d54>
    7e5c:	da802217 	ldw	r10,136(sp)
    7e60:	54400017 	ldw	r17,0(r10)
    7e64:	50800104 	addi	r2,r10,4
    7e68:	883e3b16 	blt	r17,zero,7758 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007758>
    7e6c:	d8802215 	stw	r2,136(sp)
    7e70:	80c00007 	ldb	r3,0(r16)
    7e74:	003db406 	br	7548 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007548>
    7e78:	01000044 	movi	r4,1
    7e7c:	01c00ac4 	movi	r7,43
    7e80:	80c00007 	ldb	r3,0(r16)
    7e84:	003db006 	br	7548 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007548>
    7e88:	80c00007 	ldb	r3,0(r16)
    7e8c:	82800044 	addi	r10,r16,1
    7e90:	1b423c26 	beq	r3,r13,8784 <___vfiprintf_internal_r+0x13b8>
    7e94:	18bff404 	addi	r2,r3,-48
    7e98:	0013883a 	mov	r9,zero
    7e9c:	30822b36 	bltu	r6,r2,874c <___vfiprintf_internal_r+0x1380>
    7ea0:	50c00007 	ldb	r3,0(r10)
    7ea4:	4a4002a4 	muli	r9,r9,10
    7ea8:	54000044 	addi	r16,r10,1
    7eac:	8015883a 	mov	r10,r16
    7eb0:	4893883a 	add	r9,r9,r2
    7eb4:	18bff404 	addi	r2,r3,-48
    7eb8:	30bff92e 	bgeu	r6,r2,7ea0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007ea0>
    7ebc:	483da30e 	bge	r9,zero,754c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700754c>
    7ec0:	027fffc4 	movi	r9,-1
    7ec4:	003da106 	br	754c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700754c>
    7ec8:	a5001014 	ori	r20,r20,64
    7ecc:	80c00007 	ldb	r3,0(r16)
    7ed0:	003d9d06 	br	7548 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007548>
    7ed4:	da802217 	ldw	r10,136(sp)
    7ed8:	d8001d85 	stb	zero,118(sp)
    7edc:	50c00204 	addi	r3,r10,8
    7ee0:	54800017 	ldw	r18,0(r10)
    7ee4:	54c00117 	ldw	r19,4(r10)
    7ee8:	4801ca16 	blt	r9,zero,8614 <___vfiprintf_internal_r+0x1248>
    7eec:	013fdfc4 	movi	r4,-129
    7ef0:	94c4b03a 	or	r2,r18,r19
    7ef4:	d8c02215 	stw	r3,136(sp)
    7ef8:	a128703a 	and	r20,r20,r4
    7efc:	0039883a 	mov	fp,zero
    7f00:	103f341e 	bne	r2,zero,7bd4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007bd4>
    7f04:	483e2e26 	beq	r9,zero,77c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70077c0>
    7f08:	0025883a 	mov	r18,zero
    7f0c:	94800c04 	addi	r18,r18,48
    7f10:	dc8019c5 	stb	r18,103(sp)
    7f14:	dcc02717 	ldw	r19,156(sp)
    7f18:	dd4019c4 	addi	r21,sp,103
    7f1c:	003e2b06 	br	77cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70077cc>
    7f20:	21003fcc 	andi	r4,r4,255
    7f24:	2002361e 	bne	r4,zero,8800 <___vfiprintf_internal_r+0x1434>
    7f28:	1801c126 	beq	r3,zero,8630 <___vfiprintf_internal_r+0x1264>
    7f2c:	04800044 	movi	r18,1
    7f30:	d8c01005 	stb	r3,64(sp)
    7f34:	d8001d85 	stb	zero,118(sp)
    7f38:	9027883a 	mov	r19,r18
    7f3c:	dd401004 	addi	r21,sp,64
    7f40:	003f1106 	br	7b88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007b88>
    7f44:	d9402117 	ldw	r5,132(sp)
    7f48:	d9002017 	ldw	r4,128(sp)
    7f4c:	d9801a04 	addi	r6,sp,104
    7f50:	d9c02b15 	stw	r7,172(sp)
    7f54:	dbc02a15 	stw	r15,168(sp)
    7f58:	00072b80 	call	72b8 <__sprint_r.part.0>
    7f5c:	d9c02b17 	ldw	r7,172(sp)
    7f60:	dbc02a17 	ldw	r15,168(sp)
    7f64:	10006d1e 	bne	r2,zero,811c <___vfiprintf_internal_r+0xd50>
    7f68:	d9801b17 	ldw	r6,108(sp)
    7f6c:	d8801c17 	ldw	r2,112(sp)
    7f70:	d811883a 	mov	r8,sp
    7f74:	31400044 	addi	r5,r6,1
    7f78:	003e3306 	br	7848 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007848>
    7f7c:	d9401b17 	ldw	r5,108(sp)
    7f80:	d8801c17 	ldw	r2,112(sp)
    7f84:	29000044 	addi	r4,r5,1
    7f88:	d8c01d87 	ldb	r3,118(sp)
    7f8c:	183e4d26 	beq	r3,zero,78c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70078c4>
    7f90:	00c00044 	movi	r3,1
    7f94:	d9401d84 	addi	r5,sp,118
    7f98:	10c5883a 	add	r2,r2,r3
    7f9c:	41400015 	stw	r5,0(r8)
    7fa0:	40c00115 	stw	r3,4(r8)
    7fa4:	d8801c15 	stw	r2,112(sp)
    7fa8:	d9001b15 	stw	r4,108(sp)
    7fac:	014001c4 	movi	r5,7
    7fb0:	2900a90e 	bge	r5,r4,8258 <___vfiprintf_internal_r+0xe8c>
    7fb4:	1000da1e 	bne	r2,zero,8320 <___vfiprintf_internal_r+0xf54>
    7fb8:	7000ab1e 	bne	r14,zero,8268 <___vfiprintf_internal_r+0xe9c>
    7fbc:	000b883a 	mov	r5,zero
    7fc0:	1809883a 	mov	r4,r3
    7fc4:	d811883a 	mov	r8,sp
    7fc8:	00c02004 	movi	r3,128
    7fcc:	e0fe4d26 	beq	fp,r3,7904 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007904>
    7fd0:	4cf9c83a 	sub	fp,r9,r19
    7fd4:	073e7b0e 	bge	zero,fp,79c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079c4>
    7fd8:	01c00404 	movi	r7,16
    7fdc:	3f01900e 	bge	r7,fp,8620 <___vfiprintf_internal_r+0x1254>
    7fe0:	00c00074 	movhi	r3,1
    7fe4:	18c5ba04 	addi	r3,r3,5864
    7fe8:	d8c02415 	stw	r3,144(sp)
    7fec:	034001c4 	movi	r13,7
    7ff0:	00000506 	br	8008 <___vfiprintf_internal_r+0xc3c>
    7ff4:	29000084 	addi	r4,r5,2
    7ff8:	42000204 	addi	r8,r8,8
    7ffc:	180b883a 	mov	r5,r3
    8000:	e73ffc04 	addi	fp,fp,-16
    8004:	3f000d0e 	bge	r7,fp,803c <___vfiprintf_internal_r+0xc70>
    8008:	10800404 	addi	r2,r2,16
    800c:	28c00044 	addi	r3,r5,1
    8010:	45c00015 	stw	r23,0(r8)
    8014:	41c00115 	stw	r7,4(r8)
    8018:	d8801c15 	stw	r2,112(sp)
    801c:	d8c01b15 	stw	r3,108(sp)
    8020:	68fff40e 	bge	r13,r3,7ff4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007ff4>
    8024:	1000101e 	bne	r2,zero,8068 <___vfiprintf_internal_r+0xc9c>
    8028:	e73ffc04 	addi	fp,fp,-16
    802c:	01000044 	movi	r4,1
    8030:	000b883a 	mov	r5,zero
    8034:	d811883a 	mov	r8,sp
    8038:	3f3ff316 	blt	r7,fp,8008 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008008>
    803c:	da802417 	ldw	r10,144(sp)
    8040:	1705883a 	add	r2,r2,fp
    8044:	47000115 	stw	fp,4(r8)
    8048:	42800015 	stw	r10,0(r8)
    804c:	d8801c15 	stw	r2,112(sp)
    8050:	d9001b15 	stw	r4,108(sp)
    8054:	00c001c4 	movi	r3,7
    8058:	19003616 	blt	r3,r4,8134 <___vfiprintf_internal_r+0xd68>
    805c:	42000204 	addi	r8,r8,8
    8060:	21000044 	addi	r4,r4,1
    8064:	003e5706 	br	79c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079c4>
    8068:	d9402117 	ldw	r5,132(sp)
    806c:	d9002017 	ldw	r4,128(sp)
    8070:	d9801a04 	addi	r6,sp,104
    8074:	d9c02b15 	stw	r7,172(sp)
    8078:	db402a15 	stw	r13,168(sp)
    807c:	00072b80 	call	72b8 <__sprint_r.part.0>
    8080:	d9c02b17 	ldw	r7,172(sp)
    8084:	db402a17 	ldw	r13,168(sp)
    8088:	1000241e 	bne	r2,zero,811c <___vfiprintf_internal_r+0xd50>
    808c:	d9401b17 	ldw	r5,108(sp)
    8090:	d8801c17 	ldw	r2,112(sp)
    8094:	d811883a 	mov	r8,sp
    8098:	29000044 	addi	r4,r5,1
    809c:	003fd806 	br	8000 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008000>
    80a0:	d9401b17 	ldw	r5,108(sp)
    80a4:	00c00074 	movhi	r3,1
    80a8:	18c5be04 	addi	r3,r3,5880
    80ac:	d8c02415 	stw	r3,144(sp)
    80b0:	29400044 	addi	r5,r5,1
    80b4:	d8c02417 	ldw	r3,144(sp)
    80b8:	14c5883a 	add	r2,r2,r19
    80bc:	44c00115 	stw	r19,4(r8)
    80c0:	40c00015 	stw	r3,0(r8)
    80c4:	d8801c15 	stw	r2,112(sp)
    80c8:	d9401b15 	stw	r5,108(sp)
    80cc:	00c001c4 	movi	r3,7
    80d0:	1940070e 	bge	r3,r5,80f0 <___vfiprintf_internal_r+0xd24>
    80d4:	103e4826 	beq	r2,zero,79f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079f8>
    80d8:	d9402117 	ldw	r5,132(sp)
    80dc:	d9002017 	ldw	r4,128(sp)
    80e0:	d9801a04 	addi	r6,sp,104
    80e4:	00072b80 	call	72b8 <__sprint_r.part.0>
    80e8:	10000c1e 	bne	r2,zero,811c <___vfiprintf_internal_r+0xd50>
    80ec:	d8801c17 	ldw	r2,112(sp)
    80f0:	8c80010e 	bge	r17,r18,80f8 <___vfiprintf_internal_r+0xd2c>
    80f4:	9023883a 	mov	r17,r18
    80f8:	da802317 	ldw	r10,140(sp)
    80fc:	5455883a 	add	r10,r10,r17
    8100:	da802315 	stw	r10,140(sp)
    8104:	103e4126 	beq	r2,zero,7a0c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007a0c>
    8108:	d9402117 	ldw	r5,132(sp)
    810c:	d9002017 	ldw	r4,128(sp)
    8110:	d9801a04 	addi	r6,sp,104
    8114:	00072b80 	call	72b8 <__sprint_r.part.0>
    8118:	103e3c26 	beq	r2,zero,7a0c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007a0c>
    811c:	dd002117 	ldw	r20,132(sp)
    8120:	a080030b 	ldhu	r2,12(r20)
    8124:	1080100c 	andi	r2,r2,64
    8128:	1001231e 	bne	r2,zero,85b8 <___vfiprintf_internal_r+0x11ec>
    812c:	d8802317 	ldw	r2,140(sp)
    8130:	003d7b06 	br	7720 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007720>
    8134:	1000991e 	bne	r2,zero,839c <___vfiprintf_internal_r+0xfd0>
    8138:	00c00044 	movi	r3,1
    813c:	9805883a 	mov	r2,r19
    8140:	dd400015 	stw	r21,0(sp)
    8144:	dcc00115 	stw	r19,4(sp)
    8148:	dcc01c15 	stw	r19,112(sp)
    814c:	d8c01b15 	stw	r3,108(sp)
    8150:	d811883a 	mov	r8,sp
    8154:	42000204 	addi	r8,r8,8
    8158:	a2c0010c 	andi	r11,r20,4
    815c:	583fe426 	beq	r11,zero,80f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70080f0>
    8160:	8ca7c83a 	sub	r19,r17,r18
    8164:	04ffe20e 	bge	zero,r19,80f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70080f0>
    8168:	01c00404 	movi	r7,16
    816c:	3cffcc0e 	bge	r7,r19,80a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70080a0>
    8170:	02800074 	movhi	r10,1
    8174:	5285be04 	addi	r10,r10,5880
    8178:	d9001b17 	ldw	r4,108(sp)
    817c:	da802415 	stw	r10,144(sp)
    8180:	382b883a 	mov	r21,r7
    8184:	050001c4 	movi	r20,7
    8188:	df002017 	ldw	fp,128(sp)
    818c:	00000506 	br	81a4 <___vfiprintf_internal_r+0xdd8>
    8190:	21400084 	addi	r5,r4,2
    8194:	42000204 	addi	r8,r8,8
    8198:	1809883a 	mov	r4,r3
    819c:	9cfffc04 	addi	r19,r19,-16
    81a0:	acffc40e 	bge	r21,r19,80b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70080b4>
    81a4:	10800404 	addi	r2,r2,16
    81a8:	20c00044 	addi	r3,r4,1
    81ac:	45800015 	stw	r22,0(r8)
    81b0:	45400115 	stw	r21,4(r8)
    81b4:	d8801c15 	stw	r2,112(sp)
    81b8:	d8c01b15 	stw	r3,108(sp)
    81bc:	a0fff40e 	bge	r20,r3,8190 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008190>
    81c0:	1000041e 	bne	r2,zero,81d4 <___vfiprintf_internal_r+0xe08>
    81c4:	01400044 	movi	r5,1
    81c8:	0009883a 	mov	r4,zero
    81cc:	d811883a 	mov	r8,sp
    81d0:	003ff206 	br	819c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700819c>
    81d4:	d9402117 	ldw	r5,132(sp)
    81d8:	d9801a04 	addi	r6,sp,104
    81dc:	e009883a 	mov	r4,fp
    81e0:	00072b80 	call	72b8 <__sprint_r.part.0>
    81e4:	103fcd1e 	bne	r2,zero,811c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700811c>
    81e8:	d9001b17 	ldw	r4,108(sp)
    81ec:	d8801c17 	ldw	r2,112(sp)
    81f0:	d811883a 	mov	r8,sp
    81f4:	21400044 	addi	r5,r4,1
    81f8:	003fe806 	br	819c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700819c>
    81fc:	d9402117 	ldw	r5,132(sp)
    8200:	d9002017 	ldw	r4,128(sp)
    8204:	d9801a04 	addi	r6,sp,104
    8208:	d9c02b15 	stw	r7,172(sp)
    820c:	db402a15 	stw	r13,168(sp)
    8210:	00072b80 	call	72b8 <__sprint_r.part.0>
    8214:	d9c02b17 	ldw	r7,172(sp)
    8218:	db402a17 	ldw	r13,168(sp)
    821c:	103fbf1e 	bne	r2,zero,811c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700811c>
    8220:	d9401b17 	ldw	r5,108(sp)
    8224:	d8801c17 	ldw	r2,112(sp)
    8228:	d811883a 	mov	r8,sp
    822c:	29800044 	addi	r6,r5,1
    8230:	003dc406 	br	7944 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007944>
    8234:	1000d21e 	bne	r2,zero,8580 <___vfiprintf_internal_r+0x11b4>
    8238:	d8c01d87 	ldb	r3,118(sp)
    823c:	18009526 	beq	r3,zero,8494 <___vfiprintf_internal_r+0x10c8>
    8240:	00800044 	movi	r2,1
    8244:	d8c01d84 	addi	r3,sp,118
    8248:	1009883a 	mov	r4,r2
    824c:	d8c00015 	stw	r3,0(sp)
    8250:	d8800115 	stw	r2,4(sp)
    8254:	d811883a 	mov	r8,sp
    8258:	200b883a 	mov	r5,r4
    825c:	42000204 	addi	r8,r8,8
    8260:	21000044 	addi	r4,r4,1
    8264:	003d9706 	br	78c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70078c4>
    8268:	d9001d04 	addi	r4,sp,116
    826c:	00800084 	movi	r2,2
    8270:	d9000015 	stw	r4,0(sp)
    8274:	d8800115 	stw	r2,4(sp)
    8278:	1809883a 	mov	r4,r3
    827c:	d811883a 	mov	r8,sp
    8280:	200b883a 	mov	r5,r4
    8284:	42000204 	addi	r8,r8,8
    8288:	21000044 	addi	r4,r4,1
    828c:	003f4e06 	br	7fc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007fc8>
    8290:	d8001d85 	stb	zero,118(sp)
    8294:	48005016 	blt	r9,zero,83d8 <___vfiprintf_internal_r+0x100c>
    8298:	00ffdfc4 	movi	r3,-129
    829c:	94c4b03a 	or	r2,r18,r19
    82a0:	a0e8703a 	and	r20,r20,r3
    82a4:	103d4426 	beq	r2,zero,77b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70077b8>
    82a8:	0039883a 	mov	fp,zero
    82ac:	d9002617 	ldw	r4,152(sp)
    82b0:	dd401a04 	addi	r21,sp,104
    82b4:	908003cc 	andi	r2,r18,15
    82b8:	9806973a 	slli	r3,r19,28
    82bc:	2085883a 	add	r2,r4,r2
    82c0:	9024d13a 	srli	r18,r18,4
    82c4:	10800003 	ldbu	r2,0(r2)
    82c8:	9826d13a 	srli	r19,r19,4
    82cc:	ad7fffc4 	addi	r21,r21,-1
    82d0:	1ca4b03a 	or	r18,r3,r18
    82d4:	a8800005 	stb	r2,0(r21)
    82d8:	94c4b03a 	or	r2,r18,r19
    82dc:	103ff51e 	bne	r2,zero,82b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082b4>
    82e0:	003e5906 	br	7c48 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007c48>
    82e4:	d9402117 	ldw	r5,132(sp)
    82e8:	d9002017 	ldw	r4,128(sp)
    82ec:	d9801a04 	addi	r6,sp,104
    82f0:	00072b80 	call	72b8 <__sprint_r.part.0>
    82f4:	103f891e 	bne	r2,zero,811c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700811c>
    82f8:	d8801c17 	ldw	r2,112(sp)
    82fc:	d811883a 	mov	r8,sp
    8300:	003f9506 	br	8158 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008158>
    8304:	d9402117 	ldw	r5,132(sp)
    8308:	d9002017 	ldw	r4,128(sp)
    830c:	d9801a04 	addi	r6,sp,104
    8310:	00072b80 	call	72b8 <__sprint_r.part.0>
    8314:	103f811e 	bne	r2,zero,811c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700811c>
    8318:	d811883a 	mov	r8,sp
    831c:	003ced06 	br	76d4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70076d4>
    8320:	d9402117 	ldw	r5,132(sp)
    8324:	d9002017 	ldw	r4,128(sp)
    8328:	d9801a04 	addi	r6,sp,104
    832c:	da402c15 	stw	r9,176(sp)
    8330:	db802a15 	stw	r14,168(sp)
    8334:	00072b80 	call	72b8 <__sprint_r.part.0>
    8338:	da402c17 	ldw	r9,176(sp)
    833c:	db802a17 	ldw	r14,168(sp)
    8340:	103f761e 	bne	r2,zero,811c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700811c>
    8344:	d9401b17 	ldw	r5,108(sp)
    8348:	d8801c17 	ldw	r2,112(sp)
    834c:	d811883a 	mov	r8,sp
    8350:	29000044 	addi	r4,r5,1
    8354:	003d5b06 	br	78c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70078c4>
    8358:	d9402117 	ldw	r5,132(sp)
    835c:	d9002017 	ldw	r4,128(sp)
    8360:	d9801a04 	addi	r6,sp,104
    8364:	da402c15 	stw	r9,176(sp)
    8368:	00072b80 	call	72b8 <__sprint_r.part.0>
    836c:	da402c17 	ldw	r9,176(sp)
    8370:	103f6a1e 	bne	r2,zero,811c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700811c>
    8374:	d9401b17 	ldw	r5,108(sp)
    8378:	d8801c17 	ldw	r2,112(sp)
    837c:	d811883a 	mov	r8,sp
    8380:	29000044 	addi	r4,r5,1
    8384:	003f1006 	br	7fc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007fc8>
    8388:	1000c31e 	bne	r2,zero,8698 <___vfiprintf_internal_r+0x12cc>
    838c:	01000044 	movi	r4,1
    8390:	000b883a 	mov	r5,zero
    8394:	d811883a 	mov	r8,sp
    8398:	003f0d06 	br	7fd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007fd0>
    839c:	d9402117 	ldw	r5,132(sp)
    83a0:	d9002017 	ldw	r4,128(sp)
    83a4:	d9801a04 	addi	r6,sp,104
    83a8:	00072b80 	call	72b8 <__sprint_r.part.0>
    83ac:	103f5b1e 	bne	r2,zero,811c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700811c>
    83b0:	d9001b17 	ldw	r4,108(sp)
    83b4:	d8801c17 	ldw	r2,112(sp)
    83b8:	d811883a 	mov	r8,sp
    83bc:	21000044 	addi	r4,r4,1
    83c0:	003d8006 	br	79c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079c4>
    83c4:	01000074 	movhi	r4,1
    83c8:	21055904 	addi	r4,r4,5476
    83cc:	d9002615 	stw	r4,152(sp)
    83d0:	d8c02215 	stw	r3,136(sp)
    83d4:	1029883a 	mov	r20,r2
    83d8:	94c4b03a 	or	r2,r18,r19
    83dc:	103fb21e 	bne	r2,zero,82a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082a8>
    83e0:	0039883a 	mov	fp,zero
    83e4:	00800084 	movi	r2,2
    83e8:	003e6b06 	br	7d98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d98>
    83ec:	da802217 	ldw	r10,136(sp)
    83f0:	d8001d85 	stb	zero,118(sp)
    83f4:	0027883a 	mov	r19,zero
    83f8:	50800104 	addi	r2,r10,4
    83fc:	54800017 	ldw	r18,0(r10)
    8400:	483e6016 	blt	r9,zero,7d84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d84>
    8404:	00ffdfc4 	movi	r3,-129
    8408:	d8802215 	stw	r2,136(sp)
    840c:	a0e8703a 	and	r20,r20,r3
    8410:	0039883a 	mov	fp,zero
    8414:	903ebb26 	beq	r18,zero,7f04 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f04>
    8418:	00800244 	movi	r2,9
    841c:	14bdee36 	bltu	r2,r18,7bd8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007bd8>
    8420:	003eba06 	br	7f0c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f0c>
    8424:	00800c04 	movi	r2,48
    8428:	d8c01d45 	stb	r3,117(sp)
    842c:	d8801d05 	stb	r2,116(sp)
    8430:	d8001d85 	stb	zero,118(sp)
    8434:	a0c00094 	ori	r3,r20,2
    8438:	4800a916 	blt	r9,zero,86e0 <___vfiprintf_internal_r+0x1314>
    843c:	00bfdfc4 	movi	r2,-129
    8440:	a096703a 	and	r11,r20,r2
    8444:	5d000094 	ori	r20,r11,2
    8448:	0039883a 	mov	fp,zero
    844c:	003f9706 	br	82ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082ac>
    8450:	8025883a 	mov	r18,r16
    8454:	003c2e06 	br	7510 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007510>
    8458:	00800074 	movhi	r2,1
    845c:	10855904 	addi	r2,r2,5476
    8460:	0039883a 	mov	fp,zero
    8464:	d8802615 	stw	r2,152(sp)
    8468:	003f9006 	br	82ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082ac>
    846c:	04a5c83a 	sub	r18,zero,r18
    8470:	07000b44 	movi	fp,45
    8474:	9004c03a 	cmpne	r2,r18,zero
    8478:	04e7c83a 	sub	r19,zero,r19
    847c:	df001d85 	stb	fp,118(sp)
    8480:	98a7c83a 	sub	r19,r19,r2
    8484:	48009f16 	blt	r9,zero,8704 <___vfiprintf_internal_r+0x1338>
    8488:	00bfdfc4 	movi	r2,-129
    848c:	a0a8703a 	and	r20,r20,r2
    8490:	003dd006 	br	7bd4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007bd4>
    8494:	70004c26 	beq	r14,zero,85c8 <___vfiprintf_internal_r+0x11fc>
    8498:	00800084 	movi	r2,2
    849c:	d8c01d04 	addi	r3,sp,116
    84a0:	d8c00015 	stw	r3,0(sp)
    84a4:	d8800115 	stw	r2,4(sp)
    84a8:	01000044 	movi	r4,1
    84ac:	d811883a 	mov	r8,sp
    84b0:	003f7306 	br	8280 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008280>
    84b4:	a080100c 	andi	r2,r20,64
    84b8:	da802217 	ldw	r10,136(sp)
    84bc:	103e0626 	beq	r2,zero,7cd8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007cd8>
    84c0:	5480000f 	ldh	r18,0(r10)
    84c4:	52800104 	addi	r10,r10,4
    84c8:	da802215 	stw	r10,136(sp)
    84cc:	9027d7fa 	srai	r19,r18,31
    84d0:	9805883a 	mov	r2,r19
    84d4:	003db806 	br	7bb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007bb8>
    84d8:	a080040c 	andi	r2,r20,16
    84dc:	1000091e 	bne	r2,zero,8504 <___vfiprintf_internal_r+0x1138>
    84e0:	a2c0100c 	andi	r11,r20,64
    84e4:	58000726 	beq	r11,zero,8504 <___vfiprintf_internal_r+0x1138>
    84e8:	da802217 	ldw	r10,136(sp)
    84ec:	50800017 	ldw	r2,0(r10)
    84f0:	52800104 	addi	r10,r10,4
    84f4:	da802215 	stw	r10,136(sp)
    84f8:	da802317 	ldw	r10,140(sp)
    84fc:	1280000d 	sth	r10,0(r2)
    8500:	003be706 	br	74a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70074a0>
    8504:	da802217 	ldw	r10,136(sp)
    8508:	50800017 	ldw	r2,0(r10)
    850c:	52800104 	addi	r10,r10,4
    8510:	da802215 	stw	r10,136(sp)
    8514:	da802317 	ldw	r10,140(sp)
    8518:	12800015 	stw	r10,0(r2)
    851c:	003be006 	br	74a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70074a0>
    8520:	a080100c 	andi	r2,r20,64
    8524:	da802217 	ldw	r10,136(sp)
    8528:	10003026 	beq	r2,zero,85ec <___vfiprintf_internal_r+0x1220>
    852c:	5480000b 	ldhu	r18,0(r10)
    8530:	52800104 	addi	r10,r10,4
    8534:	0027883a 	mov	r19,zero
    8538:	da802215 	stw	r10,136(sp)
    853c:	003d8006 	br	7b40 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007b40>
    8540:	80c00007 	ldb	r3,0(r16)
    8544:	003c0006 	br	7548 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007548>
    8548:	a080100c 	andi	r2,r20,64
    854c:	d8001d85 	stb	zero,118(sp)
    8550:	da802217 	ldw	r10,136(sp)
    8554:	1000201e 	bne	r2,zero,85d8 <___vfiprintf_internal_r+0x120c>
    8558:	50800104 	addi	r2,r10,4
    855c:	54800017 	ldw	r18,0(r10)
    8560:	0027883a 	mov	r19,zero
    8564:	483def0e 	bge	r9,zero,7d24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d24>
    8568:	94c6b03a 	or	r3,r18,r19
    856c:	d8802215 	stw	r2,136(sp)
    8570:	183d4e1e 	bne	r3,zero,7aac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007aac>
    8574:	0039883a 	mov	fp,zero
    8578:	0005883a 	mov	r2,zero
    857c:	003e0606 	br	7d98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d98>
    8580:	d9402117 	ldw	r5,132(sp)
    8584:	d9002017 	ldw	r4,128(sp)
    8588:	d9801a04 	addi	r6,sp,104
    858c:	da402c15 	stw	r9,176(sp)
    8590:	db802a15 	stw	r14,168(sp)
    8594:	00072b80 	call	72b8 <__sprint_r.part.0>
    8598:	da402c17 	ldw	r9,176(sp)
    859c:	db802a17 	ldw	r14,168(sp)
    85a0:	103ede1e 	bne	r2,zero,811c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700811c>
    85a4:	d9401b17 	ldw	r5,108(sp)
    85a8:	d8801c17 	ldw	r2,112(sp)
    85ac:	d811883a 	mov	r8,sp
    85b0:	29000044 	addi	r4,r5,1
    85b4:	003e7406 	br	7f88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f88>
    85b8:	00bfffc4 	movi	r2,-1
    85bc:	003c5806 	br	7720 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007720>
    85c0:	d811883a 	mov	r8,sp
    85c4:	003ee806 	br	8168 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008168>
    85c8:	000b883a 	mov	r5,zero
    85cc:	01000044 	movi	r4,1
    85d0:	d811883a 	mov	r8,sp
    85d4:	003e7c06 	br	7fc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007fc8>
    85d8:	50800104 	addi	r2,r10,4
    85dc:	5480000b 	ldhu	r18,0(r10)
    85e0:	0027883a 	mov	r19,zero
    85e4:	483dcf0e 	bge	r9,zero,7d24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d24>
    85e8:	003fdf06 	br	8568 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008568>
    85ec:	54800017 	ldw	r18,0(r10)
    85f0:	52800104 	addi	r10,r10,4
    85f4:	0027883a 	mov	r19,zero
    85f8:	da802215 	stw	r10,136(sp)
    85fc:	003d5006 	br	7b40 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007b40>
    8600:	50800104 	addi	r2,r10,4
    8604:	5480000b 	ldhu	r18,0(r10)
    8608:	0027883a 	mov	r19,zero
    860c:	483f7d0e 	bge	r9,zero,8404 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008404>
    8610:	003ddc06 	br	7d84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d84>
    8614:	d8c02215 	stw	r3,136(sp)
    8618:	0039883a 	mov	fp,zero
    861c:	003ddb06 	br	7d8c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d8c>
    8620:	02800074 	movhi	r10,1
    8624:	5285ba04 	addi	r10,r10,5864
    8628:	da802415 	stw	r10,144(sp)
    862c:	003e8306 	br	803c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700803c>
    8630:	d8801c17 	ldw	r2,112(sp)
    8634:	dd002117 	ldw	r20,132(sp)
    8638:	103eb926 	beq	r2,zero,8120 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008120>
    863c:	d9002017 	ldw	r4,128(sp)
    8640:	d9801a04 	addi	r6,sp,104
    8644:	a00b883a 	mov	r5,r20
    8648:	00072b80 	call	72b8 <__sprint_r.part.0>
    864c:	003eb406 	br	8120 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008120>
    8650:	80c00043 	ldbu	r3,1(r16)
    8654:	a5000814 	ori	r20,r20,32
    8658:	84000044 	addi	r16,r16,1
    865c:	18c03fcc 	andi	r3,r3,255
    8660:	18c0201c 	xori	r3,r3,128
    8664:	18ffe004 	addi	r3,r3,-128
    8668:	003bb706 	br	7548 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007548>
    866c:	a809883a 	mov	r4,r21
    8670:	d8c02a15 	stw	r3,168(sp)
    8674:	da002b15 	stw	r8,172(sp)
    8678:	00072200 	call	7220 <strlen>
    867c:	d8c02a17 	ldw	r3,168(sp)
    8680:	1027883a 	mov	r19,r2
    8684:	df001d83 	ldbu	fp,118(sp)
    8688:	d8c02215 	stw	r3,136(sp)
    868c:	0013883a 	mov	r9,zero
    8690:	da002b17 	ldw	r8,172(sp)
    8694:	003c4d06 	br	77cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70077cc>
    8698:	d9402117 	ldw	r5,132(sp)
    869c:	d9002017 	ldw	r4,128(sp)
    86a0:	d9801a04 	addi	r6,sp,104
    86a4:	da402c15 	stw	r9,176(sp)
    86a8:	00072b80 	call	72b8 <__sprint_r.part.0>
    86ac:	da402c17 	ldw	r9,176(sp)
    86b0:	103e9a1e 	bne	r2,zero,811c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700811c>
    86b4:	d9401b17 	ldw	r5,108(sp)
    86b8:	d8801c17 	ldw	r2,112(sp)
    86bc:	d811883a 	mov	r8,sp
    86c0:	29000044 	addi	r4,r5,1
    86c4:	003e4206 	br	7fd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007fd0>
    86c8:	d9401b17 	ldw	r5,108(sp)
    86cc:	01000074 	movhi	r4,1
    86d0:	2105be04 	addi	r4,r4,5880
    86d4:	d9002415 	stw	r4,144(sp)
    86d8:	29400044 	addi	r5,r5,1
    86dc:	003c6d06 	br	7894 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007894>
    86e0:	0039883a 	mov	fp,zero
    86e4:	00800084 	movi	r2,2
    86e8:	10803fcc 	andi	r2,r2,255
    86ec:	01000044 	movi	r4,1
    86f0:	11001e26 	beq	r2,r4,876c <___vfiprintf_internal_r+0x13a0>
    86f4:	01000084 	movi	r4,2
    86f8:	11001e1e 	bne	r2,r4,8774 <___vfiprintf_internal_r+0x13a8>
    86fc:	1829883a 	mov	r20,r3
    8700:	003eea06 	br	82ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082ac>
    8704:	a007883a 	mov	r3,r20
    8708:	00800044 	movi	r2,1
    870c:	003ff606 	br	86e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70086e8>
    8710:	00800184 	movi	r2,6
    8714:	1240012e 	bgeu	r2,r9,871c <___vfiprintf_internal_r+0x1350>
    8718:	1013883a 	mov	r9,r2
    871c:	4827883a 	mov	r19,r9
    8720:	4825883a 	mov	r18,r9
    8724:	48001516 	blt	r9,zero,877c <___vfiprintf_internal_r+0x13b0>
    8728:	05400074 	movhi	r21,1
    872c:	d8c02215 	stw	r3,136(sp)
    8730:	ad455e04 	addi	r21,r21,5496
    8734:	003d1406 	br	7b88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007b88>
    8738:	02800074 	movhi	r10,1
    873c:	5285ba04 	addi	r10,r10,5864
    8740:	da802415 	stw	r10,144(sp)
    8744:	200d883a 	mov	r6,r4
    8748:	003c9106 	br	7990 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007990>
    874c:	5021883a 	mov	r16,r10
    8750:	0013883a 	mov	r9,zero
    8754:	003b7d06 	br	754c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700754c>
    8758:	4827883a 	mov	r19,r9
    875c:	df001d83 	ldbu	fp,118(sp)
    8760:	d8c02215 	stw	r3,136(sp)
    8764:	0013883a 	mov	r9,zero
    8768:	003c1806 	br	77cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70077cc>
    876c:	1829883a 	mov	r20,r3
    8770:	003d1806 	br	7bd4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007bd4>
    8774:	1829883a 	mov	r20,r3
    8778:	003ccd06 	br	7ab0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007ab0>
    877c:	0025883a 	mov	r18,zero
    8780:	003fe906 	br	8728 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008728>
    8784:	d8802217 	ldw	r2,136(sp)
    8788:	80c00043 	ldbu	r3,1(r16)
    878c:	5021883a 	mov	r16,r10
    8790:	12400017 	ldw	r9,0(r2)
    8794:	10800104 	addi	r2,r2,4
    8798:	d8802215 	stw	r2,136(sp)
    879c:	483faf0e 	bge	r9,zero,865c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700865c>
    87a0:	18c03fcc 	andi	r3,r3,255
    87a4:	18c0201c 	xori	r3,r3,128
    87a8:	027fffc4 	movi	r9,-1
    87ac:	18ffe004 	addi	r3,r3,-128
    87b0:	003b6506 	br	7548 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007548>
    87b4:	d9c01d85 	stb	r7,118(sp)
    87b8:	003ca006 	br	7a3c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007a3c>
    87bc:	d9c01d85 	stb	r7,118(sp)
    87c0:	003cad06 	br	7a78 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007a78>
    87c4:	d9c01d85 	stb	r7,118(sp)
    87c8:	003d7d06 	br	7dc0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007dc0>
    87cc:	d9c01d85 	stb	r7,118(sp)
    87d0:	003d5f06 	br	7d50 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d50>
    87d4:	a080004c 	andi	r2,r20,1
    87d8:	0039883a 	mov	fp,zero
    87dc:	10000526 	beq	r2,zero,87f4 <___vfiprintf_internal_r+0x1428>
    87e0:	00800c04 	movi	r2,48
    87e4:	d88019c5 	stb	r2,103(sp)
    87e8:	dcc02717 	ldw	r19,156(sp)
    87ec:	dd4019c4 	addi	r21,sp,103
    87f0:	003bf606 	br	77cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70077cc>
    87f4:	0027883a 	mov	r19,zero
    87f8:	dd401a04 	addi	r21,sp,104
    87fc:	003bf306 	br	77cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70077cc>
    8800:	d9c01d85 	stb	r7,118(sp)
    8804:	003dc806 	br	7f28 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f28>
    8808:	d9c01d85 	stb	r7,118(sp)
    880c:	003d3a06 	br	7cf8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007cf8>
    8810:	d9c01d85 	stb	r7,118(sp)
    8814:	003d2a06 	br	7cc0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007cc0>
    8818:	d9c01d85 	stb	r7,118(sp)
    881c:	003cde06 	br	7b98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007b98>
    8820:	d9c01d85 	stb	r7,118(sp)
    8824:	003cbc06 	br	7b18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007b18>

00008828 <__vfiprintf_internal>:
    8828:	00800074 	movhi	r2,1
    882c:	108d9004 	addi	r2,r2,13888
    8830:	300f883a 	mov	r7,r6
    8834:	280d883a 	mov	r6,r5
    8838:	200b883a 	mov	r5,r4
    883c:	11000017 	ldw	r4,0(r2)
    8840:	00073cc1 	jmpi	73cc <___vfiprintf_internal_r>

00008844 <__sbprintf>:
    8844:	2880030b 	ldhu	r2,12(r5)
    8848:	2ac01917 	ldw	r11,100(r5)
    884c:	2a80038b 	ldhu	r10,14(r5)
    8850:	2a400717 	ldw	r9,28(r5)
    8854:	2a000917 	ldw	r8,36(r5)
    8858:	defee204 	addi	sp,sp,-1144
    885c:	00c10004 	movi	r3,1024
    8860:	dc011a15 	stw	r16,1128(sp)
    8864:	10bfff4c 	andi	r2,r2,65533
    8868:	2821883a 	mov	r16,r5
    886c:	d8cb883a 	add	r5,sp,r3
    8870:	dc811c15 	stw	r18,1136(sp)
    8874:	dc411b15 	stw	r17,1132(sp)
    8878:	dfc11d15 	stw	ra,1140(sp)
    887c:	2025883a 	mov	r18,r4
    8880:	d881030d 	sth	r2,1036(sp)
    8884:	dac11915 	stw	r11,1124(sp)
    8888:	da81038d 	sth	r10,1038(sp)
    888c:	da410715 	stw	r9,1052(sp)
    8890:	da010915 	stw	r8,1060(sp)
    8894:	dec10015 	stw	sp,1024(sp)
    8898:	dec10415 	stw	sp,1040(sp)
    889c:	d8c10215 	stw	r3,1032(sp)
    88a0:	d8c10515 	stw	r3,1044(sp)
    88a4:	d8010615 	stw	zero,1048(sp)
    88a8:	00073cc0 	call	73cc <___vfiprintf_internal_r>
    88ac:	1023883a 	mov	r17,r2
    88b0:	10000416 	blt	r2,zero,88c4 <__sbprintf+0x80>
    88b4:	d9410004 	addi	r5,sp,1024
    88b8:	9009883a 	mov	r4,r18
    88bc:	00047640 	call	4764 <_fflush_r>
    88c0:	10000d1e 	bne	r2,zero,88f8 <__sbprintf+0xb4>
    88c4:	d881030b 	ldhu	r2,1036(sp)
    88c8:	1080100c 	andi	r2,r2,64
    88cc:	10000326 	beq	r2,zero,88dc <__sbprintf+0x98>
    88d0:	8080030b 	ldhu	r2,12(r16)
    88d4:	10801014 	ori	r2,r2,64
    88d8:	8080030d 	sth	r2,12(r16)
    88dc:	8805883a 	mov	r2,r17
    88e0:	dfc11d17 	ldw	ra,1140(sp)
    88e4:	dc811c17 	ldw	r18,1136(sp)
    88e8:	dc411b17 	ldw	r17,1132(sp)
    88ec:	dc011a17 	ldw	r16,1128(sp)
    88f0:	dec11e04 	addi	sp,sp,1144
    88f4:	f800283a 	ret
    88f8:	047fffc4 	movi	r17,-1
    88fc:	003ff106 	br	88c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70088c4>

00008900 <_write_r>:
    8900:	defffd04 	addi	sp,sp,-12
    8904:	2805883a 	mov	r2,r5
    8908:	dc000015 	stw	r16,0(sp)
    890c:	04000074 	movhi	r16,1
    8910:	dc400115 	stw	r17,4(sp)
    8914:	300b883a 	mov	r5,r6
    8918:	84152804 	addi	r16,r16,21664
    891c:	2023883a 	mov	r17,r4
    8920:	380d883a 	mov	r6,r7
    8924:	1009883a 	mov	r4,r2
    8928:	dfc00215 	stw	ra,8(sp)
    892c:	80000015 	stw	zero,0(r16)
    8930:	000dbdc0 	call	dbdc <write>
    8934:	00ffffc4 	movi	r3,-1
    8938:	10c00526 	beq	r2,r3,8950 <_write_r+0x50>
    893c:	dfc00217 	ldw	ra,8(sp)
    8940:	dc400117 	ldw	r17,4(sp)
    8944:	dc000017 	ldw	r16,0(sp)
    8948:	dec00304 	addi	sp,sp,12
    894c:	f800283a 	ret
    8950:	80c00017 	ldw	r3,0(r16)
    8954:	183ff926 	beq	r3,zero,893c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700893c>
    8958:	88c00015 	stw	r3,0(r17)
    895c:	003ff706 	br	893c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700893c>

00008960 <_close_r>:
    8960:	defffd04 	addi	sp,sp,-12
    8964:	dc000015 	stw	r16,0(sp)
    8968:	04000074 	movhi	r16,1
    896c:	dc400115 	stw	r17,4(sp)
    8970:	84152804 	addi	r16,r16,21664
    8974:	2023883a 	mov	r17,r4
    8978:	2809883a 	mov	r4,r5
    897c:	dfc00215 	stw	ra,8(sp)
    8980:	80000015 	stw	zero,0(r16)
    8984:	000d0540 	call	d054 <close>
    8988:	00ffffc4 	movi	r3,-1
    898c:	10c00526 	beq	r2,r3,89a4 <_close_r+0x44>
    8990:	dfc00217 	ldw	ra,8(sp)
    8994:	dc400117 	ldw	r17,4(sp)
    8998:	dc000017 	ldw	r16,0(sp)
    899c:	dec00304 	addi	sp,sp,12
    89a0:	f800283a 	ret
    89a4:	80c00017 	ldw	r3,0(r16)
    89a8:	183ff926 	beq	r3,zero,8990 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008990>
    89ac:	88c00015 	stw	r3,0(r17)
    89b0:	003ff706 	br	8990 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008990>

000089b4 <_calloc_r>:
    89b4:	298b383a 	mul	r5,r5,r6
    89b8:	defffe04 	addi	sp,sp,-8
    89bc:	dfc00115 	stw	ra,4(sp)
    89c0:	dc000015 	stw	r16,0(sp)
    89c4:	00053e40 	call	53e4 <_malloc_r>
    89c8:	10002926 	beq	r2,zero,8a70 <_calloc_r+0xbc>
    89cc:	11bfff17 	ldw	r6,-4(r2)
    89d0:	1021883a 	mov	r16,r2
    89d4:	00bfff04 	movi	r2,-4
    89d8:	308c703a 	and	r6,r6,r2
    89dc:	00c00904 	movi	r3,36
    89e0:	308d883a 	add	r6,r6,r2
    89e4:	19801636 	bltu	r3,r6,8a40 <_calloc_r+0x8c>
    89e8:	008004c4 	movi	r2,19
    89ec:	11800b2e 	bgeu	r2,r6,8a1c <_calloc_r+0x68>
    89f0:	80000015 	stw	zero,0(r16)
    89f4:	80000115 	stw	zero,4(r16)
    89f8:	008006c4 	movi	r2,27
    89fc:	11801a2e 	bgeu	r2,r6,8a68 <_calloc_r+0xb4>
    8a00:	80000215 	stw	zero,8(r16)
    8a04:	80000315 	stw	zero,12(r16)
    8a08:	30c0151e 	bne	r6,r3,8a60 <_calloc_r+0xac>
    8a0c:	80000415 	stw	zero,16(r16)
    8a10:	80800604 	addi	r2,r16,24
    8a14:	80000515 	stw	zero,20(r16)
    8a18:	00000106 	br	8a20 <_calloc_r+0x6c>
    8a1c:	8005883a 	mov	r2,r16
    8a20:	10000015 	stw	zero,0(r2)
    8a24:	10000115 	stw	zero,4(r2)
    8a28:	10000215 	stw	zero,8(r2)
    8a2c:	8005883a 	mov	r2,r16
    8a30:	dfc00117 	ldw	ra,4(sp)
    8a34:	dc000017 	ldw	r16,0(sp)
    8a38:	dec00204 	addi	sp,sp,8
    8a3c:	f800283a 	ret
    8a40:	000b883a 	mov	r5,zero
    8a44:	8009883a 	mov	r4,r16
    8a48:	0005e1c0 	call	5e1c <memset>
    8a4c:	8005883a 	mov	r2,r16
    8a50:	dfc00117 	ldw	ra,4(sp)
    8a54:	dc000017 	ldw	r16,0(sp)
    8a58:	dec00204 	addi	sp,sp,8
    8a5c:	f800283a 	ret
    8a60:	80800404 	addi	r2,r16,16
    8a64:	003fee06 	br	8a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008a20>
    8a68:	80800204 	addi	r2,r16,8
    8a6c:	003fec06 	br	8a20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008a20>
    8a70:	0005883a 	mov	r2,zero
    8a74:	003fee06 	br	8a30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008a30>

00008a78 <_fclose_r>:
    8a78:	28003926 	beq	r5,zero,8b60 <_fclose_r+0xe8>
    8a7c:	defffc04 	addi	sp,sp,-16
    8a80:	dc400115 	stw	r17,4(sp)
    8a84:	dc000015 	stw	r16,0(sp)
    8a88:	dfc00315 	stw	ra,12(sp)
    8a8c:	dc800215 	stw	r18,8(sp)
    8a90:	2023883a 	mov	r17,r4
    8a94:	2821883a 	mov	r16,r5
    8a98:	20000226 	beq	r4,zero,8aa4 <_fclose_r+0x2c>
    8a9c:	20800e17 	ldw	r2,56(r4)
    8aa0:	10002726 	beq	r2,zero,8b40 <_fclose_r+0xc8>
    8aa4:	8080030f 	ldh	r2,12(r16)
    8aa8:	1000071e 	bne	r2,zero,8ac8 <_fclose_r+0x50>
    8aac:	0005883a 	mov	r2,zero
    8ab0:	dfc00317 	ldw	ra,12(sp)
    8ab4:	dc800217 	ldw	r18,8(sp)
    8ab8:	dc400117 	ldw	r17,4(sp)
    8abc:	dc000017 	ldw	r16,0(sp)
    8ac0:	dec00404 	addi	sp,sp,16
    8ac4:	f800283a 	ret
    8ac8:	800b883a 	mov	r5,r16
    8acc:	8809883a 	mov	r4,r17
    8ad0:	00045480 	call	4548 <__sflush_r>
    8ad4:	1025883a 	mov	r18,r2
    8ad8:	80800b17 	ldw	r2,44(r16)
    8adc:	10000426 	beq	r2,zero,8af0 <_fclose_r+0x78>
    8ae0:	81400717 	ldw	r5,28(r16)
    8ae4:	8809883a 	mov	r4,r17
    8ae8:	103ee83a 	callr	r2
    8aec:	10001616 	blt	r2,zero,8b48 <_fclose_r+0xd0>
    8af0:	8080030b 	ldhu	r2,12(r16)
    8af4:	1080200c 	andi	r2,r2,128
    8af8:	1000151e 	bne	r2,zero,8b50 <_fclose_r+0xd8>
    8afc:	81400c17 	ldw	r5,48(r16)
    8b00:	28000526 	beq	r5,zero,8b18 <_fclose_r+0xa0>
    8b04:	80801004 	addi	r2,r16,64
    8b08:	28800226 	beq	r5,r2,8b14 <_fclose_r+0x9c>
    8b0c:	8809883a 	mov	r4,r17
    8b10:	0004cb40 	call	4cb4 <_free_r>
    8b14:	80000c15 	stw	zero,48(r16)
    8b18:	81401117 	ldw	r5,68(r16)
    8b1c:	28000326 	beq	r5,zero,8b2c <_fclose_r+0xb4>
    8b20:	8809883a 	mov	r4,r17
    8b24:	0004cb40 	call	4cb4 <_free_r>
    8b28:	80001115 	stw	zero,68(r16)
    8b2c:	0004b500 	call	4b50 <__sfp_lock_acquire>
    8b30:	8000030d 	sth	zero,12(r16)
    8b34:	0004b540 	call	4b54 <__sfp_lock_release>
    8b38:	9005883a 	mov	r2,r18
    8b3c:	003fdc06 	br	8ab0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008ab0>
    8b40:	0004b400 	call	4b40 <__sinit>
    8b44:	003fd706 	br	8aa4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008aa4>
    8b48:	04bfffc4 	movi	r18,-1
    8b4c:	003fe806 	br	8af0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008af0>
    8b50:	81400417 	ldw	r5,16(r16)
    8b54:	8809883a 	mov	r4,r17
    8b58:	0004cb40 	call	4cb4 <_free_r>
    8b5c:	003fe706 	br	8afc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008afc>
    8b60:	0005883a 	mov	r2,zero
    8b64:	f800283a 	ret

00008b68 <fclose>:
    8b68:	00800074 	movhi	r2,1
    8b6c:	108d9004 	addi	r2,r2,13888
    8b70:	200b883a 	mov	r5,r4
    8b74:	11000017 	ldw	r4,0(r2)
    8b78:	0008a781 	jmpi	8a78 <_fclose_r>

00008b7c <__fputwc>:
    8b7c:	defff804 	addi	sp,sp,-32
    8b80:	dcc00415 	stw	r19,16(sp)
    8b84:	dc800315 	stw	r18,12(sp)
    8b88:	dc000115 	stw	r16,4(sp)
    8b8c:	dfc00715 	stw	ra,28(sp)
    8b90:	dd400615 	stw	r21,24(sp)
    8b94:	dd000515 	stw	r20,20(sp)
    8b98:	dc400215 	stw	r17,8(sp)
    8b9c:	2027883a 	mov	r19,r4
    8ba0:	2825883a 	mov	r18,r5
    8ba4:	3021883a 	mov	r16,r6
    8ba8:	00051d40 	call	51d4 <__locale_mb_cur_max>
    8bac:	00c00044 	movi	r3,1
    8bb0:	10c03e26 	beq	r2,r3,8cac <__fputwc+0x130>
    8bb4:	81c01704 	addi	r7,r16,92
    8bb8:	900d883a 	mov	r6,r18
    8bbc:	d80b883a 	mov	r5,sp
    8bc0:	9809883a 	mov	r4,r19
    8bc4:	0009bc80 	call	9bc8 <_wcrtomb_r>
    8bc8:	1029883a 	mov	r20,r2
    8bcc:	00bfffc4 	movi	r2,-1
    8bd0:	a0802026 	beq	r20,r2,8c54 <__fputwc+0xd8>
    8bd4:	d9400003 	ldbu	r5,0(sp)
    8bd8:	a0001c26 	beq	r20,zero,8c4c <__fputwc+0xd0>
    8bdc:	0023883a 	mov	r17,zero
    8be0:	05400284 	movi	r21,10
    8be4:	00000906 	br	8c0c <__fputwc+0x90>
    8be8:	80800017 	ldw	r2,0(r16)
    8bec:	11400005 	stb	r5,0(r2)
    8bf0:	80c00017 	ldw	r3,0(r16)
    8bf4:	18c00044 	addi	r3,r3,1
    8bf8:	80c00015 	stw	r3,0(r16)
    8bfc:	8c400044 	addi	r17,r17,1
    8c00:	dc45883a 	add	r2,sp,r17
    8c04:	8d00112e 	bgeu	r17,r20,8c4c <__fputwc+0xd0>
    8c08:	11400003 	ldbu	r5,0(r2)
    8c0c:	80c00217 	ldw	r3,8(r16)
    8c10:	18ffffc4 	addi	r3,r3,-1
    8c14:	80c00215 	stw	r3,8(r16)
    8c18:	183ff30e 	bge	r3,zero,8be8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008be8>
    8c1c:	80800617 	ldw	r2,24(r16)
    8c20:	18801916 	blt	r3,r2,8c88 <__fputwc+0x10c>
    8c24:	80800017 	ldw	r2,0(r16)
    8c28:	11400005 	stb	r5,0(r2)
    8c2c:	80800017 	ldw	r2,0(r16)
    8c30:	10c00003 	ldbu	r3,0(r2)
    8c34:	10800044 	addi	r2,r2,1
    8c38:	1d402326 	beq	r3,r21,8cc8 <__fputwc+0x14c>
    8c3c:	80800015 	stw	r2,0(r16)
    8c40:	8c400044 	addi	r17,r17,1
    8c44:	dc45883a 	add	r2,sp,r17
    8c48:	8d3fef36 	bltu	r17,r20,8c08 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008c08>
    8c4c:	9005883a 	mov	r2,r18
    8c50:	00000406 	br	8c64 <__fputwc+0xe8>
    8c54:	80c0030b 	ldhu	r3,12(r16)
    8c58:	a005883a 	mov	r2,r20
    8c5c:	18c01014 	ori	r3,r3,64
    8c60:	80c0030d 	sth	r3,12(r16)
    8c64:	dfc00717 	ldw	ra,28(sp)
    8c68:	dd400617 	ldw	r21,24(sp)
    8c6c:	dd000517 	ldw	r20,20(sp)
    8c70:	dcc00417 	ldw	r19,16(sp)
    8c74:	dc800317 	ldw	r18,12(sp)
    8c78:	dc400217 	ldw	r17,8(sp)
    8c7c:	dc000117 	ldw	r16,4(sp)
    8c80:	dec00804 	addi	sp,sp,32
    8c84:	f800283a 	ret
    8c88:	800d883a 	mov	r6,r16
    8c8c:	29403fcc 	andi	r5,r5,255
    8c90:	9809883a 	mov	r4,r19
    8c94:	0009a700 	call	9a70 <__swbuf_r>
    8c98:	10bfffe0 	cmpeqi	r2,r2,-1
    8c9c:	10803fcc 	andi	r2,r2,255
    8ca0:	103fd626 	beq	r2,zero,8bfc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008bfc>
    8ca4:	00bfffc4 	movi	r2,-1
    8ca8:	003fee06 	br	8c64 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008c64>
    8cac:	90ffffc4 	addi	r3,r18,-1
    8cb0:	01003f84 	movi	r4,254
    8cb4:	20ffbf36 	bltu	r4,r3,8bb4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008bb4>
    8cb8:	900b883a 	mov	r5,r18
    8cbc:	dc800005 	stb	r18,0(sp)
    8cc0:	1029883a 	mov	r20,r2
    8cc4:	003fc506 	br	8bdc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008bdc>
    8cc8:	800d883a 	mov	r6,r16
    8ccc:	a80b883a 	mov	r5,r21
    8cd0:	9809883a 	mov	r4,r19
    8cd4:	0009a700 	call	9a70 <__swbuf_r>
    8cd8:	10bfffe0 	cmpeqi	r2,r2,-1
    8cdc:	003fef06 	br	8c9c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008c9c>

00008ce0 <_fputwc_r>:
    8ce0:	3080030b 	ldhu	r2,12(r6)
    8ce4:	10c8000c 	andi	r3,r2,8192
    8ce8:	1800051e 	bne	r3,zero,8d00 <_fputwc_r+0x20>
    8cec:	30c01917 	ldw	r3,100(r6)
    8cf0:	10880014 	ori	r2,r2,8192
    8cf4:	3080030d 	sth	r2,12(r6)
    8cf8:	18880014 	ori	r2,r3,8192
    8cfc:	30801915 	stw	r2,100(r6)
    8d00:	0008b7c1 	jmpi	8b7c <__fputwc>

00008d04 <fputwc>:
    8d04:	00800074 	movhi	r2,1
    8d08:	defffc04 	addi	sp,sp,-16
    8d0c:	108d9004 	addi	r2,r2,13888
    8d10:	dc000115 	stw	r16,4(sp)
    8d14:	14000017 	ldw	r16,0(r2)
    8d18:	dc400215 	stw	r17,8(sp)
    8d1c:	dfc00315 	stw	ra,12(sp)
    8d20:	2023883a 	mov	r17,r4
    8d24:	80000226 	beq	r16,zero,8d30 <fputwc+0x2c>
    8d28:	80800e17 	ldw	r2,56(r16)
    8d2c:	10001026 	beq	r2,zero,8d70 <fputwc+0x6c>
    8d30:	2880030b 	ldhu	r2,12(r5)
    8d34:	10c8000c 	andi	r3,r2,8192
    8d38:	1800051e 	bne	r3,zero,8d50 <fputwc+0x4c>
    8d3c:	28c01917 	ldw	r3,100(r5)
    8d40:	10880014 	ori	r2,r2,8192
    8d44:	2880030d 	sth	r2,12(r5)
    8d48:	18880014 	ori	r2,r3,8192
    8d4c:	28801915 	stw	r2,100(r5)
    8d50:	280d883a 	mov	r6,r5
    8d54:	8009883a 	mov	r4,r16
    8d58:	880b883a 	mov	r5,r17
    8d5c:	dfc00317 	ldw	ra,12(sp)
    8d60:	dc400217 	ldw	r17,8(sp)
    8d64:	dc000117 	ldw	r16,4(sp)
    8d68:	dec00404 	addi	sp,sp,16
    8d6c:	0008b7c1 	jmpi	8b7c <__fputwc>
    8d70:	8009883a 	mov	r4,r16
    8d74:	d9400015 	stw	r5,0(sp)
    8d78:	0004b400 	call	4b40 <__sinit>
    8d7c:	d9400017 	ldw	r5,0(sp)
    8d80:	003feb06 	br	8d30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008d30>

00008d84 <_fstat_r>:
    8d84:	defffd04 	addi	sp,sp,-12
    8d88:	2805883a 	mov	r2,r5
    8d8c:	dc000015 	stw	r16,0(sp)
    8d90:	04000074 	movhi	r16,1
    8d94:	dc400115 	stw	r17,4(sp)
    8d98:	84152804 	addi	r16,r16,21664
    8d9c:	2023883a 	mov	r17,r4
    8da0:	300b883a 	mov	r5,r6
    8da4:	1009883a 	mov	r4,r2
    8da8:	dfc00215 	stw	ra,8(sp)
    8dac:	80000015 	stw	zero,0(r16)
    8db0:	000d18c0 	call	d18c <fstat>
    8db4:	00ffffc4 	movi	r3,-1
    8db8:	10c00526 	beq	r2,r3,8dd0 <_fstat_r+0x4c>
    8dbc:	dfc00217 	ldw	ra,8(sp)
    8dc0:	dc400117 	ldw	r17,4(sp)
    8dc4:	dc000017 	ldw	r16,0(sp)
    8dc8:	dec00304 	addi	sp,sp,12
    8dcc:	f800283a 	ret
    8dd0:	80c00017 	ldw	r3,0(r16)
    8dd4:	183ff926 	beq	r3,zero,8dbc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008dbc>
    8dd8:	88c00015 	stw	r3,0(r17)
    8ddc:	003ff706 	br	8dbc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008dbc>

00008de0 <__sfvwrite_r>:
    8de0:	30800217 	ldw	r2,8(r6)
    8de4:	10006726 	beq	r2,zero,8f84 <__sfvwrite_r+0x1a4>
    8de8:	28c0030b 	ldhu	r3,12(r5)
    8dec:	defff404 	addi	sp,sp,-48
    8df0:	dd400715 	stw	r21,28(sp)
    8df4:	dd000615 	stw	r20,24(sp)
    8df8:	dc000215 	stw	r16,8(sp)
    8dfc:	dfc00b15 	stw	ra,44(sp)
    8e00:	df000a15 	stw	fp,40(sp)
    8e04:	ddc00915 	stw	r23,36(sp)
    8e08:	dd800815 	stw	r22,32(sp)
    8e0c:	dcc00515 	stw	r19,20(sp)
    8e10:	dc800415 	stw	r18,16(sp)
    8e14:	dc400315 	stw	r17,12(sp)
    8e18:	1880020c 	andi	r2,r3,8
    8e1c:	2821883a 	mov	r16,r5
    8e20:	202b883a 	mov	r21,r4
    8e24:	3029883a 	mov	r20,r6
    8e28:	10002726 	beq	r2,zero,8ec8 <__sfvwrite_r+0xe8>
    8e2c:	28800417 	ldw	r2,16(r5)
    8e30:	10002526 	beq	r2,zero,8ec8 <__sfvwrite_r+0xe8>
    8e34:	1880008c 	andi	r2,r3,2
    8e38:	a4400017 	ldw	r17,0(r20)
    8e3c:	10002a26 	beq	r2,zero,8ee8 <__sfvwrite_r+0x108>
    8e40:	05a00034 	movhi	r22,32768
    8e44:	0027883a 	mov	r19,zero
    8e48:	0025883a 	mov	r18,zero
    8e4c:	b5bf0004 	addi	r22,r22,-1024
    8e50:	980d883a 	mov	r6,r19
    8e54:	a809883a 	mov	r4,r21
    8e58:	90004626 	beq	r18,zero,8f74 <__sfvwrite_r+0x194>
    8e5c:	900f883a 	mov	r7,r18
    8e60:	b480022e 	bgeu	r22,r18,8e6c <__sfvwrite_r+0x8c>
    8e64:	01e00034 	movhi	r7,32768
    8e68:	39ff0004 	addi	r7,r7,-1024
    8e6c:	80800917 	ldw	r2,36(r16)
    8e70:	81400717 	ldw	r5,28(r16)
    8e74:	103ee83a 	callr	r2
    8e78:	0080570e 	bge	zero,r2,8fd8 <__sfvwrite_r+0x1f8>
    8e7c:	a0c00217 	ldw	r3,8(r20)
    8e80:	98a7883a 	add	r19,r19,r2
    8e84:	90a5c83a 	sub	r18,r18,r2
    8e88:	1885c83a 	sub	r2,r3,r2
    8e8c:	a0800215 	stw	r2,8(r20)
    8e90:	103fef1e 	bne	r2,zero,8e50 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008e50>
    8e94:	0005883a 	mov	r2,zero
    8e98:	dfc00b17 	ldw	ra,44(sp)
    8e9c:	df000a17 	ldw	fp,40(sp)
    8ea0:	ddc00917 	ldw	r23,36(sp)
    8ea4:	dd800817 	ldw	r22,32(sp)
    8ea8:	dd400717 	ldw	r21,28(sp)
    8eac:	dd000617 	ldw	r20,24(sp)
    8eb0:	dcc00517 	ldw	r19,20(sp)
    8eb4:	dc800417 	ldw	r18,16(sp)
    8eb8:	dc400317 	ldw	r17,12(sp)
    8ebc:	dc000217 	ldw	r16,8(sp)
    8ec0:	dec00c04 	addi	sp,sp,48
    8ec4:	f800283a 	ret
    8ec8:	800b883a 	mov	r5,r16
    8ecc:	a809883a 	mov	r4,r21
    8ed0:	0002b6c0 	call	2b6c <__swsetup_r>
    8ed4:	1000eb1e 	bne	r2,zero,9284 <__sfvwrite_r+0x4a4>
    8ed8:	80c0030b 	ldhu	r3,12(r16)
    8edc:	a4400017 	ldw	r17,0(r20)
    8ee0:	1880008c 	andi	r2,r3,2
    8ee4:	103fd61e 	bne	r2,zero,8e40 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008e40>
    8ee8:	1880004c 	andi	r2,r3,1
    8eec:	10003f1e 	bne	r2,zero,8fec <__sfvwrite_r+0x20c>
    8ef0:	0039883a 	mov	fp,zero
    8ef4:	0025883a 	mov	r18,zero
    8ef8:	90001a26 	beq	r18,zero,8f64 <__sfvwrite_r+0x184>
    8efc:	1880800c 	andi	r2,r3,512
    8f00:	84c00217 	ldw	r19,8(r16)
    8f04:	10002126 	beq	r2,zero,8f8c <__sfvwrite_r+0x1ac>
    8f08:	982f883a 	mov	r23,r19
    8f0c:	94c09336 	bltu	r18,r19,915c <__sfvwrite_r+0x37c>
    8f10:	1881200c 	andi	r2,r3,1152
    8f14:	10009e1e 	bne	r2,zero,9190 <__sfvwrite_r+0x3b0>
    8f18:	81000017 	ldw	r4,0(r16)
    8f1c:	b80d883a 	mov	r6,r23
    8f20:	e00b883a 	mov	r5,fp
    8f24:	00093500 	call	9350 <memmove>
    8f28:	80c00217 	ldw	r3,8(r16)
    8f2c:	81000017 	ldw	r4,0(r16)
    8f30:	9005883a 	mov	r2,r18
    8f34:	1ce7c83a 	sub	r19,r3,r19
    8f38:	25cf883a 	add	r7,r4,r23
    8f3c:	84c00215 	stw	r19,8(r16)
    8f40:	81c00015 	stw	r7,0(r16)
    8f44:	a0c00217 	ldw	r3,8(r20)
    8f48:	e0b9883a 	add	fp,fp,r2
    8f4c:	90a5c83a 	sub	r18,r18,r2
    8f50:	18a7c83a 	sub	r19,r3,r2
    8f54:	a4c00215 	stw	r19,8(r20)
    8f58:	983fce26 	beq	r19,zero,8e94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008e94>
    8f5c:	80c0030b 	ldhu	r3,12(r16)
    8f60:	903fe61e 	bne	r18,zero,8efc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008efc>
    8f64:	8f000017 	ldw	fp,0(r17)
    8f68:	8c800117 	ldw	r18,4(r17)
    8f6c:	8c400204 	addi	r17,r17,8
    8f70:	003fe106 	br	8ef8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008ef8>
    8f74:	8cc00017 	ldw	r19,0(r17)
    8f78:	8c800117 	ldw	r18,4(r17)
    8f7c:	8c400204 	addi	r17,r17,8
    8f80:	003fb306 	br	8e50 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008e50>
    8f84:	0005883a 	mov	r2,zero
    8f88:	f800283a 	ret
    8f8c:	81000017 	ldw	r4,0(r16)
    8f90:	80800417 	ldw	r2,16(r16)
    8f94:	11005736 	bltu	r2,r4,90f4 <__sfvwrite_r+0x314>
    8f98:	85c00517 	ldw	r23,20(r16)
    8f9c:	95c05536 	bltu	r18,r23,90f4 <__sfvwrite_r+0x314>
    8fa0:	00a00034 	movhi	r2,32768
    8fa4:	10bfffc4 	addi	r2,r2,-1
    8fa8:	9009883a 	mov	r4,r18
    8fac:	1480012e 	bgeu	r2,r18,8fb4 <__sfvwrite_r+0x1d4>
    8fb0:	1009883a 	mov	r4,r2
    8fb4:	b80b883a 	mov	r5,r23
    8fb8:	000a8600 	call	a860 <__divsi3>
    8fbc:	15cf383a 	mul	r7,r2,r23
    8fc0:	81400717 	ldw	r5,28(r16)
    8fc4:	80800917 	ldw	r2,36(r16)
    8fc8:	e00d883a 	mov	r6,fp
    8fcc:	a809883a 	mov	r4,r21
    8fd0:	103ee83a 	callr	r2
    8fd4:	00bfdb16 	blt	zero,r2,8f44 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008f44>
    8fd8:	8080030b 	ldhu	r2,12(r16)
    8fdc:	10801014 	ori	r2,r2,64
    8fe0:	8080030d 	sth	r2,12(r16)
    8fe4:	00bfffc4 	movi	r2,-1
    8fe8:	003fab06 	br	8e98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008e98>
    8fec:	0027883a 	mov	r19,zero
    8ff0:	0011883a 	mov	r8,zero
    8ff4:	0039883a 	mov	fp,zero
    8ff8:	0025883a 	mov	r18,zero
    8ffc:	90001f26 	beq	r18,zero,907c <__sfvwrite_r+0x29c>
    9000:	40005a26 	beq	r8,zero,916c <__sfvwrite_r+0x38c>
    9004:	982d883a 	mov	r22,r19
    9008:	94c0012e 	bgeu	r18,r19,9010 <__sfvwrite_r+0x230>
    900c:	902d883a 	mov	r22,r18
    9010:	81000017 	ldw	r4,0(r16)
    9014:	80800417 	ldw	r2,16(r16)
    9018:	b02f883a 	mov	r23,r22
    901c:	81c00517 	ldw	r7,20(r16)
    9020:	1100032e 	bgeu	r2,r4,9030 <__sfvwrite_r+0x250>
    9024:	80c00217 	ldw	r3,8(r16)
    9028:	38c7883a 	add	r3,r7,r3
    902c:	1d801816 	blt	r3,r22,9090 <__sfvwrite_r+0x2b0>
    9030:	b1c03e16 	blt	r22,r7,912c <__sfvwrite_r+0x34c>
    9034:	80800917 	ldw	r2,36(r16)
    9038:	81400717 	ldw	r5,28(r16)
    903c:	e00d883a 	mov	r6,fp
    9040:	da000115 	stw	r8,4(sp)
    9044:	a809883a 	mov	r4,r21
    9048:	103ee83a 	callr	r2
    904c:	102f883a 	mov	r23,r2
    9050:	da000117 	ldw	r8,4(sp)
    9054:	00bfe00e 	bge	zero,r2,8fd8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008fd8>
    9058:	9de7c83a 	sub	r19,r19,r23
    905c:	98001f26 	beq	r19,zero,90dc <__sfvwrite_r+0x2fc>
    9060:	a0800217 	ldw	r2,8(r20)
    9064:	e5f9883a 	add	fp,fp,r23
    9068:	95e5c83a 	sub	r18,r18,r23
    906c:	15efc83a 	sub	r23,r2,r23
    9070:	a5c00215 	stw	r23,8(r20)
    9074:	b83f8726 	beq	r23,zero,8e94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008e94>
    9078:	903fe11e 	bne	r18,zero,9000 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009000>
    907c:	8f000017 	ldw	fp,0(r17)
    9080:	8c800117 	ldw	r18,4(r17)
    9084:	0011883a 	mov	r8,zero
    9088:	8c400204 	addi	r17,r17,8
    908c:	003fdb06 	br	8ffc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008ffc>
    9090:	180d883a 	mov	r6,r3
    9094:	e00b883a 	mov	r5,fp
    9098:	da000115 	stw	r8,4(sp)
    909c:	d8c00015 	stw	r3,0(sp)
    90a0:	00093500 	call	9350 <memmove>
    90a4:	d8c00017 	ldw	r3,0(sp)
    90a8:	80800017 	ldw	r2,0(r16)
    90ac:	800b883a 	mov	r5,r16
    90b0:	a809883a 	mov	r4,r21
    90b4:	10c5883a 	add	r2,r2,r3
    90b8:	80800015 	stw	r2,0(r16)
    90bc:	d8c00015 	stw	r3,0(sp)
    90c0:	00047640 	call	4764 <_fflush_r>
    90c4:	d8c00017 	ldw	r3,0(sp)
    90c8:	da000117 	ldw	r8,4(sp)
    90cc:	103fc21e 	bne	r2,zero,8fd8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008fd8>
    90d0:	182f883a 	mov	r23,r3
    90d4:	9de7c83a 	sub	r19,r19,r23
    90d8:	983fe11e 	bne	r19,zero,9060 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009060>
    90dc:	800b883a 	mov	r5,r16
    90e0:	a809883a 	mov	r4,r21
    90e4:	00047640 	call	4764 <_fflush_r>
    90e8:	103fbb1e 	bne	r2,zero,8fd8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008fd8>
    90ec:	0011883a 	mov	r8,zero
    90f0:	003fdb06 	br	9060 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009060>
    90f4:	94c0012e 	bgeu	r18,r19,90fc <__sfvwrite_r+0x31c>
    90f8:	9027883a 	mov	r19,r18
    90fc:	980d883a 	mov	r6,r19
    9100:	e00b883a 	mov	r5,fp
    9104:	00093500 	call	9350 <memmove>
    9108:	80800217 	ldw	r2,8(r16)
    910c:	80c00017 	ldw	r3,0(r16)
    9110:	14c5c83a 	sub	r2,r2,r19
    9114:	1cc7883a 	add	r3,r3,r19
    9118:	80800215 	stw	r2,8(r16)
    911c:	80c00015 	stw	r3,0(r16)
    9120:	10004326 	beq	r2,zero,9230 <__sfvwrite_r+0x450>
    9124:	9805883a 	mov	r2,r19
    9128:	003f8606 	br	8f44 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008f44>
    912c:	b00d883a 	mov	r6,r22
    9130:	e00b883a 	mov	r5,fp
    9134:	da000115 	stw	r8,4(sp)
    9138:	00093500 	call	9350 <memmove>
    913c:	80800217 	ldw	r2,8(r16)
    9140:	80c00017 	ldw	r3,0(r16)
    9144:	da000117 	ldw	r8,4(sp)
    9148:	1585c83a 	sub	r2,r2,r22
    914c:	1dad883a 	add	r22,r3,r22
    9150:	80800215 	stw	r2,8(r16)
    9154:	85800015 	stw	r22,0(r16)
    9158:	003fbf06 	br	9058 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009058>
    915c:	81000017 	ldw	r4,0(r16)
    9160:	9027883a 	mov	r19,r18
    9164:	902f883a 	mov	r23,r18
    9168:	003f6c06 	br	8f1c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008f1c>
    916c:	900d883a 	mov	r6,r18
    9170:	01400284 	movi	r5,10
    9174:	e009883a 	mov	r4,fp
    9178:	0005bf00 	call	5bf0 <memchr>
    917c:	10003e26 	beq	r2,zero,9278 <__sfvwrite_r+0x498>
    9180:	10800044 	addi	r2,r2,1
    9184:	1727c83a 	sub	r19,r2,fp
    9188:	02000044 	movi	r8,1
    918c:	003f9d06 	br	9004 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009004>
    9190:	80800517 	ldw	r2,20(r16)
    9194:	81400417 	ldw	r5,16(r16)
    9198:	81c00017 	ldw	r7,0(r16)
    919c:	10a7883a 	add	r19,r2,r2
    91a0:	9885883a 	add	r2,r19,r2
    91a4:	1026d7fa 	srli	r19,r2,31
    91a8:	396dc83a 	sub	r22,r7,r5
    91ac:	b1000044 	addi	r4,r22,1
    91b0:	9885883a 	add	r2,r19,r2
    91b4:	1027d07a 	srai	r19,r2,1
    91b8:	2485883a 	add	r2,r4,r18
    91bc:	980d883a 	mov	r6,r19
    91c0:	9880022e 	bgeu	r19,r2,91cc <__sfvwrite_r+0x3ec>
    91c4:	1027883a 	mov	r19,r2
    91c8:	100d883a 	mov	r6,r2
    91cc:	18c1000c 	andi	r3,r3,1024
    91d0:	18001c26 	beq	r3,zero,9244 <__sfvwrite_r+0x464>
    91d4:	300b883a 	mov	r5,r6
    91d8:	a809883a 	mov	r4,r21
    91dc:	00053e40 	call	53e4 <_malloc_r>
    91e0:	102f883a 	mov	r23,r2
    91e4:	10002926 	beq	r2,zero,928c <__sfvwrite_r+0x4ac>
    91e8:	81400417 	ldw	r5,16(r16)
    91ec:	b00d883a 	mov	r6,r22
    91f0:	1009883a 	mov	r4,r2
    91f4:	0005cd40 	call	5cd4 <memcpy>
    91f8:	8080030b 	ldhu	r2,12(r16)
    91fc:	00fedfc4 	movi	r3,-1153
    9200:	10c4703a 	and	r2,r2,r3
    9204:	10802014 	ori	r2,r2,128
    9208:	8080030d 	sth	r2,12(r16)
    920c:	bd89883a 	add	r4,r23,r22
    9210:	9d8fc83a 	sub	r7,r19,r22
    9214:	85c00415 	stw	r23,16(r16)
    9218:	84c00515 	stw	r19,20(r16)
    921c:	81000015 	stw	r4,0(r16)
    9220:	9027883a 	mov	r19,r18
    9224:	81c00215 	stw	r7,8(r16)
    9228:	902f883a 	mov	r23,r18
    922c:	003f3b06 	br	8f1c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008f1c>
    9230:	800b883a 	mov	r5,r16
    9234:	a809883a 	mov	r4,r21
    9238:	00047640 	call	4764 <_fflush_r>
    923c:	103fb926 	beq	r2,zero,9124 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009124>
    9240:	003f6506 	br	8fd8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008fd8>
    9244:	a809883a 	mov	r4,r21
    9248:	000950c0 	call	950c <_realloc_r>
    924c:	102f883a 	mov	r23,r2
    9250:	103fee1e 	bne	r2,zero,920c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700920c>
    9254:	81400417 	ldw	r5,16(r16)
    9258:	a809883a 	mov	r4,r21
    925c:	0004cb40 	call	4cb4 <_free_r>
    9260:	8080030b 	ldhu	r2,12(r16)
    9264:	00ffdfc4 	movi	r3,-129
    9268:	1884703a 	and	r2,r3,r2
    926c:	00c00304 	movi	r3,12
    9270:	a8c00015 	stw	r3,0(r21)
    9274:	003f5906 	br	8fdc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008fdc>
    9278:	94c00044 	addi	r19,r18,1
    927c:	02000044 	movi	r8,1
    9280:	003f6006 	br	9004 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009004>
    9284:	00bfffc4 	movi	r2,-1
    9288:	003f0306 	br	8e98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008e98>
    928c:	00800304 	movi	r2,12
    9290:	a8800015 	stw	r2,0(r21)
    9294:	8080030b 	ldhu	r2,12(r16)
    9298:	003f5006 	br	8fdc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008fdc>

0000929c <_isatty_r>:
    929c:	defffd04 	addi	sp,sp,-12
    92a0:	dc000015 	stw	r16,0(sp)
    92a4:	04000074 	movhi	r16,1
    92a8:	dc400115 	stw	r17,4(sp)
    92ac:	84152804 	addi	r16,r16,21664
    92b0:	2023883a 	mov	r17,r4
    92b4:	2809883a 	mov	r4,r5
    92b8:	dfc00215 	stw	ra,8(sp)
    92bc:	80000015 	stw	zero,0(r16)
    92c0:	000d44c0 	call	d44c <isatty>
    92c4:	00ffffc4 	movi	r3,-1
    92c8:	10c00526 	beq	r2,r3,92e0 <_isatty_r+0x44>
    92cc:	dfc00217 	ldw	ra,8(sp)
    92d0:	dc400117 	ldw	r17,4(sp)
    92d4:	dc000017 	ldw	r16,0(sp)
    92d8:	dec00304 	addi	sp,sp,12
    92dc:	f800283a 	ret
    92e0:	80c00017 	ldw	r3,0(r16)
    92e4:	183ff926 	beq	r3,zero,92cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70092cc>
    92e8:	88c00015 	stw	r3,0(r17)
    92ec:	003ff706 	br	92cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70092cc>

000092f0 <_lseek_r>:
    92f0:	defffd04 	addi	sp,sp,-12
    92f4:	2805883a 	mov	r2,r5
    92f8:	dc000015 	stw	r16,0(sp)
    92fc:	04000074 	movhi	r16,1
    9300:	dc400115 	stw	r17,4(sp)
    9304:	300b883a 	mov	r5,r6
    9308:	84152804 	addi	r16,r16,21664
    930c:	2023883a 	mov	r17,r4
    9310:	380d883a 	mov	r6,r7
    9314:	1009883a 	mov	r4,r2
    9318:	dfc00215 	stw	ra,8(sp)
    931c:	80000015 	stw	zero,0(r16)
    9320:	000d6180 	call	d618 <lseek>
    9324:	00ffffc4 	movi	r3,-1
    9328:	10c00526 	beq	r2,r3,9340 <_lseek_r+0x50>
    932c:	dfc00217 	ldw	ra,8(sp)
    9330:	dc400117 	ldw	r17,4(sp)
    9334:	dc000017 	ldw	r16,0(sp)
    9338:	dec00304 	addi	sp,sp,12
    933c:	f800283a 	ret
    9340:	80c00017 	ldw	r3,0(r16)
    9344:	183ff926 	beq	r3,zero,932c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700932c>
    9348:	88c00015 	stw	r3,0(r17)
    934c:	003ff706 	br	932c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700932c>

00009350 <memmove>:
    9350:	2005883a 	mov	r2,r4
    9354:	29000b2e 	bgeu	r5,r4,9384 <memmove+0x34>
    9358:	298f883a 	add	r7,r5,r6
    935c:	21c0092e 	bgeu	r4,r7,9384 <memmove+0x34>
    9360:	2187883a 	add	r3,r4,r6
    9364:	198bc83a 	sub	r5,r3,r6
    9368:	30004826 	beq	r6,zero,948c <memmove+0x13c>
    936c:	39ffffc4 	addi	r7,r7,-1
    9370:	39000003 	ldbu	r4,0(r7)
    9374:	18ffffc4 	addi	r3,r3,-1
    9378:	19000005 	stb	r4,0(r3)
    937c:	28fffb1e 	bne	r5,r3,936c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700936c>
    9380:	f800283a 	ret
    9384:	00c003c4 	movi	r3,15
    9388:	1980412e 	bgeu	r3,r6,9490 <memmove+0x140>
    938c:	2886b03a 	or	r3,r5,r2
    9390:	18c000cc 	andi	r3,r3,3
    9394:	1800401e 	bne	r3,zero,9498 <memmove+0x148>
    9398:	33fffc04 	addi	r15,r6,-16
    939c:	781ed13a 	srli	r15,r15,4
    93a0:	28c00104 	addi	r3,r5,4
    93a4:	13400104 	addi	r13,r2,4
    93a8:	781c913a 	slli	r14,r15,4
    93ac:	2b000204 	addi	r12,r5,8
    93b0:	12c00204 	addi	r11,r2,8
    93b4:	73800504 	addi	r14,r14,20
    93b8:	2a800304 	addi	r10,r5,12
    93bc:	12400304 	addi	r9,r2,12
    93c0:	2b9d883a 	add	r14,r5,r14
    93c4:	2811883a 	mov	r8,r5
    93c8:	100f883a 	mov	r7,r2
    93cc:	41000017 	ldw	r4,0(r8)
    93d0:	39c00404 	addi	r7,r7,16
    93d4:	18c00404 	addi	r3,r3,16
    93d8:	393ffc15 	stw	r4,-16(r7)
    93dc:	193ffc17 	ldw	r4,-16(r3)
    93e0:	6b400404 	addi	r13,r13,16
    93e4:	5ac00404 	addi	r11,r11,16
    93e8:	693ffc15 	stw	r4,-16(r13)
    93ec:	61000017 	ldw	r4,0(r12)
    93f0:	4a400404 	addi	r9,r9,16
    93f4:	42000404 	addi	r8,r8,16
    93f8:	593ffc15 	stw	r4,-16(r11)
    93fc:	51000017 	ldw	r4,0(r10)
    9400:	63000404 	addi	r12,r12,16
    9404:	52800404 	addi	r10,r10,16
    9408:	493ffc15 	stw	r4,-16(r9)
    940c:	1bbfef1e 	bne	r3,r14,93cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70093cc>
    9410:	79000044 	addi	r4,r15,1
    9414:	2008913a 	slli	r4,r4,4
    9418:	328003cc 	andi	r10,r6,15
    941c:	02c000c4 	movi	r11,3
    9420:	1107883a 	add	r3,r2,r4
    9424:	290b883a 	add	r5,r5,r4
    9428:	5a801e2e 	bgeu	r11,r10,94a4 <memmove+0x154>
    942c:	1813883a 	mov	r9,r3
    9430:	2811883a 	mov	r8,r5
    9434:	500f883a 	mov	r7,r10
    9438:	41000017 	ldw	r4,0(r8)
    943c:	4a400104 	addi	r9,r9,4
    9440:	39ffff04 	addi	r7,r7,-4
    9444:	493fff15 	stw	r4,-4(r9)
    9448:	42000104 	addi	r8,r8,4
    944c:	59fffa36 	bltu	r11,r7,9438 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009438>
    9450:	513fff04 	addi	r4,r10,-4
    9454:	2008d0ba 	srli	r4,r4,2
    9458:	318000cc 	andi	r6,r6,3
    945c:	21000044 	addi	r4,r4,1
    9460:	2109883a 	add	r4,r4,r4
    9464:	2109883a 	add	r4,r4,r4
    9468:	1907883a 	add	r3,r3,r4
    946c:	290b883a 	add	r5,r5,r4
    9470:	30000b26 	beq	r6,zero,94a0 <memmove+0x150>
    9474:	198d883a 	add	r6,r3,r6
    9478:	29c00003 	ldbu	r7,0(r5)
    947c:	18c00044 	addi	r3,r3,1
    9480:	29400044 	addi	r5,r5,1
    9484:	19ffffc5 	stb	r7,-1(r3)
    9488:	19bffb1e 	bne	r3,r6,9478 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009478>
    948c:	f800283a 	ret
    9490:	1007883a 	mov	r3,r2
    9494:	003ff606 	br	9470 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009470>
    9498:	1007883a 	mov	r3,r2
    949c:	003ff506 	br	9474 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009474>
    94a0:	f800283a 	ret
    94a4:	500d883a 	mov	r6,r10
    94a8:	003ff106 	br	9470 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009470>

000094ac <_read_r>:
    94ac:	defffd04 	addi	sp,sp,-12
    94b0:	2805883a 	mov	r2,r5
    94b4:	dc000015 	stw	r16,0(sp)
    94b8:	04000074 	movhi	r16,1
    94bc:	dc400115 	stw	r17,4(sp)
    94c0:	300b883a 	mov	r5,r6
    94c4:	84152804 	addi	r16,r16,21664
    94c8:	2023883a 	mov	r17,r4
    94cc:	380d883a 	mov	r6,r7
    94d0:	1009883a 	mov	r4,r2
    94d4:	dfc00215 	stw	ra,8(sp)
    94d8:	80000015 	stw	zero,0(r16)
    94dc:	000d7ec0 	call	d7ec <read>
    94e0:	00ffffc4 	movi	r3,-1
    94e4:	10c00526 	beq	r2,r3,94fc <_read_r+0x50>
    94e8:	dfc00217 	ldw	ra,8(sp)
    94ec:	dc400117 	ldw	r17,4(sp)
    94f0:	dc000017 	ldw	r16,0(sp)
    94f4:	dec00304 	addi	sp,sp,12
    94f8:	f800283a 	ret
    94fc:	80c00017 	ldw	r3,0(r16)
    9500:	183ff926 	beq	r3,zero,94e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70094e8>
    9504:	88c00015 	stw	r3,0(r17)
    9508:	003ff706 	br	94e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70094e8>

0000950c <_realloc_r>:
    950c:	defff604 	addi	sp,sp,-40
    9510:	dc800215 	stw	r18,8(sp)
    9514:	dfc00915 	stw	ra,36(sp)
    9518:	df000815 	stw	fp,32(sp)
    951c:	ddc00715 	stw	r23,28(sp)
    9520:	dd800615 	stw	r22,24(sp)
    9524:	dd400515 	stw	r21,20(sp)
    9528:	dd000415 	stw	r20,16(sp)
    952c:	dcc00315 	stw	r19,12(sp)
    9530:	dc400115 	stw	r17,4(sp)
    9534:	dc000015 	stw	r16,0(sp)
    9538:	3025883a 	mov	r18,r6
    953c:	2800b726 	beq	r5,zero,981c <_realloc_r+0x310>
    9540:	282b883a 	mov	r21,r5
    9544:	2029883a 	mov	r20,r4
    9548:	000d7680 	call	d768 <__malloc_lock>
    954c:	a8bfff17 	ldw	r2,-4(r21)
    9550:	043fff04 	movi	r16,-4
    9554:	90c002c4 	addi	r3,r18,11
    9558:	01000584 	movi	r4,22
    955c:	acfffe04 	addi	r19,r21,-8
    9560:	1420703a 	and	r16,r2,r16
    9564:	20c0332e 	bgeu	r4,r3,9634 <_realloc_r+0x128>
    9568:	047ffe04 	movi	r17,-8
    956c:	1c62703a 	and	r17,r3,r17
    9570:	8807883a 	mov	r3,r17
    9574:	88005816 	blt	r17,zero,96d8 <_realloc_r+0x1cc>
    9578:	8c805736 	bltu	r17,r18,96d8 <_realloc_r+0x1cc>
    957c:	80c0300e 	bge	r16,r3,9640 <_realloc_r+0x134>
    9580:	07000074 	movhi	fp,1
    9584:	e7074704 	addi	fp,fp,7452
    9588:	e1c00217 	ldw	r7,8(fp)
    958c:	9c09883a 	add	r4,r19,r16
    9590:	22000117 	ldw	r8,4(r4)
    9594:	21c06326 	beq	r4,r7,9724 <_realloc_r+0x218>
    9598:	017fff84 	movi	r5,-2
    959c:	414a703a 	and	r5,r8,r5
    95a0:	214b883a 	add	r5,r4,r5
    95a4:	29800117 	ldw	r6,4(r5)
    95a8:	3180004c 	andi	r6,r6,1
    95ac:	30003f26 	beq	r6,zero,96ac <_realloc_r+0x1a0>
    95b0:	1080004c 	andi	r2,r2,1
    95b4:	10008326 	beq	r2,zero,97c4 <_realloc_r+0x2b8>
    95b8:	900b883a 	mov	r5,r18
    95bc:	a009883a 	mov	r4,r20
    95c0:	00053e40 	call	53e4 <_malloc_r>
    95c4:	1025883a 	mov	r18,r2
    95c8:	10011e26 	beq	r2,zero,9a44 <_realloc_r+0x538>
    95cc:	a93fff17 	ldw	r4,-4(r21)
    95d0:	10fffe04 	addi	r3,r2,-8
    95d4:	00bfff84 	movi	r2,-2
    95d8:	2084703a 	and	r2,r4,r2
    95dc:	9885883a 	add	r2,r19,r2
    95e0:	1880ee26 	beq	r3,r2,999c <_realloc_r+0x490>
    95e4:	81bfff04 	addi	r6,r16,-4
    95e8:	00800904 	movi	r2,36
    95ec:	1180b836 	bltu	r2,r6,98d0 <_realloc_r+0x3c4>
    95f0:	00c004c4 	movi	r3,19
    95f4:	19809636 	bltu	r3,r6,9850 <_realloc_r+0x344>
    95f8:	9005883a 	mov	r2,r18
    95fc:	a807883a 	mov	r3,r21
    9600:	19000017 	ldw	r4,0(r3)
    9604:	11000015 	stw	r4,0(r2)
    9608:	19000117 	ldw	r4,4(r3)
    960c:	11000115 	stw	r4,4(r2)
    9610:	18c00217 	ldw	r3,8(r3)
    9614:	10c00215 	stw	r3,8(r2)
    9618:	a80b883a 	mov	r5,r21
    961c:	a009883a 	mov	r4,r20
    9620:	0004cb40 	call	4cb4 <_free_r>
    9624:	a009883a 	mov	r4,r20
    9628:	000d78c0 	call	d78c <__malloc_unlock>
    962c:	9005883a 	mov	r2,r18
    9630:	00001206 	br	967c <_realloc_r+0x170>
    9634:	00c00404 	movi	r3,16
    9638:	1823883a 	mov	r17,r3
    963c:	003fce06 	br	9578 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009578>
    9640:	a825883a 	mov	r18,r21
    9644:	8445c83a 	sub	r2,r16,r17
    9648:	00c003c4 	movi	r3,15
    964c:	18802636 	bltu	r3,r2,96e8 <_realloc_r+0x1dc>
    9650:	99800117 	ldw	r6,4(r19)
    9654:	9c07883a 	add	r3,r19,r16
    9658:	3180004c 	andi	r6,r6,1
    965c:	3420b03a 	or	r16,r6,r16
    9660:	9c000115 	stw	r16,4(r19)
    9664:	18800117 	ldw	r2,4(r3)
    9668:	10800054 	ori	r2,r2,1
    966c:	18800115 	stw	r2,4(r3)
    9670:	a009883a 	mov	r4,r20
    9674:	000d78c0 	call	d78c <__malloc_unlock>
    9678:	9005883a 	mov	r2,r18
    967c:	dfc00917 	ldw	ra,36(sp)
    9680:	df000817 	ldw	fp,32(sp)
    9684:	ddc00717 	ldw	r23,28(sp)
    9688:	dd800617 	ldw	r22,24(sp)
    968c:	dd400517 	ldw	r21,20(sp)
    9690:	dd000417 	ldw	r20,16(sp)
    9694:	dcc00317 	ldw	r19,12(sp)
    9698:	dc800217 	ldw	r18,8(sp)
    969c:	dc400117 	ldw	r17,4(sp)
    96a0:	dc000017 	ldw	r16,0(sp)
    96a4:	dec00a04 	addi	sp,sp,40
    96a8:	f800283a 	ret
    96ac:	017fff04 	movi	r5,-4
    96b0:	414a703a 	and	r5,r8,r5
    96b4:	814d883a 	add	r6,r16,r5
    96b8:	30c01f16 	blt	r6,r3,9738 <_realloc_r+0x22c>
    96bc:	20800317 	ldw	r2,12(r4)
    96c0:	20c00217 	ldw	r3,8(r4)
    96c4:	a825883a 	mov	r18,r21
    96c8:	3021883a 	mov	r16,r6
    96cc:	18800315 	stw	r2,12(r3)
    96d0:	10c00215 	stw	r3,8(r2)
    96d4:	003fdb06 	br	9644 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009644>
    96d8:	00800304 	movi	r2,12
    96dc:	a0800015 	stw	r2,0(r20)
    96e0:	0005883a 	mov	r2,zero
    96e4:	003fe506 	br	967c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700967c>
    96e8:	98c00117 	ldw	r3,4(r19)
    96ec:	9c4b883a 	add	r5,r19,r17
    96f0:	11000054 	ori	r4,r2,1
    96f4:	18c0004c 	andi	r3,r3,1
    96f8:	1c62b03a 	or	r17,r3,r17
    96fc:	9c400115 	stw	r17,4(r19)
    9700:	29000115 	stw	r4,4(r5)
    9704:	2885883a 	add	r2,r5,r2
    9708:	10c00117 	ldw	r3,4(r2)
    970c:	29400204 	addi	r5,r5,8
    9710:	a009883a 	mov	r4,r20
    9714:	18c00054 	ori	r3,r3,1
    9718:	10c00115 	stw	r3,4(r2)
    971c:	0004cb40 	call	4cb4 <_free_r>
    9720:	003fd306 	br	9670 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009670>
    9724:	017fff04 	movi	r5,-4
    9728:	414a703a 	and	r5,r8,r5
    972c:	89800404 	addi	r6,r17,16
    9730:	8151883a 	add	r8,r16,r5
    9734:	4180590e 	bge	r8,r6,989c <_realloc_r+0x390>
    9738:	1080004c 	andi	r2,r2,1
    973c:	103f9e1e 	bne	r2,zero,95b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70095b8>
    9740:	adbffe17 	ldw	r22,-8(r21)
    9744:	00bfff04 	movi	r2,-4
    9748:	9dadc83a 	sub	r22,r19,r22
    974c:	b1800117 	ldw	r6,4(r22)
    9750:	3084703a 	and	r2,r6,r2
    9754:	20002026 	beq	r4,zero,97d8 <_realloc_r+0x2cc>
    9758:	80af883a 	add	r23,r16,r2
    975c:	b96f883a 	add	r23,r23,r5
    9760:	21c05f26 	beq	r4,r7,98e0 <_realloc_r+0x3d4>
    9764:	b8c01c16 	blt	r23,r3,97d8 <_realloc_r+0x2cc>
    9768:	20800317 	ldw	r2,12(r4)
    976c:	20c00217 	ldw	r3,8(r4)
    9770:	81bfff04 	addi	r6,r16,-4
    9774:	01000904 	movi	r4,36
    9778:	18800315 	stw	r2,12(r3)
    977c:	10c00215 	stw	r3,8(r2)
    9780:	b0c00217 	ldw	r3,8(r22)
    9784:	b0800317 	ldw	r2,12(r22)
    9788:	b4800204 	addi	r18,r22,8
    978c:	18800315 	stw	r2,12(r3)
    9790:	10c00215 	stw	r3,8(r2)
    9794:	21801b36 	bltu	r4,r6,9804 <_realloc_r+0x2f8>
    9798:	008004c4 	movi	r2,19
    979c:	1180352e 	bgeu	r2,r6,9874 <_realloc_r+0x368>
    97a0:	a8800017 	ldw	r2,0(r21)
    97a4:	b0800215 	stw	r2,8(r22)
    97a8:	a8800117 	ldw	r2,4(r21)
    97ac:	b0800315 	stw	r2,12(r22)
    97b0:	008006c4 	movi	r2,27
    97b4:	11807f36 	bltu	r2,r6,99b4 <_realloc_r+0x4a8>
    97b8:	b0800404 	addi	r2,r22,16
    97bc:	ad400204 	addi	r21,r21,8
    97c0:	00002d06 	br	9878 <_realloc_r+0x36c>
    97c4:	adbffe17 	ldw	r22,-8(r21)
    97c8:	00bfff04 	movi	r2,-4
    97cc:	9dadc83a 	sub	r22,r19,r22
    97d0:	b1000117 	ldw	r4,4(r22)
    97d4:	2084703a 	and	r2,r4,r2
    97d8:	b03f7726 	beq	r22,zero,95b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70095b8>
    97dc:	80af883a 	add	r23,r16,r2
    97e0:	b8ff7516 	blt	r23,r3,95b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70095b8>
    97e4:	b0800317 	ldw	r2,12(r22)
    97e8:	b0c00217 	ldw	r3,8(r22)
    97ec:	81bfff04 	addi	r6,r16,-4
    97f0:	01000904 	movi	r4,36
    97f4:	18800315 	stw	r2,12(r3)
    97f8:	10c00215 	stw	r3,8(r2)
    97fc:	b4800204 	addi	r18,r22,8
    9800:	21bfe52e 	bgeu	r4,r6,9798 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009798>
    9804:	a80b883a 	mov	r5,r21
    9808:	9009883a 	mov	r4,r18
    980c:	00093500 	call	9350 <memmove>
    9810:	b821883a 	mov	r16,r23
    9814:	b027883a 	mov	r19,r22
    9818:	003f8a06 	br	9644 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009644>
    981c:	300b883a 	mov	r5,r6
    9820:	dfc00917 	ldw	ra,36(sp)
    9824:	df000817 	ldw	fp,32(sp)
    9828:	ddc00717 	ldw	r23,28(sp)
    982c:	dd800617 	ldw	r22,24(sp)
    9830:	dd400517 	ldw	r21,20(sp)
    9834:	dd000417 	ldw	r20,16(sp)
    9838:	dcc00317 	ldw	r19,12(sp)
    983c:	dc800217 	ldw	r18,8(sp)
    9840:	dc400117 	ldw	r17,4(sp)
    9844:	dc000017 	ldw	r16,0(sp)
    9848:	dec00a04 	addi	sp,sp,40
    984c:	00053e41 	jmpi	53e4 <_malloc_r>
    9850:	a8c00017 	ldw	r3,0(r21)
    9854:	90c00015 	stw	r3,0(r18)
    9858:	a8c00117 	ldw	r3,4(r21)
    985c:	90c00115 	stw	r3,4(r18)
    9860:	00c006c4 	movi	r3,27
    9864:	19804536 	bltu	r3,r6,997c <_realloc_r+0x470>
    9868:	90800204 	addi	r2,r18,8
    986c:	a8c00204 	addi	r3,r21,8
    9870:	003f6306 	br	9600 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009600>
    9874:	9005883a 	mov	r2,r18
    9878:	a8c00017 	ldw	r3,0(r21)
    987c:	b821883a 	mov	r16,r23
    9880:	b027883a 	mov	r19,r22
    9884:	10c00015 	stw	r3,0(r2)
    9888:	a8c00117 	ldw	r3,4(r21)
    988c:	10c00115 	stw	r3,4(r2)
    9890:	a8c00217 	ldw	r3,8(r21)
    9894:	10c00215 	stw	r3,8(r2)
    9898:	003f6a06 	br	9644 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009644>
    989c:	9c67883a 	add	r19,r19,r17
    98a0:	4445c83a 	sub	r2,r8,r17
    98a4:	e4c00215 	stw	r19,8(fp)
    98a8:	10800054 	ori	r2,r2,1
    98ac:	98800115 	stw	r2,4(r19)
    98b0:	a8bfff17 	ldw	r2,-4(r21)
    98b4:	a009883a 	mov	r4,r20
    98b8:	1080004c 	andi	r2,r2,1
    98bc:	1462b03a 	or	r17,r2,r17
    98c0:	ac7fff15 	stw	r17,-4(r21)
    98c4:	000d78c0 	call	d78c <__malloc_unlock>
    98c8:	a805883a 	mov	r2,r21
    98cc:	003f6b06 	br	967c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700967c>
    98d0:	a80b883a 	mov	r5,r21
    98d4:	9009883a 	mov	r4,r18
    98d8:	00093500 	call	9350 <memmove>
    98dc:	003f4e06 	br	9618 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009618>
    98e0:	89000404 	addi	r4,r17,16
    98e4:	b93fbc16 	blt	r23,r4,97d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70097d8>
    98e8:	b0800317 	ldw	r2,12(r22)
    98ec:	b0c00217 	ldw	r3,8(r22)
    98f0:	81bfff04 	addi	r6,r16,-4
    98f4:	01000904 	movi	r4,36
    98f8:	18800315 	stw	r2,12(r3)
    98fc:	10c00215 	stw	r3,8(r2)
    9900:	b4800204 	addi	r18,r22,8
    9904:	21804336 	bltu	r4,r6,9a14 <_realloc_r+0x508>
    9908:	008004c4 	movi	r2,19
    990c:	11803f2e 	bgeu	r2,r6,9a0c <_realloc_r+0x500>
    9910:	a8800017 	ldw	r2,0(r21)
    9914:	b0800215 	stw	r2,8(r22)
    9918:	a8800117 	ldw	r2,4(r21)
    991c:	b0800315 	stw	r2,12(r22)
    9920:	008006c4 	movi	r2,27
    9924:	11803f36 	bltu	r2,r6,9a24 <_realloc_r+0x518>
    9928:	b0800404 	addi	r2,r22,16
    992c:	ad400204 	addi	r21,r21,8
    9930:	a8c00017 	ldw	r3,0(r21)
    9934:	10c00015 	stw	r3,0(r2)
    9938:	a8c00117 	ldw	r3,4(r21)
    993c:	10c00115 	stw	r3,4(r2)
    9940:	a8c00217 	ldw	r3,8(r21)
    9944:	10c00215 	stw	r3,8(r2)
    9948:	b447883a 	add	r3,r22,r17
    994c:	bc45c83a 	sub	r2,r23,r17
    9950:	e0c00215 	stw	r3,8(fp)
    9954:	10800054 	ori	r2,r2,1
    9958:	18800115 	stw	r2,4(r3)
    995c:	b0800117 	ldw	r2,4(r22)
    9960:	a009883a 	mov	r4,r20
    9964:	1080004c 	andi	r2,r2,1
    9968:	1462b03a 	or	r17,r2,r17
    996c:	b4400115 	stw	r17,4(r22)
    9970:	000d78c0 	call	d78c <__malloc_unlock>
    9974:	9005883a 	mov	r2,r18
    9978:	003f4006 	br	967c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700967c>
    997c:	a8c00217 	ldw	r3,8(r21)
    9980:	90c00215 	stw	r3,8(r18)
    9984:	a8c00317 	ldw	r3,12(r21)
    9988:	90c00315 	stw	r3,12(r18)
    998c:	30801126 	beq	r6,r2,99d4 <_realloc_r+0x4c8>
    9990:	90800404 	addi	r2,r18,16
    9994:	a8c00404 	addi	r3,r21,16
    9998:	003f1906 	br	9600 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009600>
    999c:	90ffff17 	ldw	r3,-4(r18)
    99a0:	00bfff04 	movi	r2,-4
    99a4:	a825883a 	mov	r18,r21
    99a8:	1884703a 	and	r2,r3,r2
    99ac:	80a1883a 	add	r16,r16,r2
    99b0:	003f2406 	br	9644 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009644>
    99b4:	a8800217 	ldw	r2,8(r21)
    99b8:	b0800415 	stw	r2,16(r22)
    99bc:	a8800317 	ldw	r2,12(r21)
    99c0:	b0800515 	stw	r2,20(r22)
    99c4:	31000a26 	beq	r6,r4,99f0 <_realloc_r+0x4e4>
    99c8:	b0800604 	addi	r2,r22,24
    99cc:	ad400404 	addi	r21,r21,16
    99d0:	003fa906 	br	9878 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009878>
    99d4:	a9000417 	ldw	r4,16(r21)
    99d8:	90800604 	addi	r2,r18,24
    99dc:	a8c00604 	addi	r3,r21,24
    99e0:	91000415 	stw	r4,16(r18)
    99e4:	a9000517 	ldw	r4,20(r21)
    99e8:	91000515 	stw	r4,20(r18)
    99ec:	003f0406 	br	9600 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009600>
    99f0:	a8c00417 	ldw	r3,16(r21)
    99f4:	ad400604 	addi	r21,r21,24
    99f8:	b0800804 	addi	r2,r22,32
    99fc:	b0c00615 	stw	r3,24(r22)
    9a00:	a8ffff17 	ldw	r3,-4(r21)
    9a04:	b0c00715 	stw	r3,28(r22)
    9a08:	003f9b06 	br	9878 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009878>
    9a0c:	9005883a 	mov	r2,r18
    9a10:	003fc706 	br	9930 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009930>
    9a14:	a80b883a 	mov	r5,r21
    9a18:	9009883a 	mov	r4,r18
    9a1c:	00093500 	call	9350 <memmove>
    9a20:	003fc906 	br	9948 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009948>
    9a24:	a8800217 	ldw	r2,8(r21)
    9a28:	b0800415 	stw	r2,16(r22)
    9a2c:	a8800317 	ldw	r2,12(r21)
    9a30:	b0800515 	stw	r2,20(r22)
    9a34:	31000726 	beq	r6,r4,9a54 <_realloc_r+0x548>
    9a38:	b0800604 	addi	r2,r22,24
    9a3c:	ad400404 	addi	r21,r21,16
    9a40:	003fbb06 	br	9930 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009930>
    9a44:	a009883a 	mov	r4,r20
    9a48:	000d78c0 	call	d78c <__malloc_unlock>
    9a4c:	0005883a 	mov	r2,zero
    9a50:	003f0a06 	br	967c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700967c>
    9a54:	a8c00417 	ldw	r3,16(r21)
    9a58:	ad400604 	addi	r21,r21,24
    9a5c:	b0800804 	addi	r2,r22,32
    9a60:	b0c00615 	stw	r3,24(r22)
    9a64:	a8ffff17 	ldw	r3,-4(r21)
    9a68:	b0c00715 	stw	r3,28(r22)
    9a6c:	003fb006 	br	9930 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009930>

00009a70 <__swbuf_r>:
    9a70:	defffb04 	addi	sp,sp,-20
    9a74:	dcc00315 	stw	r19,12(sp)
    9a78:	dc800215 	stw	r18,8(sp)
    9a7c:	dc000015 	stw	r16,0(sp)
    9a80:	dfc00415 	stw	ra,16(sp)
    9a84:	dc400115 	stw	r17,4(sp)
    9a88:	2025883a 	mov	r18,r4
    9a8c:	2827883a 	mov	r19,r5
    9a90:	3021883a 	mov	r16,r6
    9a94:	20000226 	beq	r4,zero,9aa0 <__swbuf_r+0x30>
    9a98:	20800e17 	ldw	r2,56(r4)
    9a9c:	10004226 	beq	r2,zero,9ba8 <__swbuf_r+0x138>
    9aa0:	80800617 	ldw	r2,24(r16)
    9aa4:	8100030b 	ldhu	r4,12(r16)
    9aa8:	80800215 	stw	r2,8(r16)
    9aac:	2080020c 	andi	r2,r4,8
    9ab0:	10003626 	beq	r2,zero,9b8c <__swbuf_r+0x11c>
    9ab4:	80c00417 	ldw	r3,16(r16)
    9ab8:	18003426 	beq	r3,zero,9b8c <__swbuf_r+0x11c>
    9abc:	2088000c 	andi	r2,r4,8192
    9ac0:	9c403fcc 	andi	r17,r19,255
    9ac4:	10001a26 	beq	r2,zero,9b30 <__swbuf_r+0xc0>
    9ac8:	80800017 	ldw	r2,0(r16)
    9acc:	81000517 	ldw	r4,20(r16)
    9ad0:	10c7c83a 	sub	r3,r2,r3
    9ad4:	1900200e 	bge	r3,r4,9b58 <__swbuf_r+0xe8>
    9ad8:	18c00044 	addi	r3,r3,1
    9adc:	81000217 	ldw	r4,8(r16)
    9ae0:	11400044 	addi	r5,r2,1
    9ae4:	81400015 	stw	r5,0(r16)
    9ae8:	213fffc4 	addi	r4,r4,-1
    9aec:	81000215 	stw	r4,8(r16)
    9af0:	14c00005 	stb	r19,0(r2)
    9af4:	80800517 	ldw	r2,20(r16)
    9af8:	10c01e26 	beq	r2,r3,9b74 <__swbuf_r+0x104>
    9afc:	8080030b 	ldhu	r2,12(r16)
    9b00:	1080004c 	andi	r2,r2,1
    9b04:	10000226 	beq	r2,zero,9b10 <__swbuf_r+0xa0>
    9b08:	00800284 	movi	r2,10
    9b0c:	88801926 	beq	r17,r2,9b74 <__swbuf_r+0x104>
    9b10:	8805883a 	mov	r2,r17
    9b14:	dfc00417 	ldw	ra,16(sp)
    9b18:	dcc00317 	ldw	r19,12(sp)
    9b1c:	dc800217 	ldw	r18,8(sp)
    9b20:	dc400117 	ldw	r17,4(sp)
    9b24:	dc000017 	ldw	r16,0(sp)
    9b28:	dec00504 	addi	sp,sp,20
    9b2c:	f800283a 	ret
    9b30:	81401917 	ldw	r5,100(r16)
    9b34:	00b7ffc4 	movi	r2,-8193
    9b38:	21080014 	ori	r4,r4,8192
    9b3c:	2884703a 	and	r2,r5,r2
    9b40:	80801915 	stw	r2,100(r16)
    9b44:	80800017 	ldw	r2,0(r16)
    9b48:	8100030d 	sth	r4,12(r16)
    9b4c:	81000517 	ldw	r4,20(r16)
    9b50:	10c7c83a 	sub	r3,r2,r3
    9b54:	193fe016 	blt	r3,r4,9ad8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009ad8>
    9b58:	800b883a 	mov	r5,r16
    9b5c:	9009883a 	mov	r4,r18
    9b60:	00047640 	call	4764 <_fflush_r>
    9b64:	1000071e 	bne	r2,zero,9b84 <__swbuf_r+0x114>
    9b68:	80800017 	ldw	r2,0(r16)
    9b6c:	00c00044 	movi	r3,1
    9b70:	003fda06 	br	9adc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009adc>
    9b74:	800b883a 	mov	r5,r16
    9b78:	9009883a 	mov	r4,r18
    9b7c:	00047640 	call	4764 <_fflush_r>
    9b80:	103fe326 	beq	r2,zero,9b10 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009b10>
    9b84:	00bfffc4 	movi	r2,-1
    9b88:	003fe206 	br	9b14 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009b14>
    9b8c:	800b883a 	mov	r5,r16
    9b90:	9009883a 	mov	r4,r18
    9b94:	0002b6c0 	call	2b6c <__swsetup_r>
    9b98:	103ffa1e 	bne	r2,zero,9b84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009b84>
    9b9c:	8100030b 	ldhu	r4,12(r16)
    9ba0:	80c00417 	ldw	r3,16(r16)
    9ba4:	003fc506 	br	9abc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009abc>
    9ba8:	0004b400 	call	4b40 <__sinit>
    9bac:	003fbc06 	br	9aa0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009aa0>

00009bb0 <__swbuf>:
    9bb0:	00800074 	movhi	r2,1
    9bb4:	108d9004 	addi	r2,r2,13888
    9bb8:	280d883a 	mov	r6,r5
    9bbc:	200b883a 	mov	r5,r4
    9bc0:	11000017 	ldw	r4,0(r2)
    9bc4:	0009a701 	jmpi	9a70 <__swbuf_r>

00009bc8 <_wcrtomb_r>:
    9bc8:	defff604 	addi	sp,sp,-40
    9bcc:	00800074 	movhi	r2,1
    9bd0:	dc800815 	stw	r18,32(sp)
    9bd4:	dc400715 	stw	r17,28(sp)
    9bd8:	dc000615 	stw	r16,24(sp)
    9bdc:	108d9404 	addi	r2,r2,13904
    9be0:	dfc00915 	stw	ra,36(sp)
    9be4:	2021883a 	mov	r16,r4
    9be8:	3823883a 	mov	r17,r7
    9bec:	14800017 	ldw	r18,0(r2)
    9bf0:	28001426 	beq	r5,zero,9c44 <_wcrtomb_r+0x7c>
    9bf4:	d9400415 	stw	r5,16(sp)
    9bf8:	d9800515 	stw	r6,20(sp)
    9bfc:	00051c80 	call	51c8 <__locale_charset>
    9c00:	d9800517 	ldw	r6,20(sp)
    9c04:	d9400417 	ldw	r5,16(sp)
    9c08:	100f883a 	mov	r7,r2
    9c0c:	dc400015 	stw	r17,0(sp)
    9c10:	8009883a 	mov	r4,r16
    9c14:	903ee83a 	callr	r18
    9c18:	00ffffc4 	movi	r3,-1
    9c1c:	10c0031e 	bne	r2,r3,9c2c <_wcrtomb_r+0x64>
    9c20:	88000015 	stw	zero,0(r17)
    9c24:	00c02284 	movi	r3,138
    9c28:	80c00015 	stw	r3,0(r16)
    9c2c:	dfc00917 	ldw	ra,36(sp)
    9c30:	dc800817 	ldw	r18,32(sp)
    9c34:	dc400717 	ldw	r17,28(sp)
    9c38:	dc000617 	ldw	r16,24(sp)
    9c3c:	dec00a04 	addi	sp,sp,40
    9c40:	f800283a 	ret
    9c44:	00051c80 	call	51c8 <__locale_charset>
    9c48:	100f883a 	mov	r7,r2
    9c4c:	dc400015 	stw	r17,0(sp)
    9c50:	000d883a 	mov	r6,zero
    9c54:	d9400104 	addi	r5,sp,4
    9c58:	8009883a 	mov	r4,r16
    9c5c:	903ee83a 	callr	r18
    9c60:	003fed06 	br	9c18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009c18>

00009c64 <wcrtomb>:
    9c64:	defff604 	addi	sp,sp,-40
    9c68:	00800074 	movhi	r2,1
    9c6c:	dc800615 	stw	r18,24(sp)
    9c70:	dc400515 	stw	r17,20(sp)
    9c74:	108d9004 	addi	r2,r2,13888
    9c78:	dfc00915 	stw	ra,36(sp)
    9c7c:	dd000815 	stw	r20,32(sp)
    9c80:	dcc00715 	stw	r19,28(sp)
    9c84:	dc000415 	stw	r16,16(sp)
    9c88:	3025883a 	mov	r18,r6
    9c8c:	14400017 	ldw	r17,0(r2)
    9c90:	20001926 	beq	r4,zero,9cf8 <wcrtomb+0x94>
    9c94:	00800074 	movhi	r2,1
    9c98:	108d9404 	addi	r2,r2,13904
    9c9c:	15000017 	ldw	r20,0(r2)
    9ca0:	2021883a 	mov	r16,r4
    9ca4:	2827883a 	mov	r19,r5
    9ca8:	00051c80 	call	51c8 <__locale_charset>
    9cac:	100f883a 	mov	r7,r2
    9cb0:	dc800015 	stw	r18,0(sp)
    9cb4:	980d883a 	mov	r6,r19
    9cb8:	800b883a 	mov	r5,r16
    9cbc:	8809883a 	mov	r4,r17
    9cc0:	a03ee83a 	callr	r20
    9cc4:	00ffffc4 	movi	r3,-1
    9cc8:	10c0031e 	bne	r2,r3,9cd8 <wcrtomb+0x74>
    9ccc:	90000015 	stw	zero,0(r18)
    9cd0:	00c02284 	movi	r3,138
    9cd4:	88c00015 	stw	r3,0(r17)
    9cd8:	dfc00917 	ldw	ra,36(sp)
    9cdc:	dd000817 	ldw	r20,32(sp)
    9ce0:	dcc00717 	ldw	r19,28(sp)
    9ce4:	dc800617 	ldw	r18,24(sp)
    9ce8:	dc400517 	ldw	r17,20(sp)
    9cec:	dc000417 	ldw	r16,16(sp)
    9cf0:	dec00a04 	addi	sp,sp,40
    9cf4:	f800283a 	ret
    9cf8:	00800074 	movhi	r2,1
    9cfc:	108d9404 	addi	r2,r2,13904
    9d00:	14000017 	ldw	r16,0(r2)
    9d04:	00051c80 	call	51c8 <__locale_charset>
    9d08:	100f883a 	mov	r7,r2
    9d0c:	dc800015 	stw	r18,0(sp)
    9d10:	000d883a 	mov	r6,zero
    9d14:	d9400104 	addi	r5,sp,4
    9d18:	8809883a 	mov	r4,r17
    9d1c:	803ee83a 	callr	r16
    9d20:	003fe806 	br	9cc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009cc4>

00009d24 <__ascii_wctomb>:
    9d24:	28000526 	beq	r5,zero,9d3c <__ascii_wctomb+0x18>
    9d28:	00803fc4 	movi	r2,255
    9d2c:	11800536 	bltu	r2,r6,9d44 <__ascii_wctomb+0x20>
    9d30:	29800005 	stb	r6,0(r5)
    9d34:	00800044 	movi	r2,1
    9d38:	f800283a 	ret
    9d3c:	0005883a 	mov	r2,zero
    9d40:	f800283a 	ret
    9d44:	00802284 	movi	r2,138
    9d48:	20800015 	stw	r2,0(r4)
    9d4c:	00bfffc4 	movi	r2,-1
    9d50:	f800283a 	ret

00009d54 <_wctomb_r>:
    9d54:	00800074 	movhi	r2,1
    9d58:	defff904 	addi	sp,sp,-28
    9d5c:	108d9404 	addi	r2,r2,13904
    9d60:	dfc00615 	stw	ra,24(sp)
    9d64:	dc400515 	stw	r17,20(sp)
    9d68:	dc000415 	stw	r16,16(sp)
    9d6c:	3823883a 	mov	r17,r7
    9d70:	14000017 	ldw	r16,0(r2)
    9d74:	d9000115 	stw	r4,4(sp)
    9d78:	d9400215 	stw	r5,8(sp)
    9d7c:	d9800315 	stw	r6,12(sp)
    9d80:	00051c80 	call	51c8 <__locale_charset>
    9d84:	d9800317 	ldw	r6,12(sp)
    9d88:	d9400217 	ldw	r5,8(sp)
    9d8c:	d9000117 	ldw	r4,4(sp)
    9d90:	100f883a 	mov	r7,r2
    9d94:	dc400015 	stw	r17,0(sp)
    9d98:	803ee83a 	callr	r16
    9d9c:	dfc00617 	ldw	ra,24(sp)
    9da0:	dc400517 	ldw	r17,20(sp)
    9da4:	dc000417 	ldw	r16,16(sp)
    9da8:	dec00704 	addi	sp,sp,28
    9dac:	f800283a 	ret

00009db0 <__udivdi3>:
    9db0:	defff504 	addi	sp,sp,-44
    9db4:	dcc00415 	stw	r19,16(sp)
    9db8:	dc000115 	stw	r16,4(sp)
    9dbc:	dfc00a15 	stw	ra,40(sp)
    9dc0:	df000915 	stw	fp,36(sp)
    9dc4:	ddc00815 	stw	r23,32(sp)
    9dc8:	dd800715 	stw	r22,28(sp)
    9dcc:	dd400615 	stw	r21,24(sp)
    9dd0:	dd000515 	stw	r20,20(sp)
    9dd4:	dc800315 	stw	r18,12(sp)
    9dd8:	dc400215 	stw	r17,8(sp)
    9ddc:	2027883a 	mov	r19,r4
    9de0:	2821883a 	mov	r16,r5
    9de4:	3800411e 	bne	r7,zero,9eec <__udivdi3+0x13c>
    9de8:	3023883a 	mov	r17,r6
    9dec:	2025883a 	mov	r18,r4
    9df0:	2980522e 	bgeu	r5,r6,9f3c <__udivdi3+0x18c>
    9df4:	00bfffd4 	movui	r2,65535
    9df8:	282d883a 	mov	r22,r5
    9dfc:	1180a836 	bltu	r2,r6,a0a0 <__udivdi3+0x2f0>
    9e00:	00803fc4 	movi	r2,255
    9e04:	1185803a 	cmpltu	r2,r2,r6
    9e08:	100490fa 	slli	r2,r2,3
    9e0c:	3086d83a 	srl	r3,r6,r2
    9e10:	01000074 	movhi	r4,1
    9e14:	21051004 	addi	r4,r4,5184
    9e18:	20c7883a 	add	r3,r4,r3
    9e1c:	18c00003 	ldbu	r3,0(r3)
    9e20:	1885883a 	add	r2,r3,r2
    9e24:	00c00804 	movi	r3,32
    9e28:	1887c83a 	sub	r3,r3,r2
    9e2c:	18000526 	beq	r3,zero,9e44 <__udivdi3+0x94>
    9e30:	80e0983a 	sll	r16,r16,r3
    9e34:	9884d83a 	srl	r2,r19,r2
    9e38:	30e2983a 	sll	r17,r6,r3
    9e3c:	98e4983a 	sll	r18,r19,r3
    9e40:	142cb03a 	or	r22,r2,r16
    9e44:	882ad43a 	srli	r21,r17,16
    9e48:	b009883a 	mov	r4,r22
    9e4c:	8d3fffcc 	andi	r20,r17,65535
    9e50:	a80b883a 	mov	r5,r21
    9e54:	000a9bc0 	call	a9bc <__umodsi3>
    9e58:	b009883a 	mov	r4,r22
    9e5c:	a80b883a 	mov	r5,r21
    9e60:	1027883a 	mov	r19,r2
    9e64:	000a9580 	call	a958 <__udivsi3>
    9e68:	102d883a 	mov	r22,r2
    9e6c:	9826943a 	slli	r19,r19,16
    9e70:	9004d43a 	srli	r2,r18,16
    9e74:	a5a1383a 	mul	r16,r20,r22
    9e78:	14c4b03a 	or	r2,r2,r19
    9e7c:	1400052e 	bgeu	r2,r16,9e94 <__udivdi3+0xe4>
    9e80:	1445883a 	add	r2,r2,r17
    9e84:	b0ffffc4 	addi	r3,r22,-1
    9e88:	14400136 	bltu	r2,r17,9e90 <__udivdi3+0xe0>
    9e8c:	14012336 	bltu	r2,r16,a31c <__udivdi3+0x56c>
    9e90:	182d883a 	mov	r22,r3
    9e94:	1421c83a 	sub	r16,r2,r16
    9e98:	a80b883a 	mov	r5,r21
    9e9c:	8009883a 	mov	r4,r16
    9ea0:	000a9bc0 	call	a9bc <__umodsi3>
    9ea4:	1027883a 	mov	r19,r2
    9ea8:	a80b883a 	mov	r5,r21
    9eac:	8009883a 	mov	r4,r16
    9eb0:	000a9580 	call	a958 <__udivsi3>
    9eb4:	9826943a 	slli	r19,r19,16
    9eb8:	a0a9383a 	mul	r20,r20,r2
    9ebc:	94bfffcc 	andi	r18,r18,65535
    9ec0:	94e4b03a 	or	r18,r18,r19
    9ec4:	9500052e 	bgeu	r18,r20,9edc <__udivdi3+0x12c>
    9ec8:	8ca5883a 	add	r18,r17,r18
    9ecc:	10ffffc4 	addi	r3,r2,-1
    9ed0:	9440f136 	bltu	r18,r17,a298 <__udivdi3+0x4e8>
    9ed4:	9500f02e 	bgeu	r18,r20,a298 <__udivdi3+0x4e8>
    9ed8:	10bfff84 	addi	r2,r2,-2
    9edc:	b00c943a 	slli	r6,r22,16
    9ee0:	0007883a 	mov	r3,zero
    9ee4:	3084b03a 	or	r2,r6,r2
    9ee8:	00005906 	br	a050 <__udivdi3+0x2a0>
    9eec:	29c05636 	bltu	r5,r7,a048 <__udivdi3+0x298>
    9ef0:	00bfffd4 	movui	r2,65535
    9ef4:	11c0622e 	bgeu	r2,r7,a080 <__udivdi3+0x2d0>
    9ef8:	00804034 	movhi	r2,256
    9efc:	10bfffc4 	addi	r2,r2,-1
    9f00:	11c0ee36 	bltu	r2,r7,a2bc <__udivdi3+0x50c>
    9f04:	00800404 	movi	r2,16
    9f08:	3886d83a 	srl	r3,r7,r2
    9f0c:	01000074 	movhi	r4,1
    9f10:	21051004 	addi	r4,r4,5184
    9f14:	20c7883a 	add	r3,r4,r3
    9f18:	18c00003 	ldbu	r3,0(r3)
    9f1c:	05400804 	movi	r21,32
    9f20:	1885883a 	add	r2,r3,r2
    9f24:	a8abc83a 	sub	r21,r21,r2
    9f28:	a800621e 	bne	r21,zero,a0b4 <__udivdi3+0x304>
    9f2c:	3c00e936 	bltu	r7,r16,a2d4 <__udivdi3+0x524>
    9f30:	9985403a 	cmpgeu	r2,r19,r6
    9f34:	0007883a 	mov	r3,zero
    9f38:	00004506 	br	a050 <__udivdi3+0x2a0>
    9f3c:	3000041e 	bne	r6,zero,9f50 <__udivdi3+0x1a0>
    9f40:	000b883a 	mov	r5,zero
    9f44:	01000044 	movi	r4,1
    9f48:	000a9580 	call	a958 <__udivsi3>
    9f4c:	1023883a 	mov	r17,r2
    9f50:	00bfffd4 	movui	r2,65535
    9f54:	14404e2e 	bgeu	r2,r17,a090 <__udivdi3+0x2e0>
    9f58:	00804034 	movhi	r2,256
    9f5c:	10bfffc4 	addi	r2,r2,-1
    9f60:	1440d836 	bltu	r2,r17,a2c4 <__udivdi3+0x514>
    9f64:	00800404 	movi	r2,16
    9f68:	8886d83a 	srl	r3,r17,r2
    9f6c:	01000074 	movhi	r4,1
    9f70:	21051004 	addi	r4,r4,5184
    9f74:	20c7883a 	add	r3,r4,r3
    9f78:	18c00003 	ldbu	r3,0(r3)
    9f7c:	1885883a 	add	r2,r3,r2
    9f80:	00c00804 	movi	r3,32
    9f84:	1887c83a 	sub	r3,r3,r2
    9f88:	18008f1e 	bne	r3,zero,a1c8 <__udivdi3+0x418>
    9f8c:	882ad43a 	srli	r21,r17,16
    9f90:	8461c83a 	sub	r16,r16,r17
    9f94:	8d3fffcc 	andi	r20,r17,65535
    9f98:	00c00044 	movi	r3,1
    9f9c:	8009883a 	mov	r4,r16
    9fa0:	a80b883a 	mov	r5,r21
    9fa4:	d8c00015 	stw	r3,0(sp)
    9fa8:	000a9bc0 	call	a9bc <__umodsi3>
    9fac:	8009883a 	mov	r4,r16
    9fb0:	a80b883a 	mov	r5,r21
    9fb4:	1027883a 	mov	r19,r2
    9fb8:	000a9580 	call	a958 <__udivsi3>
    9fbc:	9826943a 	slli	r19,r19,16
    9fc0:	9008d43a 	srli	r4,r18,16
    9fc4:	1521383a 	mul	r16,r2,r20
    9fc8:	102d883a 	mov	r22,r2
    9fcc:	24c8b03a 	or	r4,r4,r19
    9fd0:	d8c00017 	ldw	r3,0(sp)
    9fd4:	2400052e 	bgeu	r4,r16,9fec <__udivdi3+0x23c>
    9fd8:	2449883a 	add	r4,r4,r17
    9fdc:	b0bfffc4 	addi	r2,r22,-1
    9fe0:	24400136 	bltu	r4,r17,9fe8 <__udivdi3+0x238>
    9fe4:	2400ca36 	bltu	r4,r16,a310 <__udivdi3+0x560>
    9fe8:	102d883a 	mov	r22,r2
    9fec:	2421c83a 	sub	r16,r4,r16
    9ff0:	a80b883a 	mov	r5,r21
    9ff4:	8009883a 	mov	r4,r16
    9ff8:	d8c00015 	stw	r3,0(sp)
    9ffc:	000a9bc0 	call	a9bc <__umodsi3>
    a000:	1027883a 	mov	r19,r2
    a004:	a80b883a 	mov	r5,r21
    a008:	8009883a 	mov	r4,r16
    a00c:	000a9580 	call	a958 <__udivsi3>
    a010:	9826943a 	slli	r19,r19,16
    a014:	1529383a 	mul	r20,r2,r20
    a018:	94bfffcc 	andi	r18,r18,65535
    a01c:	94e4b03a 	or	r18,r18,r19
    a020:	d8c00017 	ldw	r3,0(sp)
    a024:	9500052e 	bgeu	r18,r20,a03c <__udivdi3+0x28c>
    a028:	8ca5883a 	add	r18,r17,r18
    a02c:	113fffc4 	addi	r4,r2,-1
    a030:	94409736 	bltu	r18,r17,a290 <__udivdi3+0x4e0>
    a034:	9500962e 	bgeu	r18,r20,a290 <__udivdi3+0x4e0>
    a038:	10bfff84 	addi	r2,r2,-2
    a03c:	b00c943a 	slli	r6,r22,16
    a040:	3084b03a 	or	r2,r6,r2
    a044:	00000206 	br	a050 <__udivdi3+0x2a0>
    a048:	0007883a 	mov	r3,zero
    a04c:	0005883a 	mov	r2,zero
    a050:	dfc00a17 	ldw	ra,40(sp)
    a054:	df000917 	ldw	fp,36(sp)
    a058:	ddc00817 	ldw	r23,32(sp)
    a05c:	dd800717 	ldw	r22,28(sp)
    a060:	dd400617 	ldw	r21,24(sp)
    a064:	dd000517 	ldw	r20,20(sp)
    a068:	dcc00417 	ldw	r19,16(sp)
    a06c:	dc800317 	ldw	r18,12(sp)
    a070:	dc400217 	ldw	r17,8(sp)
    a074:	dc000117 	ldw	r16,4(sp)
    a078:	dec00b04 	addi	sp,sp,44
    a07c:	f800283a 	ret
    a080:	00803fc4 	movi	r2,255
    a084:	11c5803a 	cmpltu	r2,r2,r7
    a088:	100490fa 	slli	r2,r2,3
    a08c:	003f9e06 	br	9f08 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009f08>
    a090:	00803fc4 	movi	r2,255
    a094:	1445803a 	cmpltu	r2,r2,r17
    a098:	100490fa 	slli	r2,r2,3
    a09c:	003fb206 	br	9f68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009f68>
    a0a0:	00804034 	movhi	r2,256
    a0a4:	10bfffc4 	addi	r2,r2,-1
    a0a8:	11808836 	bltu	r2,r6,a2cc <__udivdi3+0x51c>
    a0ac:	00800404 	movi	r2,16
    a0b0:	003f5606 	br	9e0c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009e0c>
    a0b4:	30aed83a 	srl	r23,r6,r2
    a0b8:	3d4e983a 	sll	r7,r7,r21
    a0bc:	80acd83a 	srl	r22,r16,r2
    a0c0:	9884d83a 	srl	r2,r19,r2
    a0c4:	3deeb03a 	or	r23,r7,r23
    a0c8:	b824d43a 	srli	r18,r23,16
    a0cc:	8560983a 	sll	r16,r16,r21
    a0d0:	b009883a 	mov	r4,r22
    a0d4:	900b883a 	mov	r5,r18
    a0d8:	3568983a 	sll	r20,r6,r21
    a0dc:	1420b03a 	or	r16,r2,r16
    a0e0:	000a9bc0 	call	a9bc <__umodsi3>
    a0e4:	b009883a 	mov	r4,r22
    a0e8:	900b883a 	mov	r5,r18
    a0ec:	1023883a 	mov	r17,r2
    a0f0:	000a9580 	call	a958 <__udivsi3>
    a0f4:	8808943a 	slli	r4,r17,16
    a0f8:	bf3fffcc 	andi	fp,r23,65535
    a0fc:	8006d43a 	srli	r3,r16,16
    a100:	e0a3383a 	mul	r17,fp,r2
    a104:	100d883a 	mov	r6,r2
    a108:	1906b03a 	or	r3,r3,r4
    a10c:	1c40042e 	bgeu	r3,r17,a120 <__udivdi3+0x370>
    a110:	1dc7883a 	add	r3,r3,r23
    a114:	10bfffc4 	addi	r2,r2,-1
    a118:	1dc0752e 	bgeu	r3,r23,a2f0 <__udivdi3+0x540>
    a11c:	100d883a 	mov	r6,r2
    a120:	1c63c83a 	sub	r17,r3,r17
    a124:	900b883a 	mov	r5,r18
    a128:	8809883a 	mov	r4,r17
    a12c:	d9800015 	stw	r6,0(sp)
    a130:	000a9bc0 	call	a9bc <__umodsi3>
    a134:	102d883a 	mov	r22,r2
    a138:	8809883a 	mov	r4,r17
    a13c:	900b883a 	mov	r5,r18
    a140:	000a9580 	call	a958 <__udivsi3>
    a144:	b02c943a 	slli	r22,r22,16
    a148:	e089383a 	mul	r4,fp,r2
    a14c:	843fffcc 	andi	r16,r16,65535
    a150:	85a0b03a 	or	r16,r16,r22
    a154:	d9800017 	ldw	r6,0(sp)
    a158:	8100042e 	bgeu	r16,r4,a16c <__udivdi3+0x3bc>
    a15c:	85e1883a 	add	r16,r16,r23
    a160:	10ffffc4 	addi	r3,r2,-1
    a164:	85c05e2e 	bgeu	r16,r23,a2e0 <__udivdi3+0x530>
    a168:	1805883a 	mov	r2,r3
    a16c:	300c943a 	slli	r6,r6,16
    a170:	a17fffcc 	andi	r5,r20,65535
    a174:	a028d43a 	srli	r20,r20,16
    a178:	3084b03a 	or	r2,r6,r2
    a17c:	10ffffcc 	andi	r3,r2,65535
    a180:	100cd43a 	srli	r6,r2,16
    a184:	194f383a 	mul	r7,r3,r5
    a188:	1d07383a 	mul	r3,r3,r20
    a18c:	314b383a 	mul	r5,r6,r5
    a190:	3810d43a 	srli	r8,r7,16
    a194:	8121c83a 	sub	r16,r16,r4
    a198:	1947883a 	add	r3,r3,r5
    a19c:	40c7883a 	add	r3,r8,r3
    a1a0:	350d383a 	mul	r6,r6,r20
    a1a4:	1940022e 	bgeu	r3,r5,a1b0 <__udivdi3+0x400>
    a1a8:	01000074 	movhi	r4,1
    a1ac:	310d883a 	add	r6,r6,r4
    a1b0:	1828d43a 	srli	r20,r3,16
    a1b4:	a18d883a 	add	r6,r20,r6
    a1b8:	81803e36 	bltu	r16,r6,a2b4 <__udivdi3+0x504>
    a1bc:	81803826 	beq	r16,r6,a2a0 <__udivdi3+0x4f0>
    a1c0:	0007883a 	mov	r3,zero
    a1c4:	003fa206 	br	a050 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a050>
    a1c8:	88e2983a 	sll	r17,r17,r3
    a1cc:	80a8d83a 	srl	r20,r16,r2
    a1d0:	80e0983a 	sll	r16,r16,r3
    a1d4:	882ad43a 	srli	r21,r17,16
    a1d8:	9884d83a 	srl	r2,r19,r2
    a1dc:	a009883a 	mov	r4,r20
    a1e0:	a80b883a 	mov	r5,r21
    a1e4:	142eb03a 	or	r23,r2,r16
    a1e8:	98e4983a 	sll	r18,r19,r3
    a1ec:	000a9bc0 	call	a9bc <__umodsi3>
    a1f0:	a009883a 	mov	r4,r20
    a1f4:	a80b883a 	mov	r5,r21
    a1f8:	1021883a 	mov	r16,r2
    a1fc:	000a9580 	call	a958 <__udivsi3>
    a200:	1039883a 	mov	fp,r2
    a204:	8d3fffcc 	andi	r20,r17,65535
    a208:	8020943a 	slli	r16,r16,16
    a20c:	b804d43a 	srli	r2,r23,16
    a210:	a72d383a 	mul	r22,r20,fp
    a214:	1404b03a 	or	r2,r2,r16
    a218:	1580062e 	bgeu	r2,r22,a234 <__udivdi3+0x484>
    a21c:	1445883a 	add	r2,r2,r17
    a220:	e0ffffc4 	addi	r3,fp,-1
    a224:	14403836 	bltu	r2,r17,a308 <__udivdi3+0x558>
    a228:	1580372e 	bgeu	r2,r22,a308 <__udivdi3+0x558>
    a22c:	e73fff84 	addi	fp,fp,-2
    a230:	1445883a 	add	r2,r2,r17
    a234:	15adc83a 	sub	r22,r2,r22
    a238:	a80b883a 	mov	r5,r21
    a23c:	b009883a 	mov	r4,r22
    a240:	000a9bc0 	call	a9bc <__umodsi3>
    a244:	1027883a 	mov	r19,r2
    a248:	b009883a 	mov	r4,r22
    a24c:	a80b883a 	mov	r5,r21
    a250:	000a9580 	call	a958 <__udivsi3>
    a254:	9826943a 	slli	r19,r19,16
    a258:	a0a1383a 	mul	r16,r20,r2
    a25c:	b93fffcc 	andi	r4,r23,65535
    a260:	24c8b03a 	or	r4,r4,r19
    a264:	2400062e 	bgeu	r4,r16,a280 <__udivdi3+0x4d0>
    a268:	2449883a 	add	r4,r4,r17
    a26c:	10ffffc4 	addi	r3,r2,-1
    a270:	24402336 	bltu	r4,r17,a300 <__udivdi3+0x550>
    a274:	2400222e 	bgeu	r4,r16,a300 <__udivdi3+0x550>
    a278:	10bfff84 	addi	r2,r2,-2
    a27c:	2449883a 	add	r4,r4,r17
    a280:	e038943a 	slli	fp,fp,16
    a284:	2421c83a 	sub	r16,r4,r16
    a288:	e086b03a 	or	r3,fp,r2
    a28c:	003f4306 	br	9f9c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009f9c>
    a290:	2005883a 	mov	r2,r4
    a294:	003f6906 	br	a03c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a03c>
    a298:	1805883a 	mov	r2,r3
    a29c:	003f0f06 	br	9edc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009edc>
    a2a0:	1806943a 	slli	r3,r3,16
    a2a4:	9d66983a 	sll	r19,r19,r21
    a2a8:	39ffffcc 	andi	r7,r7,65535
    a2ac:	19c7883a 	add	r3,r3,r7
    a2b0:	98ffc32e 	bgeu	r19,r3,a1c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a1c0>
    a2b4:	10bfffc4 	addi	r2,r2,-1
    a2b8:	003fc106 	br	a1c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a1c0>
    a2bc:	00800604 	movi	r2,24
    a2c0:	003f1106 	br	9f08 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009f08>
    a2c4:	00800604 	movi	r2,24
    a2c8:	003f2706 	br	9f68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009f68>
    a2cc:	00800604 	movi	r2,24
    a2d0:	003ece06 	br	9e0c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009e0c>
    a2d4:	0007883a 	mov	r3,zero
    a2d8:	00800044 	movi	r2,1
    a2dc:	003f5c06 	br	a050 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a050>
    a2e0:	813fa12e 	bgeu	r16,r4,a168 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a168>
    a2e4:	10bfff84 	addi	r2,r2,-2
    a2e8:	85e1883a 	add	r16,r16,r23
    a2ec:	003f9f06 	br	a16c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a16c>
    a2f0:	1c7f8a2e 	bgeu	r3,r17,a11c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a11c>
    a2f4:	31bfff84 	addi	r6,r6,-2
    a2f8:	1dc7883a 	add	r3,r3,r23
    a2fc:	003f8806 	br	a120 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a120>
    a300:	1805883a 	mov	r2,r3
    a304:	003fde06 	br	a280 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a280>
    a308:	1839883a 	mov	fp,r3
    a30c:	003fc906 	br	a234 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a234>
    a310:	b5bfff84 	addi	r22,r22,-2
    a314:	2449883a 	add	r4,r4,r17
    a318:	003f3406 	br	9fec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009fec>
    a31c:	b5bfff84 	addi	r22,r22,-2
    a320:	1445883a 	add	r2,r2,r17
    a324:	003edb06 	br	9e94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009e94>

0000a328 <__umoddi3>:
    a328:	defff404 	addi	sp,sp,-48
    a32c:	df000a15 	stw	fp,40(sp)
    a330:	dc400315 	stw	r17,12(sp)
    a334:	dc000215 	stw	r16,8(sp)
    a338:	dfc00b15 	stw	ra,44(sp)
    a33c:	ddc00915 	stw	r23,36(sp)
    a340:	dd800815 	stw	r22,32(sp)
    a344:	dd400715 	stw	r21,28(sp)
    a348:	dd000615 	stw	r20,24(sp)
    a34c:	dcc00515 	stw	r19,20(sp)
    a350:	dc800415 	stw	r18,16(sp)
    a354:	2021883a 	mov	r16,r4
    a358:	2823883a 	mov	r17,r5
    a35c:	2839883a 	mov	fp,r5
    a360:	38003c1e 	bne	r7,zero,a454 <__umoddi3+0x12c>
    a364:	3027883a 	mov	r19,r6
    a368:	2029883a 	mov	r20,r4
    a36c:	2980512e 	bgeu	r5,r6,a4b4 <__umoddi3+0x18c>
    a370:	00bfffd4 	movui	r2,65535
    a374:	11809a36 	bltu	r2,r6,a5e0 <__umoddi3+0x2b8>
    a378:	01003fc4 	movi	r4,255
    a37c:	2189803a 	cmpltu	r4,r4,r6
    a380:	200890fa 	slli	r4,r4,3
    a384:	3104d83a 	srl	r2,r6,r4
    a388:	00c00074 	movhi	r3,1
    a38c:	18c51004 	addi	r3,r3,5184
    a390:	1885883a 	add	r2,r3,r2
    a394:	10c00003 	ldbu	r3,0(r2)
    a398:	00800804 	movi	r2,32
    a39c:	1909883a 	add	r4,r3,r4
    a3a0:	1125c83a 	sub	r18,r2,r4
    a3a4:	90000526 	beq	r18,zero,a3bc <__umoddi3+0x94>
    a3a8:	8ca2983a 	sll	r17,r17,r18
    a3ac:	8108d83a 	srl	r4,r16,r4
    a3b0:	34a6983a 	sll	r19,r6,r18
    a3b4:	84a8983a 	sll	r20,r16,r18
    a3b8:	2478b03a 	or	fp,r4,r17
    a3bc:	982ed43a 	srli	r23,r19,16
    a3c0:	e009883a 	mov	r4,fp
    a3c4:	9dbfffcc 	andi	r22,r19,65535
    a3c8:	b80b883a 	mov	r5,r23
    a3cc:	000a9bc0 	call	a9bc <__umodsi3>
    a3d0:	e009883a 	mov	r4,fp
    a3d4:	b80b883a 	mov	r5,r23
    a3d8:	102b883a 	mov	r21,r2
    a3dc:	000a9580 	call	a958 <__udivsi3>
    a3e0:	a806943a 	slli	r3,r21,16
    a3e4:	a008d43a 	srli	r4,r20,16
    a3e8:	b085383a 	mul	r2,r22,r2
    a3ec:	20c8b03a 	or	r4,r4,r3
    a3f0:	2080032e 	bgeu	r4,r2,a400 <__umoddi3+0xd8>
    a3f4:	24c9883a 	add	r4,r4,r19
    a3f8:	24c00136 	bltu	r4,r19,a400 <__umoddi3+0xd8>
    a3fc:	20811036 	bltu	r4,r2,a840 <__umoddi3+0x518>
    a400:	20abc83a 	sub	r21,r4,r2
    a404:	b80b883a 	mov	r5,r23
    a408:	a809883a 	mov	r4,r21
    a40c:	000a9bc0 	call	a9bc <__umodsi3>
    a410:	1023883a 	mov	r17,r2
    a414:	b80b883a 	mov	r5,r23
    a418:	a809883a 	mov	r4,r21
    a41c:	000a9580 	call	a958 <__udivsi3>
    a420:	8822943a 	slli	r17,r17,16
    a424:	b085383a 	mul	r2,r22,r2
    a428:	a0ffffcc 	andi	r3,r20,65535
    a42c:	1c46b03a 	or	r3,r3,r17
    a430:	1880042e 	bgeu	r3,r2,a444 <__umoddi3+0x11c>
    a434:	1cc7883a 	add	r3,r3,r19
    a438:	1cc00236 	bltu	r3,r19,a444 <__umoddi3+0x11c>
    a43c:	1880012e 	bgeu	r3,r2,a444 <__umoddi3+0x11c>
    a440:	1cc7883a 	add	r3,r3,r19
    a444:	1885c83a 	sub	r2,r3,r2
    a448:	1484d83a 	srl	r2,r2,r18
    a44c:	0007883a 	mov	r3,zero
    a450:	00004f06 	br	a590 <__umoddi3+0x268>
    a454:	29c04c36 	bltu	r5,r7,a588 <__umoddi3+0x260>
    a458:	00bfffd4 	movui	r2,65535
    a45c:	11c0582e 	bgeu	r2,r7,a5c0 <__umoddi3+0x298>
    a460:	00804034 	movhi	r2,256
    a464:	10bfffc4 	addi	r2,r2,-1
    a468:	11c0e736 	bltu	r2,r7,a808 <__umoddi3+0x4e0>
    a46c:	01000404 	movi	r4,16
    a470:	3904d83a 	srl	r2,r7,r4
    a474:	00c00074 	movhi	r3,1
    a478:	18c51004 	addi	r3,r3,5184
    a47c:	1885883a 	add	r2,r3,r2
    a480:	14c00003 	ldbu	r19,0(r2)
    a484:	00c00804 	movi	r3,32
    a488:	9927883a 	add	r19,r19,r4
    a48c:	1ce9c83a 	sub	r20,r3,r19
    a490:	a000581e 	bne	r20,zero,a5f4 <__umoddi3+0x2cc>
    a494:	3c400136 	bltu	r7,r17,a49c <__umoddi3+0x174>
    a498:	8180eb36 	bltu	r16,r6,a848 <__umoddi3+0x520>
    a49c:	8185c83a 	sub	r2,r16,r6
    a4a0:	89e3c83a 	sub	r17,r17,r7
    a4a4:	8089803a 	cmpltu	r4,r16,r2
    a4a8:	8939c83a 	sub	fp,r17,r4
    a4ac:	e007883a 	mov	r3,fp
    a4b0:	00003706 	br	a590 <__umoddi3+0x268>
    a4b4:	3000041e 	bne	r6,zero,a4c8 <__umoddi3+0x1a0>
    a4b8:	000b883a 	mov	r5,zero
    a4bc:	01000044 	movi	r4,1
    a4c0:	000a9580 	call	a958 <__udivsi3>
    a4c4:	1027883a 	mov	r19,r2
    a4c8:	00bfffd4 	movui	r2,65535
    a4cc:	14c0402e 	bgeu	r2,r19,a5d0 <__umoddi3+0x2a8>
    a4d0:	00804034 	movhi	r2,256
    a4d4:	10bfffc4 	addi	r2,r2,-1
    a4d8:	14c0cd36 	bltu	r2,r19,a810 <__umoddi3+0x4e8>
    a4dc:	00800404 	movi	r2,16
    a4e0:	9886d83a 	srl	r3,r19,r2
    a4e4:	01000074 	movhi	r4,1
    a4e8:	21051004 	addi	r4,r4,5184
    a4ec:	20c7883a 	add	r3,r4,r3
    a4f0:	18c00003 	ldbu	r3,0(r3)
    a4f4:	1887883a 	add	r3,r3,r2
    a4f8:	00800804 	movi	r2,32
    a4fc:	10e5c83a 	sub	r18,r2,r3
    a500:	9000901e 	bne	r18,zero,a744 <__umoddi3+0x41c>
    a504:	982cd43a 	srli	r22,r19,16
    a508:	8ce3c83a 	sub	r17,r17,r19
    a50c:	9d7fffcc 	andi	r21,r19,65535
    a510:	b00b883a 	mov	r5,r22
    a514:	8809883a 	mov	r4,r17
    a518:	000a9bc0 	call	a9bc <__umodsi3>
    a51c:	8809883a 	mov	r4,r17
    a520:	b00b883a 	mov	r5,r22
    a524:	1021883a 	mov	r16,r2
    a528:	000a9580 	call	a958 <__udivsi3>
    a52c:	8006943a 	slli	r3,r16,16
    a530:	a008d43a 	srli	r4,r20,16
    a534:	1545383a 	mul	r2,r2,r21
    a538:	20c8b03a 	or	r4,r4,r3
    a53c:	2080042e 	bgeu	r4,r2,a550 <__umoddi3+0x228>
    a540:	24c9883a 	add	r4,r4,r19
    a544:	24c00236 	bltu	r4,r19,a550 <__umoddi3+0x228>
    a548:	2080012e 	bgeu	r4,r2,a550 <__umoddi3+0x228>
    a54c:	24c9883a 	add	r4,r4,r19
    a550:	20a1c83a 	sub	r16,r4,r2
    a554:	b00b883a 	mov	r5,r22
    a558:	8009883a 	mov	r4,r16
    a55c:	000a9bc0 	call	a9bc <__umodsi3>
    a560:	1023883a 	mov	r17,r2
    a564:	b00b883a 	mov	r5,r22
    a568:	8009883a 	mov	r4,r16
    a56c:	000a9580 	call	a958 <__udivsi3>
    a570:	8822943a 	slli	r17,r17,16
    a574:	1545383a 	mul	r2,r2,r21
    a578:	a53fffcc 	andi	r20,r20,65535
    a57c:	a446b03a 	or	r3,r20,r17
    a580:	18bfb02e 	bgeu	r3,r2,a444 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a444>
    a584:	003fab06 	br	a434 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a434>
    a588:	2005883a 	mov	r2,r4
    a58c:	2807883a 	mov	r3,r5
    a590:	dfc00b17 	ldw	ra,44(sp)
    a594:	df000a17 	ldw	fp,40(sp)
    a598:	ddc00917 	ldw	r23,36(sp)
    a59c:	dd800817 	ldw	r22,32(sp)
    a5a0:	dd400717 	ldw	r21,28(sp)
    a5a4:	dd000617 	ldw	r20,24(sp)
    a5a8:	dcc00517 	ldw	r19,20(sp)
    a5ac:	dc800417 	ldw	r18,16(sp)
    a5b0:	dc400317 	ldw	r17,12(sp)
    a5b4:	dc000217 	ldw	r16,8(sp)
    a5b8:	dec00c04 	addi	sp,sp,48
    a5bc:	f800283a 	ret
    a5c0:	04c03fc4 	movi	r19,255
    a5c4:	99c9803a 	cmpltu	r4,r19,r7
    a5c8:	200890fa 	slli	r4,r4,3
    a5cc:	003fa806 	br	a470 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a470>
    a5d0:	00803fc4 	movi	r2,255
    a5d4:	14c5803a 	cmpltu	r2,r2,r19
    a5d8:	100490fa 	slli	r2,r2,3
    a5dc:	003fc006 	br	a4e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a4e0>
    a5e0:	00804034 	movhi	r2,256
    a5e4:	10bfffc4 	addi	r2,r2,-1
    a5e8:	11808b36 	bltu	r2,r6,a818 <__umoddi3+0x4f0>
    a5ec:	01000404 	movi	r4,16
    a5f0:	003f6406 	br	a384 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a384>
    a5f4:	34c4d83a 	srl	r2,r6,r19
    a5f8:	3d0e983a 	sll	r7,r7,r20
    a5fc:	8cf8d83a 	srl	fp,r17,r19
    a600:	8d10983a 	sll	r8,r17,r20
    a604:	38aab03a 	or	r21,r7,r2
    a608:	a82cd43a 	srli	r22,r21,16
    a60c:	84e2d83a 	srl	r17,r16,r19
    a610:	e009883a 	mov	r4,fp
    a614:	b00b883a 	mov	r5,r22
    a618:	8a22b03a 	or	r17,r17,r8
    a61c:	3524983a 	sll	r18,r6,r20
    a620:	000a9bc0 	call	a9bc <__umodsi3>
    a624:	e009883a 	mov	r4,fp
    a628:	b00b883a 	mov	r5,r22
    a62c:	102f883a 	mov	r23,r2
    a630:	000a9580 	call	a958 <__udivsi3>
    a634:	100d883a 	mov	r6,r2
    a638:	b808943a 	slli	r4,r23,16
    a63c:	aa3fffcc 	andi	r8,r21,65535
    a640:	8804d43a 	srli	r2,r17,16
    a644:	41af383a 	mul	r23,r8,r6
    a648:	8520983a 	sll	r16,r16,r20
    a64c:	1104b03a 	or	r2,r2,r4
    a650:	15c0042e 	bgeu	r2,r23,a664 <__umoddi3+0x33c>
    a654:	1545883a 	add	r2,r2,r21
    a658:	30ffffc4 	addi	r3,r6,-1
    a65c:	1540742e 	bgeu	r2,r21,a830 <__umoddi3+0x508>
    a660:	180d883a 	mov	r6,r3
    a664:	15efc83a 	sub	r23,r2,r23
    a668:	b00b883a 	mov	r5,r22
    a66c:	b809883a 	mov	r4,r23
    a670:	d9800115 	stw	r6,4(sp)
    a674:	da000015 	stw	r8,0(sp)
    a678:	000a9bc0 	call	a9bc <__umodsi3>
    a67c:	b00b883a 	mov	r5,r22
    a680:	b809883a 	mov	r4,r23
    a684:	1039883a 	mov	fp,r2
    a688:	000a9580 	call	a958 <__udivsi3>
    a68c:	da000017 	ldw	r8,0(sp)
    a690:	e038943a 	slli	fp,fp,16
    a694:	100b883a 	mov	r5,r2
    a698:	4089383a 	mul	r4,r8,r2
    a69c:	8a3fffcc 	andi	r8,r17,65535
    a6a0:	4710b03a 	or	r8,r8,fp
    a6a4:	d9800117 	ldw	r6,4(sp)
    a6a8:	4100042e 	bgeu	r8,r4,a6bc <__umoddi3+0x394>
    a6ac:	4551883a 	add	r8,r8,r21
    a6b0:	10bfffc4 	addi	r2,r2,-1
    a6b4:	45405a2e 	bgeu	r8,r21,a820 <__umoddi3+0x4f8>
    a6b8:	100b883a 	mov	r5,r2
    a6bc:	300c943a 	slli	r6,r6,16
    a6c0:	91ffffcc 	andi	r7,r18,65535
    a6c4:	9004d43a 	srli	r2,r18,16
    a6c8:	314cb03a 	or	r6,r6,r5
    a6cc:	317fffcc 	andi	r5,r6,65535
    a6d0:	300cd43a 	srli	r6,r6,16
    a6d4:	29d3383a 	mul	r9,r5,r7
    a6d8:	288b383a 	mul	r5,r5,r2
    a6dc:	31cf383a 	mul	r7,r6,r7
    a6e0:	4806d43a 	srli	r3,r9,16
    a6e4:	4111c83a 	sub	r8,r8,r4
    a6e8:	29cb883a 	add	r5,r5,r7
    a6ec:	194b883a 	add	r5,r3,r5
    a6f0:	3085383a 	mul	r2,r6,r2
    a6f4:	29c0022e 	bgeu	r5,r7,a700 <__umoddi3+0x3d8>
    a6f8:	00c00074 	movhi	r3,1
    a6fc:	10c5883a 	add	r2,r2,r3
    a700:	2808d43a 	srli	r4,r5,16
    a704:	280a943a 	slli	r5,r5,16
    a708:	4a7fffcc 	andi	r9,r9,65535
    a70c:	2085883a 	add	r2,r4,r2
    a710:	2a4b883a 	add	r5,r5,r9
    a714:	40803636 	bltu	r8,r2,a7f0 <__umoddi3+0x4c8>
    a718:	40804d26 	beq	r8,r2,a850 <__umoddi3+0x528>
    a71c:	4089c83a 	sub	r4,r8,r2
    a720:	280f883a 	mov	r7,r5
    a724:	81cfc83a 	sub	r7,r16,r7
    a728:	81c7803a 	cmpltu	r3,r16,r7
    a72c:	20c7c83a 	sub	r3,r4,r3
    a730:	1cc4983a 	sll	r2,r3,r19
    a734:	3d0ed83a 	srl	r7,r7,r20
    a738:	1d06d83a 	srl	r3,r3,r20
    a73c:	11c4b03a 	or	r2,r2,r7
    a740:	003f9306 	br	a590 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a590>
    a744:	9ca6983a 	sll	r19,r19,r18
    a748:	88e8d83a 	srl	r20,r17,r3
    a74c:	80c4d83a 	srl	r2,r16,r3
    a750:	982cd43a 	srli	r22,r19,16
    a754:	8ca2983a 	sll	r17,r17,r18
    a758:	a009883a 	mov	r4,r20
    a75c:	b00b883a 	mov	r5,r22
    a760:	1478b03a 	or	fp,r2,r17
    a764:	000a9bc0 	call	a9bc <__umodsi3>
    a768:	a009883a 	mov	r4,r20
    a76c:	b00b883a 	mov	r5,r22
    a770:	1023883a 	mov	r17,r2
    a774:	000a9580 	call	a958 <__udivsi3>
    a778:	9d7fffcc 	andi	r21,r19,65535
    a77c:	880a943a 	slli	r5,r17,16
    a780:	e008d43a 	srli	r4,fp,16
    a784:	a885383a 	mul	r2,r21,r2
    a788:	84a8983a 	sll	r20,r16,r18
    a78c:	2148b03a 	or	r4,r4,r5
    a790:	2080042e 	bgeu	r4,r2,a7a4 <__umoddi3+0x47c>
    a794:	24c9883a 	add	r4,r4,r19
    a798:	24c00236 	bltu	r4,r19,a7a4 <__umoddi3+0x47c>
    a79c:	2080012e 	bgeu	r4,r2,a7a4 <__umoddi3+0x47c>
    a7a0:	24c9883a 	add	r4,r4,r19
    a7a4:	20a3c83a 	sub	r17,r4,r2
    a7a8:	b00b883a 	mov	r5,r22
    a7ac:	8809883a 	mov	r4,r17
    a7b0:	000a9bc0 	call	a9bc <__umodsi3>
    a7b4:	102f883a 	mov	r23,r2
    a7b8:	8809883a 	mov	r4,r17
    a7bc:	b00b883a 	mov	r5,r22
    a7c0:	000a9580 	call	a958 <__udivsi3>
    a7c4:	b82e943a 	slli	r23,r23,16
    a7c8:	a885383a 	mul	r2,r21,r2
    a7cc:	e13fffcc 	andi	r4,fp,65535
    a7d0:	25c8b03a 	or	r4,r4,r23
    a7d4:	2080042e 	bgeu	r4,r2,a7e8 <__umoddi3+0x4c0>
    a7d8:	24c9883a 	add	r4,r4,r19
    a7dc:	24c00236 	bltu	r4,r19,a7e8 <__umoddi3+0x4c0>
    a7e0:	2080012e 	bgeu	r4,r2,a7e8 <__umoddi3+0x4c0>
    a7e4:	24c9883a 	add	r4,r4,r19
    a7e8:	20a3c83a 	sub	r17,r4,r2
    a7ec:	003f4806 	br	a510 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a510>
    a7f0:	2c8fc83a 	sub	r7,r5,r18
    a7f4:	1545c83a 	sub	r2,r2,r21
    a7f8:	29cb803a 	cmpltu	r5,r5,r7
    a7fc:	1145c83a 	sub	r2,r2,r5
    a800:	4089c83a 	sub	r4,r8,r2
    a804:	003fc706 	br	a724 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a724>
    a808:	01000604 	movi	r4,24
    a80c:	003f1806 	br	a470 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a470>
    a810:	00800604 	movi	r2,24
    a814:	003f3206 	br	a4e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a4e0>
    a818:	01000604 	movi	r4,24
    a81c:	003ed906 	br	a384 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a384>
    a820:	413fa52e 	bgeu	r8,r4,a6b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a6b8>
    a824:	297fff84 	addi	r5,r5,-2
    a828:	4551883a 	add	r8,r8,r21
    a82c:	003fa306 	br	a6bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a6bc>
    a830:	15ff8b2e 	bgeu	r2,r23,a660 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a660>
    a834:	31bfff84 	addi	r6,r6,-2
    a838:	1545883a 	add	r2,r2,r21
    a83c:	003f8906 	br	a664 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a664>
    a840:	24c9883a 	add	r4,r4,r19
    a844:	003eee06 	br	a400 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a400>
    a848:	8005883a 	mov	r2,r16
    a84c:	003f1706 	br	a4ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a4ac>
    a850:	817fe736 	bltu	r16,r5,a7f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a7f0>
    a854:	280f883a 	mov	r7,r5
    a858:	0009883a 	mov	r4,zero
    a85c:	003fb106 	br	a724 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a724>

0000a860 <__divsi3>:
    a860:	20001b16 	blt	r4,zero,a8d0 <__divsi3+0x70>
    a864:	000f883a 	mov	r7,zero
    a868:	28001616 	blt	r5,zero,a8c4 <__divsi3+0x64>
    a86c:	200d883a 	mov	r6,r4
    a870:	29001a2e 	bgeu	r5,r4,a8dc <__divsi3+0x7c>
    a874:	00800804 	movi	r2,32
    a878:	00c00044 	movi	r3,1
    a87c:	00000106 	br	a884 <__divsi3+0x24>
    a880:	10000d26 	beq	r2,zero,a8b8 <__divsi3+0x58>
    a884:	294b883a 	add	r5,r5,r5
    a888:	10bfffc4 	addi	r2,r2,-1
    a88c:	18c7883a 	add	r3,r3,r3
    a890:	293ffb36 	bltu	r5,r4,a880 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a880>
    a894:	0005883a 	mov	r2,zero
    a898:	18000726 	beq	r3,zero,a8b8 <__divsi3+0x58>
    a89c:	0005883a 	mov	r2,zero
    a8a0:	31400236 	bltu	r6,r5,a8ac <__divsi3+0x4c>
    a8a4:	314dc83a 	sub	r6,r6,r5
    a8a8:	10c4b03a 	or	r2,r2,r3
    a8ac:	1806d07a 	srli	r3,r3,1
    a8b0:	280ad07a 	srli	r5,r5,1
    a8b4:	183ffa1e 	bne	r3,zero,a8a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a8a0>
    a8b8:	38000126 	beq	r7,zero,a8c0 <__divsi3+0x60>
    a8bc:	0085c83a 	sub	r2,zero,r2
    a8c0:	f800283a 	ret
    a8c4:	014bc83a 	sub	r5,zero,r5
    a8c8:	39c0005c 	xori	r7,r7,1
    a8cc:	003fe706 	br	a86c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a86c>
    a8d0:	0109c83a 	sub	r4,zero,r4
    a8d4:	01c00044 	movi	r7,1
    a8d8:	003fe306 	br	a868 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a868>
    a8dc:	00c00044 	movi	r3,1
    a8e0:	003fee06 	br	a89c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a89c>

0000a8e4 <__modsi3>:
    a8e4:	20001716 	blt	r4,zero,a944 <__modsi3+0x60>
    a8e8:	000f883a 	mov	r7,zero
    a8ec:	2005883a 	mov	r2,r4
    a8f0:	28001216 	blt	r5,zero,a93c <__modsi3+0x58>
    a8f4:	2900162e 	bgeu	r5,r4,a950 <__modsi3+0x6c>
    a8f8:	01800804 	movi	r6,32
    a8fc:	00c00044 	movi	r3,1
    a900:	00000106 	br	a908 <__modsi3+0x24>
    a904:	30000a26 	beq	r6,zero,a930 <__modsi3+0x4c>
    a908:	294b883a 	add	r5,r5,r5
    a90c:	31bfffc4 	addi	r6,r6,-1
    a910:	18c7883a 	add	r3,r3,r3
    a914:	293ffb36 	bltu	r5,r4,a904 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a904>
    a918:	18000526 	beq	r3,zero,a930 <__modsi3+0x4c>
    a91c:	1806d07a 	srli	r3,r3,1
    a920:	11400136 	bltu	r2,r5,a928 <__modsi3+0x44>
    a924:	1145c83a 	sub	r2,r2,r5
    a928:	280ad07a 	srli	r5,r5,1
    a92c:	183ffb1e 	bne	r3,zero,a91c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a91c>
    a930:	38000126 	beq	r7,zero,a938 <__modsi3+0x54>
    a934:	0085c83a 	sub	r2,zero,r2
    a938:	f800283a 	ret
    a93c:	014bc83a 	sub	r5,zero,r5
    a940:	003fec06 	br	a8f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a8f4>
    a944:	0109c83a 	sub	r4,zero,r4
    a948:	01c00044 	movi	r7,1
    a94c:	003fe706 	br	a8ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a8ec>
    a950:	00c00044 	movi	r3,1
    a954:	003ff106 	br	a91c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a91c>

0000a958 <__udivsi3>:
    a958:	200d883a 	mov	r6,r4
    a95c:	2900152e 	bgeu	r5,r4,a9b4 <__udivsi3+0x5c>
    a960:	28001416 	blt	r5,zero,a9b4 <__udivsi3+0x5c>
    a964:	00800804 	movi	r2,32
    a968:	00c00044 	movi	r3,1
    a96c:	00000206 	br	a978 <__udivsi3+0x20>
    a970:	10000e26 	beq	r2,zero,a9ac <__udivsi3+0x54>
    a974:	28000516 	blt	r5,zero,a98c <__udivsi3+0x34>
    a978:	294b883a 	add	r5,r5,r5
    a97c:	10bfffc4 	addi	r2,r2,-1
    a980:	18c7883a 	add	r3,r3,r3
    a984:	293ffa36 	bltu	r5,r4,a970 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a970>
    a988:	18000826 	beq	r3,zero,a9ac <__udivsi3+0x54>
    a98c:	0005883a 	mov	r2,zero
    a990:	31400236 	bltu	r6,r5,a99c <__udivsi3+0x44>
    a994:	314dc83a 	sub	r6,r6,r5
    a998:	10c4b03a 	or	r2,r2,r3
    a99c:	1806d07a 	srli	r3,r3,1
    a9a0:	280ad07a 	srli	r5,r5,1
    a9a4:	183ffa1e 	bne	r3,zero,a990 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a990>
    a9a8:	f800283a 	ret
    a9ac:	0005883a 	mov	r2,zero
    a9b0:	f800283a 	ret
    a9b4:	00c00044 	movi	r3,1
    a9b8:	003ff406 	br	a98c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a98c>

0000a9bc <__umodsi3>:
    a9bc:	2005883a 	mov	r2,r4
    a9c0:	2900122e 	bgeu	r5,r4,aa0c <__umodsi3+0x50>
    a9c4:	28001116 	blt	r5,zero,aa0c <__umodsi3+0x50>
    a9c8:	01800804 	movi	r6,32
    a9cc:	00c00044 	movi	r3,1
    a9d0:	00000206 	br	a9dc <__umodsi3+0x20>
    a9d4:	30000c26 	beq	r6,zero,aa08 <__umodsi3+0x4c>
    a9d8:	28000516 	blt	r5,zero,a9f0 <__umodsi3+0x34>
    a9dc:	294b883a 	add	r5,r5,r5
    a9e0:	31bfffc4 	addi	r6,r6,-1
    a9e4:	18c7883a 	add	r3,r3,r3
    a9e8:	293ffa36 	bltu	r5,r4,a9d4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a9d4>
    a9ec:	18000626 	beq	r3,zero,aa08 <__umodsi3+0x4c>
    a9f0:	1806d07a 	srli	r3,r3,1
    a9f4:	11400136 	bltu	r2,r5,a9fc <__umodsi3+0x40>
    a9f8:	1145c83a 	sub	r2,r2,r5
    a9fc:	280ad07a 	srli	r5,r5,1
    aa00:	183ffb1e 	bne	r3,zero,a9f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a9f0>
    aa04:	f800283a 	ret
    aa08:	f800283a 	ret
    aa0c:	00c00044 	movi	r3,1
    aa10:	003ff706 	br	a9f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a9f0>

0000aa14 <__adddf3>:
    aa14:	02c00434 	movhi	r11,16
    aa18:	5affffc4 	addi	r11,r11,-1
    aa1c:	2806d7fa 	srli	r3,r5,31
    aa20:	2ad4703a 	and	r10,r5,r11
    aa24:	3ad2703a 	and	r9,r7,r11
    aa28:	3804d53a 	srli	r2,r7,20
    aa2c:	3018d77a 	srli	r12,r6,29
    aa30:	280ad53a 	srli	r5,r5,20
    aa34:	501490fa 	slli	r10,r10,3
    aa38:	2010d77a 	srli	r8,r4,29
    aa3c:	481290fa 	slli	r9,r9,3
    aa40:	380ed7fa 	srli	r7,r7,31
    aa44:	defffb04 	addi	sp,sp,-20
    aa48:	dc800215 	stw	r18,8(sp)
    aa4c:	dc400115 	stw	r17,4(sp)
    aa50:	dc000015 	stw	r16,0(sp)
    aa54:	dfc00415 	stw	ra,16(sp)
    aa58:	dcc00315 	stw	r19,12(sp)
    aa5c:	1c803fcc 	andi	r18,r3,255
    aa60:	2c01ffcc 	andi	r16,r5,2047
    aa64:	5210b03a 	or	r8,r10,r8
    aa68:	202290fa 	slli	r17,r4,3
    aa6c:	1081ffcc 	andi	r2,r2,2047
    aa70:	4b12b03a 	or	r9,r9,r12
    aa74:	300c90fa 	slli	r6,r6,3
    aa78:	91c07526 	beq	r18,r7,ac50 <__adddf3+0x23c>
    aa7c:	8087c83a 	sub	r3,r16,r2
    aa80:	00c0ab0e 	bge	zero,r3,ad30 <__adddf3+0x31c>
    aa84:	10002a1e 	bne	r2,zero,ab30 <__adddf3+0x11c>
    aa88:	4984b03a 	or	r2,r9,r6
    aa8c:	1000961e 	bne	r2,zero,ace8 <__adddf3+0x2d4>
    aa90:	888001cc 	andi	r2,r17,7
    aa94:	10000726 	beq	r2,zero,aab4 <__adddf3+0xa0>
    aa98:	888003cc 	andi	r2,r17,15
    aa9c:	00c00104 	movi	r3,4
    aaa0:	10c00426 	beq	r2,r3,aab4 <__adddf3+0xa0>
    aaa4:	88c7883a 	add	r3,r17,r3
    aaa8:	1c63803a 	cmpltu	r17,r3,r17
    aaac:	4451883a 	add	r8,r8,r17
    aab0:	1823883a 	mov	r17,r3
    aab4:	4080202c 	andhi	r2,r8,128
    aab8:	10005926 	beq	r2,zero,ac20 <__adddf3+0x20c>
    aabc:	84000044 	addi	r16,r16,1
    aac0:	0081ffc4 	movi	r2,2047
    aac4:	8080ba26 	beq	r16,r2,adb0 <__adddf3+0x39c>
    aac8:	00bfe034 	movhi	r2,65408
    aacc:	10bfffc4 	addi	r2,r2,-1
    aad0:	4090703a 	and	r8,r8,r2
    aad4:	4004977a 	slli	r2,r8,29
    aad8:	4010927a 	slli	r8,r8,9
    aadc:	8822d0fa 	srli	r17,r17,3
    aae0:	8401ffcc 	andi	r16,r16,2047
    aae4:	4010d33a 	srli	r8,r8,12
    aae8:	9007883a 	mov	r3,r18
    aaec:	1444b03a 	or	r2,r2,r17
    aaf0:	8401ffcc 	andi	r16,r16,2047
    aaf4:	8020953a 	slli	r16,r16,20
    aaf8:	18c03fcc 	andi	r3,r3,255
    aafc:	01000434 	movhi	r4,16
    ab00:	213fffc4 	addi	r4,r4,-1
    ab04:	180697fa 	slli	r3,r3,31
    ab08:	4110703a 	and	r8,r8,r4
    ab0c:	4410b03a 	or	r8,r8,r16
    ab10:	40c6b03a 	or	r3,r8,r3
    ab14:	dfc00417 	ldw	ra,16(sp)
    ab18:	dcc00317 	ldw	r19,12(sp)
    ab1c:	dc800217 	ldw	r18,8(sp)
    ab20:	dc400117 	ldw	r17,4(sp)
    ab24:	dc000017 	ldw	r16,0(sp)
    ab28:	dec00504 	addi	sp,sp,20
    ab2c:	f800283a 	ret
    ab30:	0081ffc4 	movi	r2,2047
    ab34:	80bfd626 	beq	r16,r2,aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    ab38:	4a402034 	orhi	r9,r9,128
    ab3c:	00800e04 	movi	r2,56
    ab40:	10c09f16 	blt	r2,r3,adc0 <__adddf3+0x3ac>
    ab44:	008007c4 	movi	r2,31
    ab48:	10c0c216 	blt	r2,r3,ae54 <__adddf3+0x440>
    ab4c:	00800804 	movi	r2,32
    ab50:	10c5c83a 	sub	r2,r2,r3
    ab54:	488a983a 	sll	r5,r9,r2
    ab58:	30c8d83a 	srl	r4,r6,r3
    ab5c:	3084983a 	sll	r2,r6,r2
    ab60:	48c6d83a 	srl	r3,r9,r3
    ab64:	290cb03a 	or	r6,r5,r4
    ab68:	1004c03a 	cmpne	r2,r2,zero
    ab6c:	308cb03a 	or	r6,r6,r2
    ab70:	898dc83a 	sub	r6,r17,r6
    ab74:	89a3803a 	cmpltu	r17,r17,r6
    ab78:	40d1c83a 	sub	r8,r8,r3
    ab7c:	4451c83a 	sub	r8,r8,r17
    ab80:	3023883a 	mov	r17,r6
    ab84:	4080202c 	andhi	r2,r8,128
    ab88:	10002326 	beq	r2,zero,ac18 <__adddf3+0x204>
    ab8c:	04c02034 	movhi	r19,128
    ab90:	9cffffc4 	addi	r19,r19,-1
    ab94:	44e6703a 	and	r19,r8,r19
    ab98:	98007626 	beq	r19,zero,ad74 <__adddf3+0x360>
    ab9c:	9809883a 	mov	r4,r19
    aba0:	00007cc0 	call	7cc <__clzsi2>
    aba4:	10fffe04 	addi	r3,r2,-8
    aba8:	010007c4 	movi	r4,31
    abac:	20c07716 	blt	r4,r3,ad8c <__adddf3+0x378>
    abb0:	00800804 	movi	r2,32
    abb4:	10c5c83a 	sub	r2,r2,r3
    abb8:	8884d83a 	srl	r2,r17,r2
    abbc:	98d0983a 	sll	r8,r19,r3
    abc0:	88e2983a 	sll	r17,r17,r3
    abc4:	1204b03a 	or	r2,r2,r8
    abc8:	1c007416 	blt	r3,r16,ad9c <__adddf3+0x388>
    abcc:	1c21c83a 	sub	r16,r3,r16
    abd0:	82000044 	addi	r8,r16,1
    abd4:	00c007c4 	movi	r3,31
    abd8:	1a009116 	blt	r3,r8,ae20 <__adddf3+0x40c>
    abdc:	00c00804 	movi	r3,32
    abe0:	1a07c83a 	sub	r3,r3,r8
    abe4:	8a08d83a 	srl	r4,r17,r8
    abe8:	88e2983a 	sll	r17,r17,r3
    abec:	10c6983a 	sll	r3,r2,r3
    abf0:	1210d83a 	srl	r8,r2,r8
    abf4:	8804c03a 	cmpne	r2,r17,zero
    abf8:	1906b03a 	or	r3,r3,r4
    abfc:	18a2b03a 	or	r17,r3,r2
    ac00:	0021883a 	mov	r16,zero
    ac04:	003fa206 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    ac08:	1890b03a 	or	r8,r3,r2
    ac0c:	40017d26 	beq	r8,zero,b204 <__adddf3+0x7f0>
    ac10:	1011883a 	mov	r8,r2
    ac14:	1823883a 	mov	r17,r3
    ac18:	888001cc 	andi	r2,r17,7
    ac1c:	103f9e1e 	bne	r2,zero,aa98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa98>
    ac20:	4004977a 	slli	r2,r8,29
    ac24:	8822d0fa 	srli	r17,r17,3
    ac28:	4010d0fa 	srli	r8,r8,3
    ac2c:	9007883a 	mov	r3,r18
    ac30:	1444b03a 	or	r2,r2,r17
    ac34:	0101ffc4 	movi	r4,2047
    ac38:	81002426 	beq	r16,r4,accc <__adddf3+0x2b8>
    ac3c:	8120703a 	and	r16,r16,r4
    ac40:	01000434 	movhi	r4,16
    ac44:	213fffc4 	addi	r4,r4,-1
    ac48:	4110703a 	and	r8,r8,r4
    ac4c:	003fa806 	br	aaf0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aaf0>
    ac50:	8089c83a 	sub	r4,r16,r2
    ac54:	01005e0e 	bge	zero,r4,add0 <__adddf3+0x3bc>
    ac58:	10002b26 	beq	r2,zero,ad08 <__adddf3+0x2f4>
    ac5c:	0081ffc4 	movi	r2,2047
    ac60:	80bf8b26 	beq	r16,r2,aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    ac64:	4a402034 	orhi	r9,r9,128
    ac68:	00800e04 	movi	r2,56
    ac6c:	1100a40e 	bge	r2,r4,af00 <__adddf3+0x4ec>
    ac70:	498cb03a 	or	r6,r9,r6
    ac74:	300ac03a 	cmpne	r5,r6,zero
    ac78:	0013883a 	mov	r9,zero
    ac7c:	2c4b883a 	add	r5,r5,r17
    ac80:	2c63803a 	cmpltu	r17,r5,r17
    ac84:	4a11883a 	add	r8,r9,r8
    ac88:	8a11883a 	add	r8,r17,r8
    ac8c:	2823883a 	mov	r17,r5
    ac90:	4080202c 	andhi	r2,r8,128
    ac94:	103fe026 	beq	r2,zero,ac18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac18>
    ac98:	84000044 	addi	r16,r16,1
    ac9c:	0081ffc4 	movi	r2,2047
    aca0:	8080d226 	beq	r16,r2,afec <__adddf3+0x5d8>
    aca4:	00bfe034 	movhi	r2,65408
    aca8:	10bfffc4 	addi	r2,r2,-1
    acac:	4090703a 	and	r8,r8,r2
    acb0:	880ad07a 	srli	r5,r17,1
    acb4:	400897fa 	slli	r4,r8,31
    acb8:	88c0004c 	andi	r3,r17,1
    acbc:	28e2b03a 	or	r17,r5,r3
    acc0:	4010d07a 	srli	r8,r8,1
    acc4:	2462b03a 	or	r17,r4,r17
    acc8:	003f7106 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    accc:	4088b03a 	or	r4,r8,r2
    acd0:	20014526 	beq	r4,zero,b1e8 <__adddf3+0x7d4>
    acd4:	01000434 	movhi	r4,16
    acd8:	42000234 	orhi	r8,r8,8
    acdc:	213fffc4 	addi	r4,r4,-1
    ace0:	4110703a 	and	r8,r8,r4
    ace4:	003f8206 	br	aaf0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aaf0>
    ace8:	18ffffc4 	addi	r3,r3,-1
    acec:	1800491e 	bne	r3,zero,ae14 <__adddf3+0x400>
    acf0:	898bc83a 	sub	r5,r17,r6
    acf4:	8963803a 	cmpltu	r17,r17,r5
    acf8:	4251c83a 	sub	r8,r8,r9
    acfc:	4451c83a 	sub	r8,r8,r17
    ad00:	2823883a 	mov	r17,r5
    ad04:	003f9f06 	br	ab84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ab84>
    ad08:	4984b03a 	or	r2,r9,r6
    ad0c:	103f6026 	beq	r2,zero,aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    ad10:	213fffc4 	addi	r4,r4,-1
    ad14:	2000931e 	bne	r4,zero,af64 <__adddf3+0x550>
    ad18:	898d883a 	add	r6,r17,r6
    ad1c:	3463803a 	cmpltu	r17,r6,r17
    ad20:	4251883a 	add	r8,r8,r9
    ad24:	8a11883a 	add	r8,r17,r8
    ad28:	3023883a 	mov	r17,r6
    ad2c:	003fd806 	br	ac90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac90>
    ad30:	1800541e 	bne	r3,zero,ae84 <__adddf3+0x470>
    ad34:	80800044 	addi	r2,r16,1
    ad38:	1081ffcc 	andi	r2,r2,2047
    ad3c:	00c00044 	movi	r3,1
    ad40:	1880a00e 	bge	r3,r2,afc4 <__adddf3+0x5b0>
    ad44:	8989c83a 	sub	r4,r17,r6
    ad48:	8905803a 	cmpltu	r2,r17,r4
    ad4c:	4267c83a 	sub	r19,r8,r9
    ad50:	98a7c83a 	sub	r19,r19,r2
    ad54:	9880202c 	andhi	r2,r19,128
    ad58:	10006326 	beq	r2,zero,aee8 <__adddf3+0x4d4>
    ad5c:	3463c83a 	sub	r17,r6,r17
    ad60:	4a07c83a 	sub	r3,r9,r8
    ad64:	344d803a 	cmpltu	r6,r6,r17
    ad68:	19a7c83a 	sub	r19,r3,r6
    ad6c:	3825883a 	mov	r18,r7
    ad70:	983f8a1e 	bne	r19,zero,ab9c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ab9c>
    ad74:	8809883a 	mov	r4,r17
    ad78:	00007cc0 	call	7cc <__clzsi2>
    ad7c:	10800804 	addi	r2,r2,32
    ad80:	10fffe04 	addi	r3,r2,-8
    ad84:	010007c4 	movi	r4,31
    ad88:	20ff890e 	bge	r4,r3,abb0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700abb0>
    ad8c:	10bff604 	addi	r2,r2,-40
    ad90:	8884983a 	sll	r2,r17,r2
    ad94:	0023883a 	mov	r17,zero
    ad98:	1c3f8c0e 	bge	r3,r16,abcc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700abcc>
    ad9c:	023fe034 	movhi	r8,65408
    ada0:	423fffc4 	addi	r8,r8,-1
    ada4:	80e1c83a 	sub	r16,r16,r3
    ada8:	1210703a 	and	r8,r2,r8
    adac:	003f3806 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    adb0:	9007883a 	mov	r3,r18
    adb4:	0011883a 	mov	r8,zero
    adb8:	0005883a 	mov	r2,zero
    adbc:	003f4c06 	br	aaf0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aaf0>
    adc0:	498cb03a 	or	r6,r9,r6
    adc4:	300cc03a 	cmpne	r6,r6,zero
    adc8:	0007883a 	mov	r3,zero
    adcc:	003f6806 	br	ab70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ab70>
    add0:	20009c1e 	bne	r4,zero,b044 <__adddf3+0x630>
    add4:	80800044 	addi	r2,r16,1
    add8:	1141ffcc 	andi	r5,r2,2047
    addc:	01000044 	movi	r4,1
    ade0:	2140670e 	bge	r4,r5,af80 <__adddf3+0x56c>
    ade4:	0101ffc4 	movi	r4,2047
    ade8:	11007f26 	beq	r2,r4,afe8 <__adddf3+0x5d4>
    adec:	898d883a 	add	r6,r17,r6
    adf0:	4247883a 	add	r3,r8,r9
    adf4:	3451803a 	cmpltu	r8,r6,r17
    adf8:	40d1883a 	add	r8,r8,r3
    adfc:	402297fa 	slli	r17,r8,31
    ae00:	300cd07a 	srli	r6,r6,1
    ae04:	4010d07a 	srli	r8,r8,1
    ae08:	1021883a 	mov	r16,r2
    ae0c:	89a2b03a 	or	r17,r17,r6
    ae10:	003f1f06 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    ae14:	0081ffc4 	movi	r2,2047
    ae18:	80bf481e 	bne	r16,r2,ab3c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ab3c>
    ae1c:	003f1c06 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    ae20:	843ff844 	addi	r16,r16,-31
    ae24:	01000804 	movi	r4,32
    ae28:	1406d83a 	srl	r3,r2,r16
    ae2c:	41005026 	beq	r8,r4,af70 <__adddf3+0x55c>
    ae30:	01001004 	movi	r4,64
    ae34:	2211c83a 	sub	r8,r4,r8
    ae38:	1204983a 	sll	r2,r2,r8
    ae3c:	88a2b03a 	or	r17,r17,r2
    ae40:	8822c03a 	cmpne	r17,r17,zero
    ae44:	1c62b03a 	or	r17,r3,r17
    ae48:	0011883a 	mov	r8,zero
    ae4c:	0021883a 	mov	r16,zero
    ae50:	003f7106 	br	ac18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac18>
    ae54:	193ff804 	addi	r4,r3,-32
    ae58:	00800804 	movi	r2,32
    ae5c:	4908d83a 	srl	r4,r9,r4
    ae60:	18804526 	beq	r3,r2,af78 <__adddf3+0x564>
    ae64:	00801004 	movi	r2,64
    ae68:	10c5c83a 	sub	r2,r2,r3
    ae6c:	4886983a 	sll	r3,r9,r2
    ae70:	198cb03a 	or	r6,r3,r6
    ae74:	300cc03a 	cmpne	r6,r6,zero
    ae78:	218cb03a 	or	r6,r4,r6
    ae7c:	0007883a 	mov	r3,zero
    ae80:	003f3b06 	br	ab70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ab70>
    ae84:	80002a26 	beq	r16,zero,af30 <__adddf3+0x51c>
    ae88:	0101ffc4 	movi	r4,2047
    ae8c:	11006826 	beq	r2,r4,b030 <__adddf3+0x61c>
    ae90:	00c7c83a 	sub	r3,zero,r3
    ae94:	42002034 	orhi	r8,r8,128
    ae98:	01000e04 	movi	r4,56
    ae9c:	20c07c16 	blt	r4,r3,b090 <__adddf3+0x67c>
    aea0:	010007c4 	movi	r4,31
    aea4:	20c0da16 	blt	r4,r3,b210 <__adddf3+0x7fc>
    aea8:	01000804 	movi	r4,32
    aeac:	20c9c83a 	sub	r4,r4,r3
    aeb0:	4114983a 	sll	r10,r8,r4
    aeb4:	88cad83a 	srl	r5,r17,r3
    aeb8:	8908983a 	sll	r4,r17,r4
    aebc:	40c6d83a 	srl	r3,r8,r3
    aec0:	5162b03a 	or	r17,r10,r5
    aec4:	2008c03a 	cmpne	r4,r4,zero
    aec8:	8922b03a 	or	r17,r17,r4
    aecc:	3463c83a 	sub	r17,r6,r17
    aed0:	48c7c83a 	sub	r3,r9,r3
    aed4:	344d803a 	cmpltu	r6,r6,r17
    aed8:	1991c83a 	sub	r8,r3,r6
    aedc:	1021883a 	mov	r16,r2
    aee0:	3825883a 	mov	r18,r7
    aee4:	003f2706 	br	ab84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ab84>
    aee8:	24d0b03a 	or	r8,r4,r19
    aeec:	40001b1e 	bne	r8,zero,af5c <__adddf3+0x548>
    aef0:	0005883a 	mov	r2,zero
    aef4:	0007883a 	mov	r3,zero
    aef8:	0021883a 	mov	r16,zero
    aefc:	003f4d06 	br	ac34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac34>
    af00:	008007c4 	movi	r2,31
    af04:	11003c16 	blt	r2,r4,aff8 <__adddf3+0x5e4>
    af08:	00800804 	movi	r2,32
    af0c:	1105c83a 	sub	r2,r2,r4
    af10:	488e983a 	sll	r7,r9,r2
    af14:	310ad83a 	srl	r5,r6,r4
    af18:	3084983a 	sll	r2,r6,r2
    af1c:	4912d83a 	srl	r9,r9,r4
    af20:	394ab03a 	or	r5,r7,r5
    af24:	1004c03a 	cmpne	r2,r2,zero
    af28:	288ab03a 	or	r5,r5,r2
    af2c:	003f5306 	br	ac7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac7c>
    af30:	4448b03a 	or	r4,r8,r17
    af34:	20003e26 	beq	r4,zero,b030 <__adddf3+0x61c>
    af38:	00c6303a 	nor	r3,zero,r3
    af3c:	18003a1e 	bne	r3,zero,b028 <__adddf3+0x614>
    af40:	3463c83a 	sub	r17,r6,r17
    af44:	4a07c83a 	sub	r3,r9,r8
    af48:	344d803a 	cmpltu	r6,r6,r17
    af4c:	1991c83a 	sub	r8,r3,r6
    af50:	1021883a 	mov	r16,r2
    af54:	3825883a 	mov	r18,r7
    af58:	003f0a06 	br	ab84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ab84>
    af5c:	2023883a 	mov	r17,r4
    af60:	003f0d06 	br	ab98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ab98>
    af64:	0081ffc4 	movi	r2,2047
    af68:	80bf3f1e 	bne	r16,r2,ac68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac68>
    af6c:	003ec806 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    af70:	0005883a 	mov	r2,zero
    af74:	003fb106 	br	ae3c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ae3c>
    af78:	0007883a 	mov	r3,zero
    af7c:	003fbc06 	br	ae70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ae70>
    af80:	4444b03a 	or	r2,r8,r17
    af84:	8000871e 	bne	r16,zero,b1a4 <__adddf3+0x790>
    af88:	1000ba26 	beq	r2,zero,b274 <__adddf3+0x860>
    af8c:	4984b03a 	or	r2,r9,r6
    af90:	103ebf26 	beq	r2,zero,aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    af94:	8985883a 	add	r2,r17,r6
    af98:	4247883a 	add	r3,r8,r9
    af9c:	1451803a 	cmpltu	r8,r2,r17
    afa0:	40d1883a 	add	r8,r8,r3
    afa4:	40c0202c 	andhi	r3,r8,128
    afa8:	1023883a 	mov	r17,r2
    afac:	183f1a26 	beq	r3,zero,ac18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac18>
    afb0:	00bfe034 	movhi	r2,65408
    afb4:	10bfffc4 	addi	r2,r2,-1
    afb8:	2021883a 	mov	r16,r4
    afbc:	4090703a 	and	r8,r8,r2
    afc0:	003eb306 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    afc4:	4444b03a 	or	r2,r8,r17
    afc8:	8000291e 	bne	r16,zero,b070 <__adddf3+0x65c>
    afcc:	10004b1e 	bne	r2,zero,b0fc <__adddf3+0x6e8>
    afd0:	4990b03a 	or	r8,r9,r6
    afd4:	40008b26 	beq	r8,zero,b204 <__adddf3+0x7f0>
    afd8:	4811883a 	mov	r8,r9
    afdc:	3023883a 	mov	r17,r6
    afe0:	3825883a 	mov	r18,r7
    afe4:	003eaa06 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    afe8:	1021883a 	mov	r16,r2
    afec:	0011883a 	mov	r8,zero
    aff0:	0005883a 	mov	r2,zero
    aff4:	003f0f06 	br	ac34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac34>
    aff8:	217ff804 	addi	r5,r4,-32
    affc:	00800804 	movi	r2,32
    b000:	494ad83a 	srl	r5,r9,r5
    b004:	20807d26 	beq	r4,r2,b1fc <__adddf3+0x7e8>
    b008:	00801004 	movi	r2,64
    b00c:	1109c83a 	sub	r4,r2,r4
    b010:	4912983a 	sll	r9,r9,r4
    b014:	498cb03a 	or	r6,r9,r6
    b018:	300cc03a 	cmpne	r6,r6,zero
    b01c:	298ab03a 	or	r5,r5,r6
    b020:	0013883a 	mov	r9,zero
    b024:	003f1506 	br	ac7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac7c>
    b028:	0101ffc4 	movi	r4,2047
    b02c:	113f9a1e 	bne	r2,r4,ae98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ae98>
    b030:	4811883a 	mov	r8,r9
    b034:	3023883a 	mov	r17,r6
    b038:	1021883a 	mov	r16,r2
    b03c:	3825883a 	mov	r18,r7
    b040:	003e9306 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    b044:	8000161e 	bne	r16,zero,b0a0 <__adddf3+0x68c>
    b048:	444ab03a 	or	r5,r8,r17
    b04c:	28005126 	beq	r5,zero,b194 <__adddf3+0x780>
    b050:	0108303a 	nor	r4,zero,r4
    b054:	20004d1e 	bne	r4,zero,b18c <__adddf3+0x778>
    b058:	89a3883a 	add	r17,r17,r6
    b05c:	4253883a 	add	r9,r8,r9
    b060:	898d803a 	cmpltu	r6,r17,r6
    b064:	3251883a 	add	r8,r6,r9
    b068:	1021883a 	mov	r16,r2
    b06c:	003f0806 	br	ac90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac90>
    b070:	1000301e 	bne	r2,zero,b134 <__adddf3+0x720>
    b074:	4984b03a 	or	r2,r9,r6
    b078:	10007126 	beq	r2,zero,b240 <__adddf3+0x82c>
    b07c:	4811883a 	mov	r8,r9
    b080:	3023883a 	mov	r17,r6
    b084:	3825883a 	mov	r18,r7
    b088:	0401ffc4 	movi	r16,2047
    b08c:	003e8006 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    b090:	4462b03a 	or	r17,r8,r17
    b094:	8822c03a 	cmpne	r17,r17,zero
    b098:	0007883a 	mov	r3,zero
    b09c:	003f8b06 	br	aecc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aecc>
    b0a0:	0141ffc4 	movi	r5,2047
    b0a4:	11403b26 	beq	r2,r5,b194 <__adddf3+0x780>
    b0a8:	0109c83a 	sub	r4,zero,r4
    b0ac:	42002034 	orhi	r8,r8,128
    b0b0:	01400e04 	movi	r5,56
    b0b4:	29006716 	blt	r5,r4,b254 <__adddf3+0x840>
    b0b8:	014007c4 	movi	r5,31
    b0bc:	29007016 	blt	r5,r4,b280 <__adddf3+0x86c>
    b0c0:	01400804 	movi	r5,32
    b0c4:	290bc83a 	sub	r5,r5,r4
    b0c8:	4154983a 	sll	r10,r8,r5
    b0cc:	890ed83a 	srl	r7,r17,r4
    b0d0:	894a983a 	sll	r5,r17,r5
    b0d4:	4108d83a 	srl	r4,r8,r4
    b0d8:	51e2b03a 	or	r17,r10,r7
    b0dc:	280ac03a 	cmpne	r5,r5,zero
    b0e0:	8962b03a 	or	r17,r17,r5
    b0e4:	89a3883a 	add	r17,r17,r6
    b0e8:	2253883a 	add	r9,r4,r9
    b0ec:	898d803a 	cmpltu	r6,r17,r6
    b0f0:	3251883a 	add	r8,r6,r9
    b0f4:	1021883a 	mov	r16,r2
    b0f8:	003ee506 	br	ac90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac90>
    b0fc:	4984b03a 	or	r2,r9,r6
    b100:	103e6326 	beq	r2,zero,aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    b104:	8987c83a 	sub	r3,r17,r6
    b108:	88c9803a 	cmpltu	r4,r17,r3
    b10c:	4245c83a 	sub	r2,r8,r9
    b110:	1105c83a 	sub	r2,r2,r4
    b114:	1100202c 	andhi	r4,r2,128
    b118:	203ebb26 	beq	r4,zero,ac08 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac08>
    b11c:	3463c83a 	sub	r17,r6,r17
    b120:	4a07c83a 	sub	r3,r9,r8
    b124:	344d803a 	cmpltu	r6,r6,r17
    b128:	1991c83a 	sub	r8,r3,r6
    b12c:	3825883a 	mov	r18,r7
    b130:	003e5706 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    b134:	4984b03a 	or	r2,r9,r6
    b138:	10002e26 	beq	r2,zero,b1f4 <__adddf3+0x7e0>
    b13c:	4004d0fa 	srli	r2,r8,3
    b140:	8822d0fa 	srli	r17,r17,3
    b144:	4010977a 	slli	r8,r8,29
    b148:	10c0022c 	andhi	r3,r2,8
    b14c:	4462b03a 	or	r17,r8,r17
    b150:	18000826 	beq	r3,zero,b174 <__adddf3+0x760>
    b154:	4808d0fa 	srli	r4,r9,3
    b158:	20c0022c 	andhi	r3,r4,8
    b15c:	1800051e 	bne	r3,zero,b174 <__adddf3+0x760>
    b160:	300cd0fa 	srli	r6,r6,3
    b164:	4806977a 	slli	r3,r9,29
    b168:	2005883a 	mov	r2,r4
    b16c:	3825883a 	mov	r18,r7
    b170:	19a2b03a 	or	r17,r3,r6
    b174:	8810d77a 	srli	r8,r17,29
    b178:	100490fa 	slli	r2,r2,3
    b17c:	882290fa 	slli	r17,r17,3
    b180:	0401ffc4 	movi	r16,2047
    b184:	4090b03a 	or	r8,r8,r2
    b188:	003e4106 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    b18c:	0141ffc4 	movi	r5,2047
    b190:	117fc71e 	bne	r2,r5,b0b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b0b0>
    b194:	4811883a 	mov	r8,r9
    b198:	3023883a 	mov	r17,r6
    b19c:	1021883a 	mov	r16,r2
    b1a0:	003e3b06 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    b1a4:	10002f26 	beq	r2,zero,b264 <__adddf3+0x850>
    b1a8:	4984b03a 	or	r2,r9,r6
    b1ac:	10001126 	beq	r2,zero,b1f4 <__adddf3+0x7e0>
    b1b0:	4004d0fa 	srli	r2,r8,3
    b1b4:	8822d0fa 	srli	r17,r17,3
    b1b8:	4010977a 	slli	r8,r8,29
    b1bc:	10c0022c 	andhi	r3,r2,8
    b1c0:	4462b03a 	or	r17,r8,r17
    b1c4:	183feb26 	beq	r3,zero,b174 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b174>
    b1c8:	4808d0fa 	srli	r4,r9,3
    b1cc:	20c0022c 	andhi	r3,r4,8
    b1d0:	183fe81e 	bne	r3,zero,b174 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b174>
    b1d4:	300cd0fa 	srli	r6,r6,3
    b1d8:	4806977a 	slli	r3,r9,29
    b1dc:	2005883a 	mov	r2,r4
    b1e0:	19a2b03a 	or	r17,r3,r6
    b1e4:	003fe306 	br	b174 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b174>
    b1e8:	0011883a 	mov	r8,zero
    b1ec:	0005883a 	mov	r2,zero
    b1f0:	003e3f06 	br	aaf0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aaf0>
    b1f4:	0401ffc4 	movi	r16,2047
    b1f8:	003e2506 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    b1fc:	0013883a 	mov	r9,zero
    b200:	003f8406 	br	b014 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b014>
    b204:	0005883a 	mov	r2,zero
    b208:	0007883a 	mov	r3,zero
    b20c:	003e8906 	br	ac34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac34>
    b210:	197ff804 	addi	r5,r3,-32
    b214:	01000804 	movi	r4,32
    b218:	414ad83a 	srl	r5,r8,r5
    b21c:	19002426 	beq	r3,r4,b2b0 <__adddf3+0x89c>
    b220:	01001004 	movi	r4,64
    b224:	20c7c83a 	sub	r3,r4,r3
    b228:	40c6983a 	sll	r3,r8,r3
    b22c:	1c46b03a 	or	r3,r3,r17
    b230:	1806c03a 	cmpne	r3,r3,zero
    b234:	28e2b03a 	or	r17,r5,r3
    b238:	0007883a 	mov	r3,zero
    b23c:	003f2306 	br	aecc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aecc>
    b240:	0007883a 	mov	r3,zero
    b244:	5811883a 	mov	r8,r11
    b248:	00bfffc4 	movi	r2,-1
    b24c:	0401ffc4 	movi	r16,2047
    b250:	003e7806 	br	ac34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac34>
    b254:	4462b03a 	or	r17,r8,r17
    b258:	8822c03a 	cmpne	r17,r17,zero
    b25c:	0009883a 	mov	r4,zero
    b260:	003fa006 	br	b0e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b0e4>
    b264:	4811883a 	mov	r8,r9
    b268:	3023883a 	mov	r17,r6
    b26c:	0401ffc4 	movi	r16,2047
    b270:	003e0706 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    b274:	4811883a 	mov	r8,r9
    b278:	3023883a 	mov	r17,r6
    b27c:	003e0406 	br	aa90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa90>
    b280:	21fff804 	addi	r7,r4,-32
    b284:	01400804 	movi	r5,32
    b288:	41ced83a 	srl	r7,r8,r7
    b28c:	21400a26 	beq	r4,r5,b2b8 <__adddf3+0x8a4>
    b290:	01401004 	movi	r5,64
    b294:	2909c83a 	sub	r4,r5,r4
    b298:	4108983a 	sll	r4,r8,r4
    b29c:	2448b03a 	or	r4,r4,r17
    b2a0:	2008c03a 	cmpne	r4,r4,zero
    b2a4:	3922b03a 	or	r17,r7,r4
    b2a8:	0009883a 	mov	r4,zero
    b2ac:	003f8d06 	br	b0e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b0e4>
    b2b0:	0007883a 	mov	r3,zero
    b2b4:	003fdd06 	br	b22c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b22c>
    b2b8:	0009883a 	mov	r4,zero
    b2bc:	003ff706 	br	b29c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b29c>

0000b2c0 <__divdf3>:
    b2c0:	defff204 	addi	sp,sp,-56
    b2c4:	dd400915 	stw	r21,36(sp)
    b2c8:	282ad53a 	srli	r21,r5,20
    b2cc:	dd000815 	stw	r20,32(sp)
    b2d0:	2828d7fa 	srli	r20,r5,31
    b2d4:	dc000415 	stw	r16,16(sp)
    b2d8:	04000434 	movhi	r16,16
    b2dc:	df000c15 	stw	fp,48(sp)
    b2e0:	843fffc4 	addi	r16,r16,-1
    b2e4:	dfc00d15 	stw	ra,52(sp)
    b2e8:	ddc00b15 	stw	r23,44(sp)
    b2ec:	dd800a15 	stw	r22,40(sp)
    b2f0:	dcc00715 	stw	r19,28(sp)
    b2f4:	dc800615 	stw	r18,24(sp)
    b2f8:	dc400515 	stw	r17,20(sp)
    b2fc:	ad41ffcc 	andi	r21,r21,2047
    b300:	2c20703a 	and	r16,r5,r16
    b304:	a7003fcc 	andi	fp,r20,255
    b308:	a8006126 	beq	r21,zero,b490 <__divdf3+0x1d0>
    b30c:	0081ffc4 	movi	r2,2047
    b310:	2025883a 	mov	r18,r4
    b314:	a8803726 	beq	r21,r2,b3f4 <__divdf3+0x134>
    b318:	80800434 	orhi	r2,r16,16
    b31c:	100490fa 	slli	r2,r2,3
    b320:	2020d77a 	srli	r16,r4,29
    b324:	202490fa 	slli	r18,r4,3
    b328:	ad7f0044 	addi	r21,r21,-1023
    b32c:	80a0b03a 	or	r16,r16,r2
    b330:	0027883a 	mov	r19,zero
    b334:	0013883a 	mov	r9,zero
    b338:	3804d53a 	srli	r2,r7,20
    b33c:	382cd7fa 	srli	r22,r7,31
    b340:	04400434 	movhi	r17,16
    b344:	8c7fffc4 	addi	r17,r17,-1
    b348:	1081ffcc 	andi	r2,r2,2047
    b34c:	3011883a 	mov	r8,r6
    b350:	3c62703a 	and	r17,r7,r17
    b354:	b5c03fcc 	andi	r23,r22,255
    b358:	10006c26 	beq	r2,zero,b50c <__divdf3+0x24c>
    b35c:	00c1ffc4 	movi	r3,2047
    b360:	10c06426 	beq	r2,r3,b4f4 <__divdf3+0x234>
    b364:	88c00434 	orhi	r3,r17,16
    b368:	180690fa 	slli	r3,r3,3
    b36c:	3022d77a 	srli	r17,r6,29
    b370:	301090fa 	slli	r8,r6,3
    b374:	10bf0044 	addi	r2,r2,-1023
    b378:	88e2b03a 	or	r17,r17,r3
    b37c:	000f883a 	mov	r7,zero
    b380:	a58cf03a 	xor	r6,r20,r22
    b384:	3cc8b03a 	or	r4,r7,r19
    b388:	a8abc83a 	sub	r21,r21,r2
    b38c:	008003c4 	movi	r2,15
    b390:	3007883a 	mov	r3,r6
    b394:	34c03fcc 	andi	r19,r6,255
    b398:	11009036 	bltu	r2,r4,b5dc <__divdf3+0x31c>
    b39c:	200890ba 	slli	r4,r4,2
    b3a0:	00800074 	movhi	r2,1
    b3a4:	10aced04 	addi	r2,r2,-19532
    b3a8:	2089883a 	add	r4,r4,r2
    b3ac:	20800017 	ldw	r2,0(r4)
    b3b0:	1000683a 	jmp	r2
    b3b4:	0000b5dc 	xori	zero,zero,727
    b3b8:	0000b42c 	andhi	zero,zero,720
    b3bc:	0000b5cc 	andi	zero,zero,727
    b3c0:	0000b420 	cmpeqi	zero,zero,720
    b3c4:	0000b5cc 	andi	zero,zero,727
    b3c8:	0000b5a0 	cmpeqi	zero,zero,726
    b3cc:	0000b5cc 	andi	zero,zero,727
    b3d0:	0000b420 	cmpeqi	zero,zero,720
    b3d4:	0000b42c 	andhi	zero,zero,720
    b3d8:	0000b42c 	andhi	zero,zero,720
    b3dc:	0000b5a0 	cmpeqi	zero,zero,726
    b3e0:	0000b420 	cmpeqi	zero,zero,720
    b3e4:	0000b410 	cmplti	zero,zero,720
    b3e8:	0000b410 	cmplti	zero,zero,720
    b3ec:	0000b410 	cmplti	zero,zero,720
    b3f0:	0000b8c0 	call	b8c <___vfprintf_internal_r+0x2f0>
    b3f4:	2404b03a 	or	r2,r4,r16
    b3f8:	1000661e 	bne	r2,zero,b594 <__divdf3+0x2d4>
    b3fc:	04c00204 	movi	r19,8
    b400:	0021883a 	mov	r16,zero
    b404:	0025883a 	mov	r18,zero
    b408:	02400084 	movi	r9,2
    b40c:	003fca06 	br	b338 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b338>
    b410:	8023883a 	mov	r17,r16
    b414:	9011883a 	mov	r8,r18
    b418:	e02f883a 	mov	r23,fp
    b41c:	480f883a 	mov	r7,r9
    b420:	00800084 	movi	r2,2
    b424:	3881311e 	bne	r7,r2,b8ec <__divdf3+0x62c>
    b428:	b827883a 	mov	r19,r23
    b42c:	98c0004c 	andi	r3,r19,1
    b430:	0081ffc4 	movi	r2,2047
    b434:	000b883a 	mov	r5,zero
    b438:	0025883a 	mov	r18,zero
    b43c:	1004953a 	slli	r2,r2,20
    b440:	18c03fcc 	andi	r3,r3,255
    b444:	04400434 	movhi	r17,16
    b448:	8c7fffc4 	addi	r17,r17,-1
    b44c:	180697fa 	slli	r3,r3,31
    b450:	2c4a703a 	and	r5,r5,r17
    b454:	288ab03a 	or	r5,r5,r2
    b458:	28c6b03a 	or	r3,r5,r3
    b45c:	9005883a 	mov	r2,r18
    b460:	dfc00d17 	ldw	ra,52(sp)
    b464:	df000c17 	ldw	fp,48(sp)
    b468:	ddc00b17 	ldw	r23,44(sp)
    b46c:	dd800a17 	ldw	r22,40(sp)
    b470:	dd400917 	ldw	r21,36(sp)
    b474:	dd000817 	ldw	r20,32(sp)
    b478:	dcc00717 	ldw	r19,28(sp)
    b47c:	dc800617 	ldw	r18,24(sp)
    b480:	dc400517 	ldw	r17,20(sp)
    b484:	dc000417 	ldw	r16,16(sp)
    b488:	dec00e04 	addi	sp,sp,56
    b48c:	f800283a 	ret
    b490:	2404b03a 	or	r2,r4,r16
    b494:	2027883a 	mov	r19,r4
    b498:	10003926 	beq	r2,zero,b580 <__divdf3+0x2c0>
    b49c:	80012e26 	beq	r16,zero,b958 <__divdf3+0x698>
    b4a0:	8009883a 	mov	r4,r16
    b4a4:	d9800315 	stw	r6,12(sp)
    b4a8:	d9c00215 	stw	r7,8(sp)
    b4ac:	00007cc0 	call	7cc <__clzsi2>
    b4b0:	d9800317 	ldw	r6,12(sp)
    b4b4:	d9c00217 	ldw	r7,8(sp)
    b4b8:	113ffd44 	addi	r4,r2,-11
    b4bc:	00c00704 	movi	r3,28
    b4c0:	19012116 	blt	r3,r4,b948 <__divdf3+0x688>
    b4c4:	00c00744 	movi	r3,29
    b4c8:	147ffe04 	addi	r17,r2,-8
    b4cc:	1907c83a 	sub	r3,r3,r4
    b4d0:	8460983a 	sll	r16,r16,r17
    b4d4:	98c6d83a 	srl	r3,r19,r3
    b4d8:	9c64983a 	sll	r18,r19,r17
    b4dc:	1c20b03a 	or	r16,r3,r16
    b4e0:	1080fcc4 	addi	r2,r2,1011
    b4e4:	00abc83a 	sub	r21,zero,r2
    b4e8:	0027883a 	mov	r19,zero
    b4ec:	0013883a 	mov	r9,zero
    b4f0:	003f9106 	br	b338 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b338>
    b4f4:	3446b03a 	or	r3,r6,r17
    b4f8:	18001f1e 	bne	r3,zero,b578 <__divdf3+0x2b8>
    b4fc:	0023883a 	mov	r17,zero
    b500:	0011883a 	mov	r8,zero
    b504:	01c00084 	movi	r7,2
    b508:	003f9d06 	br	b380 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b380>
    b50c:	3446b03a 	or	r3,r6,r17
    b510:	18001526 	beq	r3,zero,b568 <__divdf3+0x2a8>
    b514:	88011b26 	beq	r17,zero,b984 <__divdf3+0x6c4>
    b518:	8809883a 	mov	r4,r17
    b51c:	d9800315 	stw	r6,12(sp)
    b520:	da400115 	stw	r9,4(sp)
    b524:	00007cc0 	call	7cc <__clzsi2>
    b528:	d9800317 	ldw	r6,12(sp)
    b52c:	da400117 	ldw	r9,4(sp)
    b530:	113ffd44 	addi	r4,r2,-11
    b534:	00c00704 	movi	r3,28
    b538:	19010e16 	blt	r3,r4,b974 <__divdf3+0x6b4>
    b53c:	00c00744 	movi	r3,29
    b540:	123ffe04 	addi	r8,r2,-8
    b544:	1907c83a 	sub	r3,r3,r4
    b548:	8a22983a 	sll	r17,r17,r8
    b54c:	30c6d83a 	srl	r3,r6,r3
    b550:	3210983a 	sll	r8,r6,r8
    b554:	1c62b03a 	or	r17,r3,r17
    b558:	1080fcc4 	addi	r2,r2,1011
    b55c:	0085c83a 	sub	r2,zero,r2
    b560:	000f883a 	mov	r7,zero
    b564:	003f8606 	br	b380 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b380>
    b568:	0023883a 	mov	r17,zero
    b56c:	0011883a 	mov	r8,zero
    b570:	01c00044 	movi	r7,1
    b574:	003f8206 	br	b380 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b380>
    b578:	01c000c4 	movi	r7,3
    b57c:	003f8006 	br	b380 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b380>
    b580:	04c00104 	movi	r19,4
    b584:	0021883a 	mov	r16,zero
    b588:	0025883a 	mov	r18,zero
    b58c:	02400044 	movi	r9,1
    b590:	003f6906 	br	b338 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b338>
    b594:	04c00304 	movi	r19,12
    b598:	024000c4 	movi	r9,3
    b59c:	003f6606 	br	b338 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b338>
    b5a0:	01400434 	movhi	r5,16
    b5a4:	0007883a 	mov	r3,zero
    b5a8:	297fffc4 	addi	r5,r5,-1
    b5ac:	04bfffc4 	movi	r18,-1
    b5b0:	0081ffc4 	movi	r2,2047
    b5b4:	003fa106 	br	b43c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b43c>
    b5b8:	00c00044 	movi	r3,1
    b5bc:	1887c83a 	sub	r3,r3,r2
    b5c0:	01000e04 	movi	r4,56
    b5c4:	20c1210e 	bge	r4,r3,ba4c <__divdf3+0x78c>
    b5c8:	98c0004c 	andi	r3,r19,1
    b5cc:	0005883a 	mov	r2,zero
    b5d0:	000b883a 	mov	r5,zero
    b5d4:	0025883a 	mov	r18,zero
    b5d8:	003f9806 	br	b43c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b43c>
    b5dc:	8c00fd36 	bltu	r17,r16,b9d4 <__divdf3+0x714>
    b5e0:	8440fb26 	beq	r16,r17,b9d0 <__divdf3+0x710>
    b5e4:	8007883a 	mov	r3,r16
    b5e8:	ad7fffc4 	addi	r21,r21,-1
    b5ec:	0021883a 	mov	r16,zero
    b5f0:	4004d63a 	srli	r2,r8,24
    b5f4:	8822923a 	slli	r17,r17,8
    b5f8:	1809883a 	mov	r4,r3
    b5fc:	402c923a 	slli	r22,r8,8
    b600:	88b8b03a 	or	fp,r17,r2
    b604:	e028d43a 	srli	r20,fp,16
    b608:	d8c00015 	stw	r3,0(sp)
    b60c:	e5ffffcc 	andi	r23,fp,65535
    b610:	a00b883a 	mov	r5,r20
    b614:	000a9580 	call	a958 <__udivsi3>
    b618:	d8c00017 	ldw	r3,0(sp)
    b61c:	a00b883a 	mov	r5,r20
    b620:	d8800315 	stw	r2,12(sp)
    b624:	1809883a 	mov	r4,r3
    b628:	000a9bc0 	call	a9bc <__umodsi3>
    b62c:	d9800317 	ldw	r6,12(sp)
    b630:	1006943a 	slli	r3,r2,16
    b634:	9004d43a 	srli	r2,r18,16
    b638:	b9a3383a 	mul	r17,r23,r6
    b63c:	10c4b03a 	or	r2,r2,r3
    b640:	1440062e 	bgeu	r2,r17,b65c <__divdf3+0x39c>
    b644:	1705883a 	add	r2,r2,fp
    b648:	30ffffc4 	addi	r3,r6,-1
    b64c:	1700ee36 	bltu	r2,fp,ba08 <__divdf3+0x748>
    b650:	1440ed2e 	bgeu	r2,r17,ba08 <__divdf3+0x748>
    b654:	31bfff84 	addi	r6,r6,-2
    b658:	1705883a 	add	r2,r2,fp
    b65c:	1463c83a 	sub	r17,r2,r17
    b660:	a00b883a 	mov	r5,r20
    b664:	8809883a 	mov	r4,r17
    b668:	d9800315 	stw	r6,12(sp)
    b66c:	000a9580 	call	a958 <__udivsi3>
    b670:	a00b883a 	mov	r5,r20
    b674:	8809883a 	mov	r4,r17
    b678:	d8800215 	stw	r2,8(sp)
    b67c:	000a9bc0 	call	a9bc <__umodsi3>
    b680:	d9c00217 	ldw	r7,8(sp)
    b684:	1004943a 	slli	r2,r2,16
    b688:	94bfffcc 	andi	r18,r18,65535
    b68c:	b9d1383a 	mul	r8,r23,r7
    b690:	90a4b03a 	or	r18,r18,r2
    b694:	d9800317 	ldw	r6,12(sp)
    b698:	9200062e 	bgeu	r18,r8,b6b4 <__divdf3+0x3f4>
    b69c:	9725883a 	add	r18,r18,fp
    b6a0:	38bfffc4 	addi	r2,r7,-1
    b6a4:	9700d636 	bltu	r18,fp,ba00 <__divdf3+0x740>
    b6a8:	9200d52e 	bgeu	r18,r8,ba00 <__divdf3+0x740>
    b6ac:	39ffff84 	addi	r7,r7,-2
    b6b0:	9725883a 	add	r18,r18,fp
    b6b4:	3004943a 	slli	r2,r6,16
    b6b8:	b012d43a 	srli	r9,r22,16
    b6bc:	b1bfffcc 	andi	r6,r22,65535
    b6c0:	11e2b03a 	or	r17,r2,r7
    b6c4:	8806d43a 	srli	r3,r17,16
    b6c8:	893fffcc 	andi	r4,r17,65535
    b6cc:	218b383a 	mul	r5,r4,r6
    b6d0:	30c5383a 	mul	r2,r6,r3
    b6d4:	2249383a 	mul	r4,r4,r9
    b6d8:	280ed43a 	srli	r7,r5,16
    b6dc:	9225c83a 	sub	r18,r18,r8
    b6e0:	2089883a 	add	r4,r4,r2
    b6e4:	3909883a 	add	r4,r7,r4
    b6e8:	1a47383a 	mul	r3,r3,r9
    b6ec:	2080022e 	bgeu	r4,r2,b6f8 <__divdf3+0x438>
    b6f0:	00800074 	movhi	r2,1
    b6f4:	1887883a 	add	r3,r3,r2
    b6f8:	2004d43a 	srli	r2,r4,16
    b6fc:	2008943a 	slli	r4,r4,16
    b700:	297fffcc 	andi	r5,r5,65535
    b704:	10c7883a 	add	r3,r2,r3
    b708:	2149883a 	add	r4,r4,r5
    b70c:	90c0a536 	bltu	r18,r3,b9a4 <__divdf3+0x6e4>
    b710:	90c0bf26 	beq	r18,r3,ba10 <__divdf3+0x750>
    b714:	90c7c83a 	sub	r3,r18,r3
    b718:	810fc83a 	sub	r7,r16,r4
    b71c:	81e5803a 	cmpltu	r18,r16,r7
    b720:	1ca5c83a 	sub	r18,r3,r18
    b724:	e480c126 	beq	fp,r18,ba2c <__divdf3+0x76c>
    b728:	a00b883a 	mov	r5,r20
    b72c:	9009883a 	mov	r4,r18
    b730:	d9800315 	stw	r6,12(sp)
    b734:	d9c00215 	stw	r7,8(sp)
    b738:	da400115 	stw	r9,4(sp)
    b73c:	000a9580 	call	a958 <__udivsi3>
    b740:	a00b883a 	mov	r5,r20
    b744:	9009883a 	mov	r4,r18
    b748:	d8800015 	stw	r2,0(sp)
    b74c:	000a9bc0 	call	a9bc <__umodsi3>
    b750:	d9c00217 	ldw	r7,8(sp)
    b754:	da000017 	ldw	r8,0(sp)
    b758:	1006943a 	slli	r3,r2,16
    b75c:	3804d43a 	srli	r2,r7,16
    b760:	ba21383a 	mul	r16,r23,r8
    b764:	d9800317 	ldw	r6,12(sp)
    b768:	10c4b03a 	or	r2,r2,r3
    b76c:	da400117 	ldw	r9,4(sp)
    b770:	1400062e 	bgeu	r2,r16,b78c <__divdf3+0x4cc>
    b774:	1705883a 	add	r2,r2,fp
    b778:	40ffffc4 	addi	r3,r8,-1
    b77c:	1700ad36 	bltu	r2,fp,ba34 <__divdf3+0x774>
    b780:	1400ac2e 	bgeu	r2,r16,ba34 <__divdf3+0x774>
    b784:	423fff84 	addi	r8,r8,-2
    b788:	1705883a 	add	r2,r2,fp
    b78c:	1421c83a 	sub	r16,r2,r16
    b790:	a00b883a 	mov	r5,r20
    b794:	8009883a 	mov	r4,r16
    b798:	d9800315 	stw	r6,12(sp)
    b79c:	d9c00215 	stw	r7,8(sp)
    b7a0:	da000015 	stw	r8,0(sp)
    b7a4:	da400115 	stw	r9,4(sp)
    b7a8:	000a9580 	call	a958 <__udivsi3>
    b7ac:	8009883a 	mov	r4,r16
    b7b0:	a00b883a 	mov	r5,r20
    b7b4:	1025883a 	mov	r18,r2
    b7b8:	000a9bc0 	call	a9bc <__umodsi3>
    b7bc:	d9c00217 	ldw	r7,8(sp)
    b7c0:	1004943a 	slli	r2,r2,16
    b7c4:	bcaf383a 	mul	r23,r23,r18
    b7c8:	393fffcc 	andi	r4,r7,65535
    b7cc:	2088b03a 	or	r4,r4,r2
    b7d0:	d9800317 	ldw	r6,12(sp)
    b7d4:	da000017 	ldw	r8,0(sp)
    b7d8:	da400117 	ldw	r9,4(sp)
    b7dc:	25c0062e 	bgeu	r4,r23,b7f8 <__divdf3+0x538>
    b7e0:	2709883a 	add	r4,r4,fp
    b7e4:	90bfffc4 	addi	r2,r18,-1
    b7e8:	27009436 	bltu	r4,fp,ba3c <__divdf3+0x77c>
    b7ec:	25c0932e 	bgeu	r4,r23,ba3c <__divdf3+0x77c>
    b7f0:	94bfff84 	addi	r18,r18,-2
    b7f4:	2709883a 	add	r4,r4,fp
    b7f8:	4004943a 	slli	r2,r8,16
    b7fc:	25efc83a 	sub	r23,r4,r23
    b800:	1490b03a 	or	r8,r2,r18
    b804:	4008d43a 	srli	r4,r8,16
    b808:	40ffffcc 	andi	r3,r8,65535
    b80c:	30c5383a 	mul	r2,r6,r3
    b810:	1a47383a 	mul	r3,r3,r9
    b814:	310d383a 	mul	r6,r6,r4
    b818:	100ad43a 	srli	r5,r2,16
    b81c:	4913383a 	mul	r9,r9,r4
    b820:	1987883a 	add	r3,r3,r6
    b824:	28c7883a 	add	r3,r5,r3
    b828:	1980022e 	bgeu	r3,r6,b834 <__divdf3+0x574>
    b82c:	01000074 	movhi	r4,1
    b830:	4913883a 	add	r9,r9,r4
    b834:	1808d43a 	srli	r4,r3,16
    b838:	1806943a 	slli	r3,r3,16
    b83c:	10bfffcc 	andi	r2,r2,65535
    b840:	2253883a 	add	r9,r4,r9
    b844:	1887883a 	add	r3,r3,r2
    b848:	ba403836 	bltu	r23,r9,b92c <__divdf3+0x66c>
    b84c:	ba403626 	beq	r23,r9,b928 <__divdf3+0x668>
    b850:	42000054 	ori	r8,r8,1
    b854:	a880ffc4 	addi	r2,r21,1023
    b858:	00bf570e 	bge	zero,r2,b5b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b5b8>
    b85c:	40c001cc 	andi	r3,r8,7
    b860:	18000726 	beq	r3,zero,b880 <__divdf3+0x5c0>
    b864:	40c003cc 	andi	r3,r8,15
    b868:	01000104 	movi	r4,4
    b86c:	19000426 	beq	r3,r4,b880 <__divdf3+0x5c0>
    b870:	4107883a 	add	r3,r8,r4
    b874:	1a11803a 	cmpltu	r8,r3,r8
    b878:	8a23883a 	add	r17,r17,r8
    b87c:	1811883a 	mov	r8,r3
    b880:	88c0402c 	andhi	r3,r17,256
    b884:	18000426 	beq	r3,zero,b898 <__divdf3+0x5d8>
    b888:	00ffc034 	movhi	r3,65280
    b88c:	18ffffc4 	addi	r3,r3,-1
    b890:	a8810004 	addi	r2,r21,1024
    b894:	88e2703a 	and	r17,r17,r3
    b898:	00c1ff84 	movi	r3,2046
    b89c:	18bee316 	blt	r3,r2,b42c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b42c>
    b8a0:	8824977a 	slli	r18,r17,29
    b8a4:	4010d0fa 	srli	r8,r8,3
    b8a8:	8822927a 	slli	r17,r17,9
    b8ac:	1081ffcc 	andi	r2,r2,2047
    b8b0:	9224b03a 	or	r18,r18,r8
    b8b4:	880ad33a 	srli	r5,r17,12
    b8b8:	98c0004c 	andi	r3,r19,1
    b8bc:	003edf06 	br	b43c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b43c>
    b8c0:	8080022c 	andhi	r2,r16,8
    b8c4:	10001226 	beq	r2,zero,b910 <__divdf3+0x650>
    b8c8:	8880022c 	andhi	r2,r17,8
    b8cc:	1000101e 	bne	r2,zero,b910 <__divdf3+0x650>
    b8d0:	00800434 	movhi	r2,16
    b8d4:	89400234 	orhi	r5,r17,8
    b8d8:	10bfffc4 	addi	r2,r2,-1
    b8dc:	b007883a 	mov	r3,r22
    b8e0:	288a703a 	and	r5,r5,r2
    b8e4:	4025883a 	mov	r18,r8
    b8e8:	003f3106 	br	b5b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b5b0>
    b8ec:	008000c4 	movi	r2,3
    b8f0:	3880a626 	beq	r7,r2,bb8c <__divdf3+0x8cc>
    b8f4:	00800044 	movi	r2,1
    b8f8:	3880521e 	bne	r7,r2,ba44 <__divdf3+0x784>
    b8fc:	b807883a 	mov	r3,r23
    b900:	0005883a 	mov	r2,zero
    b904:	000b883a 	mov	r5,zero
    b908:	0025883a 	mov	r18,zero
    b90c:	003ecb06 	br	b43c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b43c>
    b910:	00800434 	movhi	r2,16
    b914:	81400234 	orhi	r5,r16,8
    b918:	10bfffc4 	addi	r2,r2,-1
    b91c:	a007883a 	mov	r3,r20
    b920:	288a703a 	and	r5,r5,r2
    b924:	003f2206 	br	b5b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b5b0>
    b928:	183fca26 	beq	r3,zero,b854 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b854>
    b92c:	e5ef883a 	add	r23,fp,r23
    b930:	40bfffc4 	addi	r2,r8,-1
    b934:	bf00392e 	bgeu	r23,fp,ba1c <__divdf3+0x75c>
    b938:	1011883a 	mov	r8,r2
    b93c:	ba7fc41e 	bne	r23,r9,b850 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b850>
    b940:	b0ffc31e 	bne	r22,r3,b850 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b850>
    b944:	003fc306 	br	b854 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b854>
    b948:	143ff604 	addi	r16,r2,-40
    b94c:	9c20983a 	sll	r16,r19,r16
    b950:	0025883a 	mov	r18,zero
    b954:	003ee206 	br	b4e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b4e0>
    b958:	d9800315 	stw	r6,12(sp)
    b95c:	d9c00215 	stw	r7,8(sp)
    b960:	00007cc0 	call	7cc <__clzsi2>
    b964:	10800804 	addi	r2,r2,32
    b968:	d9c00217 	ldw	r7,8(sp)
    b96c:	d9800317 	ldw	r6,12(sp)
    b970:	003ed106 	br	b4b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b4b8>
    b974:	147ff604 	addi	r17,r2,-40
    b978:	3462983a 	sll	r17,r6,r17
    b97c:	0011883a 	mov	r8,zero
    b980:	003ef506 	br	b558 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b558>
    b984:	3009883a 	mov	r4,r6
    b988:	d9800315 	stw	r6,12(sp)
    b98c:	da400115 	stw	r9,4(sp)
    b990:	00007cc0 	call	7cc <__clzsi2>
    b994:	10800804 	addi	r2,r2,32
    b998:	da400117 	ldw	r9,4(sp)
    b99c:	d9800317 	ldw	r6,12(sp)
    b9a0:	003ee306 	br	b530 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b530>
    b9a4:	85a1883a 	add	r16,r16,r22
    b9a8:	8585803a 	cmpltu	r2,r16,r22
    b9ac:	1705883a 	add	r2,r2,fp
    b9b0:	14a5883a 	add	r18,r2,r18
    b9b4:	88bfffc4 	addi	r2,r17,-1
    b9b8:	e4800c2e 	bgeu	fp,r18,b9ec <__divdf3+0x72c>
    b9bc:	90c03e36 	bltu	r18,r3,bab8 <__divdf3+0x7f8>
    b9c0:	1c806926 	beq	r3,r18,bb68 <__divdf3+0x8a8>
    b9c4:	90c7c83a 	sub	r3,r18,r3
    b9c8:	1023883a 	mov	r17,r2
    b9cc:	003f5206 	br	b718 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b718>
    b9d0:	923f0436 	bltu	r18,r8,b5e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b5e4>
    b9d4:	800897fa 	slli	r4,r16,31
    b9d8:	9004d07a 	srli	r2,r18,1
    b9dc:	8006d07a 	srli	r3,r16,1
    b9e0:	902097fa 	slli	r16,r18,31
    b9e4:	20a4b03a 	or	r18,r4,r2
    b9e8:	003f0106 	br	b5f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b5f0>
    b9ec:	e4bff51e 	bne	fp,r18,b9c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b9c4>
    b9f0:	85bff22e 	bgeu	r16,r22,b9bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b9bc>
    b9f4:	e0c7c83a 	sub	r3,fp,r3
    b9f8:	1023883a 	mov	r17,r2
    b9fc:	003f4606 	br	b718 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b718>
    ba00:	100f883a 	mov	r7,r2
    ba04:	003f2b06 	br	b6b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b6b4>
    ba08:	180d883a 	mov	r6,r3
    ba0c:	003f1306 	br	b65c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b65c>
    ba10:	813fe436 	bltu	r16,r4,b9a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b9a4>
    ba14:	0007883a 	mov	r3,zero
    ba18:	003f3f06 	br	b718 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b718>
    ba1c:	ba402c36 	bltu	r23,r9,bad0 <__divdf3+0x810>
    ba20:	4dc05426 	beq	r9,r23,bb74 <__divdf3+0x8b4>
    ba24:	1011883a 	mov	r8,r2
    ba28:	003f8906 	br	b850 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b850>
    ba2c:	023fffc4 	movi	r8,-1
    ba30:	003f8806 	br	b854 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b854>
    ba34:	1811883a 	mov	r8,r3
    ba38:	003f5406 	br	b78c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b78c>
    ba3c:	1025883a 	mov	r18,r2
    ba40:	003f6d06 	br	b7f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b7f8>
    ba44:	b827883a 	mov	r19,r23
    ba48:	003f8206 	br	b854 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b854>
    ba4c:	010007c4 	movi	r4,31
    ba50:	20c02616 	blt	r4,r3,baec <__divdf3+0x82c>
    ba54:	00800804 	movi	r2,32
    ba58:	10c5c83a 	sub	r2,r2,r3
    ba5c:	888a983a 	sll	r5,r17,r2
    ba60:	40c8d83a 	srl	r4,r8,r3
    ba64:	4084983a 	sll	r2,r8,r2
    ba68:	88e2d83a 	srl	r17,r17,r3
    ba6c:	2906b03a 	or	r3,r5,r4
    ba70:	1004c03a 	cmpne	r2,r2,zero
    ba74:	1886b03a 	or	r3,r3,r2
    ba78:	188001cc 	andi	r2,r3,7
    ba7c:	10000726 	beq	r2,zero,ba9c <__divdf3+0x7dc>
    ba80:	188003cc 	andi	r2,r3,15
    ba84:	01000104 	movi	r4,4
    ba88:	11000426 	beq	r2,r4,ba9c <__divdf3+0x7dc>
    ba8c:	1805883a 	mov	r2,r3
    ba90:	10c00104 	addi	r3,r2,4
    ba94:	1885803a 	cmpltu	r2,r3,r2
    ba98:	88a3883a 	add	r17,r17,r2
    ba9c:	8880202c 	andhi	r2,r17,128
    baa0:	10002726 	beq	r2,zero,bb40 <__divdf3+0x880>
    baa4:	98c0004c 	andi	r3,r19,1
    baa8:	00800044 	movi	r2,1
    baac:	000b883a 	mov	r5,zero
    bab0:	0025883a 	mov	r18,zero
    bab4:	003e6106 	br	b43c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b43c>
    bab8:	85a1883a 	add	r16,r16,r22
    babc:	8585803a 	cmpltu	r2,r16,r22
    bac0:	1705883a 	add	r2,r2,fp
    bac4:	14a5883a 	add	r18,r2,r18
    bac8:	8c7fff84 	addi	r17,r17,-2
    bacc:	003f1106 	br	b714 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b714>
    bad0:	b589883a 	add	r4,r22,r22
    bad4:	25ad803a 	cmpltu	r22,r4,r22
    bad8:	b739883a 	add	fp,r22,fp
    badc:	40bfff84 	addi	r2,r8,-2
    bae0:	bf2f883a 	add	r23,r23,fp
    bae4:	202d883a 	mov	r22,r4
    bae8:	003f9306 	br	b938 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b938>
    baec:	013ff844 	movi	r4,-31
    baf0:	2085c83a 	sub	r2,r4,r2
    baf4:	8888d83a 	srl	r4,r17,r2
    baf8:	00800804 	movi	r2,32
    bafc:	18802126 	beq	r3,r2,bb84 <__divdf3+0x8c4>
    bb00:	00801004 	movi	r2,64
    bb04:	10c5c83a 	sub	r2,r2,r3
    bb08:	8884983a 	sll	r2,r17,r2
    bb0c:	1204b03a 	or	r2,r2,r8
    bb10:	1004c03a 	cmpne	r2,r2,zero
    bb14:	2084b03a 	or	r2,r4,r2
    bb18:	144001cc 	andi	r17,r2,7
    bb1c:	88000d1e 	bne	r17,zero,bb54 <__divdf3+0x894>
    bb20:	000b883a 	mov	r5,zero
    bb24:	1024d0fa 	srli	r18,r2,3
    bb28:	98c0004c 	andi	r3,r19,1
    bb2c:	0005883a 	mov	r2,zero
    bb30:	9464b03a 	or	r18,r18,r17
    bb34:	003e4106 	br	b43c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b43c>
    bb38:	1007883a 	mov	r3,r2
    bb3c:	0023883a 	mov	r17,zero
    bb40:	880a927a 	slli	r5,r17,9
    bb44:	1805883a 	mov	r2,r3
    bb48:	8822977a 	slli	r17,r17,29
    bb4c:	280ad33a 	srli	r5,r5,12
    bb50:	003ff406 	br	bb24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bb24>
    bb54:	10c003cc 	andi	r3,r2,15
    bb58:	01000104 	movi	r4,4
    bb5c:	193ff626 	beq	r3,r4,bb38 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bb38>
    bb60:	0023883a 	mov	r17,zero
    bb64:	003fca06 	br	ba90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ba90>
    bb68:	813fd336 	bltu	r16,r4,bab8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bab8>
    bb6c:	1023883a 	mov	r17,r2
    bb70:	003fa806 	br	ba14 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ba14>
    bb74:	b0ffd636 	bltu	r22,r3,bad0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bad0>
    bb78:	1011883a 	mov	r8,r2
    bb7c:	b0ff341e 	bne	r22,r3,b850 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b850>
    bb80:	003f3406 	br	b854 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b854>
    bb84:	0005883a 	mov	r2,zero
    bb88:	003fe006 	br	bb0c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bb0c>
    bb8c:	00800434 	movhi	r2,16
    bb90:	89400234 	orhi	r5,r17,8
    bb94:	10bfffc4 	addi	r2,r2,-1
    bb98:	b807883a 	mov	r3,r23
    bb9c:	288a703a 	and	r5,r5,r2
    bba0:	4025883a 	mov	r18,r8
    bba4:	003e8206 	br	b5b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b5b0>

0000bba8 <__eqdf2>:
    bba8:	2804d53a 	srli	r2,r5,20
    bbac:	3806d53a 	srli	r3,r7,20
    bbb0:	02000434 	movhi	r8,16
    bbb4:	423fffc4 	addi	r8,r8,-1
    bbb8:	1081ffcc 	andi	r2,r2,2047
    bbbc:	0281ffc4 	movi	r10,2047
    bbc0:	2a12703a 	and	r9,r5,r8
    bbc4:	18c1ffcc 	andi	r3,r3,2047
    bbc8:	3a10703a 	and	r8,r7,r8
    bbcc:	280ad7fa 	srli	r5,r5,31
    bbd0:	380ed7fa 	srli	r7,r7,31
    bbd4:	12801026 	beq	r2,r10,bc18 <__eqdf2+0x70>
    bbd8:	0281ffc4 	movi	r10,2047
    bbdc:	1a800a26 	beq	r3,r10,bc08 <__eqdf2+0x60>
    bbe0:	10c00226 	beq	r2,r3,bbec <__eqdf2+0x44>
    bbe4:	00800044 	movi	r2,1
    bbe8:	f800283a 	ret
    bbec:	4a3ffd1e 	bne	r9,r8,bbe4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bbe4>
    bbf0:	21bffc1e 	bne	r4,r6,bbe4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bbe4>
    bbf4:	29c00c26 	beq	r5,r7,bc28 <__eqdf2+0x80>
    bbf8:	103ffa1e 	bne	r2,zero,bbe4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bbe4>
    bbfc:	2244b03a 	or	r2,r4,r9
    bc00:	1004c03a 	cmpne	r2,r2,zero
    bc04:	f800283a 	ret
    bc08:	3214b03a 	or	r10,r6,r8
    bc0c:	503ff426 	beq	r10,zero,bbe0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bbe0>
    bc10:	00800044 	movi	r2,1
    bc14:	f800283a 	ret
    bc18:	2254b03a 	or	r10,r4,r9
    bc1c:	503fee26 	beq	r10,zero,bbd8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bbd8>
    bc20:	00800044 	movi	r2,1
    bc24:	f800283a 	ret
    bc28:	0005883a 	mov	r2,zero
    bc2c:	f800283a 	ret

0000bc30 <__gedf2>:
    bc30:	2804d53a 	srli	r2,r5,20
    bc34:	3806d53a 	srli	r3,r7,20
    bc38:	02000434 	movhi	r8,16
    bc3c:	423fffc4 	addi	r8,r8,-1
    bc40:	1081ffcc 	andi	r2,r2,2047
    bc44:	0241ffc4 	movi	r9,2047
    bc48:	2a14703a 	and	r10,r5,r8
    bc4c:	18c1ffcc 	andi	r3,r3,2047
    bc50:	3a10703a 	and	r8,r7,r8
    bc54:	280ad7fa 	srli	r5,r5,31
    bc58:	380ed7fa 	srli	r7,r7,31
    bc5c:	12401d26 	beq	r2,r9,bcd4 <__gedf2+0xa4>
    bc60:	0241ffc4 	movi	r9,2047
    bc64:	1a401226 	beq	r3,r9,bcb0 <__gedf2+0x80>
    bc68:	1000081e 	bne	r2,zero,bc8c <__gedf2+0x5c>
    bc6c:	2296b03a 	or	r11,r4,r10
    bc70:	5813003a 	cmpeq	r9,r11,zero
    bc74:	1800091e 	bne	r3,zero,bc9c <__gedf2+0x6c>
    bc78:	3218b03a 	or	r12,r6,r8
    bc7c:	6000071e 	bne	r12,zero,bc9c <__gedf2+0x6c>
    bc80:	0005883a 	mov	r2,zero
    bc84:	5800101e 	bne	r11,zero,bcc8 <__gedf2+0x98>
    bc88:	f800283a 	ret
    bc8c:	18000c1e 	bne	r3,zero,bcc0 <__gedf2+0x90>
    bc90:	3212b03a 	or	r9,r6,r8
    bc94:	48000c26 	beq	r9,zero,bcc8 <__gedf2+0x98>
    bc98:	0013883a 	mov	r9,zero
    bc9c:	39c03fcc 	andi	r7,r7,255
    bca0:	48000826 	beq	r9,zero,bcc4 <__gedf2+0x94>
    bca4:	38000926 	beq	r7,zero,bccc <__gedf2+0x9c>
    bca8:	00800044 	movi	r2,1
    bcac:	f800283a 	ret
    bcb0:	3212b03a 	or	r9,r6,r8
    bcb4:	483fec26 	beq	r9,zero,bc68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bc68>
    bcb8:	00bfff84 	movi	r2,-2
    bcbc:	f800283a 	ret
    bcc0:	39c03fcc 	andi	r7,r7,255
    bcc4:	29c00626 	beq	r5,r7,bce0 <__gedf2+0xb0>
    bcc8:	283ff726 	beq	r5,zero,bca8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bca8>
    bccc:	00bfffc4 	movi	r2,-1
    bcd0:	f800283a 	ret
    bcd4:	2292b03a 	or	r9,r4,r10
    bcd8:	483fe126 	beq	r9,zero,bc60 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bc60>
    bcdc:	003ff606 	br	bcb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bcb8>
    bce0:	18bff916 	blt	r3,r2,bcc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bcc8>
    bce4:	10c00316 	blt	r2,r3,bcf4 <__gedf2+0xc4>
    bce8:	42bff736 	bltu	r8,r10,bcc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bcc8>
    bcec:	52000326 	beq	r10,r8,bcfc <__gedf2+0xcc>
    bcf0:	5200042e 	bgeu	r10,r8,bd04 <__gedf2+0xd4>
    bcf4:	283fec1e 	bne	r5,zero,bca8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bca8>
    bcf8:	003ff406 	br	bccc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bccc>
    bcfc:	313ff236 	bltu	r6,r4,bcc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bcc8>
    bd00:	21bffc36 	bltu	r4,r6,bcf4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bcf4>
    bd04:	0005883a 	mov	r2,zero
    bd08:	f800283a 	ret

0000bd0c <__ledf2>:
    bd0c:	2804d53a 	srli	r2,r5,20
    bd10:	3810d53a 	srli	r8,r7,20
    bd14:	00c00434 	movhi	r3,16
    bd18:	18ffffc4 	addi	r3,r3,-1
    bd1c:	1081ffcc 	andi	r2,r2,2047
    bd20:	0241ffc4 	movi	r9,2047
    bd24:	28d4703a 	and	r10,r5,r3
    bd28:	4201ffcc 	andi	r8,r8,2047
    bd2c:	38c6703a 	and	r3,r7,r3
    bd30:	280ad7fa 	srli	r5,r5,31
    bd34:	380ed7fa 	srli	r7,r7,31
    bd38:	12401f26 	beq	r2,r9,bdb8 <__ledf2+0xac>
    bd3c:	0241ffc4 	movi	r9,2047
    bd40:	42401426 	beq	r8,r9,bd94 <__ledf2+0x88>
    bd44:	1000091e 	bne	r2,zero,bd6c <__ledf2+0x60>
    bd48:	2296b03a 	or	r11,r4,r10
    bd4c:	5813003a 	cmpeq	r9,r11,zero
    bd50:	29403fcc 	andi	r5,r5,255
    bd54:	40000a1e 	bne	r8,zero,bd80 <__ledf2+0x74>
    bd58:	30d8b03a 	or	r12,r6,r3
    bd5c:	6000081e 	bne	r12,zero,bd80 <__ledf2+0x74>
    bd60:	0005883a 	mov	r2,zero
    bd64:	5800111e 	bne	r11,zero,bdac <__ledf2+0xa0>
    bd68:	f800283a 	ret
    bd6c:	29403fcc 	andi	r5,r5,255
    bd70:	40000c1e 	bne	r8,zero,bda4 <__ledf2+0x98>
    bd74:	30d2b03a 	or	r9,r6,r3
    bd78:	48000c26 	beq	r9,zero,bdac <__ledf2+0xa0>
    bd7c:	0013883a 	mov	r9,zero
    bd80:	39c03fcc 	andi	r7,r7,255
    bd84:	48000826 	beq	r9,zero,bda8 <__ledf2+0x9c>
    bd88:	38001126 	beq	r7,zero,bdd0 <__ledf2+0xc4>
    bd8c:	00800044 	movi	r2,1
    bd90:	f800283a 	ret
    bd94:	30d2b03a 	or	r9,r6,r3
    bd98:	483fea26 	beq	r9,zero,bd44 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bd44>
    bd9c:	00800084 	movi	r2,2
    bda0:	f800283a 	ret
    bda4:	39c03fcc 	andi	r7,r7,255
    bda8:	39400726 	beq	r7,r5,bdc8 <__ledf2+0xbc>
    bdac:	2800081e 	bne	r5,zero,bdd0 <__ledf2+0xc4>
    bdb0:	00800044 	movi	r2,1
    bdb4:	f800283a 	ret
    bdb8:	2292b03a 	or	r9,r4,r10
    bdbc:	483fdf26 	beq	r9,zero,bd3c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bd3c>
    bdc0:	00800084 	movi	r2,2
    bdc4:	f800283a 	ret
    bdc8:	4080030e 	bge	r8,r2,bdd8 <__ledf2+0xcc>
    bdcc:	383fef26 	beq	r7,zero,bd8c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bd8c>
    bdd0:	00bfffc4 	movi	r2,-1
    bdd4:	f800283a 	ret
    bdd8:	123feb16 	blt	r2,r8,bd88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bd88>
    bddc:	1abff336 	bltu	r3,r10,bdac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bdac>
    bde0:	50c00326 	beq	r10,r3,bdf0 <__ledf2+0xe4>
    bde4:	50c0042e 	bgeu	r10,r3,bdf8 <__ledf2+0xec>
    bde8:	283fe81e 	bne	r5,zero,bd8c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bd8c>
    bdec:	003ff806 	br	bdd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bdd0>
    bdf0:	313fee36 	bltu	r6,r4,bdac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bdac>
    bdf4:	21bffc36 	bltu	r4,r6,bde8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bde8>
    bdf8:	0005883a 	mov	r2,zero
    bdfc:	f800283a 	ret

0000be00 <__muldf3>:
    be00:	defff304 	addi	sp,sp,-52
    be04:	2804d53a 	srli	r2,r5,20
    be08:	dd800915 	stw	r22,36(sp)
    be0c:	282cd7fa 	srli	r22,r5,31
    be10:	dc000315 	stw	r16,12(sp)
    be14:	04000434 	movhi	r16,16
    be18:	dd400815 	stw	r21,32(sp)
    be1c:	dc800515 	stw	r18,20(sp)
    be20:	843fffc4 	addi	r16,r16,-1
    be24:	dfc00c15 	stw	ra,48(sp)
    be28:	df000b15 	stw	fp,44(sp)
    be2c:	ddc00a15 	stw	r23,40(sp)
    be30:	dd000715 	stw	r20,28(sp)
    be34:	dcc00615 	stw	r19,24(sp)
    be38:	dc400415 	stw	r17,16(sp)
    be3c:	1481ffcc 	andi	r18,r2,2047
    be40:	2c20703a 	and	r16,r5,r16
    be44:	b02b883a 	mov	r21,r22
    be48:	b2403fcc 	andi	r9,r22,255
    be4c:	90006026 	beq	r18,zero,bfd0 <__muldf3+0x1d0>
    be50:	0081ffc4 	movi	r2,2047
    be54:	2029883a 	mov	r20,r4
    be58:	90803626 	beq	r18,r2,bf34 <__muldf3+0x134>
    be5c:	80800434 	orhi	r2,r16,16
    be60:	100490fa 	slli	r2,r2,3
    be64:	2020d77a 	srli	r16,r4,29
    be68:	202890fa 	slli	r20,r4,3
    be6c:	94bf0044 	addi	r18,r18,-1023
    be70:	80a0b03a 	or	r16,r16,r2
    be74:	0027883a 	mov	r19,zero
    be78:	0039883a 	mov	fp,zero
    be7c:	3804d53a 	srli	r2,r7,20
    be80:	382ed7fa 	srli	r23,r7,31
    be84:	04400434 	movhi	r17,16
    be88:	8c7fffc4 	addi	r17,r17,-1
    be8c:	1081ffcc 	andi	r2,r2,2047
    be90:	3011883a 	mov	r8,r6
    be94:	3c62703a 	and	r17,r7,r17
    be98:	ba803fcc 	andi	r10,r23,255
    be9c:	10006d26 	beq	r2,zero,c054 <__muldf3+0x254>
    bea0:	00c1ffc4 	movi	r3,2047
    bea4:	10c06526 	beq	r2,r3,c03c <__muldf3+0x23c>
    bea8:	88c00434 	orhi	r3,r17,16
    beac:	180690fa 	slli	r3,r3,3
    beb0:	3022d77a 	srli	r17,r6,29
    beb4:	301090fa 	slli	r8,r6,3
    beb8:	10bf0044 	addi	r2,r2,-1023
    bebc:	88e2b03a 	or	r17,r17,r3
    bec0:	000b883a 	mov	r5,zero
    bec4:	9085883a 	add	r2,r18,r2
    bec8:	2cc8b03a 	or	r4,r5,r19
    becc:	00c003c4 	movi	r3,15
    bed0:	bdacf03a 	xor	r22,r23,r22
    bed4:	12c00044 	addi	r11,r2,1
    bed8:	19009936 	bltu	r3,r4,c140 <__muldf3+0x340>
    bedc:	200890ba 	slli	r4,r4,2
    bee0:	00c00074 	movhi	r3,1
    bee4:	18efbd04 	addi	r3,r3,-16652
    bee8:	20c9883a 	add	r4,r4,r3
    beec:	20c00017 	ldw	r3,0(r4)
    bef0:	1800683a 	jmp	r3
    bef4:	0000c140 	call	c14 <___vfprintf_internal_r+0x378>
    bef8:	0000bf54 	movui	zero,765
    befc:	0000bf54 	movui	zero,765
    bf00:	0000bf50 	cmplti	zero,zero,765
    bf04:	0000c11c 	xori	zero,zero,772
    bf08:	0000c11c 	xori	zero,zero,772
    bf0c:	0000c104 	movi	zero,772
    bf10:	0000bf50 	cmplti	zero,zero,765
    bf14:	0000c11c 	xori	zero,zero,772
    bf18:	0000c104 	movi	zero,772
    bf1c:	0000c11c 	xori	zero,zero,772
    bf20:	0000bf50 	cmplti	zero,zero,765
    bf24:	0000c12c 	andhi	zero,zero,772
    bf28:	0000c12c 	andhi	zero,zero,772
    bf2c:	0000c12c 	andhi	zero,zero,772
    bf30:	0000c348 	cmpgei	zero,zero,781
    bf34:	2404b03a 	or	r2,r4,r16
    bf38:	10006f1e 	bne	r2,zero,c0f8 <__muldf3+0x2f8>
    bf3c:	04c00204 	movi	r19,8
    bf40:	0021883a 	mov	r16,zero
    bf44:	0029883a 	mov	r20,zero
    bf48:	07000084 	movi	fp,2
    bf4c:	003fcb06 	br	be7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700be7c>
    bf50:	502d883a 	mov	r22,r10
    bf54:	00800084 	movi	r2,2
    bf58:	28805726 	beq	r5,r2,c0b8 <__muldf3+0x2b8>
    bf5c:	008000c4 	movi	r2,3
    bf60:	28816626 	beq	r5,r2,c4fc <__muldf3+0x6fc>
    bf64:	00800044 	movi	r2,1
    bf68:	2881411e 	bne	r5,r2,c470 <__muldf3+0x670>
    bf6c:	b02b883a 	mov	r21,r22
    bf70:	0005883a 	mov	r2,zero
    bf74:	000b883a 	mov	r5,zero
    bf78:	0029883a 	mov	r20,zero
    bf7c:	1004953a 	slli	r2,r2,20
    bf80:	a8c03fcc 	andi	r3,r21,255
    bf84:	04400434 	movhi	r17,16
    bf88:	8c7fffc4 	addi	r17,r17,-1
    bf8c:	180697fa 	slli	r3,r3,31
    bf90:	2c4a703a 	and	r5,r5,r17
    bf94:	288ab03a 	or	r5,r5,r2
    bf98:	28c6b03a 	or	r3,r5,r3
    bf9c:	a005883a 	mov	r2,r20
    bfa0:	dfc00c17 	ldw	ra,48(sp)
    bfa4:	df000b17 	ldw	fp,44(sp)
    bfa8:	ddc00a17 	ldw	r23,40(sp)
    bfac:	dd800917 	ldw	r22,36(sp)
    bfb0:	dd400817 	ldw	r21,32(sp)
    bfb4:	dd000717 	ldw	r20,28(sp)
    bfb8:	dcc00617 	ldw	r19,24(sp)
    bfbc:	dc800517 	ldw	r18,20(sp)
    bfc0:	dc400417 	ldw	r17,16(sp)
    bfc4:	dc000317 	ldw	r16,12(sp)
    bfc8:	dec00d04 	addi	sp,sp,52
    bfcc:	f800283a 	ret
    bfd0:	2404b03a 	or	r2,r4,r16
    bfd4:	2027883a 	mov	r19,r4
    bfd8:	10004226 	beq	r2,zero,c0e4 <__muldf3+0x2e4>
    bfdc:	8000fc26 	beq	r16,zero,c3d0 <__muldf3+0x5d0>
    bfe0:	8009883a 	mov	r4,r16
    bfe4:	d9800215 	stw	r6,8(sp)
    bfe8:	d9c00015 	stw	r7,0(sp)
    bfec:	da400115 	stw	r9,4(sp)
    bff0:	00007cc0 	call	7cc <__clzsi2>
    bff4:	d9800217 	ldw	r6,8(sp)
    bff8:	d9c00017 	ldw	r7,0(sp)
    bffc:	da400117 	ldw	r9,4(sp)
    c000:	113ffd44 	addi	r4,r2,-11
    c004:	00c00704 	movi	r3,28
    c008:	1900ed16 	blt	r3,r4,c3c0 <__muldf3+0x5c0>
    c00c:	00c00744 	movi	r3,29
    c010:	147ffe04 	addi	r17,r2,-8
    c014:	1907c83a 	sub	r3,r3,r4
    c018:	8460983a 	sll	r16,r16,r17
    c01c:	98c6d83a 	srl	r3,r19,r3
    c020:	9c68983a 	sll	r20,r19,r17
    c024:	1c20b03a 	or	r16,r3,r16
    c028:	1080fcc4 	addi	r2,r2,1011
    c02c:	00a5c83a 	sub	r18,zero,r2
    c030:	0027883a 	mov	r19,zero
    c034:	0039883a 	mov	fp,zero
    c038:	003f9006 	br	be7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700be7c>
    c03c:	3446b03a 	or	r3,r6,r17
    c040:	1800261e 	bne	r3,zero,c0dc <__muldf3+0x2dc>
    c044:	0023883a 	mov	r17,zero
    c048:	0011883a 	mov	r8,zero
    c04c:	01400084 	movi	r5,2
    c050:	003f9c06 	br	bec4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bec4>
    c054:	3446b03a 	or	r3,r6,r17
    c058:	18001c26 	beq	r3,zero,c0cc <__muldf3+0x2cc>
    c05c:	8800ce26 	beq	r17,zero,c398 <__muldf3+0x598>
    c060:	8809883a 	mov	r4,r17
    c064:	d9800215 	stw	r6,8(sp)
    c068:	da400115 	stw	r9,4(sp)
    c06c:	da800015 	stw	r10,0(sp)
    c070:	00007cc0 	call	7cc <__clzsi2>
    c074:	d9800217 	ldw	r6,8(sp)
    c078:	da400117 	ldw	r9,4(sp)
    c07c:	da800017 	ldw	r10,0(sp)
    c080:	113ffd44 	addi	r4,r2,-11
    c084:	00c00704 	movi	r3,28
    c088:	1900bf16 	blt	r3,r4,c388 <__muldf3+0x588>
    c08c:	00c00744 	movi	r3,29
    c090:	123ffe04 	addi	r8,r2,-8
    c094:	1907c83a 	sub	r3,r3,r4
    c098:	8a22983a 	sll	r17,r17,r8
    c09c:	30c6d83a 	srl	r3,r6,r3
    c0a0:	3210983a 	sll	r8,r6,r8
    c0a4:	1c62b03a 	or	r17,r3,r17
    c0a8:	1080fcc4 	addi	r2,r2,1011
    c0ac:	0085c83a 	sub	r2,zero,r2
    c0b0:	000b883a 	mov	r5,zero
    c0b4:	003f8306 	br	bec4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bec4>
    c0b8:	b02b883a 	mov	r21,r22
    c0bc:	0081ffc4 	movi	r2,2047
    c0c0:	000b883a 	mov	r5,zero
    c0c4:	0029883a 	mov	r20,zero
    c0c8:	003fac06 	br	bf7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf7c>
    c0cc:	0023883a 	mov	r17,zero
    c0d0:	0011883a 	mov	r8,zero
    c0d4:	01400044 	movi	r5,1
    c0d8:	003f7a06 	br	bec4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bec4>
    c0dc:	014000c4 	movi	r5,3
    c0e0:	003f7806 	br	bec4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bec4>
    c0e4:	04c00104 	movi	r19,4
    c0e8:	0021883a 	mov	r16,zero
    c0ec:	0029883a 	mov	r20,zero
    c0f0:	07000044 	movi	fp,1
    c0f4:	003f6106 	br	be7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700be7c>
    c0f8:	04c00304 	movi	r19,12
    c0fc:	070000c4 	movi	fp,3
    c100:	003f5e06 	br	be7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700be7c>
    c104:	01400434 	movhi	r5,16
    c108:	002b883a 	mov	r21,zero
    c10c:	297fffc4 	addi	r5,r5,-1
    c110:	053fffc4 	movi	r20,-1
    c114:	0081ffc4 	movi	r2,2047
    c118:	003f9806 	br	bf7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf7c>
    c11c:	8023883a 	mov	r17,r16
    c120:	a011883a 	mov	r8,r20
    c124:	e00b883a 	mov	r5,fp
    c128:	003f8a06 	br	bf54 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf54>
    c12c:	8023883a 	mov	r17,r16
    c130:	a011883a 	mov	r8,r20
    c134:	482d883a 	mov	r22,r9
    c138:	e00b883a 	mov	r5,fp
    c13c:	003f8506 	br	bf54 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf54>
    c140:	a00ad43a 	srli	r5,r20,16
    c144:	401ad43a 	srli	r13,r8,16
    c148:	a53fffcc 	andi	r20,r20,65535
    c14c:	423fffcc 	andi	r8,r8,65535
    c150:	4519383a 	mul	r12,r8,r20
    c154:	4147383a 	mul	r3,r8,r5
    c158:	6d09383a 	mul	r4,r13,r20
    c15c:	600cd43a 	srli	r6,r12,16
    c160:	2b5d383a 	mul	r14,r5,r13
    c164:	20c9883a 	add	r4,r4,r3
    c168:	310d883a 	add	r6,r6,r4
    c16c:	30c0022e 	bgeu	r6,r3,c178 <__muldf3+0x378>
    c170:	00c00074 	movhi	r3,1
    c174:	70dd883a 	add	r14,r14,r3
    c178:	8826d43a 	srli	r19,r17,16
    c17c:	8bffffcc 	andi	r15,r17,65535
    c180:	7d23383a 	mul	r17,r15,r20
    c184:	7949383a 	mul	r4,r15,r5
    c188:	9d29383a 	mul	r20,r19,r20
    c18c:	8814d43a 	srli	r10,r17,16
    c190:	3012943a 	slli	r9,r6,16
    c194:	a129883a 	add	r20,r20,r4
    c198:	633fffcc 	andi	r12,r12,65535
    c19c:	5515883a 	add	r10,r10,r20
    c1a0:	3006d43a 	srli	r3,r6,16
    c1a4:	4b13883a 	add	r9,r9,r12
    c1a8:	2ccb383a 	mul	r5,r5,r19
    c1ac:	5100022e 	bgeu	r10,r4,c1b8 <__muldf3+0x3b8>
    c1b0:	01000074 	movhi	r4,1
    c1b4:	290b883a 	add	r5,r5,r4
    c1b8:	802ad43a 	srli	r21,r16,16
    c1bc:	843fffcc 	andi	r16,r16,65535
    c1c0:	440d383a 	mul	r6,r8,r16
    c1c4:	4565383a 	mul	r18,r8,r21
    c1c8:	8349383a 	mul	r4,r16,r13
    c1cc:	500e943a 	slli	r7,r10,16
    c1d0:	3010d43a 	srli	r8,r6,16
    c1d4:	5028d43a 	srli	r20,r10,16
    c1d8:	2489883a 	add	r4,r4,r18
    c1dc:	8abfffcc 	andi	r10,r17,65535
    c1e0:	3a95883a 	add	r10,r7,r10
    c1e4:	4119883a 	add	r12,r8,r4
    c1e8:	a169883a 	add	r20,r20,r5
    c1ec:	1a87883a 	add	r3,r3,r10
    c1f0:	6d5b383a 	mul	r13,r13,r21
    c1f4:	6480022e 	bgeu	r12,r18,c200 <__muldf3+0x400>
    c1f8:	01000074 	movhi	r4,1
    c1fc:	691b883a 	add	r13,r13,r4
    c200:	7c25383a 	mul	r18,r15,r16
    c204:	7d4b383a 	mul	r5,r15,r21
    c208:	84cf383a 	mul	r7,r16,r19
    c20c:	901ed43a 	srli	r15,r18,16
    c210:	6008d43a 	srli	r4,r12,16
    c214:	6010943a 	slli	r8,r12,16
    c218:	394f883a 	add	r7,r7,r5
    c21c:	333fffcc 	andi	r12,r6,65535
    c220:	79df883a 	add	r15,r15,r7
    c224:	235b883a 	add	r13,r4,r13
    c228:	9d63383a 	mul	r17,r19,r21
    c22c:	4309883a 	add	r4,r8,r12
    c230:	7940022e 	bgeu	r15,r5,c23c <__muldf3+0x43c>
    c234:	01400074 	movhi	r5,1
    c238:	8963883a 	add	r17,r17,r5
    c23c:	780a943a 	slli	r5,r15,16
    c240:	91bfffcc 	andi	r6,r18,65535
    c244:	70c7883a 	add	r3,r14,r3
    c248:	298d883a 	add	r6,r5,r6
    c24c:	1a8f803a 	cmpltu	r7,r3,r10
    c250:	350b883a 	add	r5,r6,r20
    c254:	20c7883a 	add	r3,r4,r3
    c258:	3955883a 	add	r10,r7,r5
    c25c:	1909803a 	cmpltu	r4,r3,r4
    c260:	6a91883a 	add	r8,r13,r10
    c264:	780cd43a 	srli	r6,r15,16
    c268:	2219883a 	add	r12,r4,r8
    c26c:	2d0b803a 	cmpltu	r5,r5,r20
    c270:	51cf803a 	cmpltu	r7,r10,r7
    c274:	29ceb03a 	or	r7,r5,r7
    c278:	4351803a 	cmpltu	r8,r8,r13
    c27c:	610b803a 	cmpltu	r5,r12,r4
    c280:	4148b03a 	or	r4,r8,r5
    c284:	398f883a 	add	r7,r7,r6
    c288:	3909883a 	add	r4,r7,r4
    c28c:	1810927a 	slli	r8,r3,9
    c290:	2449883a 	add	r4,r4,r17
    c294:	2008927a 	slli	r4,r4,9
    c298:	6022d5fa 	srli	r17,r12,23
    c29c:	1806d5fa 	srli	r3,r3,23
    c2a0:	4252b03a 	or	r9,r8,r9
    c2a4:	600a927a 	slli	r5,r12,9
    c2a8:	4810c03a 	cmpne	r8,r9,zero
    c2ac:	2462b03a 	or	r17,r4,r17
    c2b0:	40c6b03a 	or	r3,r8,r3
    c2b4:	8900402c 	andhi	r4,r17,256
    c2b8:	1950b03a 	or	r8,r3,r5
    c2bc:	20000726 	beq	r4,zero,c2dc <__muldf3+0x4dc>
    c2c0:	4006d07a 	srli	r3,r8,1
    c2c4:	880497fa 	slli	r2,r17,31
    c2c8:	4200004c 	andi	r8,r8,1
    c2cc:	8822d07a 	srli	r17,r17,1
    c2d0:	1a10b03a 	or	r8,r3,r8
    c2d4:	1210b03a 	or	r8,r2,r8
    c2d8:	5805883a 	mov	r2,r11
    c2dc:	1140ffc4 	addi	r5,r2,1023
    c2e0:	0140440e 	bge	zero,r5,c3f4 <__muldf3+0x5f4>
    c2e4:	40c001cc 	andi	r3,r8,7
    c2e8:	18000726 	beq	r3,zero,c308 <__muldf3+0x508>
    c2ec:	40c003cc 	andi	r3,r8,15
    c2f0:	01000104 	movi	r4,4
    c2f4:	19000426 	beq	r3,r4,c308 <__muldf3+0x508>
    c2f8:	4107883a 	add	r3,r8,r4
    c2fc:	1a11803a 	cmpltu	r8,r3,r8
    c300:	8a23883a 	add	r17,r17,r8
    c304:	1811883a 	mov	r8,r3
    c308:	88c0402c 	andhi	r3,r17,256
    c30c:	18000426 	beq	r3,zero,c320 <__muldf3+0x520>
    c310:	11410004 	addi	r5,r2,1024
    c314:	00bfc034 	movhi	r2,65280
    c318:	10bfffc4 	addi	r2,r2,-1
    c31c:	88a2703a 	and	r17,r17,r2
    c320:	0081ff84 	movi	r2,2046
    c324:	117f6416 	blt	r2,r5,c0b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c0b8>
    c328:	8828977a 	slli	r20,r17,29
    c32c:	4010d0fa 	srli	r8,r8,3
    c330:	8822927a 	slli	r17,r17,9
    c334:	2881ffcc 	andi	r2,r5,2047
    c338:	a228b03a 	or	r20,r20,r8
    c33c:	880ad33a 	srli	r5,r17,12
    c340:	b02b883a 	mov	r21,r22
    c344:	003f0d06 	br	bf7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf7c>
    c348:	8080022c 	andhi	r2,r16,8
    c34c:	10000926 	beq	r2,zero,c374 <__muldf3+0x574>
    c350:	8880022c 	andhi	r2,r17,8
    c354:	1000071e 	bne	r2,zero,c374 <__muldf3+0x574>
    c358:	00800434 	movhi	r2,16
    c35c:	89400234 	orhi	r5,r17,8
    c360:	10bfffc4 	addi	r2,r2,-1
    c364:	b82b883a 	mov	r21,r23
    c368:	288a703a 	and	r5,r5,r2
    c36c:	4029883a 	mov	r20,r8
    c370:	003f6806 	br	c114 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c114>
    c374:	00800434 	movhi	r2,16
    c378:	81400234 	orhi	r5,r16,8
    c37c:	10bfffc4 	addi	r2,r2,-1
    c380:	288a703a 	and	r5,r5,r2
    c384:	003f6306 	br	c114 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c114>
    c388:	147ff604 	addi	r17,r2,-40
    c38c:	3462983a 	sll	r17,r6,r17
    c390:	0011883a 	mov	r8,zero
    c394:	003f4406 	br	c0a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c0a8>
    c398:	3009883a 	mov	r4,r6
    c39c:	d9800215 	stw	r6,8(sp)
    c3a0:	da400115 	stw	r9,4(sp)
    c3a4:	da800015 	stw	r10,0(sp)
    c3a8:	00007cc0 	call	7cc <__clzsi2>
    c3ac:	10800804 	addi	r2,r2,32
    c3b0:	da800017 	ldw	r10,0(sp)
    c3b4:	da400117 	ldw	r9,4(sp)
    c3b8:	d9800217 	ldw	r6,8(sp)
    c3bc:	003f3006 	br	c080 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c080>
    c3c0:	143ff604 	addi	r16,r2,-40
    c3c4:	9c20983a 	sll	r16,r19,r16
    c3c8:	0029883a 	mov	r20,zero
    c3cc:	003f1606 	br	c028 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c028>
    c3d0:	d9800215 	stw	r6,8(sp)
    c3d4:	d9c00015 	stw	r7,0(sp)
    c3d8:	da400115 	stw	r9,4(sp)
    c3dc:	00007cc0 	call	7cc <__clzsi2>
    c3e0:	10800804 	addi	r2,r2,32
    c3e4:	da400117 	ldw	r9,4(sp)
    c3e8:	d9c00017 	ldw	r7,0(sp)
    c3ec:	d9800217 	ldw	r6,8(sp)
    c3f0:	003f0306 	br	c000 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c000>
    c3f4:	00c00044 	movi	r3,1
    c3f8:	1947c83a 	sub	r3,r3,r5
    c3fc:	00800e04 	movi	r2,56
    c400:	10feda16 	blt	r2,r3,bf6c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf6c>
    c404:	008007c4 	movi	r2,31
    c408:	10c01b16 	blt	r2,r3,c478 <__muldf3+0x678>
    c40c:	00800804 	movi	r2,32
    c410:	10c5c83a 	sub	r2,r2,r3
    c414:	888a983a 	sll	r5,r17,r2
    c418:	40c8d83a 	srl	r4,r8,r3
    c41c:	4084983a 	sll	r2,r8,r2
    c420:	88e2d83a 	srl	r17,r17,r3
    c424:	2906b03a 	or	r3,r5,r4
    c428:	1004c03a 	cmpne	r2,r2,zero
    c42c:	1886b03a 	or	r3,r3,r2
    c430:	188001cc 	andi	r2,r3,7
    c434:	10000726 	beq	r2,zero,c454 <__muldf3+0x654>
    c438:	188003cc 	andi	r2,r3,15
    c43c:	01000104 	movi	r4,4
    c440:	11000426 	beq	r2,r4,c454 <__muldf3+0x654>
    c444:	1805883a 	mov	r2,r3
    c448:	10c00104 	addi	r3,r2,4
    c44c:	1885803a 	cmpltu	r2,r3,r2
    c450:	88a3883a 	add	r17,r17,r2
    c454:	8880202c 	andhi	r2,r17,128
    c458:	10001c26 	beq	r2,zero,c4cc <__muldf3+0x6cc>
    c45c:	b02b883a 	mov	r21,r22
    c460:	00800044 	movi	r2,1
    c464:	000b883a 	mov	r5,zero
    c468:	0029883a 	mov	r20,zero
    c46c:	003ec306 	br	bf7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf7c>
    c470:	5805883a 	mov	r2,r11
    c474:	003f9906 	br	c2dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c2dc>
    c478:	00bff844 	movi	r2,-31
    c47c:	1145c83a 	sub	r2,r2,r5
    c480:	8888d83a 	srl	r4,r17,r2
    c484:	00800804 	movi	r2,32
    c488:	18801a26 	beq	r3,r2,c4f4 <__muldf3+0x6f4>
    c48c:	00801004 	movi	r2,64
    c490:	10c5c83a 	sub	r2,r2,r3
    c494:	8884983a 	sll	r2,r17,r2
    c498:	1204b03a 	or	r2,r2,r8
    c49c:	1004c03a 	cmpne	r2,r2,zero
    c4a0:	2084b03a 	or	r2,r4,r2
    c4a4:	144001cc 	andi	r17,r2,7
    c4a8:	88000d1e 	bne	r17,zero,c4e0 <__muldf3+0x6e0>
    c4ac:	000b883a 	mov	r5,zero
    c4b0:	1028d0fa 	srli	r20,r2,3
    c4b4:	b02b883a 	mov	r21,r22
    c4b8:	0005883a 	mov	r2,zero
    c4bc:	a468b03a 	or	r20,r20,r17
    c4c0:	003eae06 	br	bf7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf7c>
    c4c4:	1007883a 	mov	r3,r2
    c4c8:	0023883a 	mov	r17,zero
    c4cc:	880a927a 	slli	r5,r17,9
    c4d0:	1805883a 	mov	r2,r3
    c4d4:	8822977a 	slli	r17,r17,29
    c4d8:	280ad33a 	srli	r5,r5,12
    c4dc:	003ff406 	br	c4b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c4b0>
    c4e0:	10c003cc 	andi	r3,r2,15
    c4e4:	01000104 	movi	r4,4
    c4e8:	193ff626 	beq	r3,r4,c4c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c4c4>
    c4ec:	0023883a 	mov	r17,zero
    c4f0:	003fd506 	br	c448 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c448>
    c4f4:	0005883a 	mov	r2,zero
    c4f8:	003fe706 	br	c498 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c498>
    c4fc:	00800434 	movhi	r2,16
    c500:	89400234 	orhi	r5,r17,8
    c504:	10bfffc4 	addi	r2,r2,-1
    c508:	b02b883a 	mov	r21,r22
    c50c:	288a703a 	and	r5,r5,r2
    c510:	4029883a 	mov	r20,r8
    c514:	003eff06 	br	c114 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c114>

0000c518 <__subdf3>:
    c518:	02000434 	movhi	r8,16
    c51c:	423fffc4 	addi	r8,r8,-1
    c520:	defffb04 	addi	sp,sp,-20
    c524:	2a14703a 	and	r10,r5,r8
    c528:	3812d53a 	srli	r9,r7,20
    c52c:	3a10703a 	and	r8,r7,r8
    c530:	2006d77a 	srli	r3,r4,29
    c534:	3004d77a 	srli	r2,r6,29
    c538:	dc000015 	stw	r16,0(sp)
    c53c:	501490fa 	slli	r10,r10,3
    c540:	2820d53a 	srli	r16,r5,20
    c544:	401090fa 	slli	r8,r8,3
    c548:	dc800215 	stw	r18,8(sp)
    c54c:	dc400115 	stw	r17,4(sp)
    c550:	dfc00415 	stw	ra,16(sp)
    c554:	202290fa 	slli	r17,r4,3
    c558:	dcc00315 	stw	r19,12(sp)
    c55c:	4a41ffcc 	andi	r9,r9,2047
    c560:	0101ffc4 	movi	r4,2047
    c564:	2824d7fa 	srli	r18,r5,31
    c568:	8401ffcc 	andi	r16,r16,2047
    c56c:	50c6b03a 	or	r3,r10,r3
    c570:	380ed7fa 	srli	r7,r7,31
    c574:	408ab03a 	or	r5,r8,r2
    c578:	300c90fa 	slli	r6,r6,3
    c57c:	49009626 	beq	r9,r4,c7d8 <__subdf3+0x2c0>
    c580:	39c0005c 	xori	r7,r7,1
    c584:	8245c83a 	sub	r2,r16,r9
    c588:	3c807426 	beq	r7,r18,c75c <__subdf3+0x244>
    c58c:	0080af0e 	bge	zero,r2,c84c <__subdf3+0x334>
    c590:	48002a1e 	bne	r9,zero,c63c <__subdf3+0x124>
    c594:	2988b03a 	or	r4,r5,r6
    c598:	20009a1e 	bne	r4,zero,c804 <__subdf3+0x2ec>
    c59c:	888001cc 	andi	r2,r17,7
    c5a0:	10000726 	beq	r2,zero,c5c0 <__subdf3+0xa8>
    c5a4:	888003cc 	andi	r2,r17,15
    c5a8:	01000104 	movi	r4,4
    c5ac:	11000426 	beq	r2,r4,c5c0 <__subdf3+0xa8>
    c5b0:	890b883a 	add	r5,r17,r4
    c5b4:	2c63803a 	cmpltu	r17,r5,r17
    c5b8:	1c47883a 	add	r3,r3,r17
    c5bc:	2823883a 	mov	r17,r5
    c5c0:	1880202c 	andhi	r2,r3,128
    c5c4:	10005926 	beq	r2,zero,c72c <__subdf3+0x214>
    c5c8:	84000044 	addi	r16,r16,1
    c5cc:	0081ffc4 	movi	r2,2047
    c5d0:	8080be26 	beq	r16,r2,c8cc <__subdf3+0x3b4>
    c5d4:	017fe034 	movhi	r5,65408
    c5d8:	297fffc4 	addi	r5,r5,-1
    c5dc:	1946703a 	and	r3,r3,r5
    c5e0:	1804977a 	slli	r2,r3,29
    c5e4:	1806927a 	slli	r3,r3,9
    c5e8:	8822d0fa 	srli	r17,r17,3
    c5ec:	8401ffcc 	andi	r16,r16,2047
    c5f0:	180ad33a 	srli	r5,r3,12
    c5f4:	9100004c 	andi	r4,r18,1
    c5f8:	1444b03a 	or	r2,r2,r17
    c5fc:	80c1ffcc 	andi	r3,r16,2047
    c600:	1820953a 	slli	r16,r3,20
    c604:	20c03fcc 	andi	r3,r4,255
    c608:	180897fa 	slli	r4,r3,31
    c60c:	00c00434 	movhi	r3,16
    c610:	18ffffc4 	addi	r3,r3,-1
    c614:	28c6703a 	and	r3,r5,r3
    c618:	1c06b03a 	or	r3,r3,r16
    c61c:	1906b03a 	or	r3,r3,r4
    c620:	dfc00417 	ldw	ra,16(sp)
    c624:	dcc00317 	ldw	r19,12(sp)
    c628:	dc800217 	ldw	r18,8(sp)
    c62c:	dc400117 	ldw	r17,4(sp)
    c630:	dc000017 	ldw	r16,0(sp)
    c634:	dec00504 	addi	sp,sp,20
    c638:	f800283a 	ret
    c63c:	0101ffc4 	movi	r4,2047
    c640:	813fd626 	beq	r16,r4,c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    c644:	29402034 	orhi	r5,r5,128
    c648:	01000e04 	movi	r4,56
    c64c:	2080a316 	blt	r4,r2,c8dc <__subdf3+0x3c4>
    c650:	010007c4 	movi	r4,31
    c654:	2080c616 	blt	r4,r2,c970 <__subdf3+0x458>
    c658:	01000804 	movi	r4,32
    c65c:	2089c83a 	sub	r4,r4,r2
    c660:	2910983a 	sll	r8,r5,r4
    c664:	308ed83a 	srl	r7,r6,r2
    c668:	3108983a 	sll	r4,r6,r4
    c66c:	2884d83a 	srl	r2,r5,r2
    c670:	41ccb03a 	or	r6,r8,r7
    c674:	2008c03a 	cmpne	r4,r4,zero
    c678:	310cb03a 	or	r6,r6,r4
    c67c:	898dc83a 	sub	r6,r17,r6
    c680:	89a3803a 	cmpltu	r17,r17,r6
    c684:	1887c83a 	sub	r3,r3,r2
    c688:	1c47c83a 	sub	r3,r3,r17
    c68c:	3023883a 	mov	r17,r6
    c690:	1880202c 	andhi	r2,r3,128
    c694:	10002326 	beq	r2,zero,c724 <__subdf3+0x20c>
    c698:	04c02034 	movhi	r19,128
    c69c:	9cffffc4 	addi	r19,r19,-1
    c6a0:	1ce6703a 	and	r19,r3,r19
    c6a4:	98007a26 	beq	r19,zero,c890 <__subdf3+0x378>
    c6a8:	9809883a 	mov	r4,r19
    c6ac:	00007cc0 	call	7cc <__clzsi2>
    c6b0:	113ffe04 	addi	r4,r2,-8
    c6b4:	00c007c4 	movi	r3,31
    c6b8:	19007b16 	blt	r3,r4,c8a8 <__subdf3+0x390>
    c6bc:	00800804 	movi	r2,32
    c6c0:	1105c83a 	sub	r2,r2,r4
    c6c4:	8884d83a 	srl	r2,r17,r2
    c6c8:	9906983a 	sll	r3,r19,r4
    c6cc:	8922983a 	sll	r17,r17,r4
    c6d0:	10c4b03a 	or	r2,r2,r3
    c6d4:	24007816 	blt	r4,r16,c8b8 <__subdf3+0x3a0>
    c6d8:	2421c83a 	sub	r16,r4,r16
    c6dc:	80c00044 	addi	r3,r16,1
    c6e0:	010007c4 	movi	r4,31
    c6e4:	20c09516 	blt	r4,r3,c93c <__subdf3+0x424>
    c6e8:	01400804 	movi	r5,32
    c6ec:	28cbc83a 	sub	r5,r5,r3
    c6f0:	88c8d83a 	srl	r4,r17,r3
    c6f4:	8962983a 	sll	r17,r17,r5
    c6f8:	114a983a 	sll	r5,r2,r5
    c6fc:	10c6d83a 	srl	r3,r2,r3
    c700:	8804c03a 	cmpne	r2,r17,zero
    c704:	290ab03a 	or	r5,r5,r4
    c708:	28a2b03a 	or	r17,r5,r2
    c70c:	0021883a 	mov	r16,zero
    c710:	003fa206 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    c714:	2090b03a 	or	r8,r4,r2
    c718:	40018e26 	beq	r8,zero,cd54 <__subdf3+0x83c>
    c71c:	1007883a 	mov	r3,r2
    c720:	2023883a 	mov	r17,r4
    c724:	888001cc 	andi	r2,r17,7
    c728:	103f9e1e 	bne	r2,zero,c5a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c5a4>
    c72c:	1804977a 	slli	r2,r3,29
    c730:	8822d0fa 	srli	r17,r17,3
    c734:	1810d0fa 	srli	r8,r3,3
    c738:	9100004c 	andi	r4,r18,1
    c73c:	1444b03a 	or	r2,r2,r17
    c740:	00c1ffc4 	movi	r3,2047
    c744:	80c02826 	beq	r16,r3,c7e8 <__subdf3+0x2d0>
    c748:	01400434 	movhi	r5,16
    c74c:	297fffc4 	addi	r5,r5,-1
    c750:	80e0703a 	and	r16,r16,r3
    c754:	414a703a 	and	r5,r8,r5
    c758:	003fa806 	br	c5fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c5fc>
    c75c:	0080630e 	bge	zero,r2,c8ec <__subdf3+0x3d4>
    c760:	48003026 	beq	r9,zero,c824 <__subdf3+0x30c>
    c764:	0101ffc4 	movi	r4,2047
    c768:	813f8c26 	beq	r16,r4,c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    c76c:	29402034 	orhi	r5,r5,128
    c770:	01000e04 	movi	r4,56
    c774:	2080a90e 	bge	r4,r2,ca1c <__subdf3+0x504>
    c778:	298cb03a 	or	r6,r5,r6
    c77c:	3012c03a 	cmpne	r9,r6,zero
    c780:	0005883a 	mov	r2,zero
    c784:	4c53883a 	add	r9,r9,r17
    c788:	4c63803a 	cmpltu	r17,r9,r17
    c78c:	10c7883a 	add	r3,r2,r3
    c790:	88c7883a 	add	r3,r17,r3
    c794:	4823883a 	mov	r17,r9
    c798:	1880202c 	andhi	r2,r3,128
    c79c:	1000d026 	beq	r2,zero,cae0 <__subdf3+0x5c8>
    c7a0:	84000044 	addi	r16,r16,1
    c7a4:	0081ffc4 	movi	r2,2047
    c7a8:	8080fe26 	beq	r16,r2,cba4 <__subdf3+0x68c>
    c7ac:	00bfe034 	movhi	r2,65408
    c7b0:	10bfffc4 	addi	r2,r2,-1
    c7b4:	1886703a 	and	r3,r3,r2
    c7b8:	880ad07a 	srli	r5,r17,1
    c7bc:	180497fa 	slli	r2,r3,31
    c7c0:	8900004c 	andi	r4,r17,1
    c7c4:	2922b03a 	or	r17,r5,r4
    c7c8:	1806d07a 	srli	r3,r3,1
    c7cc:	1462b03a 	or	r17,r2,r17
    c7d0:	3825883a 	mov	r18,r7
    c7d4:	003f7106 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    c7d8:	2984b03a 	or	r2,r5,r6
    c7dc:	103f6826 	beq	r2,zero,c580 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c580>
    c7e0:	39c03fcc 	andi	r7,r7,255
    c7e4:	003f6706 	br	c584 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c584>
    c7e8:	4086b03a 	or	r3,r8,r2
    c7ec:	18015226 	beq	r3,zero,cd38 <__subdf3+0x820>
    c7f0:	00c00434 	movhi	r3,16
    c7f4:	41400234 	orhi	r5,r8,8
    c7f8:	18ffffc4 	addi	r3,r3,-1
    c7fc:	28ca703a 	and	r5,r5,r3
    c800:	003f7e06 	br	c5fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c5fc>
    c804:	10bfffc4 	addi	r2,r2,-1
    c808:	1000491e 	bne	r2,zero,c930 <__subdf3+0x418>
    c80c:	898fc83a 	sub	r7,r17,r6
    c810:	89e3803a 	cmpltu	r17,r17,r7
    c814:	1947c83a 	sub	r3,r3,r5
    c818:	1c47c83a 	sub	r3,r3,r17
    c81c:	3823883a 	mov	r17,r7
    c820:	003f9b06 	br	c690 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c690>
    c824:	2988b03a 	or	r4,r5,r6
    c828:	203f5c26 	beq	r4,zero,c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    c82c:	10bfffc4 	addi	r2,r2,-1
    c830:	1000931e 	bne	r2,zero,ca80 <__subdf3+0x568>
    c834:	898d883a 	add	r6,r17,r6
    c838:	3463803a 	cmpltu	r17,r6,r17
    c83c:	1947883a 	add	r3,r3,r5
    c840:	88c7883a 	add	r3,r17,r3
    c844:	3023883a 	mov	r17,r6
    c848:	003fd306 	br	c798 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c798>
    c84c:	1000541e 	bne	r2,zero,c9a0 <__subdf3+0x488>
    c850:	80800044 	addi	r2,r16,1
    c854:	1081ffcc 	andi	r2,r2,2047
    c858:	01000044 	movi	r4,1
    c85c:	2080a20e 	bge	r4,r2,cae8 <__subdf3+0x5d0>
    c860:	8989c83a 	sub	r4,r17,r6
    c864:	8905803a 	cmpltu	r2,r17,r4
    c868:	1967c83a 	sub	r19,r3,r5
    c86c:	98a7c83a 	sub	r19,r19,r2
    c870:	9880202c 	andhi	r2,r19,128
    c874:	10006326 	beq	r2,zero,ca04 <__subdf3+0x4ec>
    c878:	3463c83a 	sub	r17,r6,r17
    c87c:	28c7c83a 	sub	r3,r5,r3
    c880:	344d803a 	cmpltu	r6,r6,r17
    c884:	19a7c83a 	sub	r19,r3,r6
    c888:	3825883a 	mov	r18,r7
    c88c:	983f861e 	bne	r19,zero,c6a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c6a8>
    c890:	8809883a 	mov	r4,r17
    c894:	00007cc0 	call	7cc <__clzsi2>
    c898:	10800804 	addi	r2,r2,32
    c89c:	113ffe04 	addi	r4,r2,-8
    c8a0:	00c007c4 	movi	r3,31
    c8a4:	193f850e 	bge	r3,r4,c6bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c6bc>
    c8a8:	10bff604 	addi	r2,r2,-40
    c8ac:	8884983a 	sll	r2,r17,r2
    c8b0:	0023883a 	mov	r17,zero
    c8b4:	243f880e 	bge	r4,r16,c6d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c6d8>
    c8b8:	00ffe034 	movhi	r3,65408
    c8bc:	18ffffc4 	addi	r3,r3,-1
    c8c0:	8121c83a 	sub	r16,r16,r4
    c8c4:	10c6703a 	and	r3,r2,r3
    c8c8:	003f3406 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    c8cc:	9100004c 	andi	r4,r18,1
    c8d0:	000b883a 	mov	r5,zero
    c8d4:	0005883a 	mov	r2,zero
    c8d8:	003f4806 	br	c5fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c5fc>
    c8dc:	298cb03a 	or	r6,r5,r6
    c8e0:	300cc03a 	cmpne	r6,r6,zero
    c8e4:	0005883a 	mov	r2,zero
    c8e8:	003f6406 	br	c67c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c67c>
    c8ec:	10009a1e 	bne	r2,zero,cb58 <__subdf3+0x640>
    c8f0:	82400044 	addi	r9,r16,1
    c8f4:	4881ffcc 	andi	r2,r9,2047
    c8f8:	02800044 	movi	r10,1
    c8fc:	5080670e 	bge	r10,r2,ca9c <__subdf3+0x584>
    c900:	0081ffc4 	movi	r2,2047
    c904:	4880af26 	beq	r9,r2,cbc4 <__subdf3+0x6ac>
    c908:	898d883a 	add	r6,r17,r6
    c90c:	1945883a 	add	r2,r3,r5
    c910:	3447803a 	cmpltu	r3,r6,r17
    c914:	1887883a 	add	r3,r3,r2
    c918:	182297fa 	slli	r17,r3,31
    c91c:	300cd07a 	srli	r6,r6,1
    c920:	1806d07a 	srli	r3,r3,1
    c924:	4821883a 	mov	r16,r9
    c928:	89a2b03a 	or	r17,r17,r6
    c92c:	003f1b06 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    c930:	0101ffc4 	movi	r4,2047
    c934:	813f441e 	bne	r16,r4,c648 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c648>
    c938:	003f1806 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    c93c:	843ff844 	addi	r16,r16,-31
    c940:	01400804 	movi	r5,32
    c944:	1408d83a 	srl	r4,r2,r16
    c948:	19405026 	beq	r3,r5,ca8c <__subdf3+0x574>
    c94c:	01401004 	movi	r5,64
    c950:	28c7c83a 	sub	r3,r5,r3
    c954:	10c4983a 	sll	r2,r2,r3
    c958:	88a2b03a 	or	r17,r17,r2
    c95c:	8822c03a 	cmpne	r17,r17,zero
    c960:	2462b03a 	or	r17,r4,r17
    c964:	0007883a 	mov	r3,zero
    c968:	0021883a 	mov	r16,zero
    c96c:	003f6d06 	br	c724 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c724>
    c970:	11fff804 	addi	r7,r2,-32
    c974:	01000804 	movi	r4,32
    c978:	29ced83a 	srl	r7,r5,r7
    c97c:	11004526 	beq	r2,r4,ca94 <__subdf3+0x57c>
    c980:	01001004 	movi	r4,64
    c984:	2089c83a 	sub	r4,r4,r2
    c988:	2904983a 	sll	r2,r5,r4
    c98c:	118cb03a 	or	r6,r2,r6
    c990:	300cc03a 	cmpne	r6,r6,zero
    c994:	398cb03a 	or	r6,r7,r6
    c998:	0005883a 	mov	r2,zero
    c99c:	003f3706 	br	c67c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c67c>
    c9a0:	80002a26 	beq	r16,zero,ca4c <__subdf3+0x534>
    c9a4:	0101ffc4 	movi	r4,2047
    c9a8:	49006626 	beq	r9,r4,cb44 <__subdf3+0x62c>
    c9ac:	0085c83a 	sub	r2,zero,r2
    c9b0:	18c02034 	orhi	r3,r3,128
    c9b4:	01000e04 	movi	r4,56
    c9b8:	20807e16 	blt	r4,r2,cbb4 <__subdf3+0x69c>
    c9bc:	010007c4 	movi	r4,31
    c9c0:	2080e716 	blt	r4,r2,cd60 <__subdf3+0x848>
    c9c4:	01000804 	movi	r4,32
    c9c8:	2089c83a 	sub	r4,r4,r2
    c9cc:	1914983a 	sll	r10,r3,r4
    c9d0:	8890d83a 	srl	r8,r17,r2
    c9d4:	8908983a 	sll	r4,r17,r4
    c9d8:	1884d83a 	srl	r2,r3,r2
    c9dc:	5222b03a 	or	r17,r10,r8
    c9e0:	2006c03a 	cmpne	r3,r4,zero
    c9e4:	88e2b03a 	or	r17,r17,r3
    c9e8:	3463c83a 	sub	r17,r6,r17
    c9ec:	2885c83a 	sub	r2,r5,r2
    c9f0:	344d803a 	cmpltu	r6,r6,r17
    c9f4:	1187c83a 	sub	r3,r2,r6
    c9f8:	4821883a 	mov	r16,r9
    c9fc:	3825883a 	mov	r18,r7
    ca00:	003f2306 	br	c690 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c690>
    ca04:	24d0b03a 	or	r8,r4,r19
    ca08:	40001b1e 	bne	r8,zero,ca78 <__subdf3+0x560>
    ca0c:	0005883a 	mov	r2,zero
    ca10:	0009883a 	mov	r4,zero
    ca14:	0021883a 	mov	r16,zero
    ca18:	003f4906 	br	c740 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c740>
    ca1c:	010007c4 	movi	r4,31
    ca20:	20803a16 	blt	r4,r2,cb0c <__subdf3+0x5f4>
    ca24:	01000804 	movi	r4,32
    ca28:	2089c83a 	sub	r4,r4,r2
    ca2c:	2912983a 	sll	r9,r5,r4
    ca30:	3090d83a 	srl	r8,r6,r2
    ca34:	3108983a 	sll	r4,r6,r4
    ca38:	2884d83a 	srl	r2,r5,r2
    ca3c:	4a12b03a 	or	r9,r9,r8
    ca40:	2008c03a 	cmpne	r4,r4,zero
    ca44:	4912b03a 	or	r9,r9,r4
    ca48:	003f4e06 	br	c784 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c784>
    ca4c:	1c48b03a 	or	r4,r3,r17
    ca50:	20003c26 	beq	r4,zero,cb44 <__subdf3+0x62c>
    ca54:	0084303a 	nor	r2,zero,r2
    ca58:	1000381e 	bne	r2,zero,cb3c <__subdf3+0x624>
    ca5c:	3463c83a 	sub	r17,r6,r17
    ca60:	28c5c83a 	sub	r2,r5,r3
    ca64:	344d803a 	cmpltu	r6,r6,r17
    ca68:	1187c83a 	sub	r3,r2,r6
    ca6c:	4821883a 	mov	r16,r9
    ca70:	3825883a 	mov	r18,r7
    ca74:	003f0606 	br	c690 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c690>
    ca78:	2023883a 	mov	r17,r4
    ca7c:	003f0906 	br	c6a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c6a4>
    ca80:	0101ffc4 	movi	r4,2047
    ca84:	813f3a1e 	bne	r16,r4,c770 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c770>
    ca88:	003ec406 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    ca8c:	0005883a 	mov	r2,zero
    ca90:	003fb106 	br	c958 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c958>
    ca94:	0005883a 	mov	r2,zero
    ca98:	003fbc06 	br	c98c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c98c>
    ca9c:	1c44b03a 	or	r2,r3,r17
    caa0:	80008e1e 	bne	r16,zero,ccdc <__subdf3+0x7c4>
    caa4:	1000c826 	beq	r2,zero,cdc8 <__subdf3+0x8b0>
    caa8:	2984b03a 	or	r2,r5,r6
    caac:	103ebb26 	beq	r2,zero,c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    cab0:	8989883a 	add	r4,r17,r6
    cab4:	1945883a 	add	r2,r3,r5
    cab8:	2447803a 	cmpltu	r3,r4,r17
    cabc:	1887883a 	add	r3,r3,r2
    cac0:	1880202c 	andhi	r2,r3,128
    cac4:	2023883a 	mov	r17,r4
    cac8:	103f1626 	beq	r2,zero,c724 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c724>
    cacc:	00bfe034 	movhi	r2,65408
    cad0:	10bfffc4 	addi	r2,r2,-1
    cad4:	5021883a 	mov	r16,r10
    cad8:	1886703a 	and	r3,r3,r2
    cadc:	003eaf06 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    cae0:	3825883a 	mov	r18,r7
    cae4:	003f0f06 	br	c724 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c724>
    cae8:	1c44b03a 	or	r2,r3,r17
    caec:	8000251e 	bne	r16,zero,cb84 <__subdf3+0x66c>
    caf0:	1000661e 	bne	r2,zero,cc8c <__subdf3+0x774>
    caf4:	2990b03a 	or	r8,r5,r6
    caf8:	40009626 	beq	r8,zero,cd54 <__subdf3+0x83c>
    cafc:	2807883a 	mov	r3,r5
    cb00:	3023883a 	mov	r17,r6
    cb04:	3825883a 	mov	r18,r7
    cb08:	003ea406 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    cb0c:	127ff804 	addi	r9,r2,-32
    cb10:	01000804 	movi	r4,32
    cb14:	2a52d83a 	srl	r9,r5,r9
    cb18:	11008c26 	beq	r2,r4,cd4c <__subdf3+0x834>
    cb1c:	01001004 	movi	r4,64
    cb20:	2085c83a 	sub	r2,r4,r2
    cb24:	2884983a 	sll	r2,r5,r2
    cb28:	118cb03a 	or	r6,r2,r6
    cb2c:	300cc03a 	cmpne	r6,r6,zero
    cb30:	4992b03a 	or	r9,r9,r6
    cb34:	0005883a 	mov	r2,zero
    cb38:	003f1206 	br	c784 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c784>
    cb3c:	0101ffc4 	movi	r4,2047
    cb40:	493f9c1e 	bne	r9,r4,c9b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c9b4>
    cb44:	2807883a 	mov	r3,r5
    cb48:	3023883a 	mov	r17,r6
    cb4c:	4821883a 	mov	r16,r9
    cb50:	3825883a 	mov	r18,r7
    cb54:	003e9106 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    cb58:	80001f1e 	bne	r16,zero,cbd8 <__subdf3+0x6c0>
    cb5c:	1c48b03a 	or	r4,r3,r17
    cb60:	20005a26 	beq	r4,zero,cccc <__subdf3+0x7b4>
    cb64:	0084303a 	nor	r2,zero,r2
    cb68:	1000561e 	bne	r2,zero,ccc4 <__subdf3+0x7ac>
    cb6c:	89a3883a 	add	r17,r17,r6
    cb70:	1945883a 	add	r2,r3,r5
    cb74:	898d803a 	cmpltu	r6,r17,r6
    cb78:	3087883a 	add	r3,r6,r2
    cb7c:	4821883a 	mov	r16,r9
    cb80:	003f0506 	br	c798 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c798>
    cb84:	10002b1e 	bne	r2,zero,cc34 <__subdf3+0x71c>
    cb88:	2984b03a 	or	r2,r5,r6
    cb8c:	10008026 	beq	r2,zero,cd90 <__subdf3+0x878>
    cb90:	2807883a 	mov	r3,r5
    cb94:	3023883a 	mov	r17,r6
    cb98:	3825883a 	mov	r18,r7
    cb9c:	0401ffc4 	movi	r16,2047
    cba0:	003e7e06 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    cba4:	3809883a 	mov	r4,r7
    cba8:	0011883a 	mov	r8,zero
    cbac:	0005883a 	mov	r2,zero
    cbb0:	003ee306 	br	c740 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c740>
    cbb4:	1c62b03a 	or	r17,r3,r17
    cbb8:	8822c03a 	cmpne	r17,r17,zero
    cbbc:	0005883a 	mov	r2,zero
    cbc0:	003f8906 	br	c9e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c9e8>
    cbc4:	3809883a 	mov	r4,r7
    cbc8:	4821883a 	mov	r16,r9
    cbcc:	0011883a 	mov	r8,zero
    cbd0:	0005883a 	mov	r2,zero
    cbd4:	003eda06 	br	c740 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c740>
    cbd8:	0101ffc4 	movi	r4,2047
    cbdc:	49003b26 	beq	r9,r4,cccc <__subdf3+0x7b4>
    cbe0:	0085c83a 	sub	r2,zero,r2
    cbe4:	18c02034 	orhi	r3,r3,128
    cbe8:	01000e04 	movi	r4,56
    cbec:	20806e16 	blt	r4,r2,cda8 <__subdf3+0x890>
    cbf0:	010007c4 	movi	r4,31
    cbf4:	20807716 	blt	r4,r2,cdd4 <__subdf3+0x8bc>
    cbf8:	01000804 	movi	r4,32
    cbfc:	2089c83a 	sub	r4,r4,r2
    cc00:	1914983a 	sll	r10,r3,r4
    cc04:	8890d83a 	srl	r8,r17,r2
    cc08:	8908983a 	sll	r4,r17,r4
    cc0c:	1884d83a 	srl	r2,r3,r2
    cc10:	5222b03a 	or	r17,r10,r8
    cc14:	2006c03a 	cmpne	r3,r4,zero
    cc18:	88e2b03a 	or	r17,r17,r3
    cc1c:	89a3883a 	add	r17,r17,r6
    cc20:	1145883a 	add	r2,r2,r5
    cc24:	898d803a 	cmpltu	r6,r17,r6
    cc28:	3087883a 	add	r3,r6,r2
    cc2c:	4821883a 	mov	r16,r9
    cc30:	003ed906 	br	c798 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c798>
    cc34:	2984b03a 	or	r2,r5,r6
    cc38:	10004226 	beq	r2,zero,cd44 <__subdf3+0x82c>
    cc3c:	1808d0fa 	srli	r4,r3,3
    cc40:	8822d0fa 	srli	r17,r17,3
    cc44:	1806977a 	slli	r3,r3,29
    cc48:	2080022c 	andhi	r2,r4,8
    cc4c:	1c62b03a 	or	r17,r3,r17
    cc50:	10000826 	beq	r2,zero,cc74 <__subdf3+0x75c>
    cc54:	2812d0fa 	srli	r9,r5,3
    cc58:	4880022c 	andhi	r2,r9,8
    cc5c:	1000051e 	bne	r2,zero,cc74 <__subdf3+0x75c>
    cc60:	300cd0fa 	srli	r6,r6,3
    cc64:	2804977a 	slli	r2,r5,29
    cc68:	4809883a 	mov	r4,r9
    cc6c:	3825883a 	mov	r18,r7
    cc70:	11a2b03a 	or	r17,r2,r6
    cc74:	8806d77a 	srli	r3,r17,29
    cc78:	200890fa 	slli	r4,r4,3
    cc7c:	882290fa 	slli	r17,r17,3
    cc80:	0401ffc4 	movi	r16,2047
    cc84:	1906b03a 	or	r3,r3,r4
    cc88:	003e4406 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    cc8c:	2984b03a 	or	r2,r5,r6
    cc90:	103e4226 	beq	r2,zero,c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    cc94:	8989c83a 	sub	r4,r17,r6
    cc98:	8911803a 	cmpltu	r8,r17,r4
    cc9c:	1945c83a 	sub	r2,r3,r5
    cca0:	1205c83a 	sub	r2,r2,r8
    cca4:	1200202c 	andhi	r8,r2,128
    cca8:	403e9a26 	beq	r8,zero,c714 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c714>
    ccac:	3463c83a 	sub	r17,r6,r17
    ccb0:	28c5c83a 	sub	r2,r5,r3
    ccb4:	344d803a 	cmpltu	r6,r6,r17
    ccb8:	1187c83a 	sub	r3,r2,r6
    ccbc:	3825883a 	mov	r18,r7
    ccc0:	003e3606 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    ccc4:	0101ffc4 	movi	r4,2047
    ccc8:	493fc71e 	bne	r9,r4,cbe8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cbe8>
    cccc:	2807883a 	mov	r3,r5
    ccd0:	3023883a 	mov	r17,r6
    ccd4:	4821883a 	mov	r16,r9
    ccd8:	003e3006 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    ccdc:	10003626 	beq	r2,zero,cdb8 <__subdf3+0x8a0>
    cce0:	2984b03a 	or	r2,r5,r6
    cce4:	10001726 	beq	r2,zero,cd44 <__subdf3+0x82c>
    cce8:	1808d0fa 	srli	r4,r3,3
    ccec:	8822d0fa 	srli	r17,r17,3
    ccf0:	1806977a 	slli	r3,r3,29
    ccf4:	2080022c 	andhi	r2,r4,8
    ccf8:	1c62b03a 	or	r17,r3,r17
    ccfc:	10000726 	beq	r2,zero,cd1c <__subdf3+0x804>
    cd00:	2812d0fa 	srli	r9,r5,3
    cd04:	4880022c 	andhi	r2,r9,8
    cd08:	1000041e 	bne	r2,zero,cd1c <__subdf3+0x804>
    cd0c:	300cd0fa 	srli	r6,r6,3
    cd10:	2804977a 	slli	r2,r5,29
    cd14:	4809883a 	mov	r4,r9
    cd18:	11a2b03a 	or	r17,r2,r6
    cd1c:	8806d77a 	srli	r3,r17,29
    cd20:	200890fa 	slli	r4,r4,3
    cd24:	882290fa 	slli	r17,r17,3
    cd28:	3825883a 	mov	r18,r7
    cd2c:	1906b03a 	or	r3,r3,r4
    cd30:	0401ffc4 	movi	r16,2047
    cd34:	003e1906 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    cd38:	000b883a 	mov	r5,zero
    cd3c:	0005883a 	mov	r2,zero
    cd40:	003e2e06 	br	c5fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c5fc>
    cd44:	0401ffc4 	movi	r16,2047
    cd48:	003e1406 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    cd4c:	0005883a 	mov	r2,zero
    cd50:	003f7506 	br	cb28 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cb28>
    cd54:	0005883a 	mov	r2,zero
    cd58:	0009883a 	mov	r4,zero
    cd5c:	003e7806 	br	c740 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c740>
    cd60:	123ff804 	addi	r8,r2,-32
    cd64:	01000804 	movi	r4,32
    cd68:	1a10d83a 	srl	r8,r3,r8
    cd6c:	11002526 	beq	r2,r4,ce04 <__subdf3+0x8ec>
    cd70:	01001004 	movi	r4,64
    cd74:	2085c83a 	sub	r2,r4,r2
    cd78:	1884983a 	sll	r2,r3,r2
    cd7c:	1444b03a 	or	r2,r2,r17
    cd80:	1004c03a 	cmpne	r2,r2,zero
    cd84:	40a2b03a 	or	r17,r8,r2
    cd88:	0005883a 	mov	r2,zero
    cd8c:	003f1606 	br	c9e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c9e8>
    cd90:	02000434 	movhi	r8,16
    cd94:	0009883a 	mov	r4,zero
    cd98:	423fffc4 	addi	r8,r8,-1
    cd9c:	00bfffc4 	movi	r2,-1
    cda0:	0401ffc4 	movi	r16,2047
    cda4:	003e6606 	br	c740 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c740>
    cda8:	1c62b03a 	or	r17,r3,r17
    cdac:	8822c03a 	cmpne	r17,r17,zero
    cdb0:	0005883a 	mov	r2,zero
    cdb4:	003f9906 	br	cc1c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cc1c>
    cdb8:	2807883a 	mov	r3,r5
    cdbc:	3023883a 	mov	r17,r6
    cdc0:	0401ffc4 	movi	r16,2047
    cdc4:	003df506 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    cdc8:	2807883a 	mov	r3,r5
    cdcc:	3023883a 	mov	r17,r6
    cdd0:	003df206 	br	c59c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c59c>
    cdd4:	123ff804 	addi	r8,r2,-32
    cdd8:	01000804 	movi	r4,32
    cddc:	1a10d83a 	srl	r8,r3,r8
    cde0:	11000a26 	beq	r2,r4,ce0c <__subdf3+0x8f4>
    cde4:	01001004 	movi	r4,64
    cde8:	2085c83a 	sub	r2,r4,r2
    cdec:	1884983a 	sll	r2,r3,r2
    cdf0:	1444b03a 	or	r2,r2,r17
    cdf4:	1004c03a 	cmpne	r2,r2,zero
    cdf8:	40a2b03a 	or	r17,r8,r2
    cdfc:	0005883a 	mov	r2,zero
    ce00:	003f8606 	br	cc1c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cc1c>
    ce04:	0005883a 	mov	r2,zero
    ce08:	003fdc06 	br	cd7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cd7c>
    ce0c:	0005883a 	mov	r2,zero
    ce10:	003ff706 	br	cdf0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cdf0>

0000ce14 <__fixdfsi>:
    ce14:	280cd53a 	srli	r6,r5,20
    ce18:	00c00434 	movhi	r3,16
    ce1c:	18ffffc4 	addi	r3,r3,-1
    ce20:	3181ffcc 	andi	r6,r6,2047
    ce24:	01c0ff84 	movi	r7,1022
    ce28:	28c6703a 	and	r3,r5,r3
    ce2c:	280ad7fa 	srli	r5,r5,31
    ce30:	3980120e 	bge	r7,r6,ce7c <__fixdfsi+0x68>
    ce34:	00810744 	movi	r2,1053
    ce38:	11800c16 	blt	r2,r6,ce6c <__fixdfsi+0x58>
    ce3c:	00810cc4 	movi	r2,1075
    ce40:	1185c83a 	sub	r2,r2,r6
    ce44:	01c007c4 	movi	r7,31
    ce48:	18c00434 	orhi	r3,r3,16
    ce4c:	38800d16 	blt	r7,r2,ce84 <__fixdfsi+0x70>
    ce50:	31befb44 	addi	r6,r6,-1043
    ce54:	2084d83a 	srl	r2,r4,r2
    ce58:	1986983a 	sll	r3,r3,r6
    ce5c:	1884b03a 	or	r2,r3,r2
    ce60:	28000726 	beq	r5,zero,ce80 <__fixdfsi+0x6c>
    ce64:	0085c83a 	sub	r2,zero,r2
    ce68:	f800283a 	ret
    ce6c:	00a00034 	movhi	r2,32768
    ce70:	10bfffc4 	addi	r2,r2,-1
    ce74:	2885883a 	add	r2,r5,r2
    ce78:	f800283a 	ret
    ce7c:	0005883a 	mov	r2,zero
    ce80:	f800283a 	ret
    ce84:	008104c4 	movi	r2,1043
    ce88:	1185c83a 	sub	r2,r2,r6
    ce8c:	1884d83a 	srl	r2,r3,r2
    ce90:	003ff306 	br	ce60 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ce60>

0000ce94 <__floatsidf>:
    ce94:	defffd04 	addi	sp,sp,-12
    ce98:	dfc00215 	stw	ra,8(sp)
    ce9c:	dc400115 	stw	r17,4(sp)
    cea0:	dc000015 	stw	r16,0(sp)
    cea4:	20002b26 	beq	r4,zero,cf54 <__floatsidf+0xc0>
    cea8:	2023883a 	mov	r17,r4
    ceac:	2020d7fa 	srli	r16,r4,31
    ceb0:	20002d16 	blt	r4,zero,cf68 <__floatsidf+0xd4>
    ceb4:	8809883a 	mov	r4,r17
    ceb8:	00007cc0 	call	7cc <__clzsi2>
    cebc:	01410784 	movi	r5,1054
    cec0:	288bc83a 	sub	r5,r5,r2
    cec4:	01010cc4 	movi	r4,1075
    cec8:	2149c83a 	sub	r4,r4,r5
    cecc:	00c007c4 	movi	r3,31
    ced0:	1900160e 	bge	r3,r4,cf2c <__floatsidf+0x98>
    ced4:	00c104c4 	movi	r3,1043
    ced8:	1947c83a 	sub	r3,r3,r5
    cedc:	88c6983a 	sll	r3,r17,r3
    cee0:	00800434 	movhi	r2,16
    cee4:	10bfffc4 	addi	r2,r2,-1
    cee8:	1886703a 	and	r3,r3,r2
    ceec:	2941ffcc 	andi	r5,r5,2047
    cef0:	800d883a 	mov	r6,r16
    cef4:	0005883a 	mov	r2,zero
    cef8:	280a953a 	slli	r5,r5,20
    cefc:	31803fcc 	andi	r6,r6,255
    cf00:	01000434 	movhi	r4,16
    cf04:	300c97fa 	slli	r6,r6,31
    cf08:	213fffc4 	addi	r4,r4,-1
    cf0c:	1906703a 	and	r3,r3,r4
    cf10:	1946b03a 	or	r3,r3,r5
    cf14:	1986b03a 	or	r3,r3,r6
    cf18:	dfc00217 	ldw	ra,8(sp)
    cf1c:	dc400117 	ldw	r17,4(sp)
    cf20:	dc000017 	ldw	r16,0(sp)
    cf24:	dec00304 	addi	sp,sp,12
    cf28:	f800283a 	ret
    cf2c:	00c002c4 	movi	r3,11
    cf30:	1887c83a 	sub	r3,r3,r2
    cf34:	88c6d83a 	srl	r3,r17,r3
    cf38:	8904983a 	sll	r2,r17,r4
    cf3c:	01000434 	movhi	r4,16
    cf40:	213fffc4 	addi	r4,r4,-1
    cf44:	2941ffcc 	andi	r5,r5,2047
    cf48:	1906703a 	and	r3,r3,r4
    cf4c:	800d883a 	mov	r6,r16
    cf50:	003fe906 	br	cef8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cef8>
    cf54:	000d883a 	mov	r6,zero
    cf58:	000b883a 	mov	r5,zero
    cf5c:	0007883a 	mov	r3,zero
    cf60:	0005883a 	mov	r2,zero
    cf64:	003fe406 	br	cef8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cef8>
    cf68:	0123c83a 	sub	r17,zero,r4
    cf6c:	003fd106 	br	ceb4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ceb4>

0000cf70 <__floatunsidf>:
    cf70:	defffe04 	addi	sp,sp,-8
    cf74:	dc000015 	stw	r16,0(sp)
    cf78:	dfc00115 	stw	ra,4(sp)
    cf7c:	2021883a 	mov	r16,r4
    cf80:	20002226 	beq	r4,zero,d00c <__floatunsidf+0x9c>
    cf84:	00007cc0 	call	7cc <__clzsi2>
    cf88:	01010784 	movi	r4,1054
    cf8c:	2089c83a 	sub	r4,r4,r2
    cf90:	01810cc4 	movi	r6,1075
    cf94:	310dc83a 	sub	r6,r6,r4
    cf98:	00c007c4 	movi	r3,31
    cf9c:	1980120e 	bge	r3,r6,cfe8 <__floatunsidf+0x78>
    cfa0:	00c104c4 	movi	r3,1043
    cfa4:	1907c83a 	sub	r3,r3,r4
    cfa8:	80ca983a 	sll	r5,r16,r3
    cfac:	00800434 	movhi	r2,16
    cfb0:	10bfffc4 	addi	r2,r2,-1
    cfb4:	2101ffcc 	andi	r4,r4,2047
    cfb8:	0021883a 	mov	r16,zero
    cfbc:	288a703a 	and	r5,r5,r2
    cfc0:	2008953a 	slli	r4,r4,20
    cfc4:	00c00434 	movhi	r3,16
    cfc8:	18ffffc4 	addi	r3,r3,-1
    cfcc:	28c6703a 	and	r3,r5,r3
    cfd0:	8005883a 	mov	r2,r16
    cfd4:	1906b03a 	or	r3,r3,r4
    cfd8:	dfc00117 	ldw	ra,4(sp)
    cfdc:	dc000017 	ldw	r16,0(sp)
    cfe0:	dec00204 	addi	sp,sp,8
    cfe4:	f800283a 	ret
    cfe8:	00c002c4 	movi	r3,11
    cfec:	188bc83a 	sub	r5,r3,r2
    cff0:	814ad83a 	srl	r5,r16,r5
    cff4:	00c00434 	movhi	r3,16
    cff8:	18ffffc4 	addi	r3,r3,-1
    cffc:	81a0983a 	sll	r16,r16,r6
    d000:	2101ffcc 	andi	r4,r4,2047
    d004:	28ca703a 	and	r5,r5,r3
    d008:	003fed06 	br	cfc0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cfc0>
    d00c:	0009883a 	mov	r4,zero
    d010:	000b883a 	mov	r5,zero
    d014:	003fea06 	br	cfc0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cfc0>

0000d018 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d018:	defffe04 	addi	sp,sp,-8
    d01c:	dfc00115 	stw	ra,4(sp)
    d020:	df000015 	stw	fp,0(sp)
    d024:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d028:	d0a00c17 	ldw	r2,-32720(gp)
    d02c:	10000326 	beq	r2,zero,d03c <alt_get_errno+0x24>
    d030:	d0a00c17 	ldw	r2,-32720(gp)
    d034:	103ee83a 	callr	r2
    d038:	00000106 	br	d040 <alt_get_errno+0x28>
    d03c:	d0a79a04 	addi	r2,gp,-24984
}
    d040:	e037883a 	mov	sp,fp
    d044:	dfc00117 	ldw	ra,4(sp)
    d048:	df000017 	ldw	fp,0(sp)
    d04c:	dec00204 	addi	sp,sp,8
    d050:	f800283a 	ret

0000d054 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d054:	defffb04 	addi	sp,sp,-20
    d058:	dfc00415 	stw	ra,16(sp)
    d05c:	df000315 	stw	fp,12(sp)
    d060:	df000304 	addi	fp,sp,12
    d064:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d068:	e0bfff17 	ldw	r2,-4(fp)
    d06c:	10000616 	blt	r2,zero,d088 <close+0x34>
    d070:	e0bfff17 	ldw	r2,-4(fp)
    d074:	10c00324 	muli	r3,r2,12
    d078:	00800074 	movhi	r2,1
    d07c:	10885304 	addi	r2,r2,8524
    d080:	1885883a 	add	r2,r3,r2
    d084:	00000106 	br	d08c <close+0x38>
    d088:	0005883a 	mov	r2,zero
    d08c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    d090:	e0bffd17 	ldw	r2,-12(fp)
    d094:	10001926 	beq	r2,zero,d0fc <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d098:	e0bffd17 	ldw	r2,-12(fp)
    d09c:	10800017 	ldw	r2,0(r2)
    d0a0:	10800417 	ldw	r2,16(r2)
    d0a4:	10000626 	beq	r2,zero,d0c0 <close+0x6c>
    d0a8:	e0bffd17 	ldw	r2,-12(fp)
    d0ac:	10800017 	ldw	r2,0(r2)
    d0b0:	10800417 	ldw	r2,16(r2)
    d0b4:	e13ffd17 	ldw	r4,-12(fp)
    d0b8:	103ee83a 	callr	r2
    d0bc:	00000106 	br	d0c4 <close+0x70>
    d0c0:	0005883a 	mov	r2,zero
    d0c4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d0c8:	e13fff17 	ldw	r4,-4(fp)
    d0cc:	000d8e80 	call	d8e8 <alt_release_fd>
    if (rval < 0)
    d0d0:	e0bffe17 	ldw	r2,-8(fp)
    d0d4:	1000070e 	bge	r2,zero,d0f4 <close+0xa0>
    {
      ALT_ERRNO = -rval;
    d0d8:	000d0180 	call	d018 <alt_get_errno>
    d0dc:	1007883a 	mov	r3,r2
    d0e0:	e0bffe17 	ldw	r2,-8(fp)
    d0e4:	0085c83a 	sub	r2,zero,r2
    d0e8:	18800015 	stw	r2,0(r3)
      return -1;
    d0ec:	00bfffc4 	movi	r2,-1
    d0f0:	00000706 	br	d110 <close+0xbc>
    }
    return 0;
    d0f4:	0005883a 	mov	r2,zero
    d0f8:	00000506 	br	d110 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d0fc:	000d0180 	call	d018 <alt_get_errno>
    d100:	1007883a 	mov	r3,r2
    d104:	00801444 	movi	r2,81
    d108:	18800015 	stw	r2,0(r3)
    return -1;
    d10c:	00bfffc4 	movi	r2,-1
  }
}
    d110:	e037883a 	mov	sp,fp
    d114:	dfc00117 	ldw	ra,4(sp)
    d118:	df000017 	ldw	fp,0(sp)
    d11c:	dec00204 	addi	sp,sp,8
    d120:	f800283a 	ret

0000d124 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    d124:	defffc04 	addi	sp,sp,-16
    d128:	df000315 	stw	fp,12(sp)
    d12c:	df000304 	addi	fp,sp,12
    d130:	e13ffd15 	stw	r4,-12(fp)
    d134:	e17ffe15 	stw	r5,-8(fp)
    d138:	e1bfff15 	stw	r6,-4(fp)
  return len;
    d13c:	e0bfff17 	ldw	r2,-4(fp)
}
    d140:	e037883a 	mov	sp,fp
    d144:	df000017 	ldw	fp,0(sp)
    d148:	dec00104 	addi	sp,sp,4
    d14c:	f800283a 	ret

0000d150 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d150:	defffe04 	addi	sp,sp,-8
    d154:	dfc00115 	stw	ra,4(sp)
    d158:	df000015 	stw	fp,0(sp)
    d15c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d160:	d0a00c17 	ldw	r2,-32720(gp)
    d164:	10000326 	beq	r2,zero,d174 <alt_get_errno+0x24>
    d168:	d0a00c17 	ldw	r2,-32720(gp)
    d16c:	103ee83a 	callr	r2
    d170:	00000106 	br	d178 <alt_get_errno+0x28>
    d174:	d0a79a04 	addi	r2,gp,-24984
}
    d178:	e037883a 	mov	sp,fp
    d17c:	dfc00117 	ldw	ra,4(sp)
    d180:	df000017 	ldw	fp,0(sp)
    d184:	dec00204 	addi	sp,sp,8
    d188:	f800283a 	ret

0000d18c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d18c:	defffb04 	addi	sp,sp,-20
    d190:	dfc00415 	stw	ra,16(sp)
    d194:	df000315 	stw	fp,12(sp)
    d198:	df000304 	addi	fp,sp,12
    d19c:	e13ffe15 	stw	r4,-8(fp)
    d1a0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d1a4:	e0bffe17 	ldw	r2,-8(fp)
    d1a8:	10000616 	blt	r2,zero,d1c4 <fstat+0x38>
    d1ac:	e0bffe17 	ldw	r2,-8(fp)
    d1b0:	10c00324 	muli	r3,r2,12
    d1b4:	00800074 	movhi	r2,1
    d1b8:	10885304 	addi	r2,r2,8524
    d1bc:	1885883a 	add	r2,r3,r2
    d1c0:	00000106 	br	d1c8 <fstat+0x3c>
    d1c4:	0005883a 	mov	r2,zero
    d1c8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    d1cc:	e0bffd17 	ldw	r2,-12(fp)
    d1d0:	10001026 	beq	r2,zero,d214 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d1d4:	e0bffd17 	ldw	r2,-12(fp)
    d1d8:	10800017 	ldw	r2,0(r2)
    d1dc:	10800817 	ldw	r2,32(r2)
    d1e0:	10000726 	beq	r2,zero,d200 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
    d1e4:	e0bffd17 	ldw	r2,-12(fp)
    d1e8:	10800017 	ldw	r2,0(r2)
    d1ec:	10800817 	ldw	r2,32(r2)
    d1f0:	e17fff17 	ldw	r5,-4(fp)
    d1f4:	e13ffd17 	ldw	r4,-12(fp)
    d1f8:	103ee83a 	callr	r2
    d1fc:	00000a06 	br	d228 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d200:	e0bfff17 	ldw	r2,-4(fp)
    d204:	00c80004 	movi	r3,8192
    d208:	10c00115 	stw	r3,4(r2)
      return 0;
    d20c:	0005883a 	mov	r2,zero
    d210:	00000506 	br	d228 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d214:	000d1500 	call	d150 <alt_get_errno>
    d218:	1007883a 	mov	r3,r2
    d21c:	00801444 	movi	r2,81
    d220:	18800015 	stw	r2,0(r3)
    return -1;
    d224:	00bfffc4 	movi	r2,-1
  }
}
    d228:	e037883a 	mov	sp,fp
    d22c:	dfc00117 	ldw	ra,4(sp)
    d230:	df000017 	ldw	fp,0(sp)
    d234:	dec00204 	addi	sp,sp,8
    d238:	f800283a 	ret

0000d23c <gettimeofday>:
 */
 

#if defined (__GNUC__) && (__GNUC__ >= 4)
int ALT_GETTIMEOFDAY (struct timeval  *ptimeval, void *ptimezone_vptr)
{
    d23c:	defff804 	addi	sp,sp,-32
    d240:	dfc00715 	stw	ra,28(sp)
    d244:	df000615 	stw	fp,24(sp)
    d248:	dc000515 	stw	r16,20(sp)
    d24c:	df000604 	addi	fp,sp,24
    d250:	e13ffd15 	stw	r4,-12(fp)
    d254:	e17ffe15 	stw	r5,-8(fp)
  struct timezone *ptimezone = (struct timezone*)ptimezone_vptr;
    d258:	e13ffe17 	ldw	r4,-8(fp)
    d25c:	e13ffa15 	stw	r4,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    d260:	d127a317 	ldw	r4,-24948(gp)
#else
int ALT_GETTIMEOFDAY (struct timeval  *ptimeval, struct timezone *ptimezone)
{
#endif
  
  alt_u32 nticks = alt_nticks (); 
    d264:	e13ffb15 	stw	r4,-20(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    d268:	d127a217 	ldw	r4,-24952(gp)
  alt_u32 tick_rate = alt_ticks_per_second ();
    d26c:	e13ffc15 	stw	r4,-16(fp)
   * non-zero system clock rate. If the system clock is not running, an error
   * is generated and the contents of "ptimeval" and "ptimezone" are not
   * updated.
   */

  if (tick_rate)
    d270:	e13ffc17 	ldw	r4,-16(fp)
    d274:	20005f26 	beq	r4,zero,d3f4 <gettimeofday+0x1b8>
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
    d278:	d1279d17 	ldw	r4,-24972(gp)
    d27c:	2015883a 	mov	r10,r4
    d280:	e17ffb17 	ldw	r5,-20(fp)
    d284:	e13ffc17 	ldw	r4,-16(fp)
    d288:	2909203a 	divu	r4,r5,r4
    d28c:	5109883a 	add	r4,r10,r4
    d290:	200b883a 	mov	r5,r4
    d294:	e13ffd17 	ldw	r4,-12(fp)
    d298:	21400015 	stw	r5,0(r4)
    ptimeval->tv_usec = alt_resettime.tv_usec +
    d29c:	d1279e17 	ldw	r4,-24968(gp)
    d2a0:	2021883a 	mov	r16,r4
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
    d2a4:	e13ffb17 	ldw	r4,-20(fp)
    d2a8:	200d883a 	mov	r6,r4
    d2ac:	000f883a 	mov	r7,zero
    d2b0:	010003f4 	movhi	r4,15
    d2b4:	21109004 	addi	r4,r4,16960
    d2b8:	e17ffc17 	ldw	r5,-16(fp)
    d2bc:	2149203a 	divu	r4,r4,r5
    d2c0:	2005883a 	mov	r2,r4
    d2c4:	0007883a 	mov	r3,zero
    d2c8:	388b383a 	mul	r5,r7,r2
    d2cc:	1989383a 	mul	r4,r3,r6
    d2d0:	2909883a 	add	r4,r5,r4
    d2d4:	308a383a 	mulxuu	r5,r6,r2
    d2d8:	3085383a 	mul	r2,r6,r2
    d2dc:	1011883a 	mov	r8,r2
    d2e0:	2813883a 	mov	r9,r5
    d2e4:	2245883a 	add	r2,r4,r9
    d2e8:	1013883a 	mov	r9,r2
    d2ec:	018003f4 	movhi	r6,15
    d2f0:	31909004 	addi	r6,r6,16960
    d2f4:	000f883a 	mov	r7,zero
    d2f8:	4009883a 	mov	r4,r8
    d2fc:	480b883a 	mov	r5,r9
    d300:	000a3280 	call	a328 <__umoddi3>
    d304:	1009883a 	mov	r4,r2
    d308:	180b883a 	mov	r5,r3
    d30c:	2005883a 	mov	r2,r4
    d310:	2807883a 	mov	r3,r5
   */

  if (tick_rate)
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
    ptimeval->tv_usec = alt_resettime.tv_usec +
    d314:	8085883a 	add	r2,r16,r2
    d318:	1007883a 	mov	r3,r2
    d31c:	e0bffd17 	ldw	r2,-12(fp)
    d320:	10c00115 	stw	r3,4(r2)
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
      
    while(ptimeval->tv_usec < 0) {
    d324:	00001406 	br	d378 <gettimeofday+0x13c>
      if (ptimeval->tv_sec <= 0)
    d328:	e0bffd17 	ldw	r2,-12(fp)
    d32c:	10800017 	ldw	r2,0(r2)
    d330:	00800516 	blt	zero,r2,d348 <gettimeofday+0x10c>
      {
          ptimeval->tv_sec = 0;
    d334:	e0bffd17 	ldw	r2,-12(fp)
    d338:	10000015 	stw	zero,0(r2)
          ptimeval->tv_usec = 0;
    d33c:	e0bffd17 	ldw	r2,-12(fp)
    d340:	10000115 	stw	zero,4(r2)
          break;
    d344:	00000f06 	br	d384 <gettimeofday+0x148>
      }
      else
      {
          ptimeval->tv_sec--;
    d348:	e0bffd17 	ldw	r2,-12(fp)
    d34c:	10800017 	ldw	r2,0(r2)
    d350:	10ffffc4 	addi	r3,r2,-1
    d354:	e0bffd17 	ldw	r2,-12(fp)
    d358:	10c00015 	stw	r3,0(r2)
          ptimeval->tv_usec += ALT_US;
    d35c:	e0bffd17 	ldw	r2,-12(fp)
    d360:	10c00117 	ldw	r3,4(r2)
    d364:	008003f4 	movhi	r2,15
    d368:	10909004 	addi	r2,r2,16960
    d36c:	1887883a 	add	r3,r3,r2
    d370:	e0bffd17 	ldw	r2,-12(fp)
    d374:	10c00115 	stw	r3,4(r2)
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
    ptimeval->tv_usec = alt_resettime.tv_usec +
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
      
    while(ptimeval->tv_usec < 0) {
    d378:	e0bffd17 	ldw	r2,-12(fp)
    d37c:	10800117 	ldw	r2,4(r2)
    d380:	103fe916 	blt	r2,zero,d328 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700d328>
          ptimeval->tv_sec--;
          ptimeval->tv_usec += ALT_US;
      }
    }
    
    while(ptimeval->tv_usec >= ALT_US) {
    d384:	00000c06 	br	d3b8 <gettimeofday+0x17c>
      ptimeval->tv_sec++;
    d388:	e0bffd17 	ldw	r2,-12(fp)
    d38c:	10800017 	ldw	r2,0(r2)
    d390:	10c00044 	addi	r3,r2,1
    d394:	e0bffd17 	ldw	r2,-12(fp)
    d398:	10c00015 	stw	r3,0(r2)
      ptimeval->tv_usec -= ALT_US;
    d39c:	e0bffd17 	ldw	r2,-12(fp)
    d3a0:	10c00117 	ldw	r3,4(r2)
    d3a4:	00bffc74 	movhi	r2,65521
    d3a8:	10af7004 	addi	r2,r2,-16960
    d3ac:	1887883a 	add	r3,r3,r2
    d3b0:	e0bffd17 	ldw	r2,-12(fp)
    d3b4:	10c00115 	stw	r3,4(r2)
          ptimeval->tv_sec--;
          ptimeval->tv_usec += ALT_US;
      }
    }
    
    while(ptimeval->tv_usec >= ALT_US) {
    d3b8:	e0bffd17 	ldw	r2,-12(fp)
    d3bc:	10c00117 	ldw	r3,4(r2)
    d3c0:	008003f4 	movhi	r2,15
    d3c4:	10908fc4 	addi	r2,r2,16959
    d3c8:	10ffef16 	blt	r2,r3,d388 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700d388>
      ptimeval->tv_sec++;
      ptimeval->tv_usec -= ALT_US;
    }
      
    if (ptimezone)
    d3cc:	e0bffa17 	ldw	r2,-24(fp)
    d3d0:	10000626 	beq	r2,zero,d3ec <gettimeofday+0x1b0>
    { 
      ptimezone->tz_minuteswest = alt_timezone.tz_minuteswest;
    d3d4:	d0e79b17 	ldw	r3,-24980(gp)
    d3d8:	e0bffa17 	ldw	r2,-24(fp)
    d3dc:	10c00015 	stw	r3,0(r2)
      ptimezone->tz_dsttime     = alt_timezone.tz_dsttime;
    d3e0:	d0e79c17 	ldw	r3,-24976(gp)
    d3e4:	e0bffa17 	ldw	r2,-24(fp)
    d3e8:	10c00115 	stw	r3,4(r2)
    }

    return 0;
    d3ec:	0005883a 	mov	r2,zero
    d3f0:	00000106 	br	d3f8 <gettimeofday+0x1bc>
  }

  return -ENOTSUP;
    d3f4:	00bfde84 	movi	r2,-134
}
    d3f8:	e6ffff04 	addi	sp,fp,-4
    d3fc:	dfc00217 	ldw	ra,8(sp)
    d400:	df000117 	ldw	fp,4(sp)
    d404:	dc000017 	ldw	r16,0(sp)
    d408:	dec00304 	addi	sp,sp,12
    d40c:	f800283a 	ret

0000d410 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d410:	defffe04 	addi	sp,sp,-8
    d414:	dfc00115 	stw	ra,4(sp)
    d418:	df000015 	stw	fp,0(sp)
    d41c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d420:	d0a00c17 	ldw	r2,-32720(gp)
    d424:	10000326 	beq	r2,zero,d434 <alt_get_errno+0x24>
    d428:	d0a00c17 	ldw	r2,-32720(gp)
    d42c:	103ee83a 	callr	r2
    d430:	00000106 	br	d438 <alt_get_errno+0x28>
    d434:	d0a79a04 	addi	r2,gp,-24984
}
    d438:	e037883a 	mov	sp,fp
    d43c:	dfc00117 	ldw	ra,4(sp)
    d440:	df000017 	ldw	fp,0(sp)
    d444:	dec00204 	addi	sp,sp,8
    d448:	f800283a 	ret

0000d44c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d44c:	deffed04 	addi	sp,sp,-76
    d450:	dfc01215 	stw	ra,72(sp)
    d454:	df001115 	stw	fp,68(sp)
    d458:	df001104 	addi	fp,sp,68
    d45c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d460:	e0bfff17 	ldw	r2,-4(fp)
    d464:	10000616 	blt	r2,zero,d480 <isatty+0x34>
    d468:	e0bfff17 	ldw	r2,-4(fp)
    d46c:	10c00324 	muli	r3,r2,12
    d470:	00800074 	movhi	r2,1
    d474:	10885304 	addi	r2,r2,8524
    d478:	1885883a 	add	r2,r3,r2
    d47c:	00000106 	br	d484 <isatty+0x38>
    d480:	0005883a 	mov	r2,zero
    d484:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    d488:	e0bfef17 	ldw	r2,-68(fp)
    d48c:	10000e26 	beq	r2,zero,d4c8 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d490:	e0bfef17 	ldw	r2,-68(fp)
    d494:	10800017 	ldw	r2,0(r2)
    d498:	10800817 	ldw	r2,32(r2)
    d49c:	1000021e 	bne	r2,zero,d4a8 <isatty+0x5c>
    {
      return 1;
    d4a0:	00800044 	movi	r2,1
    d4a4:	00000d06 	br	d4dc <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d4a8:	e0bff004 	addi	r2,fp,-64
    d4ac:	100b883a 	mov	r5,r2
    d4b0:	e13fff17 	ldw	r4,-4(fp)
    d4b4:	000d18c0 	call	d18c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d4b8:	e0bff117 	ldw	r2,-60(fp)
    d4bc:	10880020 	cmpeqi	r2,r2,8192
    d4c0:	10803fcc 	andi	r2,r2,255
    d4c4:	00000506 	br	d4dc <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d4c8:	000d4100 	call	d410 <alt_get_errno>
    d4cc:	1007883a 	mov	r3,r2
    d4d0:	00801444 	movi	r2,81
    d4d4:	18800015 	stw	r2,0(r3)
    return 0;
    d4d8:	0005883a 	mov	r2,zero
  }
}
    d4dc:	e037883a 	mov	sp,fp
    d4e0:	dfc00117 	ldw	ra,4(sp)
    d4e4:	df000017 	ldw	fp,0(sp)
    d4e8:	dec00204 	addi	sp,sp,8
    d4ec:	f800283a 	ret

0000d4f0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d4f0:	defffc04 	addi	sp,sp,-16
    d4f4:	df000315 	stw	fp,12(sp)
    d4f8:	df000304 	addi	fp,sp,12
    d4fc:	e13ffd15 	stw	r4,-12(fp)
    d500:	e17ffe15 	stw	r5,-8(fp)
    d504:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    d508:	e0fffe17 	ldw	r3,-8(fp)
    d50c:	e0bffd17 	ldw	r2,-12(fp)
    d510:	18800c26 	beq	r3,r2,d544 <alt_load_section+0x54>
  {
    while( to != end )
    d514:	00000806 	br	d538 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d518:	e0bffe17 	ldw	r2,-8(fp)
    d51c:	10c00104 	addi	r3,r2,4
    d520:	e0fffe15 	stw	r3,-8(fp)
    d524:	e0fffd17 	ldw	r3,-12(fp)
    d528:	19000104 	addi	r4,r3,4
    d52c:	e13ffd15 	stw	r4,-12(fp)
    d530:	18c00017 	ldw	r3,0(r3)
    d534:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d538:	e0fffe17 	ldw	r3,-8(fp)
    d53c:	e0bfff17 	ldw	r2,-4(fp)
    d540:	18bff51e 	bne	r3,r2,d518 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700d518>
    {
      *to++ = *from++;
    }
  }
}
    d544:	0001883a 	nop
    d548:	e037883a 	mov	sp,fp
    d54c:	df000017 	ldw	fp,0(sp)
    d550:	dec00104 	addi	sp,sp,4
    d554:	f800283a 	ret

0000d558 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d558:	defffe04 	addi	sp,sp,-8
    d55c:	dfc00115 	stw	ra,4(sp)
    d560:	df000015 	stw	fp,0(sp)
    d564:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d568:	01800074 	movhi	r6,1
    d56c:	318d9f04 	addi	r6,r6,13948
    d570:	01400074 	movhi	r5,1
    d574:	29462004 	addi	r5,r5,6272
    d578:	01000074 	movhi	r4,1
    d57c:	210d9f04 	addi	r4,r4,13948
    d580:	000d4f00 	call	d4f0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d584:	01800034 	movhi	r6,0
    d588:	31809204 	addi	r6,r6,584
    d58c:	01400034 	movhi	r5,0
    d590:	29400804 	addi	r5,r5,32
    d594:	01000034 	movhi	r4,0
    d598:	21000804 	addi	r4,r4,32
    d59c:	000d4f00 	call	d4f0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d5a0:	01800074 	movhi	r6,1
    d5a4:	31862004 	addi	r6,r6,6272
    d5a8:	01400074 	movhi	r5,1
    d5ac:	29450404 	addi	r5,r5,5136
    d5b0:	01000074 	movhi	r4,1
    d5b4:	21050404 	addi	r4,r4,5136
    d5b8:	000d4f00 	call	d4f0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d5bc:	00105e80 	call	105e8 <alt_dcache_flush_all>
  alt_icache_flush_all();
    d5c0:	00108380 	call	10838 <alt_icache_flush_all>
}
    d5c4:	0001883a 	nop
    d5c8:	e037883a 	mov	sp,fp
    d5cc:	dfc00117 	ldw	ra,4(sp)
    d5d0:	df000017 	ldw	fp,0(sp)
    d5d4:	dec00204 	addi	sp,sp,8
    d5d8:	f800283a 	ret

0000d5dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d5dc:	defffe04 	addi	sp,sp,-8
    d5e0:	dfc00115 	stw	ra,4(sp)
    d5e4:	df000015 	stw	fp,0(sp)
    d5e8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d5ec:	d0a00c17 	ldw	r2,-32720(gp)
    d5f0:	10000326 	beq	r2,zero,d600 <alt_get_errno+0x24>
    d5f4:	d0a00c17 	ldw	r2,-32720(gp)
    d5f8:	103ee83a 	callr	r2
    d5fc:	00000106 	br	d604 <alt_get_errno+0x28>
    d600:	d0a79a04 	addi	r2,gp,-24984
}
    d604:	e037883a 	mov	sp,fp
    d608:	dfc00117 	ldw	ra,4(sp)
    d60c:	df000017 	ldw	fp,0(sp)
    d610:	dec00204 	addi	sp,sp,8
    d614:	f800283a 	ret

0000d618 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d618:	defff904 	addi	sp,sp,-28
    d61c:	dfc00615 	stw	ra,24(sp)
    d620:	df000515 	stw	fp,20(sp)
    d624:	df000504 	addi	fp,sp,20
    d628:	e13ffd15 	stw	r4,-12(fp)
    d62c:	e17ffe15 	stw	r5,-8(fp)
    d630:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d634:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d638:	e0bffd17 	ldw	r2,-12(fp)
    d63c:	10000616 	blt	r2,zero,d658 <lseek+0x40>
    d640:	e0bffd17 	ldw	r2,-12(fp)
    d644:	10c00324 	muli	r3,r2,12
    d648:	00800074 	movhi	r2,1
    d64c:	10885304 	addi	r2,r2,8524
    d650:	1885883a 	add	r2,r3,r2
    d654:	00000106 	br	d65c <lseek+0x44>
    d658:	0005883a 	mov	r2,zero
    d65c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    d660:	e0bffc17 	ldw	r2,-16(fp)
    d664:	10001026 	beq	r2,zero,d6a8 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d668:	e0bffc17 	ldw	r2,-16(fp)
    d66c:	10800017 	ldw	r2,0(r2)
    d670:	10800717 	ldw	r2,28(r2)
    d674:	10000926 	beq	r2,zero,d69c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d678:	e0bffc17 	ldw	r2,-16(fp)
    d67c:	10800017 	ldw	r2,0(r2)
    d680:	10800717 	ldw	r2,28(r2)
    d684:	e1bfff17 	ldw	r6,-4(fp)
    d688:	e17ffe17 	ldw	r5,-8(fp)
    d68c:	e13ffc17 	ldw	r4,-16(fp)
    d690:	103ee83a 	callr	r2
    d694:	e0bffb15 	stw	r2,-20(fp)
    d698:	00000506 	br	d6b0 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d69c:	00bfde84 	movi	r2,-134
    d6a0:	e0bffb15 	stw	r2,-20(fp)
    d6a4:	00000206 	br	d6b0 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
    d6a8:	00bfebc4 	movi	r2,-81
    d6ac:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    d6b0:	e0bffb17 	ldw	r2,-20(fp)
    d6b4:	1000070e 	bge	r2,zero,d6d4 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
    d6b8:	000d5dc0 	call	d5dc <alt_get_errno>
    d6bc:	1007883a 	mov	r3,r2
    d6c0:	e0bffb17 	ldw	r2,-20(fp)
    d6c4:	0085c83a 	sub	r2,zero,r2
    d6c8:	18800015 	stw	r2,0(r3)
    rc = -1;
    d6cc:	00bfffc4 	movi	r2,-1
    d6d0:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    d6d4:	e0bffb17 	ldw	r2,-20(fp)
}
    d6d8:	e037883a 	mov	sp,fp
    d6dc:	dfc00117 	ldw	ra,4(sp)
    d6e0:	df000017 	ldw	fp,0(sp)
    d6e4:	dec00204 	addi	sp,sp,8
    d6e8:	f800283a 	ret

0000d6ec <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d6ec:	defffd04 	addi	sp,sp,-12
    d6f0:	dfc00215 	stw	ra,8(sp)
    d6f4:	df000115 	stw	fp,4(sp)
    d6f8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    d6fc:	0009883a 	mov	r4,zero
    d700:	000dd080 	call	dd08 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    d704:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    d708:	000dd400 	call	dd40 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    d70c:	01800074 	movhi	r6,1
    d710:	3185c504 	addi	r6,r6,5908
    d714:	01400074 	movhi	r5,1
    d718:	2945c504 	addi	r5,r5,5908
    d71c:	01000074 	movhi	r4,1
    d720:	2105c504 	addi	r4,r4,5908
    d724:	00109300 	call	10930 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    d728:	00106e80 	call	106e8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    d72c:	01000074 	movhi	r4,1
    d730:	2101d204 	addi	r4,r4,1864
    d734:	001107c0 	call	1107c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    d738:	d0a79f17 	ldw	r2,-24964(gp)
    d73c:	d0e7a017 	ldw	r3,-24960(gp)
    d740:	d127a117 	ldw	r4,-24956(gp)
    d744:	200d883a 	mov	r6,r4
    d748:	180b883a 	mov	r5,r3
    d74c:	1009883a 	mov	r4,r2
    d750:	00003780 	call	378 <main>
    d754:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    d758:	01000044 	movi	r4,1
    d75c:	000d0540 	call	d054 <close>
  exit (result);
    d760:	e13fff17 	ldw	r4,-4(fp)
    d764:	00110900 	call	11090 <exit>

0000d768 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    d768:	defffe04 	addi	sp,sp,-8
    d76c:	df000115 	stw	fp,4(sp)
    d770:	df000104 	addi	fp,sp,4
    d774:	e13fff15 	stw	r4,-4(fp)
}
    d778:	0001883a 	nop
    d77c:	e037883a 	mov	sp,fp
    d780:	df000017 	ldw	fp,0(sp)
    d784:	dec00104 	addi	sp,sp,4
    d788:	f800283a 	ret

0000d78c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    d78c:	defffe04 	addi	sp,sp,-8
    d790:	df000115 	stw	fp,4(sp)
    d794:	df000104 	addi	fp,sp,4
    d798:	e13fff15 	stw	r4,-4(fp)
}
    d79c:	0001883a 	nop
    d7a0:	e037883a 	mov	sp,fp
    d7a4:	df000017 	ldw	fp,0(sp)
    d7a8:	dec00104 	addi	sp,sp,4
    d7ac:	f800283a 	ret

0000d7b0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d7b0:	defffe04 	addi	sp,sp,-8
    d7b4:	dfc00115 	stw	ra,4(sp)
    d7b8:	df000015 	stw	fp,0(sp)
    d7bc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d7c0:	d0a00c17 	ldw	r2,-32720(gp)
    d7c4:	10000326 	beq	r2,zero,d7d4 <alt_get_errno+0x24>
    d7c8:	d0a00c17 	ldw	r2,-32720(gp)
    d7cc:	103ee83a 	callr	r2
    d7d0:	00000106 	br	d7d8 <alt_get_errno+0x28>
    d7d4:	d0a79a04 	addi	r2,gp,-24984
}
    d7d8:	e037883a 	mov	sp,fp
    d7dc:	dfc00117 	ldw	ra,4(sp)
    d7e0:	df000017 	ldw	fp,0(sp)
    d7e4:	dec00204 	addi	sp,sp,8
    d7e8:	f800283a 	ret

0000d7ec <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    d7ec:	defff904 	addi	sp,sp,-28
    d7f0:	dfc00615 	stw	ra,24(sp)
    d7f4:	df000515 	stw	fp,20(sp)
    d7f8:	df000504 	addi	fp,sp,20
    d7fc:	e13ffd15 	stw	r4,-12(fp)
    d800:	e17ffe15 	stw	r5,-8(fp)
    d804:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d808:	e0bffd17 	ldw	r2,-12(fp)
    d80c:	10000616 	blt	r2,zero,d828 <read+0x3c>
    d810:	e0bffd17 	ldw	r2,-12(fp)
    d814:	10c00324 	muli	r3,r2,12
    d818:	00800074 	movhi	r2,1
    d81c:	10885304 	addi	r2,r2,8524
    d820:	1885883a 	add	r2,r3,r2
    d824:	00000106 	br	d82c <read+0x40>
    d828:	0005883a 	mov	r2,zero
    d82c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d830:	e0bffb17 	ldw	r2,-20(fp)
    d834:	10002226 	beq	r2,zero,d8c0 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d838:	e0bffb17 	ldw	r2,-20(fp)
    d83c:	10800217 	ldw	r2,8(r2)
    d840:	108000cc 	andi	r2,r2,3
    d844:	10800060 	cmpeqi	r2,r2,1
    d848:	1000181e 	bne	r2,zero,d8ac <read+0xc0>
        (fd->dev->read))
    d84c:	e0bffb17 	ldw	r2,-20(fp)
    d850:	10800017 	ldw	r2,0(r2)
    d854:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d858:	10001426 	beq	r2,zero,d8ac <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    d85c:	e0bffb17 	ldw	r2,-20(fp)
    d860:	10800017 	ldw	r2,0(r2)
    d864:	10800517 	ldw	r2,20(r2)
    d868:	e0ffff17 	ldw	r3,-4(fp)
    d86c:	180d883a 	mov	r6,r3
    d870:	e17ffe17 	ldw	r5,-8(fp)
    d874:	e13ffb17 	ldw	r4,-20(fp)
    d878:	103ee83a 	callr	r2
    d87c:	e0bffc15 	stw	r2,-16(fp)
    d880:	e0bffc17 	ldw	r2,-16(fp)
    d884:	1000070e 	bge	r2,zero,d8a4 <read+0xb8>
        {
          ALT_ERRNO = -rval;
    d888:	000d7b00 	call	d7b0 <alt_get_errno>
    d88c:	1007883a 	mov	r3,r2
    d890:	e0bffc17 	ldw	r2,-16(fp)
    d894:	0085c83a 	sub	r2,zero,r2
    d898:	18800015 	stw	r2,0(r3)
          return -1;
    d89c:	00bfffc4 	movi	r2,-1
    d8a0:	00000c06 	br	d8d4 <read+0xe8>
        }
        return rval;
    d8a4:	e0bffc17 	ldw	r2,-16(fp)
    d8a8:	00000a06 	br	d8d4 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
    d8ac:	000d7b00 	call	d7b0 <alt_get_errno>
    d8b0:	1007883a 	mov	r3,r2
    d8b4:	00800344 	movi	r2,13
    d8b8:	18800015 	stw	r2,0(r3)
    d8bc:	00000406 	br	d8d0 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    d8c0:	000d7b00 	call	d7b0 <alt_get_errno>
    d8c4:	1007883a 	mov	r3,r2
    d8c8:	00801444 	movi	r2,81
    d8cc:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d8d0:	00bfffc4 	movi	r2,-1
}
    d8d4:	e037883a 	mov	sp,fp
    d8d8:	dfc00117 	ldw	ra,4(sp)
    d8dc:	df000017 	ldw	fp,0(sp)
    d8e0:	dec00204 	addi	sp,sp,8
    d8e4:	f800283a 	ret

0000d8e8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    d8e8:	defffe04 	addi	sp,sp,-8
    d8ec:	df000115 	stw	fp,4(sp)
    d8f0:	df000104 	addi	fp,sp,4
    d8f4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
    d8f8:	e0bfff17 	ldw	r2,-4(fp)
    d8fc:	108000d0 	cmplti	r2,r2,3
    d900:	10000d1e 	bne	r2,zero,d938 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
    d904:	00800074 	movhi	r2,1
    d908:	10885304 	addi	r2,r2,8524
    d90c:	e0ffff17 	ldw	r3,-4(fp)
    d910:	18c00324 	muli	r3,r3,12
    d914:	10c5883a 	add	r2,r2,r3
    d918:	10800204 	addi	r2,r2,8
    d91c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    d920:	00800074 	movhi	r2,1
    d924:	10885304 	addi	r2,r2,8524
    d928:	e0ffff17 	ldw	r3,-4(fp)
    d92c:	18c00324 	muli	r3,r3,12
    d930:	10c5883a 	add	r2,r2,r3
    d934:	10000015 	stw	zero,0(r2)
  }
}
    d938:	0001883a 	nop
    d93c:	e037883a 	mov	sp,fp
    d940:	df000017 	ldw	fp,0(sp)
    d944:	dec00104 	addi	sp,sp,4
    d948:	f800283a 	ret

0000d94c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    d94c:	defff904 	addi	sp,sp,-28
    d950:	df000615 	stw	fp,24(sp)
    d954:	df000604 	addi	fp,sp,24
    d958:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d95c:	0005303a 	rdctl	r2,status
    d960:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d964:	e0fffe17 	ldw	r3,-8(fp)
    d968:	00bfff84 	movi	r2,-2
    d96c:	1884703a 	and	r2,r3,r2
    d970:	1001703a 	wrctl	status,r2
  
  return context;
    d974:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    d978:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    d97c:	d0a00d17 	ldw	r2,-32716(gp)
    d980:	10c000c4 	addi	r3,r2,3
    d984:	00bfff04 	movi	r2,-4
    d988:	1884703a 	and	r2,r3,r2
    d98c:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    d990:	d0e00d17 	ldw	r3,-32716(gp)
    d994:	e0bfff17 	ldw	r2,-4(fp)
    d998:	1887883a 	add	r3,r3,r2
    d99c:	00810034 	movhi	r2,1024
    d9a0:	10800004 	addi	r2,r2,0
    d9a4:	10c0062e 	bgeu	r2,r3,d9c0 <sbrk+0x74>
    d9a8:	e0bffb17 	ldw	r2,-20(fp)
    d9ac:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d9b0:	e0bffa17 	ldw	r2,-24(fp)
    d9b4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    d9b8:	00bfffc4 	movi	r2,-1
    d9bc:	00000b06 	br	d9ec <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    d9c0:	d0a00d17 	ldw	r2,-32716(gp)
    d9c4:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    d9c8:	d0e00d17 	ldw	r3,-32716(gp)
    d9cc:	e0bfff17 	ldw	r2,-4(fp)
    d9d0:	1885883a 	add	r2,r3,r2
    d9d4:	d0a00d15 	stw	r2,-32716(gp)
    d9d8:	e0bffb17 	ldw	r2,-20(fp)
    d9dc:	e0bffc15 	stw	r2,-16(fp)
    d9e0:	e0bffc17 	ldw	r2,-16(fp)
    d9e4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    d9e8:	e0bffd17 	ldw	r2,-12(fp)
} 
    d9ec:	e037883a 	mov	sp,fp
    d9f0:	df000017 	ldw	fp,0(sp)
    d9f4:	dec00104 	addi	sp,sp,4
    d9f8:	f800283a 	ret

0000d9fc <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    d9fc:	defffa04 	addi	sp,sp,-24
    da00:	df000515 	stw	fp,20(sp)
    da04:	df000504 	addi	fp,sp,20
    da08:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    da0c:	0005303a 	rdctl	r2,status
    da10:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    da14:	e0fffc17 	ldw	r3,-16(fp)
    da18:	00bfff84 	movi	r2,-2
    da1c:	1884703a 	and	r2,r3,r2
    da20:	1001703a 	wrctl	status,r2
  
  return context;
    da24:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    da28:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    da2c:	e0bfff17 	ldw	r2,-4(fp)
    da30:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    da34:	e0bffd17 	ldw	r2,-12(fp)
    da38:	10800017 	ldw	r2,0(r2)
    da3c:	e0fffd17 	ldw	r3,-12(fp)
    da40:	18c00117 	ldw	r3,4(r3)
    da44:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    da48:	e0bffd17 	ldw	r2,-12(fp)
    da4c:	10800117 	ldw	r2,4(r2)
    da50:	e0fffd17 	ldw	r3,-12(fp)
    da54:	18c00017 	ldw	r3,0(r3)
    da58:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    da5c:	e0bffd17 	ldw	r2,-12(fp)
    da60:	e0fffd17 	ldw	r3,-12(fp)
    da64:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    da68:	e0bffd17 	ldw	r2,-12(fp)
    da6c:	e0fffd17 	ldw	r3,-12(fp)
    da70:	10c00015 	stw	r3,0(r2)
    da74:	e0bffb17 	ldw	r2,-20(fp)
    da78:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    da7c:	e0bffe17 	ldw	r2,-8(fp)
    da80:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    da84:	0001883a 	nop
    da88:	e037883a 	mov	sp,fp
    da8c:	df000017 	ldw	fp,0(sp)
    da90:	dec00104 	addi	sp,sp,4
    da94:	f800283a 	ret

0000da98 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    da98:	defffb04 	addi	sp,sp,-20
    da9c:	dfc00415 	stw	ra,16(sp)
    daa0:	df000315 	stw	fp,12(sp)
    daa4:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    daa8:	d0a00e17 	ldw	r2,-32712(gp)
    daac:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    dab0:	d0a7a317 	ldw	r2,-24948(gp)
    dab4:	10800044 	addi	r2,r2,1
    dab8:	d0a7a315 	stw	r2,-24948(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    dabc:	00002e06 	br	db78 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    dac0:	e0bffd17 	ldw	r2,-12(fp)
    dac4:	10800017 	ldw	r2,0(r2)
    dac8:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    dacc:	e0bffd17 	ldw	r2,-12(fp)
    dad0:	10800403 	ldbu	r2,16(r2)
    dad4:	10803fcc 	andi	r2,r2,255
    dad8:	10000426 	beq	r2,zero,daec <alt_tick+0x54>
    dadc:	d0a7a317 	ldw	r2,-24948(gp)
    dae0:	1000021e 	bne	r2,zero,daec <alt_tick+0x54>
    {
      alarm->rollover = 0;
    dae4:	e0bffd17 	ldw	r2,-12(fp)
    dae8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    daec:	e0bffd17 	ldw	r2,-12(fp)
    daf0:	10800217 	ldw	r2,8(r2)
    daf4:	d0e7a317 	ldw	r3,-24948(gp)
    daf8:	18801d36 	bltu	r3,r2,db70 <alt_tick+0xd8>
    dafc:	e0bffd17 	ldw	r2,-12(fp)
    db00:	10800403 	ldbu	r2,16(r2)
    db04:	10803fcc 	andi	r2,r2,255
    db08:	1000191e 	bne	r2,zero,db70 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    db0c:	e0bffd17 	ldw	r2,-12(fp)
    db10:	10800317 	ldw	r2,12(r2)
    db14:	e0fffd17 	ldw	r3,-12(fp)
    db18:	18c00517 	ldw	r3,20(r3)
    db1c:	1809883a 	mov	r4,r3
    db20:	103ee83a 	callr	r2
    db24:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    db28:	e0bfff17 	ldw	r2,-4(fp)
    db2c:	1000031e 	bne	r2,zero,db3c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    db30:	e13ffd17 	ldw	r4,-12(fp)
    db34:	000d9fc0 	call	d9fc <alt_alarm_stop>
    db38:	00000d06 	br	db70 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    db3c:	e0bffd17 	ldw	r2,-12(fp)
    db40:	10c00217 	ldw	r3,8(r2)
    db44:	e0bfff17 	ldw	r2,-4(fp)
    db48:	1887883a 	add	r3,r3,r2
    db4c:	e0bffd17 	ldw	r2,-12(fp)
    db50:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    db54:	e0bffd17 	ldw	r2,-12(fp)
    db58:	10c00217 	ldw	r3,8(r2)
    db5c:	d0a7a317 	ldw	r2,-24948(gp)
    db60:	1880032e 	bgeu	r3,r2,db70 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    db64:	e0bffd17 	ldw	r2,-12(fp)
    db68:	00c00044 	movi	r3,1
    db6c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    db70:	e0bffe17 	ldw	r2,-8(fp)
    db74:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    db78:	e0fffd17 	ldw	r3,-12(fp)
    db7c:	d0a00e04 	addi	r2,gp,-32712
    db80:	18bfcf1e 	bne	r3,r2,dac0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700dac0>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    db84:	0001883a 	nop
}
    db88:	0001883a 	nop
    db8c:	e037883a 	mov	sp,fp
    db90:	dfc00117 	ldw	ra,4(sp)
    db94:	df000017 	ldw	fp,0(sp)
    db98:	dec00204 	addi	sp,sp,8
    db9c:	f800283a 	ret

0000dba0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    dba0:	defffe04 	addi	sp,sp,-8
    dba4:	dfc00115 	stw	ra,4(sp)
    dba8:	df000015 	stw	fp,0(sp)
    dbac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    dbb0:	d0a00c17 	ldw	r2,-32720(gp)
    dbb4:	10000326 	beq	r2,zero,dbc4 <alt_get_errno+0x24>
    dbb8:	d0a00c17 	ldw	r2,-32720(gp)
    dbbc:	103ee83a 	callr	r2
    dbc0:	00000106 	br	dbc8 <alt_get_errno+0x28>
    dbc4:	d0a79a04 	addi	r2,gp,-24984
}
    dbc8:	e037883a 	mov	sp,fp
    dbcc:	dfc00117 	ldw	ra,4(sp)
    dbd0:	df000017 	ldw	fp,0(sp)
    dbd4:	dec00204 	addi	sp,sp,8
    dbd8:	f800283a 	ret

0000dbdc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    dbdc:	defff904 	addi	sp,sp,-28
    dbe0:	dfc00615 	stw	ra,24(sp)
    dbe4:	df000515 	stw	fp,20(sp)
    dbe8:	df000504 	addi	fp,sp,20
    dbec:	e13ffd15 	stw	r4,-12(fp)
    dbf0:	e17ffe15 	stw	r5,-8(fp)
    dbf4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    dbf8:	e0bffd17 	ldw	r2,-12(fp)
    dbfc:	10000616 	blt	r2,zero,dc18 <write+0x3c>
    dc00:	e0bffd17 	ldw	r2,-12(fp)
    dc04:	10c00324 	muli	r3,r2,12
    dc08:	00800074 	movhi	r2,1
    dc0c:	10885304 	addi	r2,r2,8524
    dc10:	1885883a 	add	r2,r3,r2
    dc14:	00000106 	br	dc1c <write+0x40>
    dc18:	0005883a 	mov	r2,zero
    dc1c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    dc20:	e0bffb17 	ldw	r2,-20(fp)
    dc24:	10002126 	beq	r2,zero,dcac <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    dc28:	e0bffb17 	ldw	r2,-20(fp)
    dc2c:	10800217 	ldw	r2,8(r2)
    dc30:	108000cc 	andi	r2,r2,3
    dc34:	10001826 	beq	r2,zero,dc98 <write+0xbc>
    dc38:	e0bffb17 	ldw	r2,-20(fp)
    dc3c:	10800017 	ldw	r2,0(r2)
    dc40:	10800617 	ldw	r2,24(r2)
    dc44:	10001426 	beq	r2,zero,dc98 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    dc48:	e0bffb17 	ldw	r2,-20(fp)
    dc4c:	10800017 	ldw	r2,0(r2)
    dc50:	10800617 	ldw	r2,24(r2)
    dc54:	e0ffff17 	ldw	r3,-4(fp)
    dc58:	180d883a 	mov	r6,r3
    dc5c:	e17ffe17 	ldw	r5,-8(fp)
    dc60:	e13ffb17 	ldw	r4,-20(fp)
    dc64:	103ee83a 	callr	r2
    dc68:	e0bffc15 	stw	r2,-16(fp)
    dc6c:	e0bffc17 	ldw	r2,-16(fp)
    dc70:	1000070e 	bge	r2,zero,dc90 <write+0xb4>
      {
        ALT_ERRNO = -rval;
    dc74:	000dba00 	call	dba0 <alt_get_errno>
    dc78:	1007883a 	mov	r3,r2
    dc7c:	e0bffc17 	ldw	r2,-16(fp)
    dc80:	0085c83a 	sub	r2,zero,r2
    dc84:	18800015 	stw	r2,0(r3)
        return -1;
    dc88:	00bfffc4 	movi	r2,-1
    dc8c:	00000c06 	br	dcc0 <write+0xe4>
      }
      return rval;
    dc90:	e0bffc17 	ldw	r2,-16(fp)
    dc94:	00000a06 	br	dcc0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
    dc98:	000dba00 	call	dba0 <alt_get_errno>
    dc9c:	1007883a 	mov	r3,r2
    dca0:	00800344 	movi	r2,13
    dca4:	18800015 	stw	r2,0(r3)
    dca8:	00000406 	br	dcbc <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    dcac:	000dba00 	call	dba0 <alt_get_errno>
    dcb0:	1007883a 	mov	r3,r2
    dcb4:	00801444 	movi	r2,81
    dcb8:	18800015 	stw	r2,0(r3)
  }
  return -1;
    dcbc:	00bfffc4 	movi	r2,-1
}
    dcc0:	e037883a 	mov	sp,fp
    dcc4:	dfc00117 	ldw	ra,4(sp)
    dcc8:	df000017 	ldw	fp,0(sp)
    dccc:	dec00204 	addi	sp,sp,8
    dcd0:	f800283a 	ret

0000dcd4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    dcd4:	defffd04 	addi	sp,sp,-12
    dcd8:	dfc00215 	stw	ra,8(sp)
    dcdc:	df000115 	stw	fp,4(sp)
    dce0:	df000104 	addi	fp,sp,4
    dce4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    dce8:	d1600904 	addi	r5,gp,-32732
    dcec:	e13fff17 	ldw	r4,-4(fp)
    dcf0:	00106440 	call	10644 <alt_dev_llist_insert>
}
    dcf4:	e037883a 	mov	sp,fp
    dcf8:	dfc00117 	ldw	ra,4(sp)
    dcfc:	df000017 	ldw	fp,0(sp)
    dd00:	dec00204 	addi	sp,sp,8
    dd04:	f800283a 	ret

0000dd08 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    dd08:	defffd04 	addi	sp,sp,-12
    dd0c:	dfc00215 	stw	ra,8(sp)
    dd10:	df000115 	stw	fp,4(sp)
    dd14:	df000104 	addi	fp,sp,4
    dd18:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2, Nios2);
    dd1c:	0010d800 	call	10d80 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    dd20:	00800044 	movi	r2,1
    dd24:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    dd28:	0001883a 	nop
    dd2c:	e037883a 	mov	sp,fp
    dd30:	dfc00117 	ldw	ra,4(sp)
    dd34:	df000017 	ldw	fp,0(sp)
    dd38:	dec00204 	addi	sp,sp,8
    dd3c:	f800283a 	ret

0000dd40 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    dd40:	defffb04 	addi	sp,sp,-20
    dd44:	dfc00415 	stw	ra,16(sp)
    dd48:	df000315 	stw	fp,12(sp)
    dd4c:	df000304 	addi	fp,sp,12
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER, Interval_Timer);
    dd50:	01c00204 	movi	r7,8
    dd54:	01800244 	movi	r6,9
    dd58:	000b883a 	mov	r5,zero
    dd5c:	013fc834 	movhi	r4,65312
    dd60:	21080004 	addi	r4,r4,8192
    dd64:	000f1880 	call	f188 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER_2, Interval_Timer_2);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
    dd68:	01800204 	movi	r6,8
    dd6c:	000b883a 	mov	r5,zero
    dd70:	01000074 	movhi	r4,1
    dd74:	2108bd04 	addi	r4,r4,8948
    dd78:	000e8100 	call	e810 <altera_avalon_jtag_uart_init>
    dd7c:	01000074 	movhi	r4,1
    dd80:	2108b304 	addi	r4,r4,8908
    dd84:	000dcd40 	call	dcd4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, SysID);
    dd88:	0001883a 	nop
    ALTERA_UP_AVALON_AUDIO_AND_VIDEO_CONFIG_INIT ( AV_CONFIG, AV_Config);
    dd8c:	01000074 	movhi	r4,1
    dd90:	210ccb04 	addi	r4,r4,13100
    dd94:	000dcd40 	call	dcd4 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO_SUBSYSTEM_AUDIO, Audio_Subsystem_Audio);
    dd98:	01000074 	movhi	r4,1
    dd9c:	210cd704 	addi	r4,r4,13148
    dda0:	000dcd40 	call	dcd4 <alt_dev_reg>
    ALTERA_UP_AVALON_CHARACTER_LCD_INIT ( CHAR_LCD_16X2, Char_LCD_16x2);
    dda4:	01000074 	movhi	r4,1
    dda8:	210ce304 	addi	r4,r4,13196
    ddac:	000f2b00 	call	f2b0 <alt_up_character_lcd_init>
    ddb0:	01000074 	movhi	r4,1
    ddb4:	210ce304 	addi	r4,r4,13196
    ddb8:	000dcd40 	call	dcd4 <alt_dev_reg>
    ALTERA_UP_AVALON_IRDA_INIT ( IRDA, IrDA);
    ddbc:	01000074 	movhi	r4,1
    ddc0:	210cee04 	addi	r4,r4,13240
    ddc4:	000dcd40 	call	dcd4 <alt_dev_reg>
    ALTERA_UP_AVALON_PS2_INIT ( PS2_PORT, PS2_Port);
    ddc8:	01000074 	movhi	r4,1
    ddcc:	210cf904 	addi	r4,r4,13284
    ddd0:	000fba40 	call	fba4 <alt_up_ps2_init>
    ddd4:	01000074 	movhi	r4,1
    ddd8:	210cf904 	addi	r4,r4,13284
    dddc:	000dcd40 	call	dcd4 <alt_dev_reg>
    ALTERA_UP_AVALON_PS2_INIT ( PS2_PORT_DUAL, PS2_Port_Dual);
    dde0:	01000074 	movhi	r4,1
    dde4:	210d0704 	addi	r4,r4,13340
    dde8:	000fba40 	call	fba4 <alt_up_ps2_init>
    ddec:	01000074 	movhi	r4,1
    ddf0:	210d0704 	addi	r4,r4,13340
    ddf4:	000dcd40 	call	dcd4 <alt_dev_reg>
    ALTERA_UP_AVALON_RS232_INIT ( SERIAL_PORT, Serial_Port);
    ddf8:	01000074 	movhi	r4,1
    ddfc:	210d1504 	addi	r4,r4,13396
    de00:	000dcd40 	call	dcd4 <alt_dev_reg>
    ALTERA_UP_AVALON_USB_INIT ( USB, USB);
    de04:	01000074 	movhi	r4,1
    de08:	210d2004 	addi	r4,r4,13440
    de0c:	000dcd40 	call	dcd4 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_DMA_CONTROLLER_INIT ( VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_CHAR_BUF_DMA, VGA_Subsystem_Char_Buf_Subsystem_Char_Buf_DMA);
    de10:	00800074 	movhi	r2,1
    de14:	108d2d04 	addi	r2,r2,13492
    de18:	10800a17 	ldw	r2,40(r2)
    de1c:	10800017 	ldw	r2,0(r2)
    de20:	1007883a 	mov	r3,r2
    de24:	00800074 	movhi	r2,1
    de28:	108d2d04 	addi	r2,r2,13492
    de2c:	10c00b15 	stw	r3,44(r2)
    de30:	00800074 	movhi	r2,1
    de34:	108d2d04 	addi	r2,r2,13492
    de38:	10800a17 	ldw	r2,40(r2)
    de3c:	10800104 	addi	r2,r2,4
    de40:	10800017 	ldw	r2,0(r2)
    de44:	1007883a 	mov	r3,r2
    de48:	00800074 	movhi	r2,1
    de4c:	108d2d04 	addi	r2,r2,13492
    de50:	10c00c15 	stw	r3,48(r2)
    de54:	00800074 	movhi	r2,1
    de58:	108d2d04 	addi	r2,r2,13492
    de5c:	10800a17 	ldw	r2,40(r2)
    de60:	10800204 	addi	r2,r2,8
    de64:	10800017 	ldw	r2,0(r2)
    de68:	10ffffcc 	andi	r3,r2,65535
    de6c:	00800074 	movhi	r2,1
    de70:	108d2d04 	addi	r2,r2,13492
    de74:	10c01115 	stw	r3,68(r2)
    de78:	00800074 	movhi	r2,1
    de7c:	108d2d04 	addi	r2,r2,13492
    de80:	10800a17 	ldw	r2,40(r2)
    de84:	10800204 	addi	r2,r2,8
    de88:	10800017 	ldw	r2,0(r2)
    de8c:	1006d43a 	srli	r3,r2,16
    de90:	00800074 	movhi	r2,1
    de94:	108d2d04 	addi	r2,r2,13492
    de98:	10c01215 	stw	r3,72(r2)
    de9c:	00800074 	movhi	r2,1
    dea0:	108d2d04 	addi	r2,r2,13492
    dea4:	10800a17 	ldw	r2,40(r2)
    dea8:	10800304 	addi	r2,r2,12
    deac:	10800017 	ldw	r2,0(r2)
    deb0:	1005d07a 	srai	r2,r2,1
    deb4:	10c0004c 	andi	r3,r2,1
    deb8:	00800074 	movhi	r2,1
    debc:	108d2d04 	addi	r2,r2,13492
    dec0:	10c00d15 	stw	r3,52(r2)
    dec4:	00800074 	movhi	r2,1
    dec8:	108d2d04 	addi	r2,r2,13492
    decc:	10800a17 	ldw	r2,40(r2)
    ded0:	10800304 	addi	r2,r2,12
    ded4:	10800017 	ldw	r2,0(r2)
    ded8:	1005d23a 	srai	r2,r2,8
    dedc:	108003cc 	andi	r2,r2,15
    dee0:	10800044 	addi	r2,r2,1
    dee4:	1007883a 	mov	r3,r2
    dee8:	00800074 	movhi	r2,1
    deec:	108d2d04 	addi	r2,r2,13492
    def0:	10c00e15 	stw	r3,56(r2)
    def4:	00800074 	movhi	r2,1
    def8:	108d2d04 	addi	r2,r2,13492
    defc:	10800a17 	ldw	r2,40(r2)
    df00:	10800304 	addi	r2,r2,12
    df04:	10800017 	ldw	r2,0(r2)
    df08:	1005d1ba 	srai	r2,r2,6
    df0c:	108000cc 	andi	r2,r2,3
    df10:	10800044 	addi	r2,r2,1
    df14:	1007883a 	mov	r3,r2
    df18:	00800074 	movhi	r2,1
    df1c:	108d2d04 	addi	r2,r2,13492
    df20:	10c00f15 	stw	r3,60(r2)
    df24:	00800074 	movhi	r2,1
    df28:	108d2d04 	addi	r2,r2,13492
    df2c:	10800e17 	ldw	r2,56(r2)
    df30:	1007883a 	mov	r3,r2
    df34:	00800074 	movhi	r2,1
    df38:	108d2d04 	addi	r2,r2,13492
    df3c:	10800f17 	ldw	r2,60(r2)
    df40:	1885383a 	mul	r2,r3,r2
    df44:	e0bffd05 	stb	r2,-12(fp)
    df48:	e0bffd03 	ldbu	r2,-12(fp)
    df4c:	10800268 	cmpgeui	r2,r2,9
    df50:	1000051e 	bne	r2,zero,df68 <alt_sys_init+0x228>
    df54:	00800074 	movhi	r2,1
    df58:	108d2d04 	addi	r2,r2,13492
    df5c:	00c00044 	movi	r3,1
    df60:	10c01015 	stw	r3,64(r2)
    df64:	00000c06 	br	df98 <alt_sys_init+0x258>
    df68:	e0bffd03 	ldbu	r2,-12(fp)
    df6c:	10800468 	cmpgeui	r2,r2,17
    df70:	1000051e 	bne	r2,zero,df88 <alt_sys_init+0x248>
    df74:	00800074 	movhi	r2,1
    df78:	108d2d04 	addi	r2,r2,13492
    df7c:	00c00084 	movi	r3,2
    df80:	10c01015 	stw	r3,64(r2)
    df84:	00000406 	br	df98 <alt_sys_init+0x258>
    df88:	00800074 	movhi	r2,1
    df8c:	108d2d04 	addi	r2,r2,13492
    df90:	00c00104 	movi	r3,4
    df94:	10c01015 	stw	r3,64(r2)
    df98:	00800074 	movhi	r2,1
    df9c:	108d2d04 	addi	r2,r2,13492
    dfa0:	10800a17 	ldw	r2,40(r2)
    dfa4:	10800304 	addi	r2,r2,12
    dfa8:	10800017 	ldw	r2,0(r2)
    dfac:	1005d43a 	srai	r2,r2,16
    dfb0:	e0bffd45 	stb	r2,-11(fp)
    dfb4:	00800074 	movhi	r2,1
    dfb8:	108d2d04 	addi	r2,r2,13492
    dfbc:	10800a17 	ldw	r2,40(r2)
    dfc0:	10800304 	addi	r2,r2,12
    dfc4:	10800017 	ldw	r2,0(r2)
    dfc8:	1004d63a 	srli	r2,r2,24
    dfcc:	e0bffd85 	stb	r2,-10(fp)
    dfd0:	00800074 	movhi	r2,1
    dfd4:	108d2d04 	addi	r2,r2,13492
    dfd8:	10801017 	ldw	r2,64(r2)
    dfdc:	10800058 	cmpnei	r2,r2,1
    dfe0:	1000041e 	bne	r2,zero,dff4 <alt_sys_init+0x2b4>
    dfe4:	00800074 	movhi	r2,1
    dfe8:	108d2d04 	addi	r2,r2,13492
    dfec:	10001315 	stw	zero,76(r2)
    dff0:	00000e06 	br	e02c <alt_sys_init+0x2ec>
    dff4:	00800074 	movhi	r2,1
    dff8:	108d2d04 	addi	r2,r2,13492
    dffc:	10801017 	ldw	r2,64(r2)
    e000:	10800098 	cmpnei	r2,r2,2
    e004:	1000051e 	bne	r2,zero,e01c <alt_sys_init+0x2dc>
    e008:	00800074 	movhi	r2,1
    e00c:	108d2d04 	addi	r2,r2,13492
    e010:	00c00044 	movi	r3,1
    e014:	10c01315 	stw	r3,76(r2)
    e018:	00000406 	br	e02c <alt_sys_init+0x2ec>
    e01c:	00800074 	movhi	r2,1
    e020:	108d2d04 	addi	r2,r2,13492
    e024:	00c00084 	movi	r3,2
    e028:	10c01315 	stw	r3,76(r2)
    e02c:	e0bffd43 	ldbu	r2,-11(fp)
    e030:	00c00804 	movi	r3,32
    e034:	1885c83a 	sub	r2,r3,r2
    e038:	00ffffc4 	movi	r3,-1
    e03c:	1886d83a 	srl	r3,r3,r2
    e040:	00800074 	movhi	r2,1
    e044:	108d2d04 	addi	r2,r2,13492
    e048:	10c01415 	stw	r3,80(r2)
    e04c:	e0fffd43 	ldbu	r3,-11(fp)
    e050:	00800074 	movhi	r2,1
    e054:	108d2d04 	addi	r2,r2,13492
    e058:	10801317 	ldw	r2,76(r2)
    e05c:	1887883a 	add	r3,r3,r2
    e060:	00800074 	movhi	r2,1
    e064:	108d2d04 	addi	r2,r2,13492
    e068:	10c01515 	stw	r3,84(r2)
    e06c:	e0bffd83 	ldbu	r2,-10(fp)
    e070:	00c00804 	movi	r3,32
    e074:	1885c83a 	sub	r2,r3,r2
    e078:	00ffffc4 	movi	r3,-1
    e07c:	1886d83a 	srl	r3,r3,r2
    e080:	00800074 	movhi	r2,1
    e084:	108d2d04 	addi	r2,r2,13492
    e088:	10c01615 	stw	r3,88(r2)
    e08c:	01000074 	movhi	r4,1
    e090:	210d2d04 	addi	r4,r4,13492
    e094:	000dcd40 	call	dcd4 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_DMA_CONTROLLER_INIT ( VGA_SUBSYSTEM_VGA_PIXEL_DMA, VGA_Subsystem_VGA_Pixel_DMA);
    e098:	00800074 	movhi	r2,1
    e09c:	108d4404 	addi	r2,r2,13584
    e0a0:	10800a17 	ldw	r2,40(r2)
    e0a4:	10800017 	ldw	r2,0(r2)
    e0a8:	1007883a 	mov	r3,r2
    e0ac:	00800074 	movhi	r2,1
    e0b0:	108d4404 	addi	r2,r2,13584
    e0b4:	10c00b15 	stw	r3,44(r2)
    e0b8:	00800074 	movhi	r2,1
    e0bc:	108d4404 	addi	r2,r2,13584
    e0c0:	10800a17 	ldw	r2,40(r2)
    e0c4:	10800104 	addi	r2,r2,4
    e0c8:	10800017 	ldw	r2,0(r2)
    e0cc:	1007883a 	mov	r3,r2
    e0d0:	00800074 	movhi	r2,1
    e0d4:	108d4404 	addi	r2,r2,13584
    e0d8:	10c00c15 	stw	r3,48(r2)
    e0dc:	00800074 	movhi	r2,1
    e0e0:	108d4404 	addi	r2,r2,13584
    e0e4:	10800a17 	ldw	r2,40(r2)
    e0e8:	10800204 	addi	r2,r2,8
    e0ec:	10800017 	ldw	r2,0(r2)
    e0f0:	10ffffcc 	andi	r3,r2,65535
    e0f4:	00800074 	movhi	r2,1
    e0f8:	108d4404 	addi	r2,r2,13584
    e0fc:	10c01115 	stw	r3,68(r2)
    e100:	00800074 	movhi	r2,1
    e104:	108d4404 	addi	r2,r2,13584
    e108:	10800a17 	ldw	r2,40(r2)
    e10c:	10800204 	addi	r2,r2,8
    e110:	10800017 	ldw	r2,0(r2)
    e114:	1006d43a 	srli	r3,r2,16
    e118:	00800074 	movhi	r2,1
    e11c:	108d4404 	addi	r2,r2,13584
    e120:	10c01215 	stw	r3,72(r2)
    e124:	00800074 	movhi	r2,1
    e128:	108d4404 	addi	r2,r2,13584
    e12c:	10800a17 	ldw	r2,40(r2)
    e130:	10800304 	addi	r2,r2,12
    e134:	10800017 	ldw	r2,0(r2)
    e138:	1005d07a 	srai	r2,r2,1
    e13c:	10c0004c 	andi	r3,r2,1
    e140:	00800074 	movhi	r2,1
    e144:	108d4404 	addi	r2,r2,13584
    e148:	10c00d15 	stw	r3,52(r2)
    e14c:	00800074 	movhi	r2,1
    e150:	108d4404 	addi	r2,r2,13584
    e154:	10800a17 	ldw	r2,40(r2)
    e158:	10800304 	addi	r2,r2,12
    e15c:	10800017 	ldw	r2,0(r2)
    e160:	1005d23a 	srai	r2,r2,8
    e164:	108003cc 	andi	r2,r2,15
    e168:	10800044 	addi	r2,r2,1
    e16c:	1007883a 	mov	r3,r2
    e170:	00800074 	movhi	r2,1
    e174:	108d4404 	addi	r2,r2,13584
    e178:	10c00e15 	stw	r3,56(r2)
    e17c:	00800074 	movhi	r2,1
    e180:	108d4404 	addi	r2,r2,13584
    e184:	10800a17 	ldw	r2,40(r2)
    e188:	10800304 	addi	r2,r2,12
    e18c:	10800017 	ldw	r2,0(r2)
    e190:	1005d1ba 	srai	r2,r2,6
    e194:	108000cc 	andi	r2,r2,3
    e198:	10800044 	addi	r2,r2,1
    e19c:	1007883a 	mov	r3,r2
    e1a0:	00800074 	movhi	r2,1
    e1a4:	108d4404 	addi	r2,r2,13584
    e1a8:	10c00f15 	stw	r3,60(r2)
    e1ac:	00800074 	movhi	r2,1
    e1b0:	108d4404 	addi	r2,r2,13584
    e1b4:	10800e17 	ldw	r2,56(r2)
    e1b8:	1007883a 	mov	r3,r2
    e1bc:	00800074 	movhi	r2,1
    e1c0:	108d4404 	addi	r2,r2,13584
    e1c4:	10800f17 	ldw	r2,60(r2)
    e1c8:	1885383a 	mul	r2,r3,r2
    e1cc:	e0bffdc5 	stb	r2,-9(fp)
    e1d0:	e0bffdc3 	ldbu	r2,-9(fp)
    e1d4:	10800268 	cmpgeui	r2,r2,9
    e1d8:	1000051e 	bne	r2,zero,e1f0 <alt_sys_init+0x4b0>
    e1dc:	00800074 	movhi	r2,1
    e1e0:	108d4404 	addi	r2,r2,13584
    e1e4:	00c00044 	movi	r3,1
    e1e8:	10c01015 	stw	r3,64(r2)
    e1ec:	00000c06 	br	e220 <alt_sys_init+0x4e0>
    e1f0:	e0bffdc3 	ldbu	r2,-9(fp)
    e1f4:	10800468 	cmpgeui	r2,r2,17
    e1f8:	1000051e 	bne	r2,zero,e210 <alt_sys_init+0x4d0>
    e1fc:	00800074 	movhi	r2,1
    e200:	108d4404 	addi	r2,r2,13584
    e204:	00c00084 	movi	r3,2
    e208:	10c01015 	stw	r3,64(r2)
    e20c:	00000406 	br	e220 <alt_sys_init+0x4e0>
    e210:	00800074 	movhi	r2,1
    e214:	108d4404 	addi	r2,r2,13584
    e218:	00c00104 	movi	r3,4
    e21c:	10c01015 	stw	r3,64(r2)
    e220:	00800074 	movhi	r2,1
    e224:	108d4404 	addi	r2,r2,13584
    e228:	10800a17 	ldw	r2,40(r2)
    e22c:	10800304 	addi	r2,r2,12
    e230:	10800017 	ldw	r2,0(r2)
    e234:	1005d43a 	srai	r2,r2,16
    e238:	e0bffe05 	stb	r2,-8(fp)
    e23c:	00800074 	movhi	r2,1
    e240:	108d4404 	addi	r2,r2,13584
    e244:	10800a17 	ldw	r2,40(r2)
    e248:	10800304 	addi	r2,r2,12
    e24c:	10800017 	ldw	r2,0(r2)
    e250:	1004d63a 	srli	r2,r2,24
    e254:	e0bffe45 	stb	r2,-7(fp)
    e258:	00800074 	movhi	r2,1
    e25c:	108d4404 	addi	r2,r2,13584
    e260:	10801017 	ldw	r2,64(r2)
    e264:	10800058 	cmpnei	r2,r2,1
    e268:	1000041e 	bne	r2,zero,e27c <alt_sys_init+0x53c>
    e26c:	00800074 	movhi	r2,1
    e270:	108d4404 	addi	r2,r2,13584
    e274:	10001315 	stw	zero,76(r2)
    e278:	00000e06 	br	e2b4 <alt_sys_init+0x574>
    e27c:	00800074 	movhi	r2,1
    e280:	108d4404 	addi	r2,r2,13584
    e284:	10801017 	ldw	r2,64(r2)
    e288:	10800098 	cmpnei	r2,r2,2
    e28c:	1000051e 	bne	r2,zero,e2a4 <alt_sys_init+0x564>
    e290:	00800074 	movhi	r2,1
    e294:	108d4404 	addi	r2,r2,13584
    e298:	00c00044 	movi	r3,1
    e29c:	10c01315 	stw	r3,76(r2)
    e2a0:	00000406 	br	e2b4 <alt_sys_init+0x574>
    e2a4:	00800074 	movhi	r2,1
    e2a8:	108d4404 	addi	r2,r2,13584
    e2ac:	00c00084 	movi	r3,2
    e2b0:	10c01315 	stw	r3,76(r2)
    e2b4:	e0bffe03 	ldbu	r2,-8(fp)
    e2b8:	00c00804 	movi	r3,32
    e2bc:	1885c83a 	sub	r2,r3,r2
    e2c0:	00ffffc4 	movi	r3,-1
    e2c4:	1886d83a 	srl	r3,r3,r2
    e2c8:	00800074 	movhi	r2,1
    e2cc:	108d4404 	addi	r2,r2,13584
    e2d0:	10c01415 	stw	r3,80(r2)
    e2d4:	e0fffe03 	ldbu	r3,-8(fp)
    e2d8:	00800074 	movhi	r2,1
    e2dc:	108d4404 	addi	r2,r2,13584
    e2e0:	10801317 	ldw	r2,76(r2)
    e2e4:	1887883a 	add	r3,r3,r2
    e2e8:	00800074 	movhi	r2,1
    e2ec:	108d4404 	addi	r2,r2,13584
    e2f0:	10c01515 	stw	r3,84(r2)
    e2f4:	e0bffe43 	ldbu	r2,-7(fp)
    e2f8:	00c00804 	movi	r3,32
    e2fc:	1885c83a 	sub	r2,r3,r2
    e300:	00ffffc4 	movi	r3,-1
    e304:	1886d83a 	srl	r3,r3,r2
    e308:	00800074 	movhi	r2,1
    e30c:	108d4404 	addi	r2,r2,13584
    e310:	10c01615 	stw	r3,88(r2)
    e314:	01000074 	movhi	r4,1
    e318:	210d4404 	addi	r4,r4,13584
    e31c:	000dcd40 	call	dcd4 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_DMA_CONTROLLER_INIT ( VIDEO_IN_SUBSYSTEM_VIDEO_IN_DMA, Video_In_Subsystem_Video_In_DMA);
    e320:	00800074 	movhi	r2,1
    e324:	108d5b04 	addi	r2,r2,13676
    e328:	10800a17 	ldw	r2,40(r2)
    e32c:	10800017 	ldw	r2,0(r2)
    e330:	1007883a 	mov	r3,r2
    e334:	00800074 	movhi	r2,1
    e338:	108d5b04 	addi	r2,r2,13676
    e33c:	10c00b15 	stw	r3,44(r2)
    e340:	00800074 	movhi	r2,1
    e344:	108d5b04 	addi	r2,r2,13676
    e348:	10800a17 	ldw	r2,40(r2)
    e34c:	10800104 	addi	r2,r2,4
    e350:	10800017 	ldw	r2,0(r2)
    e354:	1007883a 	mov	r3,r2
    e358:	00800074 	movhi	r2,1
    e35c:	108d5b04 	addi	r2,r2,13676
    e360:	10c00c15 	stw	r3,48(r2)
    e364:	00800074 	movhi	r2,1
    e368:	108d5b04 	addi	r2,r2,13676
    e36c:	10800a17 	ldw	r2,40(r2)
    e370:	10800204 	addi	r2,r2,8
    e374:	10800017 	ldw	r2,0(r2)
    e378:	10ffffcc 	andi	r3,r2,65535
    e37c:	00800074 	movhi	r2,1
    e380:	108d5b04 	addi	r2,r2,13676
    e384:	10c01115 	stw	r3,68(r2)
    e388:	00800074 	movhi	r2,1
    e38c:	108d5b04 	addi	r2,r2,13676
    e390:	10800a17 	ldw	r2,40(r2)
    e394:	10800204 	addi	r2,r2,8
    e398:	10800017 	ldw	r2,0(r2)
    e39c:	1006d43a 	srli	r3,r2,16
    e3a0:	00800074 	movhi	r2,1
    e3a4:	108d5b04 	addi	r2,r2,13676
    e3a8:	10c01215 	stw	r3,72(r2)
    e3ac:	00800074 	movhi	r2,1
    e3b0:	108d5b04 	addi	r2,r2,13676
    e3b4:	10800a17 	ldw	r2,40(r2)
    e3b8:	10800304 	addi	r2,r2,12
    e3bc:	10800017 	ldw	r2,0(r2)
    e3c0:	1005d07a 	srai	r2,r2,1
    e3c4:	10c0004c 	andi	r3,r2,1
    e3c8:	00800074 	movhi	r2,1
    e3cc:	108d5b04 	addi	r2,r2,13676
    e3d0:	10c00d15 	stw	r3,52(r2)
    e3d4:	00800074 	movhi	r2,1
    e3d8:	108d5b04 	addi	r2,r2,13676
    e3dc:	10800a17 	ldw	r2,40(r2)
    e3e0:	10800304 	addi	r2,r2,12
    e3e4:	10800017 	ldw	r2,0(r2)
    e3e8:	1005d23a 	srai	r2,r2,8
    e3ec:	108003cc 	andi	r2,r2,15
    e3f0:	10800044 	addi	r2,r2,1
    e3f4:	1007883a 	mov	r3,r2
    e3f8:	00800074 	movhi	r2,1
    e3fc:	108d5b04 	addi	r2,r2,13676
    e400:	10c00e15 	stw	r3,56(r2)
    e404:	00800074 	movhi	r2,1
    e408:	108d5b04 	addi	r2,r2,13676
    e40c:	10800a17 	ldw	r2,40(r2)
    e410:	10800304 	addi	r2,r2,12
    e414:	10800017 	ldw	r2,0(r2)
    e418:	1005d1ba 	srai	r2,r2,6
    e41c:	108000cc 	andi	r2,r2,3
    e420:	10800044 	addi	r2,r2,1
    e424:	1007883a 	mov	r3,r2
    e428:	00800074 	movhi	r2,1
    e42c:	108d5b04 	addi	r2,r2,13676
    e430:	10c00f15 	stw	r3,60(r2)
    e434:	00800074 	movhi	r2,1
    e438:	108d5b04 	addi	r2,r2,13676
    e43c:	10800e17 	ldw	r2,56(r2)
    e440:	1007883a 	mov	r3,r2
    e444:	00800074 	movhi	r2,1
    e448:	108d5b04 	addi	r2,r2,13676
    e44c:	10800f17 	ldw	r2,60(r2)
    e450:	1885383a 	mul	r2,r3,r2
    e454:	e0bffe85 	stb	r2,-6(fp)
    e458:	e0bffe83 	ldbu	r2,-6(fp)
    e45c:	10800268 	cmpgeui	r2,r2,9
    e460:	1000051e 	bne	r2,zero,e478 <alt_sys_init+0x738>
    e464:	00800074 	movhi	r2,1
    e468:	108d5b04 	addi	r2,r2,13676
    e46c:	00c00044 	movi	r3,1
    e470:	10c01015 	stw	r3,64(r2)
    e474:	00000c06 	br	e4a8 <alt_sys_init+0x768>
    e478:	e0bffe83 	ldbu	r2,-6(fp)
    e47c:	10800468 	cmpgeui	r2,r2,17
    e480:	1000051e 	bne	r2,zero,e498 <alt_sys_init+0x758>
    e484:	00800074 	movhi	r2,1
    e488:	108d5b04 	addi	r2,r2,13676
    e48c:	00c00084 	movi	r3,2
    e490:	10c01015 	stw	r3,64(r2)
    e494:	00000406 	br	e4a8 <alt_sys_init+0x768>
    e498:	00800074 	movhi	r2,1
    e49c:	108d5b04 	addi	r2,r2,13676
    e4a0:	00c00104 	movi	r3,4
    e4a4:	10c01015 	stw	r3,64(r2)
    e4a8:	00800074 	movhi	r2,1
    e4ac:	108d5b04 	addi	r2,r2,13676
    e4b0:	10800a17 	ldw	r2,40(r2)
    e4b4:	10800304 	addi	r2,r2,12
    e4b8:	10800017 	ldw	r2,0(r2)
    e4bc:	1005d43a 	srai	r2,r2,16
    e4c0:	e0bffec5 	stb	r2,-5(fp)
    e4c4:	00800074 	movhi	r2,1
    e4c8:	108d5b04 	addi	r2,r2,13676
    e4cc:	10800a17 	ldw	r2,40(r2)
    e4d0:	10800304 	addi	r2,r2,12
    e4d4:	10800017 	ldw	r2,0(r2)
    e4d8:	1004d63a 	srli	r2,r2,24
    e4dc:	e0bfff05 	stb	r2,-4(fp)
    e4e0:	00800074 	movhi	r2,1
    e4e4:	108d5b04 	addi	r2,r2,13676
    e4e8:	10801017 	ldw	r2,64(r2)
    e4ec:	10800058 	cmpnei	r2,r2,1
    e4f0:	1000041e 	bne	r2,zero,e504 <alt_sys_init+0x7c4>
    e4f4:	00800074 	movhi	r2,1
    e4f8:	108d5b04 	addi	r2,r2,13676
    e4fc:	10001315 	stw	zero,76(r2)
    e500:	00000e06 	br	e53c <alt_sys_init+0x7fc>
    e504:	00800074 	movhi	r2,1
    e508:	108d5b04 	addi	r2,r2,13676
    e50c:	10801017 	ldw	r2,64(r2)
    e510:	10800098 	cmpnei	r2,r2,2
    e514:	1000051e 	bne	r2,zero,e52c <alt_sys_init+0x7ec>
    e518:	00800074 	movhi	r2,1
    e51c:	108d5b04 	addi	r2,r2,13676
    e520:	00c00044 	movi	r3,1
    e524:	10c01315 	stw	r3,76(r2)
    e528:	00000406 	br	e53c <alt_sys_init+0x7fc>
    e52c:	00800074 	movhi	r2,1
    e530:	108d5b04 	addi	r2,r2,13676
    e534:	00c00084 	movi	r3,2
    e538:	10c01315 	stw	r3,76(r2)
    e53c:	e0bffec3 	ldbu	r2,-5(fp)
    e540:	00c00804 	movi	r3,32
    e544:	1885c83a 	sub	r2,r3,r2
    e548:	00ffffc4 	movi	r3,-1
    e54c:	1886d83a 	srl	r3,r3,r2
    e550:	00800074 	movhi	r2,1
    e554:	108d5b04 	addi	r2,r2,13676
    e558:	10c01415 	stw	r3,80(r2)
    e55c:	e0fffec3 	ldbu	r3,-5(fp)
    e560:	00800074 	movhi	r2,1
    e564:	108d5b04 	addi	r2,r2,13676
    e568:	10801317 	ldw	r2,76(r2)
    e56c:	1887883a 	add	r3,r3,r2
    e570:	00800074 	movhi	r2,1
    e574:	108d5b04 	addi	r2,r2,13676
    e578:	10c01515 	stw	r3,84(r2)
    e57c:	e0bfff03 	ldbu	r2,-4(fp)
    e580:	00c00804 	movi	r3,32
    e584:	1885c83a 	sub	r2,r3,r2
    e588:	00ffffc4 	movi	r3,-1
    e58c:	1886d83a 	srl	r3,r3,r2
    e590:	00800074 	movhi	r2,1
    e594:	108d5b04 	addi	r2,r2,13676
    e598:	10c01615 	stw	r3,88(r2)
    e59c:	01000074 	movhi	r4,1
    e5a0:	210d5b04 	addi	r4,r4,13676
    e5a4:	000dcd40 	call	dcd4 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_RGB_RESAMPLER_INIT ( VGA_SUBSYSTEM_VGA_PIXEL_RGB_RESAMPLER, VGA_Subsystem_VGA_Pixel_RGB_Resampler);
    e5a8:	00800074 	movhi	r2,1
    e5ac:	108d7204 	addi	r2,r2,13768
    e5b0:	10800a17 	ldw	r2,40(r2)
    e5b4:	10800017 	ldw	r2,0(r2)
    e5b8:	10c003cc 	andi	r3,r2,15
    e5bc:	00800074 	movhi	r2,1
    e5c0:	108d7204 	addi	r2,r2,13768
    e5c4:	10c00b15 	stw	r3,44(r2)
    e5c8:	00800074 	movhi	r2,1
    e5cc:	108d7204 	addi	r2,r2,13768
    e5d0:	10800a17 	ldw	r2,40(r2)
    e5d4:	10800017 	ldw	r2,0(r2)
    e5d8:	1005d13a 	srai	r2,r2,4
    e5dc:	10c0004c 	andi	r3,r2,1
    e5e0:	00800074 	movhi	r2,1
    e5e4:	108d7204 	addi	r2,r2,13768
    e5e8:	10c00c15 	stw	r3,48(r2)
    e5ec:	00800074 	movhi	r2,1
    e5f0:	108d7204 	addi	r2,r2,13768
    e5f4:	10800a17 	ldw	r2,40(r2)
    e5f8:	10800017 	ldw	r2,0(r2)
    e5fc:	1005d17a 	srai	r2,r2,5
    e600:	10c0004c 	andi	r3,r2,1
    e604:	00800074 	movhi	r2,1
    e608:	108d7204 	addi	r2,r2,13768
    e60c:	10c00d15 	stw	r3,52(r2)
    e610:	00800074 	movhi	r2,1
    e614:	108d7204 	addi	r2,r2,13768
    e618:	10800a17 	ldw	r2,40(r2)
    e61c:	10800017 	ldw	r2,0(r2)
    e620:	1005d43a 	srai	r2,r2,16
    e624:	10c003cc 	andi	r3,r2,15
    e628:	00800074 	movhi	r2,1
    e62c:	108d7204 	addi	r2,r2,13768
    e630:	10c00e15 	stw	r3,56(r2)
    e634:	00800074 	movhi	r2,1
    e638:	108d7204 	addi	r2,r2,13768
    e63c:	10800a17 	ldw	r2,40(r2)
    e640:	10800017 	ldw	r2,0(r2)
    e644:	1005d53a 	srai	r2,r2,20
    e648:	10c0004c 	andi	r3,r2,1
    e64c:	00800074 	movhi	r2,1
    e650:	108d7204 	addi	r2,r2,13768
    e654:	10c00f15 	stw	r3,60(r2)
    e658:	00800074 	movhi	r2,1
    e65c:	108d7204 	addi	r2,r2,13768
    e660:	10800a17 	ldw	r2,40(r2)
    e664:	10800017 	ldw	r2,0(r2)
    e668:	1005d57a 	srai	r2,r2,21
    e66c:	10c0004c 	andi	r3,r2,1
    e670:	00800074 	movhi	r2,1
    e674:	108d7204 	addi	r2,r2,13768
    e678:	10c01015 	stw	r3,64(r2)
    e67c:	01000074 	movhi	r4,1
    e680:	210d7204 	addi	r4,r4,13768
    e684:	000dcd40 	call	dcd4 <alt_dev_reg>
    ALTERA_UP_SD_CARD_AVALON_INTERFACE_INIT ( SD_CARD, SD_Card);
    e688:	01000074 	movhi	r4,1
    e68c:	210d8304 	addi	r4,r4,13836
    e690:	000dcd40 	call	dcd4 <alt_dev_reg>
}
    e694:	0001883a 	nop
    e698:	e037883a 	mov	sp,fp
    e69c:	dfc00117 	ldw	ra,4(sp)
    e6a0:	df000017 	ldw	fp,0(sp)
    e6a4:	dec00204 	addi	sp,sp,8
    e6a8:	f800283a 	ret

0000e6ac <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    e6ac:	defffa04 	addi	sp,sp,-24
    e6b0:	dfc00515 	stw	ra,20(sp)
    e6b4:	df000415 	stw	fp,16(sp)
    e6b8:	df000404 	addi	fp,sp,16
    e6bc:	e13ffd15 	stw	r4,-12(fp)
    e6c0:	e17ffe15 	stw	r5,-8(fp)
    e6c4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e6c8:	e0bffd17 	ldw	r2,-12(fp)
    e6cc:	10800017 	ldw	r2,0(r2)
    e6d0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    e6d4:	e0bffc17 	ldw	r2,-16(fp)
    e6d8:	10c00a04 	addi	r3,r2,40
    e6dc:	e0bffd17 	ldw	r2,-12(fp)
    e6e0:	10800217 	ldw	r2,8(r2)
    e6e4:	100f883a 	mov	r7,r2
    e6e8:	e1bfff17 	ldw	r6,-4(fp)
    e6ec:	e17ffe17 	ldw	r5,-8(fp)
    e6f0:	1809883a 	mov	r4,r3
    e6f4:	000eccc0 	call	eccc <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    e6f8:	e037883a 	mov	sp,fp
    e6fc:	dfc00117 	ldw	ra,4(sp)
    e700:	df000017 	ldw	fp,0(sp)
    e704:	dec00204 	addi	sp,sp,8
    e708:	f800283a 	ret

0000e70c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    e70c:	defffa04 	addi	sp,sp,-24
    e710:	dfc00515 	stw	ra,20(sp)
    e714:	df000415 	stw	fp,16(sp)
    e718:	df000404 	addi	fp,sp,16
    e71c:	e13ffd15 	stw	r4,-12(fp)
    e720:	e17ffe15 	stw	r5,-8(fp)
    e724:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e728:	e0bffd17 	ldw	r2,-12(fp)
    e72c:	10800017 	ldw	r2,0(r2)
    e730:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    e734:	e0bffc17 	ldw	r2,-16(fp)
    e738:	10c00a04 	addi	r3,r2,40
    e73c:	e0bffd17 	ldw	r2,-12(fp)
    e740:	10800217 	ldw	r2,8(r2)
    e744:	100f883a 	mov	r7,r2
    e748:	e1bfff17 	ldw	r6,-4(fp)
    e74c:	e17ffe17 	ldw	r5,-8(fp)
    e750:	1809883a 	mov	r4,r3
    e754:	000eee80 	call	eee8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    e758:	e037883a 	mov	sp,fp
    e75c:	dfc00117 	ldw	ra,4(sp)
    e760:	df000017 	ldw	fp,0(sp)
    e764:	dec00204 	addi	sp,sp,8
    e768:	f800283a 	ret

0000e76c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    e76c:	defffc04 	addi	sp,sp,-16
    e770:	dfc00315 	stw	ra,12(sp)
    e774:	df000215 	stw	fp,8(sp)
    e778:	df000204 	addi	fp,sp,8
    e77c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e780:	e0bfff17 	ldw	r2,-4(fp)
    e784:	10800017 	ldw	r2,0(r2)
    e788:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    e78c:	e0bffe17 	ldw	r2,-8(fp)
    e790:	10c00a04 	addi	r3,r2,40
    e794:	e0bfff17 	ldw	r2,-4(fp)
    e798:	10800217 	ldw	r2,8(r2)
    e79c:	100b883a 	mov	r5,r2
    e7a0:	1809883a 	mov	r4,r3
    e7a4:	000eb740 	call	eb74 <altera_avalon_jtag_uart_close>
}
    e7a8:	e037883a 	mov	sp,fp
    e7ac:	dfc00117 	ldw	ra,4(sp)
    e7b0:	df000017 	ldw	fp,0(sp)
    e7b4:	dec00204 	addi	sp,sp,8
    e7b8:	f800283a 	ret

0000e7bc <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    e7bc:	defffa04 	addi	sp,sp,-24
    e7c0:	dfc00515 	stw	ra,20(sp)
    e7c4:	df000415 	stw	fp,16(sp)
    e7c8:	df000404 	addi	fp,sp,16
    e7cc:	e13ffd15 	stw	r4,-12(fp)
    e7d0:	e17ffe15 	stw	r5,-8(fp)
    e7d4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    e7d8:	e0bffd17 	ldw	r2,-12(fp)
    e7dc:	10800017 	ldw	r2,0(r2)
    e7e0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    e7e4:	e0bffc17 	ldw	r2,-16(fp)
    e7e8:	10800a04 	addi	r2,r2,40
    e7ec:	e1bfff17 	ldw	r6,-4(fp)
    e7f0:	e17ffe17 	ldw	r5,-8(fp)
    e7f4:	1009883a 	mov	r4,r2
    e7f8:	000ebdc0 	call	ebdc <altera_avalon_jtag_uart_ioctl>
}
    e7fc:	e037883a 	mov	sp,fp
    e800:	dfc00117 	ldw	ra,4(sp)
    e804:	df000017 	ldw	fp,0(sp)
    e808:	dec00204 	addi	sp,sp,8
    e80c:	f800283a 	ret

0000e810 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    e810:	defffb04 	addi	sp,sp,-20
    e814:	dfc00415 	stw	ra,16(sp)
    e818:	df000315 	stw	fp,12(sp)
    e81c:	df000304 	addi	fp,sp,12
    e820:	e13ffd15 	stw	r4,-12(fp)
    e824:	e17ffe15 	stw	r5,-8(fp)
    e828:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e82c:	e0bffd17 	ldw	r2,-12(fp)
    e830:	00c00044 	movi	r3,1
    e834:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    e838:	e0bffd17 	ldw	r2,-12(fp)
    e83c:	10800017 	ldw	r2,0(r2)
    e840:	10800104 	addi	r2,r2,4
    e844:	1007883a 	mov	r3,r2
    e848:	e0bffd17 	ldw	r2,-12(fp)
    e84c:	10800817 	ldw	r2,32(r2)
    e850:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
    e854:	e0bfff17 	ldw	r2,-4(fp)
    e858:	01800074 	movhi	r6,1
    e85c:	31ba3104 	addi	r6,r6,-5948
    e860:	e17ffd17 	ldw	r5,-12(fp)
    e864:	1009883a 	mov	r4,r2
    e868:	00109ac0 	call	109ac <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    e86c:	e0bffd17 	ldw	r2,-12(fp)
    e870:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    e874:	e0bffd17 	ldw	r2,-12(fp)
    e878:	10800204 	addi	r2,r2,8
    e87c:	d0e7a217 	ldw	r3,-24952(gp)
    e880:	e1fffd17 	ldw	r7,-12(fp)
    e884:	01800074 	movhi	r6,1
    e888:	31bab504 	addi	r6,r6,-5420
    e88c:	180b883a 	mov	r5,r3
    e890:	1009883a 	mov	r4,r2
    e894:	00104bc0 	call	104bc <alt_alarm_start>
    e898:	1000040e 	bge	r2,zero,e8ac <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    e89c:	e0fffd17 	ldw	r3,-12(fp)
    e8a0:	00a00034 	movhi	r2,32768
    e8a4:	10bfffc4 	addi	r2,r2,-1
    e8a8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    e8ac:	0001883a 	nop
    e8b0:	e037883a 	mov	sp,fp
    e8b4:	dfc00117 	ldw	ra,4(sp)
    e8b8:	df000017 	ldw	fp,0(sp)
    e8bc:	dec00204 	addi	sp,sp,8
    e8c0:	f800283a 	ret

0000e8c4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    e8c4:	defff704 	addi	sp,sp,-36
    e8c8:	df000815 	stw	fp,32(sp)
    e8cc:	df000804 	addi	fp,sp,32
    e8d0:	e13ffe15 	stw	r4,-8(fp)
    e8d4:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    e8d8:	e0bffe17 	ldw	r2,-8(fp)
    e8dc:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
    e8e0:	e0bffa17 	ldw	r2,-24(fp)
    e8e4:	10800017 	ldw	r2,0(r2)
    e8e8:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e8ec:	e0bffb17 	ldw	r2,-20(fp)
    e8f0:	10800104 	addi	r2,r2,4
    e8f4:	10800037 	ldwio	r2,0(r2)
    e8f8:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    e8fc:	e0bffc17 	ldw	r2,-16(fp)
    e900:	1080c00c 	andi	r2,r2,768
    e904:	10006d26 	beq	r2,zero,eabc <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    e908:	e0bffc17 	ldw	r2,-16(fp)
    e90c:	1080400c 	andi	r2,r2,256
    e910:	10003526 	beq	r2,zero,e9e8 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    e914:	00800074 	movhi	r2,1
    e918:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e91c:	e0bffa17 	ldw	r2,-24(fp)
    e920:	10800a17 	ldw	r2,40(r2)
    e924:	10800044 	addi	r2,r2,1
    e928:	1081ffcc 	andi	r2,r2,2047
    e92c:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
    e930:	e0bffa17 	ldw	r2,-24(fp)
    e934:	10c00b17 	ldw	r3,44(r2)
    e938:	e0bffd17 	ldw	r2,-12(fp)
    e93c:	18801526 	beq	r3,r2,e994 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    e940:	e0bffb17 	ldw	r2,-20(fp)
    e944:	10800037 	ldwio	r2,0(r2)
    e948:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    e94c:	e0bff817 	ldw	r2,-32(fp)
    e950:	10a0000c 	andi	r2,r2,32768
    e954:	10001126 	beq	r2,zero,e99c <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    e958:	e0bffa17 	ldw	r2,-24(fp)
    e95c:	10800a17 	ldw	r2,40(r2)
    e960:	e0fff817 	ldw	r3,-32(fp)
    e964:	1809883a 	mov	r4,r3
    e968:	e0fffa17 	ldw	r3,-24(fp)
    e96c:	1885883a 	add	r2,r3,r2
    e970:	10800e04 	addi	r2,r2,56
    e974:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e978:	e0bffa17 	ldw	r2,-24(fp)
    e97c:	10800a17 	ldw	r2,40(r2)
    e980:	10800044 	addi	r2,r2,1
    e984:	10c1ffcc 	andi	r3,r2,2047
    e988:	e0bffa17 	ldw	r2,-24(fp)
    e98c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    e990:	003fe206 	br	e91c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700e91c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
    e994:	0001883a 	nop
    e998:	00000106 	br	e9a0 <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
    e99c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e9a0:	e0bff817 	ldw	r2,-32(fp)
    e9a4:	10bfffec 	andhi	r2,r2,65535
    e9a8:	10000f26 	beq	r2,zero,e9e8 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e9ac:	e0bffa17 	ldw	r2,-24(fp)
    e9b0:	10c00817 	ldw	r3,32(r2)
    e9b4:	00bfff84 	movi	r2,-2
    e9b8:	1886703a 	and	r3,r3,r2
    e9bc:	e0bffa17 	ldw	r2,-24(fp)
    e9c0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e9c4:	e0bffb17 	ldw	r2,-20(fp)
    e9c8:	10800104 	addi	r2,r2,4
    e9cc:	1007883a 	mov	r3,r2
    e9d0:	e0bffa17 	ldw	r2,-24(fp)
    e9d4:	10800817 	ldw	r2,32(r2)
    e9d8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e9dc:	e0bffb17 	ldw	r2,-20(fp)
    e9e0:	10800104 	addi	r2,r2,4
    e9e4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e9e8:	e0bffc17 	ldw	r2,-16(fp)
    e9ec:	1080800c 	andi	r2,r2,512
    e9f0:	103fbe26 	beq	r2,zero,e8ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700e8ec>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e9f4:	e0bffc17 	ldw	r2,-16(fp)
    e9f8:	1004d43a 	srli	r2,r2,16
    e9fc:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    ea00:	00001406 	br	ea54 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    ea04:	e0bffb17 	ldw	r2,-20(fp)
    ea08:	e0fffa17 	ldw	r3,-24(fp)
    ea0c:	18c00d17 	ldw	r3,52(r3)
    ea10:	e13ffa17 	ldw	r4,-24(fp)
    ea14:	20c7883a 	add	r3,r4,r3
    ea18:	18c20e04 	addi	r3,r3,2104
    ea1c:	18c00003 	ldbu	r3,0(r3)
    ea20:	18c03fcc 	andi	r3,r3,255
    ea24:	18c0201c 	xori	r3,r3,128
    ea28:	18ffe004 	addi	r3,r3,-128
    ea2c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ea30:	e0bffa17 	ldw	r2,-24(fp)
    ea34:	10800d17 	ldw	r2,52(r2)
    ea38:	10800044 	addi	r2,r2,1
    ea3c:	10c1ffcc 	andi	r3,r2,2047
    ea40:	e0bffa17 	ldw	r2,-24(fp)
    ea44:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    ea48:	e0bff917 	ldw	r2,-28(fp)
    ea4c:	10bfffc4 	addi	r2,r2,-1
    ea50:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    ea54:	e0bff917 	ldw	r2,-28(fp)
    ea58:	10000526 	beq	r2,zero,ea70 <altera_avalon_jtag_uart_irq+0x1ac>
    ea5c:	e0bffa17 	ldw	r2,-24(fp)
    ea60:	10c00d17 	ldw	r3,52(r2)
    ea64:	e0bffa17 	ldw	r2,-24(fp)
    ea68:	10800c17 	ldw	r2,48(r2)
    ea6c:	18bfe51e 	bne	r3,r2,ea04 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ea04>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    ea70:	e0bff917 	ldw	r2,-28(fp)
    ea74:	103f9d26 	beq	r2,zero,e8ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700e8ec>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    ea78:	e0bffa17 	ldw	r2,-24(fp)
    ea7c:	10c00817 	ldw	r3,32(r2)
    ea80:	00bfff44 	movi	r2,-3
    ea84:	1886703a 	and	r3,r3,r2
    ea88:	e0bffa17 	ldw	r2,-24(fp)
    ea8c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ea90:	e0bffa17 	ldw	r2,-24(fp)
    ea94:	10800017 	ldw	r2,0(r2)
    ea98:	10800104 	addi	r2,r2,4
    ea9c:	1007883a 	mov	r3,r2
    eaa0:	e0bffa17 	ldw	r2,-24(fp)
    eaa4:	10800817 	ldw	r2,32(r2)
    eaa8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    eaac:	e0bffb17 	ldw	r2,-20(fp)
    eab0:	10800104 	addi	r2,r2,4
    eab4:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    eab8:	003f8c06 	br	e8ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700e8ec>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
    eabc:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
    eac0:	0001883a 	nop
    eac4:	e037883a 	mov	sp,fp
    eac8:	df000017 	ldw	fp,0(sp)
    eacc:	dec00104 	addi	sp,sp,4
    ead0:	f800283a 	ret

0000ead4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    ead4:	defff804 	addi	sp,sp,-32
    ead8:	df000715 	stw	fp,28(sp)
    eadc:	df000704 	addi	fp,sp,28
    eae0:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    eae4:	e0bffb17 	ldw	r2,-20(fp)
    eae8:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    eaec:	e0bff917 	ldw	r2,-28(fp)
    eaf0:	10800017 	ldw	r2,0(r2)
    eaf4:	10800104 	addi	r2,r2,4
    eaf8:	10800037 	ldwio	r2,0(r2)
    eafc:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    eb00:	e0bffa17 	ldw	r2,-24(fp)
    eb04:	1081000c 	andi	r2,r2,1024
    eb08:	10000b26 	beq	r2,zero,eb38 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    eb0c:	e0bff917 	ldw	r2,-28(fp)
    eb10:	10800017 	ldw	r2,0(r2)
    eb14:	10800104 	addi	r2,r2,4
    eb18:	1007883a 	mov	r3,r2
    eb1c:	e0bff917 	ldw	r2,-28(fp)
    eb20:	10800817 	ldw	r2,32(r2)
    eb24:	10810014 	ori	r2,r2,1024
    eb28:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    eb2c:	e0bff917 	ldw	r2,-28(fp)
    eb30:	10000915 	stw	zero,36(r2)
    eb34:	00000a06 	br	eb60 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    eb38:	e0bff917 	ldw	r2,-28(fp)
    eb3c:	10c00917 	ldw	r3,36(r2)
    eb40:	00a00034 	movhi	r2,32768
    eb44:	10bfff04 	addi	r2,r2,-4
    eb48:	10c00536 	bltu	r2,r3,eb60 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    eb4c:	e0bff917 	ldw	r2,-28(fp)
    eb50:	10800917 	ldw	r2,36(r2)
    eb54:	10c00044 	addi	r3,r2,1
    eb58:	e0bff917 	ldw	r2,-28(fp)
    eb5c:	10c00915 	stw	r3,36(r2)
    eb60:	d0a7a217 	ldw	r2,-24952(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    eb64:	e037883a 	mov	sp,fp
    eb68:	df000017 	ldw	fp,0(sp)
    eb6c:	dec00104 	addi	sp,sp,4
    eb70:	f800283a 	ret

0000eb74 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    eb74:	defffd04 	addi	sp,sp,-12
    eb78:	df000215 	stw	fp,8(sp)
    eb7c:	df000204 	addi	fp,sp,8
    eb80:	e13ffe15 	stw	r4,-8(fp)
    eb84:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    eb88:	00000506 	br	eba0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    eb8c:	e0bfff17 	ldw	r2,-4(fp)
    eb90:	1090000c 	andi	r2,r2,16384
    eb94:	10000226 	beq	r2,zero,eba0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    eb98:	00bffd44 	movi	r2,-11
    eb9c:	00000b06 	br	ebcc <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    eba0:	e0bffe17 	ldw	r2,-8(fp)
    eba4:	10c00d17 	ldw	r3,52(r2)
    eba8:	e0bffe17 	ldw	r2,-8(fp)
    ebac:	10800c17 	ldw	r2,48(r2)
    ebb0:	18800526 	beq	r3,r2,ebc8 <altera_avalon_jtag_uart_close+0x54>
    ebb4:	e0bffe17 	ldw	r2,-8(fp)
    ebb8:	10c00917 	ldw	r3,36(r2)
    ebbc:	e0bffe17 	ldw	r2,-8(fp)
    ebc0:	10800117 	ldw	r2,4(r2)
    ebc4:	18bff136 	bltu	r3,r2,eb8c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700eb8c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    ebc8:	0005883a 	mov	r2,zero
}
    ebcc:	e037883a 	mov	sp,fp
    ebd0:	df000017 	ldw	fp,0(sp)
    ebd4:	dec00104 	addi	sp,sp,4
    ebd8:	f800283a 	ret

0000ebdc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    ebdc:	defffa04 	addi	sp,sp,-24
    ebe0:	df000515 	stw	fp,20(sp)
    ebe4:	df000504 	addi	fp,sp,20
    ebe8:	e13ffd15 	stw	r4,-12(fp)
    ebec:	e17ffe15 	stw	r5,-8(fp)
    ebf0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    ebf4:	00bff9c4 	movi	r2,-25
    ebf8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    ebfc:	e0bffe17 	ldw	r2,-8(fp)
    ec00:	10da8060 	cmpeqi	r3,r2,27137
    ec04:	1800031e 	bne	r3,zero,ec14 <altera_avalon_jtag_uart_ioctl+0x38>
    ec08:	109a80a0 	cmpeqi	r2,r2,27138
    ec0c:	1000181e 	bne	r2,zero,ec70 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
    ec10:	00002906 	br	ecb8 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    ec14:	e0bffd17 	ldw	r2,-12(fp)
    ec18:	10c00117 	ldw	r3,4(r2)
    ec1c:	00a00034 	movhi	r2,32768
    ec20:	10bfffc4 	addi	r2,r2,-1
    ec24:	18802126 	beq	r3,r2,ecac <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
    ec28:	e0bfff17 	ldw	r2,-4(fp)
    ec2c:	10800017 	ldw	r2,0(r2)
    ec30:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    ec34:	e0bffc17 	ldw	r2,-16(fp)
    ec38:	10800090 	cmplti	r2,r2,2
    ec3c:	1000061e 	bne	r2,zero,ec58 <altera_avalon_jtag_uart_ioctl+0x7c>
    ec40:	e0fffc17 	ldw	r3,-16(fp)
    ec44:	00a00034 	movhi	r2,32768
    ec48:	10bfffc4 	addi	r2,r2,-1
    ec4c:	18800226 	beq	r3,r2,ec58 <altera_avalon_jtag_uart_ioctl+0x7c>
    ec50:	e0bffc17 	ldw	r2,-16(fp)
    ec54:	00000206 	br	ec60 <altera_avalon_jtag_uart_ioctl+0x84>
    ec58:	00a00034 	movhi	r2,32768
    ec5c:	10bfff84 	addi	r2,r2,-2
    ec60:	e0fffd17 	ldw	r3,-12(fp)
    ec64:	18800115 	stw	r2,4(r3)
      rc = 0;
    ec68:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    ec6c:	00000f06 	br	ecac <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    ec70:	e0bffd17 	ldw	r2,-12(fp)
    ec74:	10c00117 	ldw	r3,4(r2)
    ec78:	00a00034 	movhi	r2,32768
    ec7c:	10bfffc4 	addi	r2,r2,-1
    ec80:	18800c26 	beq	r3,r2,ecb4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    ec84:	e0bffd17 	ldw	r2,-12(fp)
    ec88:	10c00917 	ldw	r3,36(r2)
    ec8c:	e0bffd17 	ldw	r2,-12(fp)
    ec90:	10800117 	ldw	r2,4(r2)
    ec94:	1885803a 	cmpltu	r2,r3,r2
    ec98:	10c03fcc 	andi	r3,r2,255
    ec9c:	e0bfff17 	ldw	r2,-4(fp)
    eca0:	10c00015 	stw	r3,0(r2)
      rc = 0;
    eca4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    eca8:	00000206 	br	ecb4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
    ecac:	0001883a 	nop
    ecb0:	00000106 	br	ecb8 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
    ecb4:	0001883a 	nop

  default:
    break;
  }

  return rc;
    ecb8:	e0bffb17 	ldw	r2,-20(fp)
}
    ecbc:	e037883a 	mov	sp,fp
    ecc0:	df000017 	ldw	fp,0(sp)
    ecc4:	dec00104 	addi	sp,sp,4
    ecc8:	f800283a 	ret

0000eccc <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    eccc:	defff304 	addi	sp,sp,-52
    ecd0:	dfc00c15 	stw	ra,48(sp)
    ecd4:	df000b15 	stw	fp,44(sp)
    ecd8:	df000b04 	addi	fp,sp,44
    ecdc:	e13ffc15 	stw	r4,-16(fp)
    ece0:	e17ffd15 	stw	r5,-12(fp)
    ece4:	e1bffe15 	stw	r6,-8(fp)
    ece8:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    ecec:	e0bffd17 	ldw	r2,-12(fp)
    ecf0:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    ecf4:	00004706 	br	ee14 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    ecf8:	e0bffc17 	ldw	r2,-16(fp)
    ecfc:	10800a17 	ldw	r2,40(r2)
    ed00:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    ed04:	e0bffc17 	ldw	r2,-16(fp)
    ed08:	10800b17 	ldw	r2,44(r2)
    ed0c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    ed10:	e0fff717 	ldw	r3,-36(fp)
    ed14:	e0bff817 	ldw	r2,-32(fp)
    ed18:	18800536 	bltu	r3,r2,ed30 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    ed1c:	e0fff717 	ldw	r3,-36(fp)
    ed20:	e0bff817 	ldw	r2,-32(fp)
    ed24:	1885c83a 	sub	r2,r3,r2
    ed28:	e0bff615 	stw	r2,-40(fp)
    ed2c:	00000406 	br	ed40 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    ed30:	00c20004 	movi	r3,2048
    ed34:	e0bff817 	ldw	r2,-32(fp)
    ed38:	1885c83a 	sub	r2,r3,r2
    ed3c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    ed40:	e0bff617 	ldw	r2,-40(fp)
    ed44:	10001e26 	beq	r2,zero,edc0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    ed48:	e0fffe17 	ldw	r3,-8(fp)
    ed4c:	e0bff617 	ldw	r2,-40(fp)
    ed50:	1880022e 	bgeu	r3,r2,ed5c <altera_avalon_jtag_uart_read+0x90>
        n = space;
    ed54:	e0bffe17 	ldw	r2,-8(fp)
    ed58:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    ed5c:	e0bffc17 	ldw	r2,-16(fp)
    ed60:	10c00e04 	addi	r3,r2,56
    ed64:	e0bff817 	ldw	r2,-32(fp)
    ed68:	1885883a 	add	r2,r3,r2
    ed6c:	e1bff617 	ldw	r6,-40(fp)
    ed70:	100b883a 	mov	r5,r2
    ed74:	e13ff517 	ldw	r4,-44(fp)
    ed78:	0005cd40 	call	5cd4 <memcpy>
      ptr   += n;
    ed7c:	e0fff517 	ldw	r3,-44(fp)
    ed80:	e0bff617 	ldw	r2,-40(fp)
    ed84:	1885883a 	add	r2,r3,r2
    ed88:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    ed8c:	e0fffe17 	ldw	r3,-8(fp)
    ed90:	e0bff617 	ldw	r2,-40(fp)
    ed94:	1885c83a 	sub	r2,r3,r2
    ed98:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ed9c:	e0fff817 	ldw	r3,-32(fp)
    eda0:	e0bff617 	ldw	r2,-40(fp)
    eda4:	1885883a 	add	r2,r3,r2
    eda8:	10c1ffcc 	andi	r3,r2,2047
    edac:	e0bffc17 	ldw	r2,-16(fp)
    edb0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    edb4:	e0bffe17 	ldw	r2,-8(fp)
    edb8:	00bfcf16 	blt	zero,r2,ecf8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ecf8>
    edbc:	00000106 	br	edc4 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
    edc0:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
    edc4:	e0fff517 	ldw	r3,-44(fp)
    edc8:	e0bffd17 	ldw	r2,-12(fp)
    edcc:	1880141e 	bne	r3,r2,ee20 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    edd0:	e0bfff17 	ldw	r2,-4(fp)
    edd4:	1090000c 	andi	r2,r2,16384
    edd8:	1000131e 	bne	r2,zero,ee28 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    eddc:	0001883a 	nop
    ede0:	e0bffc17 	ldw	r2,-16(fp)
    ede4:	10c00a17 	ldw	r3,40(r2)
    ede8:	e0bff717 	ldw	r2,-36(fp)
    edec:	1880051e 	bne	r3,r2,ee04 <altera_avalon_jtag_uart_read+0x138>
    edf0:	e0bffc17 	ldw	r2,-16(fp)
    edf4:	10c00917 	ldw	r3,36(r2)
    edf8:	e0bffc17 	ldw	r2,-16(fp)
    edfc:	10800117 	ldw	r2,4(r2)
    ee00:	18bff736 	bltu	r3,r2,ede0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ede0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    ee04:	e0bffc17 	ldw	r2,-16(fp)
    ee08:	10c00a17 	ldw	r3,40(r2)
    ee0c:	e0bff717 	ldw	r2,-36(fp)
    ee10:	18800726 	beq	r3,r2,ee30 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    ee14:	e0bffe17 	ldw	r2,-8(fp)
    ee18:	00bfb716 	blt	zero,r2,ecf8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ecf8>
    ee1c:	00000506 	br	ee34 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
    ee20:	0001883a 	nop
    ee24:	00000306 	br	ee34 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
    ee28:	0001883a 	nop
    ee2c:	00000106 	br	ee34 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
    ee30:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    ee34:	e0fff517 	ldw	r3,-44(fp)
    ee38:	e0bffd17 	ldw	r2,-12(fp)
    ee3c:	18801826 	beq	r3,r2,eea0 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ee40:	0005303a 	rdctl	r2,status
    ee44:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ee48:	e0fffb17 	ldw	r3,-20(fp)
    ee4c:	00bfff84 	movi	r2,-2
    ee50:	1884703a 	and	r2,r3,r2
    ee54:	1001703a 	wrctl	status,r2
  
  return context;
    ee58:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    ee5c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    ee60:	e0bffc17 	ldw	r2,-16(fp)
    ee64:	10800817 	ldw	r2,32(r2)
    ee68:	10c00054 	ori	r3,r2,1
    ee6c:	e0bffc17 	ldw	r2,-16(fp)
    ee70:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ee74:	e0bffc17 	ldw	r2,-16(fp)
    ee78:	10800017 	ldw	r2,0(r2)
    ee7c:	10800104 	addi	r2,r2,4
    ee80:	1007883a 	mov	r3,r2
    ee84:	e0bffc17 	ldw	r2,-16(fp)
    ee88:	10800817 	ldw	r2,32(r2)
    ee8c:	18800035 	stwio	r2,0(r3)
    ee90:	e0bffa17 	ldw	r2,-24(fp)
    ee94:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ee98:	e0bff917 	ldw	r2,-28(fp)
    ee9c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    eea0:	e0fff517 	ldw	r3,-44(fp)
    eea4:	e0bffd17 	ldw	r2,-12(fp)
    eea8:	18800426 	beq	r3,r2,eebc <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    eeac:	e0fff517 	ldw	r3,-44(fp)
    eeb0:	e0bffd17 	ldw	r2,-12(fp)
    eeb4:	1885c83a 	sub	r2,r3,r2
    eeb8:	00000606 	br	eed4 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    eebc:	e0bfff17 	ldw	r2,-4(fp)
    eec0:	1090000c 	andi	r2,r2,16384
    eec4:	10000226 	beq	r2,zero,eed0 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    eec8:	00bffd44 	movi	r2,-11
    eecc:	00000106 	br	eed4 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    eed0:	00bffec4 	movi	r2,-5
}
    eed4:	e037883a 	mov	sp,fp
    eed8:	dfc00117 	ldw	ra,4(sp)
    eedc:	df000017 	ldw	fp,0(sp)
    eee0:	dec00204 	addi	sp,sp,8
    eee4:	f800283a 	ret

0000eee8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    eee8:	defff304 	addi	sp,sp,-52
    eeec:	dfc00c15 	stw	ra,48(sp)
    eef0:	df000b15 	stw	fp,44(sp)
    eef4:	df000b04 	addi	fp,sp,44
    eef8:	e13ffc15 	stw	r4,-16(fp)
    eefc:	e17ffd15 	stw	r5,-12(fp)
    ef00:	e1bffe15 	stw	r6,-8(fp)
    ef04:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    ef08:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    ef0c:	e0bffd17 	ldw	r2,-12(fp)
    ef10:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    ef14:	00003706 	br	eff4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    ef18:	e0bffc17 	ldw	r2,-16(fp)
    ef1c:	10800c17 	ldw	r2,48(r2)
    ef20:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
    ef24:	e0bffc17 	ldw	r2,-16(fp)
    ef28:	10800d17 	ldw	r2,52(r2)
    ef2c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    ef30:	e0fff917 	ldw	r3,-28(fp)
    ef34:	e0bff517 	ldw	r2,-44(fp)
    ef38:	1880062e 	bgeu	r3,r2,ef54 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    ef3c:	e0fff517 	ldw	r3,-44(fp)
    ef40:	e0bff917 	ldw	r2,-28(fp)
    ef44:	1885c83a 	sub	r2,r3,r2
    ef48:	10bfffc4 	addi	r2,r2,-1
    ef4c:	e0bff615 	stw	r2,-40(fp)
    ef50:	00000b06 	br	ef80 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    ef54:	e0bff517 	ldw	r2,-44(fp)
    ef58:	10000526 	beq	r2,zero,ef70 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    ef5c:	00c20004 	movi	r3,2048
    ef60:	e0bff917 	ldw	r2,-28(fp)
    ef64:	1885c83a 	sub	r2,r3,r2
    ef68:	e0bff615 	stw	r2,-40(fp)
    ef6c:	00000406 	br	ef80 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    ef70:	00c1ffc4 	movi	r3,2047
    ef74:	e0bff917 	ldw	r2,-28(fp)
    ef78:	1885c83a 	sub	r2,r3,r2
    ef7c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    ef80:	e0bff617 	ldw	r2,-40(fp)
    ef84:	10001e26 	beq	r2,zero,f000 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    ef88:	e0fffe17 	ldw	r3,-8(fp)
    ef8c:	e0bff617 	ldw	r2,-40(fp)
    ef90:	1880022e 	bgeu	r3,r2,ef9c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    ef94:	e0bffe17 	ldw	r2,-8(fp)
    ef98:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    ef9c:	e0bffc17 	ldw	r2,-16(fp)
    efa0:	10c20e04 	addi	r3,r2,2104
    efa4:	e0bff917 	ldw	r2,-28(fp)
    efa8:	1885883a 	add	r2,r3,r2
    efac:	e1bff617 	ldw	r6,-40(fp)
    efb0:	e17ffd17 	ldw	r5,-12(fp)
    efb4:	1009883a 	mov	r4,r2
    efb8:	0005cd40 	call	5cd4 <memcpy>
      ptr   += n;
    efbc:	e0fffd17 	ldw	r3,-12(fp)
    efc0:	e0bff617 	ldw	r2,-40(fp)
    efc4:	1885883a 	add	r2,r3,r2
    efc8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    efcc:	e0fffe17 	ldw	r3,-8(fp)
    efd0:	e0bff617 	ldw	r2,-40(fp)
    efd4:	1885c83a 	sub	r2,r3,r2
    efd8:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    efdc:	e0fff917 	ldw	r3,-28(fp)
    efe0:	e0bff617 	ldw	r2,-40(fp)
    efe4:	1885883a 	add	r2,r3,r2
    efe8:	10c1ffcc 	andi	r3,r2,2047
    efec:	e0bffc17 	ldw	r2,-16(fp)
    eff0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    eff4:	e0bffe17 	ldw	r2,-8(fp)
    eff8:	00bfc716 	blt	zero,r2,ef18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ef18>
    effc:	00000106 	br	f004 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
    f000:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f004:	0005303a 	rdctl	r2,status
    f008:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f00c:	e0fffb17 	ldw	r3,-20(fp)
    f010:	00bfff84 	movi	r2,-2
    f014:	1884703a 	and	r2,r3,r2
    f018:	1001703a 	wrctl	status,r2
  
  return context;
    f01c:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    f020:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    f024:	e0bffc17 	ldw	r2,-16(fp)
    f028:	10800817 	ldw	r2,32(r2)
    f02c:	10c00094 	ori	r3,r2,2
    f030:	e0bffc17 	ldw	r2,-16(fp)
    f034:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    f038:	e0bffc17 	ldw	r2,-16(fp)
    f03c:	10800017 	ldw	r2,0(r2)
    f040:	10800104 	addi	r2,r2,4
    f044:	1007883a 	mov	r3,r2
    f048:	e0bffc17 	ldw	r2,-16(fp)
    f04c:	10800817 	ldw	r2,32(r2)
    f050:	18800035 	stwio	r2,0(r3)
    f054:	e0bffa17 	ldw	r2,-24(fp)
    f058:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f05c:	e0bff817 	ldw	r2,-32(fp)
    f060:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    f064:	e0bffe17 	ldw	r2,-8(fp)
    f068:	0080100e 	bge	zero,r2,f0ac <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    f06c:	e0bfff17 	ldw	r2,-4(fp)
    f070:	1090000c 	andi	r2,r2,16384
    f074:	1000101e 	bne	r2,zero,f0b8 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    f078:	0001883a 	nop
    f07c:	e0bffc17 	ldw	r2,-16(fp)
    f080:	10c00d17 	ldw	r3,52(r2)
    f084:	e0bff517 	ldw	r2,-44(fp)
    f088:	1880051e 	bne	r3,r2,f0a0 <altera_avalon_jtag_uart_write+0x1b8>
    f08c:	e0bffc17 	ldw	r2,-16(fp)
    f090:	10c00917 	ldw	r3,36(r2)
    f094:	e0bffc17 	ldw	r2,-16(fp)
    f098:	10800117 	ldw	r2,4(r2)
    f09c:	18bff736 	bltu	r3,r2,f07c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f07c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    f0a0:	e0bffc17 	ldw	r2,-16(fp)
    f0a4:	10800917 	ldw	r2,36(r2)
    f0a8:	1000051e 	bne	r2,zero,f0c0 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    f0ac:	e0bffe17 	ldw	r2,-8(fp)
    f0b0:	00bfd016 	blt	zero,r2,eff4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700eff4>
    f0b4:	00000306 	br	f0c4 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
    f0b8:	0001883a 	nop
    f0bc:	00000106 	br	f0c4 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
    f0c0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    f0c4:	e0fffd17 	ldw	r3,-12(fp)
    f0c8:	e0bff717 	ldw	r2,-36(fp)
    f0cc:	18800426 	beq	r3,r2,f0e0 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    f0d0:	e0fffd17 	ldw	r3,-12(fp)
    f0d4:	e0bff717 	ldw	r2,-36(fp)
    f0d8:	1885c83a 	sub	r2,r3,r2
    f0dc:	00000606 	br	f0f8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    f0e0:	e0bfff17 	ldw	r2,-4(fp)
    f0e4:	1090000c 	andi	r2,r2,16384
    f0e8:	10000226 	beq	r2,zero,f0f4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    f0ec:	00bffd44 	movi	r2,-11
    f0f0:	00000106 	br	f0f8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    f0f4:	00bffec4 	movi	r2,-5
}
    f0f8:	e037883a 	mov	sp,fp
    f0fc:	dfc00117 	ldw	ra,4(sp)
    f100:	df000017 	ldw	fp,0(sp)
    f104:	dec00204 	addi	sp,sp,8
    f108:	f800283a 	ret

0000f10c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
    f10c:	defff904 	addi	sp,sp,-28
    f110:	dfc00615 	stw	ra,24(sp)
    f114:	df000515 	stw	fp,20(sp)
    f118:	df000504 	addi	fp,sp,20
    f11c:	e13ffe15 	stw	r4,-8(fp)
    f120:	e17fff15 	stw	r5,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
    f124:	0007883a 	mov	r3,zero
    f128:	e0bffe17 	ldw	r2,-8(fp)
    f12c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
    f130:	e0bffe17 	ldw	r2,-8(fp)
    f134:	10800104 	addi	r2,r2,4
    f138:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f13c:	0005303a 	rdctl	r2,status
    f140:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f144:	e0fffc17 	ldw	r3,-16(fp)
    f148:	00bfff84 	movi	r2,-2
    f14c:	1884703a 	and	r2,r3,r2
    f150:	1001703a 	wrctl	status,r2
  
  return context;
    f154:	e0bffc17 	ldw	r2,-16(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
    f158:	e0bffb15 	stw	r2,-20(fp)
  alt_tick ();
    f15c:	000da980 	call	da98 <alt_tick>
    f160:	e0bffb17 	ldw	r2,-20(fp)
    f164:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f168:	e0bffd17 	ldw	r2,-12(fp)
    f16c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
    f170:	0001883a 	nop
    f174:	e037883a 	mov	sp,fp
    f178:	dfc00117 	ldw	ra,4(sp)
    f17c:	df000017 	ldw	fp,0(sp)
    f180:	dec00204 	addi	sp,sp,8
    f184:	f800283a 	ret

0000f188 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
    f188:	defff904 	addi	sp,sp,-28
    f18c:	dfc00615 	stw	ra,24(sp)
    f190:	df000515 	stw	fp,20(sp)
    f194:	df000504 	addi	fp,sp,20
    f198:	e13ffc15 	stw	r4,-16(fp)
    f19c:	e17ffd15 	stw	r5,-12(fp)
    f1a0:	e1bffe15 	stw	r6,-8(fp)
    f1a4:	e1ffff15 	stw	r7,-4(fp)
    f1a8:	e0bfff17 	ldw	r2,-4(fp)
    f1ac:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
    f1b0:	d0a7a217 	ldw	r2,-24952(gp)
    f1b4:	1000021e 	bne	r2,zero,f1c0 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
    f1b8:	e0bffb17 	ldw	r2,-20(fp)
    f1bc:	d0a7a215 	stw	r2,-24952(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
    f1c0:	e0bffc17 	ldw	r2,-16(fp)
    f1c4:	10800104 	addi	r2,r2,4
    f1c8:	00c001c4 	movi	r3,7
    f1cc:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
    f1d0:	01800074 	movhi	r6,1
    f1d4:	31bc4304 	addi	r6,r6,-3828
    f1d8:	e17ffc17 	ldw	r5,-16(fp)
    f1dc:	e13ffe17 	ldw	r4,-8(fp)
    f1e0:	00109ac0 	call	109ac <alt_irq_register>
#endif  
}
    f1e4:	0001883a 	nop
    f1e8:	e037883a 	mov	sp,fp
    f1ec:	dfc00117 	ldw	ra,4(sp)
    f1f0:	df000017 	ldw	fp,0(sp)
    f1f4:	dec00204 	addi	sp,sp,8
    f1f8:	f800283a 	ret

0000f1fc <get_DDRAM_addr>:
 * @sa the datasheet for the LCD Display Controller on the DE2 Board
 * @note the function requires that the input are in the valid range
 *
 **/
unsigned char get_DDRAM_addr(unsigned x_pos, unsigned y_pos)
{
    f1fc:	defffc04 	addi	sp,sp,-16
    f200:	df000315 	stw	fp,12(sp)
    f204:	df000304 	addi	fp,sp,12
    f208:	e13ffe15 	stw	r4,-8(fp)
    f20c:	e17fff15 	stw	r5,-4(fp)
	//assume valid inputs
	unsigned char addr = 0x00000000;
    f210:	e03ffd05 	stb	zero,-12(fp)
	if (y_pos == 0)
    f214:	e0bfff17 	ldw	r2,-4(fp)
    f218:	1000061e 	bne	r2,zero,f234 <get_DDRAM_addr+0x38>
	{
		addr |= x_pos;
    f21c:	e0bffe17 	ldw	r2,-8(fp)
    f220:	1007883a 	mov	r3,r2
    f224:	e0bffd03 	ldbu	r2,-12(fp)
    f228:	1884b03a 	or	r2,r3,r2
    f22c:	e0bffd05 	stb	r2,-12(fp)
    f230:	00000806 	br	f254 <get_DDRAM_addr+0x58>
	}
	else
	{
		addr |= x_pos;
    f234:	e0bffe17 	ldw	r2,-8(fp)
    f238:	1007883a 	mov	r3,r2
    f23c:	e0bffd03 	ldbu	r2,-12(fp)
    f240:	1884b03a 	or	r2,r3,r2
    f244:	e0bffd05 	stb	r2,-12(fp)
		addr |= 0x00000040;
    f248:	e0bffd03 	ldbu	r2,-12(fp)
    f24c:	10801014 	ori	r2,r2,64
    f250:	e0bffd05 	stb	r2,-12(fp)
	}
	// b_7 is always 1 for DDRAM address, see datasheet
	return (addr | 0x00000080);
    f254:	e0fffd03 	ldbu	r3,-12(fp)
    f258:	00bfe004 	movi	r2,-128
    f25c:	1884b03a 	or	r2,r3,r2
}
    f260:	e037883a 	mov	sp,fp
    f264:	df000017 	ldw	fp,0(sp)
    f268:	dec00104 	addi	sp,sp,4
    f26c:	f800283a 	ret

0000f270 <alt_up_character_lcd_send_cmd>:
 * @param cmd -- the command bits 
 *
 * @return nothing
 **/
void alt_up_character_lcd_send_cmd(alt_up_character_lcd_dev *lcd, unsigned char cmd)
{
    f270:	defffd04 	addi	sp,sp,-12
    f274:	df000215 	stw	fp,8(sp)
    f278:	df000204 	addi	fp,sp,8
    f27c:	e13ffe15 	stw	r4,-8(fp)
    f280:	2805883a 	mov	r2,r5
    f284:	e0bfff05 	stb	r2,-4(fp)
 	// NOTE: We use the term Instruction Register and Control Register interchangeably
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, cmd);
    f288:	e0bffe17 	ldw	r2,-8(fp)
    f28c:	10800a17 	ldw	r2,40(r2)
    f290:	1007883a 	mov	r3,r2
    f294:	e0bfff03 	ldbu	r2,-4(fp)
    f298:	18800025 	stbio	r2,0(r3)
}
    f29c:	0001883a 	nop
    f2a0:	e037883a 	mov	sp,fp
    f2a4:	df000017 	ldw	fp,0(sp)
    f2a8:	dec00104 	addi	sp,sp,4
    f2ac:	f800283a 	ret

0000f2b0 <alt_up_character_lcd_init>:
 * file for a detailed description of each function
 */
////////////////////////////////////////////////////////////////////////////

void alt_up_character_lcd_init(alt_up_character_lcd_dev *lcd)
{
    f2b0:	defffe04 	addi	sp,sp,-8
    f2b4:	df000115 	stw	fp,4(sp)
    f2b8:	df000104 	addi	fp,sp,4
    f2bc:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, ALT_UP_CHARACTER_LCD_COMM_CLEAR_DISPLAY);
    f2c0:	e0bfff17 	ldw	r2,-4(fp)
    f2c4:	10800a17 	ldw	r2,40(r2)
    f2c8:	1007883a 	mov	r3,r2
    f2cc:	00800044 	movi	r2,1
    f2d0:	18800025 	stbio	r2,0(r3)
	// register the device 
	// see "Developing Device Drivers for the HAL" in "Nios II Software Developer's Handbook"
}
    f2d4:	0001883a 	nop
    f2d8:	e037883a 	mov	sp,fp
    f2dc:	df000017 	ldw	fp,0(sp)
    f2e0:	dec00104 	addi	sp,sp,4
    f2e4:	f800283a 	ret

0000f2e8 <alt_up_character_lcd_open_dev>:

alt_up_character_lcd_dev* alt_up_character_lcd_open_dev(const char* name)
{
    f2e8:	defffc04 	addi	sp,sp,-16
    f2ec:	dfc00315 	stw	ra,12(sp)
    f2f0:	df000215 	stw	fp,8(sp)
    f2f4:	df000204 	addi	fp,sp,8
    f2f8:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_character_lcd_dev *dev = (alt_up_character_lcd_dev*)alt_find_dev(name, &alt_dev_list);
    f2fc:	d1600904 	addi	r5,gp,-32732
    f300:	e13fff17 	ldw	r4,-4(fp)
    f304:	00107a80 	call	107a8 <alt_find_dev>
    f308:	e0bffe15 	stw	r2,-8(fp)

  return dev;
    f30c:	e0bffe17 	ldw	r2,-8(fp)
}
    f310:	e037883a 	mov	sp,fp
    f314:	dfc00117 	ldw	ra,4(sp)
    f318:	df000017 	ldw	fp,0(sp)
    f31c:	dec00204 	addi	sp,sp,8
    f320:	f800283a 	ret

0000f324 <alt_up_character_lcd_write>:

void alt_up_character_lcd_write(alt_up_character_lcd_dev *dev, const char *ptr, unsigned int len)
{
    f324:	defffb04 	addi	sp,sp,-20
    f328:	df000415 	stw	fp,16(sp)
    f32c:	df000404 	addi	fp,sp,16
    f330:	e13ffd15 	stw	r4,-12(fp)
    f334:	e17ffe15 	stw	r5,-8(fp)
    f338:	e1bfff15 	stw	r6,-4(fp)
	unsigned int i;
	for (i = 0; i < len; i++)
    f33c:	e03ffc15 	stw	zero,-16(fp)
    f340:	00000f06 	br	f380 <alt_up_character_lcd_write+0x5c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr+i));
    f344:	e0bffd17 	ldw	r2,-12(fp)
    f348:	10800a17 	ldw	r2,40(r2)
    f34c:	10800044 	addi	r2,r2,1
    f350:	1009883a 	mov	r4,r2
    f354:	e0fffe17 	ldw	r3,-8(fp)
    f358:	e0bffc17 	ldw	r2,-16(fp)
    f35c:	1885883a 	add	r2,r3,r2
    f360:	10800003 	ldbu	r2,0(r2)
    f364:	10803fcc 	andi	r2,r2,255
    f368:	1080201c 	xori	r2,r2,128
    f36c:	10bfe004 	addi	r2,r2,-128
    f370:	20800025 	stbio	r2,0(r4)
}

void alt_up_character_lcd_write(alt_up_character_lcd_dev *dev, const char *ptr, unsigned int len)
{
	unsigned int i;
	for (i = 0; i < len; i++)
    f374:	e0bffc17 	ldw	r2,-16(fp)
    f378:	10800044 	addi	r2,r2,1
    f37c:	e0bffc15 	stw	r2,-16(fp)
    f380:	e0fffc17 	ldw	r3,-16(fp)
    f384:	e0bfff17 	ldw	r2,-4(fp)
    f388:	18bfee36 	bltu	r3,r2,f344 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f344>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr+i));
	}
}
    f38c:	0001883a 	nop
    f390:	e037883a 	mov	sp,fp
    f394:	df000017 	ldw	fp,0(sp)
    f398:	dec00104 	addi	sp,sp,4
    f39c:	f800283a 	ret

0000f3a0 <alt_up_character_lcd_string>:

void alt_up_character_lcd_string(alt_up_character_lcd_dev *dev, const char *ptr)
{
    f3a0:	defffd04 	addi	sp,sp,-12
    f3a4:	df000215 	stw	fp,8(sp)
    f3a8:	df000204 	addi	fp,sp,8
    f3ac:	e13ffe15 	stw	r4,-8(fp)
    f3b0:	e17fff15 	stw	r5,-4(fp)
	while ( *ptr )
    f3b4:	00000d06 	br	f3ec <alt_up_character_lcd_string+0x4c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr));
    f3b8:	e0bffe17 	ldw	r2,-8(fp)
    f3bc:	10800a17 	ldw	r2,40(r2)
    f3c0:	10800044 	addi	r2,r2,1
    f3c4:	1007883a 	mov	r3,r2
    f3c8:	e0bfff17 	ldw	r2,-4(fp)
    f3cc:	10800003 	ldbu	r2,0(r2)
    f3d0:	10803fcc 	andi	r2,r2,255
    f3d4:	1080201c 	xori	r2,r2,128
    f3d8:	10bfe004 	addi	r2,r2,-128
    f3dc:	18800025 	stbio	r2,0(r3)
		++ptr;
    f3e0:	e0bfff17 	ldw	r2,-4(fp)
    f3e4:	10800044 	addi	r2,r2,1
    f3e8:	e0bfff15 	stw	r2,-4(fp)
	}
}

void alt_up_character_lcd_string(alt_up_character_lcd_dev *dev, const char *ptr)
{
	while ( *ptr )
    f3ec:	e0bfff17 	ldw	r2,-4(fp)
    f3f0:	10800003 	ldbu	r2,0(r2)
    f3f4:	10803fcc 	andi	r2,r2,255
    f3f8:	1080201c 	xori	r2,r2,128
    f3fc:	10bfe004 	addi	r2,r2,-128
    f400:	103fed1e 	bne	r2,zero,f3b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f3b8>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr));
		++ptr;
	}
}
    f404:	0001883a 	nop
    f408:	e037883a 	mov	sp,fp
    f40c:	df000017 	ldw	fp,0(sp)
    f410:	dec00104 	addi	sp,sp,4
    f414:	f800283a 	ret

0000f418 <alt_up_character_lcd_write_fd>:

// this function isn't used, and is included for future upgrades
int alt_up_character_lcd_write_fd(alt_fd *fd, const char *ptr, int len)
{
    f418:	defffb04 	addi	sp,sp,-20
    f41c:	dfc00415 	stw	ra,16(sp)
    f420:	df000315 	stw	fp,12(sp)
    f424:	df000304 	addi	fp,sp,12
    f428:	e13ffd15 	stw	r4,-12(fp)
    f42c:	e17ffe15 	stw	r5,-8(fp)
    f430:	e1bfff15 	stw	r6,-4(fp)
	alt_up_character_lcd_write( (alt_up_character_lcd_dev *) fd->dev, ptr, (unsigned int) len);
    f434:	e0bffd17 	ldw	r2,-12(fp)
    f438:	10800017 	ldw	r2,0(r2)
    f43c:	e0ffff17 	ldw	r3,-4(fp)
    f440:	180d883a 	mov	r6,r3
    f444:	e17ffe17 	ldw	r5,-8(fp)
    f448:	1009883a 	mov	r4,r2
    f44c:	000f3240 	call	f324 <alt_up_character_lcd_write>
	return 0;
    f450:	0005883a 	mov	r2,zero
}
    f454:	e037883a 	mov	sp,fp
    f458:	dfc00117 	ldw	ra,4(sp)
    f45c:	df000017 	ldw	fp,0(sp)
    f460:	dec00204 	addi	sp,sp,8
    f464:	f800283a 	ret

0000f468 <alt_up_character_lcd_set_cursor_pos>:

int alt_up_character_lcd_set_cursor_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, 
	 unsigned y_pos)
{
    f468:	defffa04 	addi	sp,sp,-24
    f46c:	dfc00515 	stw	ra,20(sp)
    f470:	df000415 	stw	fp,16(sp)
    f474:	df000404 	addi	fp,sp,16
    f478:	e13ffd15 	stw	r4,-12(fp)
    f47c:	e17ffe15 	stw	r5,-8(fp)
    f480:	e1bfff15 	stw	r6,-4(fp)
	//boundary check
	if (x_pos > 39 || y_pos > 1 )
    f484:	e0bffe17 	ldw	r2,-8(fp)
    f488:	10800a28 	cmpgeui	r2,r2,40
    f48c:	1000031e 	bne	r2,zero,f49c <alt_up_character_lcd_set_cursor_pos+0x34>
    f490:	e0bfff17 	ldw	r2,-4(fp)
    f494:	108000b0 	cmpltui	r2,r2,2
    f498:	1000021e 	bne	r2,zero,f4a4 <alt_up_character_lcd_set_cursor_pos+0x3c>
		// invalid argument
		return -1;
    f49c:	00bfffc4 	movi	r2,-1
    f4a0:	00000906 	br	f4c8 <alt_up_character_lcd_set_cursor_pos+0x60>
	// calculate address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
    f4a4:	e17fff17 	ldw	r5,-4(fp)
    f4a8:	e13ffe17 	ldw	r4,-8(fp)
    f4ac:	000f1fc0 	call	f1fc <get_DDRAM_addr>
    f4b0:	e0bffc05 	stb	r2,-16(fp)
	// set the cursor
	alt_up_character_lcd_send_cmd(lcd, addr);
    f4b4:	e0bffc03 	ldbu	r2,-16(fp)
    f4b8:	100b883a 	mov	r5,r2
    f4bc:	e13ffd17 	ldw	r4,-12(fp)
    f4c0:	000f2700 	call	f270 <alt_up_character_lcd_send_cmd>
	return 0;
    f4c4:	0005883a 	mov	r2,zero
}
    f4c8:	e037883a 	mov	sp,fp
    f4cc:	dfc00117 	ldw	ra,4(sp)
    f4d0:	df000017 	ldw	fp,0(sp)
    f4d4:	dec00204 	addi	sp,sp,8
    f4d8:	f800283a 	ret

0000f4dc <alt_up_character_lcd_shift_cursor>:

void alt_up_character_lcd_shift_cursor(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
    f4dc:	defffb04 	addi	sp,sp,-20
    f4e0:	dfc00415 	stw	ra,16(sp)
    f4e4:	df000315 	stw	fp,12(sp)
    f4e8:	df000304 	addi	fp,sp,12
    f4ec:	e13ffe15 	stw	r4,-8(fp)
    f4f0:	e17fff15 	stw	r5,-4(fp)
	if (x_right_shift_offset == 0) 
    f4f4:	e0bfff17 	ldw	r2,-4(fp)
    f4f8:	10001526 	beq	r2,zero,f550 <alt_up_character_lcd_shift_cursor+0x74>
		// don't ask me to do nothing 
		return;

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
    f4fc:	e0bfff17 	ldw	r2,-4(fp)
    f500:	0080020e 	bge	zero,r2,f50c <alt_up_character_lcd_shift_cursor+0x30>
    f504:	00800504 	movi	r2,20
    f508:	00000106 	br	f510 <alt_up_character_lcd_shift_cursor+0x34>
    f50c:	00800404 	movi	r2,16
    f510:	e0bffd45 	stb	r2,-11(fp)
		ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
    f514:	e0bfff17 	ldw	r2,-4(fp)
    f518:	1000010e 	bge	r2,zero,f520 <alt_up_character_lcd_shift_cursor+0x44>
    f51c:	0085c83a 	sub	r2,zero,r2
    f520:	e0bffd05 	stb	r2,-12(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
    f524:	00000406 	br	f538 <alt_up_character_lcd_shift_cursor+0x5c>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
    f528:	e0bffd43 	ldbu	r2,-11(fp)
    f52c:	100b883a 	mov	r5,r2
    f530:	e13ffe17 	ldw	r4,-8(fp)
    f534:	000f2700 	call	f270 <alt_up_character_lcd_send_cmd>
		ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
    f538:	e0bffd03 	ldbu	r2,-12(fp)
    f53c:	10ffffc4 	addi	r3,r2,-1
    f540:	e0fffd05 	stb	r3,-12(fp)
    f544:	10803fcc 	andi	r2,r2,255
    f548:	103ff71e 	bne	r2,zero,f528 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f528>
    f54c:	00000106 	br	f554 <alt_up_character_lcd_shift_cursor+0x78>

void alt_up_character_lcd_shift_cursor(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
	if (x_right_shift_offset == 0) 
		// don't ask me to do nothing 
		return;
    f550:	0001883a 	nop
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
}
    f554:	e037883a 	mov	sp,fp
    f558:	dfc00117 	ldw	ra,4(sp)
    f55c:	df000017 	ldw	fp,0(sp)
    f560:	dec00204 	addi	sp,sp,8
    f564:	f800283a 	ret

0000f568 <alt_up_character_lcd_shift_display>:

void alt_up_character_lcd_shift_display(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
    f568:	defffb04 	addi	sp,sp,-20
    f56c:	dfc00415 	stw	ra,16(sp)
    f570:	df000315 	stw	fp,12(sp)
    f574:	df000304 	addi	fp,sp,12
    f578:	e13ffe15 	stw	r4,-8(fp)
    f57c:	e17fff15 	stw	r5,-4(fp)
	if (x_right_shift_offset == 0) 
    f580:	e0bfff17 	ldw	r2,-4(fp)
    f584:	10001526 	beq	r2,zero,f5dc <alt_up_character_lcd_shift_display+0x74>
		// don't ask me to do nothing 
		return;

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
    f588:	e0bfff17 	ldw	r2,-4(fp)
    f58c:	0080020e 	bge	zero,r2,f598 <alt_up_character_lcd_shift_display+0x30>
    f590:	00800704 	movi	r2,28
    f594:	00000106 	br	f59c <alt_up_character_lcd_shift_display+0x34>
    f598:	00800604 	movi	r2,24
    f59c:	e0bffd45 	stb	r2,-11(fp)
		ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
    f5a0:	e0bfff17 	ldw	r2,-4(fp)
    f5a4:	1000010e 	bge	r2,zero,f5ac <alt_up_character_lcd_shift_display+0x44>
    f5a8:	0085c83a 	sub	r2,zero,r2
    f5ac:	e0bffd05 	stb	r2,-12(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
    f5b0:	00000406 	br	f5c4 <alt_up_character_lcd_shift_display+0x5c>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
    f5b4:	e0bffd43 	ldbu	r2,-11(fp)
    f5b8:	100b883a 	mov	r5,r2
    f5bc:	e13ffe17 	ldw	r4,-8(fp)
    f5c0:	000f2700 	call	f270 <alt_up_character_lcd_send_cmd>
		ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
    f5c4:	e0bffd03 	ldbu	r2,-12(fp)
    f5c8:	10ffffc4 	addi	r3,r2,-1
    f5cc:	e0fffd05 	stb	r3,-12(fp)
    f5d0:	10803fcc 	andi	r2,r2,255
    f5d4:	103ff71e 	bne	r2,zero,f5b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f5b4>
    f5d8:	00000106 	br	f5e0 <alt_up_character_lcd_shift_display+0x78>

void alt_up_character_lcd_shift_display(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
	if (x_right_shift_offset == 0) 
		// don't ask me to do nothing 
		return;
    f5dc:	0001883a 	nop
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
}
    f5e0:	e037883a 	mov	sp,fp
    f5e4:	dfc00117 	ldw	ra,4(sp)
    f5e8:	df000017 	ldw	fp,0(sp)
    f5ec:	dec00204 	addi	sp,sp,8
    f5f0:	f800283a 	ret

0000f5f4 <alt_up_character_lcd_erase_pos>:

int alt_up_character_lcd_erase_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, unsigned y_pos)
{
    f5f4:	defffa04 	addi	sp,sp,-24
    f5f8:	dfc00515 	stw	ra,20(sp)
    f5fc:	df000415 	stw	fp,16(sp)
    f600:	df000404 	addi	fp,sp,16
    f604:	e13ffd15 	stw	r4,-12(fp)
    f608:	e17ffe15 	stw	r5,-8(fp)
    f60c:	e1bfff15 	stw	r6,-4(fp)
	// boundary check
	if (x_pos > 39 || y_pos > 1 )
    f610:	e0bffe17 	ldw	r2,-8(fp)
    f614:	10800a28 	cmpgeui	r2,r2,40
    f618:	1000031e 	bne	r2,zero,f628 <alt_up_character_lcd_erase_pos+0x34>
    f61c:	e0bfff17 	ldw	r2,-4(fp)
    f620:	108000b0 	cmpltui	r2,r2,2
    f624:	1000021e 	bne	r2,zero,f630 <alt_up_character_lcd_erase_pos+0x3c>
		return -1;
    f628:	00bfffc4 	movi	r2,-1
    f62c:	00000f06 	br	f66c <alt_up_character_lcd_erase_pos+0x78>

	// get address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
    f630:	e17fff17 	ldw	r5,-4(fp)
    f634:	e13ffe17 	ldw	r4,-8(fp)
    f638:	000f1fc0 	call	f1fc <get_DDRAM_addr>
    f63c:	e0bffc05 	stb	r2,-16(fp)
	// set cursor to dest point
	alt_up_character_lcd_send_cmd(lcd, addr);
    f640:	e0bffc03 	ldbu	r2,-16(fp)
    f644:	100b883a 	mov	r5,r2
    f648:	e13ffd17 	ldw	r4,-12(fp)
    f64c:	000f2700 	call	f270 <alt_up_character_lcd_send_cmd>
	//send an empty char as erase (refer to the Character Generator ROM part of the Datasheet)
	IOWR_ALT_UP_CHARACTER_LCD_DATA(lcd->base, (0x00000002) );
    f650:	e0bffd17 	ldw	r2,-12(fp)
    f654:	10800a17 	ldw	r2,40(r2)
    f658:	10800044 	addi	r2,r2,1
    f65c:	1007883a 	mov	r3,r2
    f660:	00800084 	movi	r2,2
    f664:	18800025 	stbio	r2,0(r3)
	return 0;
    f668:	0005883a 	mov	r2,zero
}
    f66c:	e037883a 	mov	sp,fp
    f670:	dfc00117 	ldw	ra,4(sp)
    f674:	df000017 	ldw	fp,0(sp)
    f678:	dec00204 	addi	sp,sp,8
    f67c:	f800283a 	ret

0000f680 <alt_up_character_lcd_cursor_off>:

void alt_up_character_lcd_cursor_off(alt_up_character_lcd_dev *lcd)
{
    f680:	defffd04 	addi	sp,sp,-12
    f684:	dfc00215 	stw	ra,8(sp)
    f688:	df000115 	stw	fp,4(sp)
    f68c:	df000104 	addi	fp,sp,4
    f690:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_OFF);
    f694:	01400304 	movi	r5,12
    f698:	e13fff17 	ldw	r4,-4(fp)
    f69c:	000f2700 	call	f270 <alt_up_character_lcd_send_cmd>
}
    f6a0:	0001883a 	nop
    f6a4:	e037883a 	mov	sp,fp
    f6a8:	dfc00117 	ldw	ra,4(sp)
    f6ac:	df000017 	ldw	fp,0(sp)
    f6b0:	dec00204 	addi	sp,sp,8
    f6b4:	f800283a 	ret

0000f6b8 <alt_up_character_lcd_cursor_blink_on>:

void alt_up_character_lcd_cursor_blink_on(alt_up_character_lcd_dev *lcd)
{
    f6b8:	defffd04 	addi	sp,sp,-12
    f6bc:	dfc00215 	stw	ra,8(sp)
    f6c0:	df000115 	stw	fp,4(sp)
    f6c4:	df000104 	addi	fp,sp,4
    f6c8:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_BLINK_ON);
    f6cc:	014003c4 	movi	r5,15
    f6d0:	e13fff17 	ldw	r4,-4(fp)
    f6d4:	000f2700 	call	f270 <alt_up_character_lcd_send_cmd>
}
    f6d8:	0001883a 	nop
    f6dc:	e037883a 	mov	sp,fp
    f6e0:	dfc00117 	ldw	ra,4(sp)
    f6e4:	df000017 	ldw	fp,0(sp)
    f6e8:	dec00204 	addi	sp,sp,8
    f6ec:	f800283a 	ret

0000f6f0 <alt_up_irda_enable_read_interrupt>:
#include "altera_up_avalon_irda.h"
#include "altera_up_avalon_irda_regs.h"


void alt_up_irda_enable_read_interrupt(alt_up_irda_dev *irda)
{
    f6f0:	defffd04 	addi	sp,sp,-12
    f6f4:	df000215 	stw	fp,8(sp)
    f6f8:	df000204 	addi	fp,sp,8
    f6fc:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_IRDA_CONTROL(irda->base); 
    f700:	e0bfff17 	ldw	r2,-4(fp)
    f704:	10800a17 	ldw	r2,40(r2)
    f708:	10800104 	addi	r2,r2,4
    f70c:	10800037 	ldwio	r2,0(r2)
    f710:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_IRDA_CONTROL_RE_MSK;
    f714:	e0bffe17 	ldw	r2,-8(fp)
    f718:	10800054 	ori	r2,r2,1
    f71c:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_IRDA_CONTROL(irda->base, ctrl_reg);
    f720:	e0bfff17 	ldw	r2,-4(fp)
    f724:	10800a17 	ldw	r2,40(r2)
    f728:	10800104 	addi	r2,r2,4
    f72c:	1007883a 	mov	r3,r2
    f730:	e0bffe17 	ldw	r2,-8(fp)
    f734:	18800035 	stwio	r2,0(r3)
}
    f738:	0001883a 	nop
    f73c:	e037883a 	mov	sp,fp
    f740:	df000017 	ldw	fp,0(sp)
    f744:	dec00104 	addi	sp,sp,4
    f748:	f800283a 	ret

0000f74c <alt_up_irda_disable_read_interrupt>:

void alt_up_irda_disable_read_interrupt(alt_up_irda_dev *irda)
{
    f74c:	defffd04 	addi	sp,sp,-12
    f750:	df000215 	stw	fp,8(sp)
    f754:	df000204 	addi	fp,sp,8
    f758:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_IRDA_CONTROL(irda->base); 
    f75c:	e0bfff17 	ldw	r2,-4(fp)
    f760:	10800a17 	ldw	r2,40(r2)
    f764:	10800104 	addi	r2,r2,4
    f768:	10800037 	ldwio	r2,0(r2)
    f76c:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_IRDA_CONTROL_RE_MSK;
    f770:	e0fffe17 	ldw	r3,-8(fp)
    f774:	00bfff84 	movi	r2,-2
    f778:	1884703a 	and	r2,r3,r2
    f77c:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_IRDA_CONTROL(irda->base, ctrl_reg);
    f780:	e0bfff17 	ldw	r2,-4(fp)
    f784:	10800a17 	ldw	r2,40(r2)
    f788:	10800104 	addi	r2,r2,4
    f78c:	1007883a 	mov	r3,r2
    f790:	e0bffe17 	ldw	r2,-8(fp)
    f794:	18800035 	stwio	r2,0(r3)
}
    f798:	0001883a 	nop
    f79c:	e037883a 	mov	sp,fp
    f7a0:	df000017 	ldw	fp,0(sp)
    f7a4:	dec00104 	addi	sp,sp,4
    f7a8:	f800283a 	ret

0000f7ac <alt_up_irda_get_used_space_in_read_FIFO>:

unsigned alt_up_irda_get_used_space_in_read_FIFO(alt_up_irda_dev *irda)
{
    f7ac:	defffd04 	addi	sp,sp,-12
    f7b0:	df000215 	stw	fp,8(sp)
    f7b4:	df000204 	addi	fp,sp,8
    f7b8:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = 0;
    f7bc:	e03ffe0d 	sth	zero,-8(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_IRDA_DATA(irda->base), 2); 
//	return ravail;
	ravail = IORD_ALT_UP_IRDA_RAVAIL(irda->base); 
    f7c0:	e0bfff17 	ldw	r2,-4(fp)
    f7c4:	10800a17 	ldw	r2,40(r2)
    f7c8:	10800084 	addi	r2,r2,2
    f7cc:	1080002b 	ldhuio	r2,0(r2)
    f7d0:	10bfffcc 	andi	r2,r2,65535
    f7d4:	e0bffe0d 	sth	r2,-8(fp)
	return (ravail & ALT_UP_IRDA_RAVAIL_MSK) >> ALT_UP_IRDA_RAVAIL_OFST;
    f7d8:	e0bffe0b 	ldhu	r2,-8(fp)
}
    f7dc:	e037883a 	mov	sp,fp
    f7e0:	df000017 	ldw	fp,0(sp)
    f7e4:	dec00104 	addi	sp,sp,4
    f7e8:	f800283a 	ret

0000f7ec <alt_up_irda_get_available_space_in_write_FIFO>:

unsigned alt_up_irda_get_available_space_in_write_FIFO(alt_up_irda_dev *irda)
{
    f7ec:	defffd04 	addi	sp,sp,-12
    f7f0:	df000215 	stw	fp,8(sp)
    f7f4:	df000204 	addi	fp,sp,8
    f7f8:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_IRDA_CONTROL(irda->base); 
    f7fc:	e0bfff17 	ldw	r2,-4(fp)
    f800:	10800a17 	ldw	r2,40(r2)
    f804:	10800104 	addi	r2,r2,4
    f808:	10800037 	ldwio	r2,0(r2)
    f80c:	e0bffe15 	stw	r2,-8(fp)
	return (ctrl_reg & ALT_UP_IRDA_CONTROL_WSPACE_MSK) >> ALT_UP_IRDA_CONTROL_WSPACE_OFST;
    f810:	e0bffe17 	ldw	r2,-8(fp)
    f814:	1004d43a 	srli	r2,r2,16
}
    f818:	e037883a 	mov	sp,fp
    f81c:	df000017 	ldw	fp,0(sp)
    f820:	dec00104 	addi	sp,sp,4
    f824:	f800283a 	ret

0000f828 <alt_up_irda_check_parity>:

int alt_up_irda_check_parity(alt_u32 data_reg)
{
    f828:	defffd04 	addi	sp,sp,-12
    f82c:	df000215 	stw	fp,8(sp)
    f830:	df000204 	addi	fp,sp,8
    f834:	e13fff15 	stw	r4,-4(fp)
	unsigned parity_error = (data_reg & ALT_UP_IRDA_DATA_PE_MSK) >> ALT_UP_IRDA_DATA_PE_OFST;
    f838:	e0bfff17 	ldw	r2,-4(fp)
    f83c:	1080800c 	andi	r2,r2,512
    f840:	1004d27a 	srli	r2,r2,9
    f844:	e0bffe15 	stw	r2,-8(fp)
	return (parity_error ? -1 : 0);
    f848:	e0bffe17 	ldw	r2,-8(fp)
    f84c:	10000226 	beq	r2,zero,f858 <alt_up_irda_check_parity+0x30>
    f850:	00bfffc4 	movi	r2,-1
    f854:	00000106 	br	f85c <alt_up_irda_check_parity+0x34>
    f858:	0005883a 	mov	r2,zero
}
    f85c:	e037883a 	mov	sp,fp
    f860:	df000017 	ldw	fp,0(sp)
    f864:	dec00104 	addi	sp,sp,4
    f868:	f800283a 	ret

0000f86c <alt_up_irda_write_data>:

int alt_up_irda_write_data(alt_up_irda_dev *irda, alt_u8 data)
{
    f86c:	defffd04 	addi	sp,sp,-12
    f870:	df000215 	stw	fp,8(sp)
    f874:	df000204 	addi	fp,sp,8
    f878:	e13ffe15 	stw	r4,-8(fp)
    f87c:	2805883a 	mov	r2,r5
    f880:	e0bfff05 	stb	r2,-4(fp)
	data_reg = IORD_ALT_UP_IRDA_DATA(irda->base);
    */

	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_IRDA_DATA(irda->base, (data>>ALT_UP_IRDA_DATA_DATA_OFST) & ALT_UP_IRDA_DATA_DATA_MSK);
    f884:	e0bffe17 	ldw	r2,-8(fp)
    f888:	10800a17 	ldw	r2,40(r2)
    f88c:	1007883a 	mov	r3,r2
    f890:	e0bfff03 	ldbu	r2,-4(fp)
    f894:	18800035 	stwio	r2,0(r3)
	return 0;
    f898:	0005883a 	mov	r2,zero
}
    f89c:	e037883a 	mov	sp,fp
    f8a0:	df000017 	ldw	fp,0(sp)
    f8a4:	dec00104 	addi	sp,sp,4
    f8a8:	f800283a 	ret

0000f8ac <alt_up_irda_read_data>:

int alt_up_irda_read_data(alt_up_irda_dev *irda, alt_u8 *data, alt_u8 *parity_error)
{
    f8ac:	defffa04 	addi	sp,sp,-24
    f8b0:	dfc00515 	stw	ra,20(sp)
    f8b4:	df000415 	stw	fp,16(sp)
    f8b8:	df000404 	addi	fp,sp,16
    f8bc:	e13ffd15 	stw	r4,-12(fp)
    f8c0:	e17ffe15 	stw	r5,-8(fp)
    f8c4:	e1bfff15 	stw	r6,-4(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_IRDA_DATA(irda->base);
    f8c8:	e0bffd17 	ldw	r2,-12(fp)
    f8cc:	10800a17 	ldw	r2,40(r2)
    f8d0:	10800037 	ldwio	r2,0(r2)
    f8d4:	e0bffc15 	stw	r2,-16(fp)
	*data = (data_reg & ALT_UP_IRDA_DATA_DATA_MSK) >> ALT_UP_IRDA_DATA_DATA_OFST;
    f8d8:	e0bffc17 	ldw	r2,-16(fp)
    f8dc:	1007883a 	mov	r3,r2
    f8e0:	e0bffe17 	ldw	r2,-8(fp)
    f8e4:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_irda_check_parity(data_reg);
    f8e8:	e13ffc17 	ldw	r4,-16(fp)
    f8ec:	000f8280 	call	f828 <alt_up_irda_check_parity>
    f8f0:	1007883a 	mov	r3,r2
    f8f4:	e0bfff17 	ldw	r2,-4(fp)
    f8f8:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_IRDA_DATA_RVALID_MSK) >> ALT_UP_IRDA_DATA_RVALID_OFST) - 1);
    f8fc:	e0bffc17 	ldw	r2,-16(fp)
    f900:	10a0000c 	andi	r2,r2,32768
    f904:	1004d3fa 	srli	r2,r2,15
    f908:	10bfffc4 	addi	r2,r2,-1
}
    f90c:	e037883a 	mov	sp,fp
    f910:	dfc00117 	ldw	ra,4(sp)
    f914:	df000017 	ldw	fp,0(sp)
    f918:	dec00204 	addi	sp,sp,8
    f91c:	f800283a 	ret

0000f920 <alt_up_irda_read_fd>:

int alt_up_irda_read_fd (alt_fd* fd, char* ptr, int len)
{
    f920:	defff804 	addi	sp,sp,-32
    f924:	dfc00715 	stw	ra,28(sp)
    f928:	df000615 	stw	fp,24(sp)
    f92c:	df000604 	addi	fp,sp,24
    f930:	e13ffd15 	stw	r4,-12(fp)
    f934:	e17ffe15 	stw	r5,-8(fp)
    f938:	e1bfff15 	stw	r6,-4(fp)
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
    f93c:	e0bffd17 	ldw	r2,-12(fp)
    f940:	10800017 	ldw	r2,0(r2)
    f944:	e0bffb15 	stw	r2,-20(fp)
	int count = 0;
    f948:	e03ffa15 	stw	zero,-24(fp)
	alt_u8 parity_error;
	while(len--)
    f94c:	00000c06 	br	f980 <alt_up_irda_read_fd+0x60>
	{
		if (alt_up_irda_read_data(irda, (alt_u8 *)ptr++, &parity_error)==0)
    f950:	e0bffe17 	ldw	r2,-8(fp)
    f954:	10c00044 	addi	r3,r2,1
    f958:	e0fffe15 	stw	r3,-8(fp)
    f95c:	e0fffc04 	addi	r3,fp,-16
    f960:	180d883a 	mov	r6,r3
    f964:	100b883a 	mov	r5,r2
    f968:	e13ffb17 	ldw	r4,-20(fp)
    f96c:	000f8ac0 	call	f8ac <alt_up_irda_read_data>
    f970:	1000081e 	bne	r2,zero,f994 <alt_up_irda_read_fd+0x74>
			count++;
    f974:	e0bffa17 	ldw	r2,-24(fp)
    f978:	10800044 	addi	r2,r2,1
    f97c:	e0bffa15 	stw	r2,-24(fp)
int alt_up_irda_read_fd (alt_fd* fd, char* ptr, int len)
{
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
	int count = 0;
	alt_u8 parity_error;
	while(len--)
    f980:	e0bfff17 	ldw	r2,-4(fp)
    f984:	10ffffc4 	addi	r3,r2,-1
    f988:	e0ffff15 	stw	r3,-4(fp)
    f98c:	103ff01e 	bne	r2,zero,f950 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f950>
    f990:	00000106 	br	f998 <alt_up_irda_read_fd+0x78>
	{
		if (alt_up_irda_read_data(irda, (alt_u8 *)ptr++, &parity_error)==0)
			count++;
		else
			break;
    f994:	0001883a 	nop
	}
	return count;
    f998:	e0bffa17 	ldw	r2,-24(fp)
}
    f99c:	e037883a 	mov	sp,fp
    f9a0:	dfc00117 	ldw	ra,4(sp)
    f9a4:	df000017 	ldw	fp,0(sp)
    f9a8:	dec00204 	addi	sp,sp,8
    f9ac:	f800283a 	ret

0000f9b0 <alt_up_irda_write_fd>:

int alt_up_irda_write_fd (alt_fd* fd, const char* ptr, int len)
{
    f9b0:	defff904 	addi	sp,sp,-28
    f9b4:	dfc00615 	stw	ra,24(sp)
    f9b8:	df000515 	stw	fp,20(sp)
    f9bc:	df000504 	addi	fp,sp,20
    f9c0:	e13ffd15 	stw	r4,-12(fp)
    f9c4:	e17ffe15 	stw	r5,-8(fp)
    f9c8:	e1bfff15 	stw	r6,-4(fp)
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
    f9cc:	e0bffd17 	ldw	r2,-12(fp)
    f9d0:	10800017 	ldw	r2,0(r2)
    f9d4:	e0bffc15 	stw	r2,-16(fp)
	int count = 0;
    f9d8:	e03ffb15 	stw	zero,-20(fp)
	while(len--)
    f9dc:	00000c06 	br	fa10 <alt_up_irda_write_fd+0x60>
	{
		if (alt_up_irda_write_data(irda, (alt_u8) *ptr++)==0)
    f9e0:	e0bffe17 	ldw	r2,-8(fp)
    f9e4:	10c00044 	addi	r3,r2,1
    f9e8:	e0fffe15 	stw	r3,-8(fp)
    f9ec:	10800003 	ldbu	r2,0(r2)
    f9f0:	10803fcc 	andi	r2,r2,255
    f9f4:	100b883a 	mov	r5,r2
    f9f8:	e13ffc17 	ldw	r4,-16(fp)
    f9fc:	000f86c0 	call	f86c <alt_up_irda_write_data>
    fa00:	1000081e 	bne	r2,zero,fa24 <alt_up_irda_write_fd+0x74>
			count++;
    fa04:	e0bffb17 	ldw	r2,-20(fp)
    fa08:	10800044 	addi	r2,r2,1
    fa0c:	e0bffb15 	stw	r2,-20(fp)

int alt_up_irda_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
	int count = 0;
	while(len--)
    fa10:	e0bfff17 	ldw	r2,-4(fp)
    fa14:	10ffffc4 	addi	r3,r2,-1
    fa18:	e0ffff15 	stw	r3,-4(fp)
    fa1c:	103ff01e 	bne	r2,zero,f9e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f9e0>
    fa20:	00000106 	br	fa28 <alt_up_irda_write_fd+0x78>
	{
		if (alt_up_irda_write_data(irda, (alt_u8) *ptr++)==0)
			count++;
		else
			break;
    fa24:	0001883a 	nop
	}
	return count;
    fa28:	e0bffb17 	ldw	r2,-20(fp)
}
    fa2c:	e037883a 	mov	sp,fp
    fa30:	dfc00117 	ldw	ra,4(sp)
    fa34:	df000017 	ldw	fp,0(sp)
    fa38:	dec00204 	addi	sp,sp,8
    fa3c:	f800283a 	ret

0000fa40 <alt_up_irda_open_dev>:

alt_up_irda_dev* alt_up_irda_open_dev(const char* name)
{
    fa40:	defffc04 	addi	sp,sp,-16
    fa44:	dfc00315 	stw	ra,12(sp)
    fa48:	df000215 	stw	fp,8(sp)
    fa4c:	df000204 	addi	fp,sp,8
    fa50:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_irda_dev *dev = (alt_up_irda_dev*)alt_find_dev(name, &alt_dev_list);
    fa54:	d1600904 	addi	r5,gp,-32732
    fa58:	e13fff17 	ldw	r4,-4(fp)
    fa5c:	00107a80 	call	107a8 <alt_find_dev>
    fa60:	e0bffe15 	stw	r2,-8(fp)

  return dev;
    fa64:	e0bffe17 	ldw	r2,-8(fp)
}
    fa68:	e037883a 	mov	sp,fp
    fa6c:	dfc00117 	ldw	ra,4(sp)
    fa70:	df000017 	ldw	fp,0(sp)
    fa74:	dec00204 	addi	sp,sp,8
    fa78:	f800283a 	ret

0000fa7c <read_RI_bit>:


//////////////////////////////////////////////////////////////////////////////////////////////
// Internal Functions
alt_u8 read_RI_bit(alt_u32 ctrl_reg)
{
    fa7c:	defffd04 	addi	sp,sp,-12
    fa80:	df000215 	stw	fp,8(sp)
    fa84:	df000204 	addi	fp,sp,8
    fa88:	e13fff15 	stw	r4,-4(fp)
	alt_u8 ri = (alt_u8) ((ctrl_reg & ALT_UP_PS2_PORT_CTRL_REG_RI_MSK) >> ALT_UP_PS2_PORT_CTRL_REG_RI_OFST);
    fa8c:	e0bfff17 	ldw	r2,-4(fp)
    fa90:	1080400c 	andi	r2,r2,256
    fa94:	1004d23a 	srli	r2,r2,8
    fa98:	e0bffe05 	stb	r2,-8(fp)
	return ri;
    fa9c:	e0bffe03 	ldbu	r2,-8(fp)
}
    faa0:	e037883a 	mov	sp,fp
    faa4:	df000017 	ldw	fp,0(sp)
    faa8:	dec00104 	addi	sp,sp,4
    faac:	f800283a 	ret

0000fab0 <read_RE_bit>:

alt_u8 read_RE_bit(alt_u32 ctrl_reg)
{
    fab0:	defffd04 	addi	sp,sp,-12
    fab4:	df000215 	stw	fp,8(sp)
    fab8:	df000204 	addi	fp,sp,8
    fabc:	e13fff15 	stw	r4,-4(fp)
	alt_u8 re = (alt_u8) ((ctrl_reg & ALT_UP_PS2_PORT_CTRL_REG_RE_MSK) >> ALT_UP_PS2_PORT_CTRL_REG_RE_OFST);
    fac0:	e0bfff17 	ldw	r2,-4(fp)
    fac4:	1080004c 	andi	r2,r2,1
    fac8:	e0bffe05 	stb	r2,-8(fp)
	return re;
    facc:	e0bffe03 	ldbu	r2,-8(fp)
}
    fad0:	e037883a 	mov	sp,fp
    fad4:	df000017 	ldw	fp,0(sp)
    fad8:	dec00104 	addi	sp,sp,4
    fadc:	f800283a 	ret

0000fae0 <read_CE_bit>:

alt_u8 read_CE_bit(alt_u32 ctrl_reg)
{
    fae0:	defffd04 	addi	sp,sp,-12
    fae4:	df000215 	stw	fp,8(sp)
    fae8:	df000204 	addi	fp,sp,8
    faec:	e13fff15 	stw	r4,-4(fp)
	alt_u8 re = (alt_u8) ((ctrl_reg & ALT_UP_PS2_PORT_CTRL_REG_CE_MSK) >> ALT_UP_PS2_PORT_CTRL_REG_CE_OFST);
    faf0:	e0bfff17 	ldw	r2,-4(fp)
    faf4:	1081000c 	andi	r2,r2,1024
    faf8:	1004d2ba 	srli	r2,r2,10
    fafc:	e0bffe05 	stb	r2,-8(fp)
	return re;
    fb00:	e0bffe03 	ldbu	r2,-8(fp)
}
    fb04:	e037883a 	mov	sp,fp
    fb08:	df000017 	ldw	fp,0(sp)
    fb0c:	dec00104 	addi	sp,sp,4
    fb10:	f800283a 	ret

0000fb14 <read_num_bytes_available>:

alt_u16 read_num_bytes_available(alt_u32 data_reg)
{
    fb14:	defffd04 	addi	sp,sp,-12
    fb18:	df000215 	stw	fp,8(sp)
    fb1c:	df000204 	addi	fp,sp,8
    fb20:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = (alt_u16)((data_reg & ALT_UP_PS2_PORT_DATA_REG_RAVAIL_MSK ) >> ALT_UP_PS2_PORT_DATA_REG_RAVAIL_OFST);
    fb24:	e0bfff17 	ldw	r2,-4(fp)
    fb28:	1004d43a 	srli	r2,r2,16
    fb2c:	e0bffe0d 	sth	r2,-8(fp)
	return ravail;
    fb30:	e0bffe0b 	ldhu	r2,-8(fp)
}
    fb34:	e037883a 	mov	sp,fp
    fb38:	df000017 	ldw	fp,0(sp)
    fb3c:	dec00104 	addi	sp,sp,4
    fb40:	f800283a 	ret

0000fb44 <read_data_valid>:

alt_u8 read_data_valid(alt_u32 data_reg)
{
    fb44:	defffd04 	addi	sp,sp,-12
    fb48:	df000215 	stw	fp,8(sp)
    fb4c:	df000204 	addi	fp,sp,8
    fb50:	e13fff15 	stw	r4,-4(fp)
	alt_u8 rvalid = (alt_u8)((data_reg & ALT_UP_PS2_PORT_DATA_REG_RVALID_MSK ) >> ALT_UP_PS2_PORT_DATA_REG_RVALID_OFST);
    fb54:	e0bfff17 	ldw	r2,-4(fp)
    fb58:	10a0000c 	andi	r2,r2,32768
    fb5c:	1004d3fa 	srli	r2,r2,15
    fb60:	e0bffe05 	stb	r2,-8(fp)
	return rvalid;
    fb64:	e0bffe03 	ldbu	r2,-8(fp)
}
    fb68:	e037883a 	mov	sp,fp
    fb6c:	df000017 	ldw	fp,0(sp)
    fb70:	dec00104 	addi	sp,sp,4
    fb74:	f800283a 	ret

0000fb78 <read_data_byte>:

alt_u8 read_data_byte(alt_u32 data_reg)
{
    fb78:	defffd04 	addi	sp,sp,-12
    fb7c:	df000215 	stw	fp,8(sp)
    fb80:	df000204 	addi	fp,sp,8
    fb84:	e13fff15 	stw	r4,-4(fp)
	alt_u8 data = (alt_u8) ( (data_reg & ALT_UP_PS2_PORT_DATA_REG_DATA_MSK) >> ALT_UP_PS2_PORT_DATA_REG_DATA_OFST) ;
    fb88:	e0bfff17 	ldw	r2,-4(fp)
    fb8c:	e0bffe05 	stb	r2,-8(fp)
	return data;
    fb90:	e0bffe03 	ldbu	r2,-8(fp)
}
    fb94:	e037883a 	mov	sp,fp
    fb98:	df000017 	ldw	fp,0(sp)
    fb9c:	dec00104 	addi	sp,sp,4
    fba0:	f800283a 	ret

0000fba4 <alt_up_ps2_init>:

//////////////////////////////////////////////////////////////////////////////////////////////
// HAL Functions
void alt_up_ps2_init(alt_up_ps2_dev *ps2)
{
    fba4:	defffb04 	addi	sp,sp,-20
    fba8:	dfc00415 	stw	ra,16(sp)
    fbac:	df000315 	stw	fp,12(sp)
    fbb0:	df000304 	addi	fp,sp,12
    fbb4:	e13fff15 	stw	r4,-4(fp)
	// initialize the device
	unsigned char byte;
	//send the reset request, wait for ACK
	int status = alt_up_ps2_write_data_byte_with_ack(ps2, 0xff);
    fbb8:	01403fc4 	movi	r5,255
    fbbc:	e13fff17 	ldw	r4,-4(fp)
    fbc0:	000fe040 	call	fe04 <alt_up_ps2_write_data_byte_with_ack>
    fbc4:	e0bffd15 	stw	r2,-12(fp)
	if (status == 0)
    fbc8:	e0bffd17 	ldw	r2,-12(fp)
    fbcc:	1000211e 	bne	r2,zero,fc54 <alt_up_ps2_init+0xb0>
	{
		// reset succeed, now try to get the BAT result, AA means passed
		status = alt_up_ps2_read_data_byte_timeout(ps2, &byte);
    fbd0:	e0bffe04 	addi	r2,fp,-8
    fbd4:	100b883a 	mov	r5,r2
    fbd8:	e13fff17 	ldw	r4,-4(fp)
    fbdc:	000fe680 	call	fe68 <alt_up_ps2_read_data_byte_timeout>
    fbe0:	e0bffd15 	stw	r2,-12(fp)
		if (status == 0 && byte == 0xAA)
    fbe4:	e0bffd17 	ldw	r2,-12(fp)
    fbe8:	10001a1e 	bne	r2,zero,fc54 <alt_up_ps2_init+0xb0>
    fbec:	e0bffe03 	ldbu	r2,-8(fp)
    fbf0:	10803fcc 	andi	r2,r2,255
    fbf4:	10802a98 	cmpnei	r2,r2,170
    fbf8:	1000161e 	bne	r2,zero,fc54 <alt_up_ps2_init+0xb0>
		{
			//get the 2nd byte
			status = alt_up_ps2_read_data_byte_timeout(ps2, &byte);
    fbfc:	e0bffe04 	addi	r2,fp,-8
    fc00:	100b883a 	mov	r5,r2
    fc04:	e13fff17 	ldw	r4,-4(fp)
    fc08:	000fe680 	call	fe68 <alt_up_ps2_read_data_byte_timeout>
    fc0c:	e0bffd15 	stw	r2,-12(fp)
			if (status == -ETIMEDOUT)
    fc10:	e0bffd17 	ldw	r2,-12(fp)
    fc14:	10bfe318 	cmpnei	r2,r2,-116
    fc18:	1000041e 	bne	r2,zero,fc2c <alt_up_ps2_init+0x88>
			{
				//for keyboard, only 2 bytes are sent(ACK, PASS/FAIL), so timeout
				ps2->device_type = PS2_KEYBOARD;
    fc1c:	e0bfff17 	ldw	r2,-4(fp)
    fc20:	00c00044 	movi	r3,1
    fc24:	10c00d15 	stw	r3,52(r2)
				ps2->device_type = PS2_MOUSE;
				(void) alt_up_ps2_write_data_byte (ps2, 0xf4); // enable data from mouse
			}
		}
	}
}
    fc28:	00000a06 	br	fc54 <alt_up_ps2_init+0xb0>
			if (status == -ETIMEDOUT)
			{
				//for keyboard, only 2 bytes are sent(ACK, PASS/FAIL), so timeout
				ps2->device_type = PS2_KEYBOARD;
			}
			else if (status == 0 && byte == 0x00)
    fc2c:	e0bffd17 	ldw	r2,-12(fp)
    fc30:	1000081e 	bne	r2,zero,fc54 <alt_up_ps2_init+0xb0>
    fc34:	e0bffe03 	ldbu	r2,-8(fp)
    fc38:	10803fcc 	andi	r2,r2,255
    fc3c:	1000051e 	bne	r2,zero,fc54 <alt_up_ps2_init+0xb0>
			{
				//for mouse, it will sent out 0x00 after sending out ACK and PASS/FAIL.
				ps2->device_type = PS2_MOUSE;
    fc40:	e0bfff17 	ldw	r2,-4(fp)
    fc44:	10000d15 	stw	zero,52(r2)
				(void) alt_up_ps2_write_data_byte (ps2, 0xf4); // enable data from mouse
    fc48:	01403d04 	movi	r5,244
    fc4c:	e13fff17 	ldw	r4,-4(fp)
    fc50:	000fd280 	call	fd28 <alt_up_ps2_write_data_byte>
			}
		}
	}
}
    fc54:	0001883a 	nop
    fc58:	e037883a 	mov	sp,fp
    fc5c:	dfc00117 	ldw	ra,4(sp)
    fc60:	df000017 	ldw	fp,0(sp)
    fc64:	dec00204 	addi	sp,sp,8
    fc68:	f800283a 	ret

0000fc6c <alt_up_ps2_enable_read_interrupt>:

void alt_up_ps2_enable_read_interrupt(alt_up_ps2_dev *ps2)
{
    fc6c:	defffd04 	addi	sp,sp,-12
    fc70:	df000215 	stw	fp,8(sp)
    fc74:	df000204 	addi	fp,sp,8
    fc78:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_PS2_PORT_CTRL_REG(ps2->base); 
    fc7c:	e0bfff17 	ldw	r2,-4(fp)
    fc80:	10800a17 	ldw	r2,40(r2)
    fc84:	10800104 	addi	r2,r2,4
    fc88:	10800037 	ldwio	r2,0(r2)
    fc8c:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_PS2_PORT_CTRL_REG_RE_MSK;
    fc90:	e0bffe17 	ldw	r2,-8(fp)
    fc94:	10800054 	ori	r2,r2,1
    fc98:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_PS2_PORT_CTRL_REG(ps2->base, ctrl_reg);
    fc9c:	e0bfff17 	ldw	r2,-4(fp)
    fca0:	10800a17 	ldw	r2,40(r2)
    fca4:	10800104 	addi	r2,r2,4
    fca8:	1007883a 	mov	r3,r2
    fcac:	e0bffe17 	ldw	r2,-8(fp)
    fcb0:	18800035 	stwio	r2,0(r3)
}
    fcb4:	0001883a 	nop
    fcb8:	e037883a 	mov	sp,fp
    fcbc:	df000017 	ldw	fp,0(sp)
    fcc0:	dec00104 	addi	sp,sp,4
    fcc4:	f800283a 	ret

0000fcc8 <alt_up_ps2_disable_read_interrupt>:

void alt_up_ps2_disable_read_interrupt(alt_up_ps2_dev *ps2)
{
    fcc8:	defffd04 	addi	sp,sp,-12
    fccc:	df000215 	stw	fp,8(sp)
    fcd0:	df000204 	addi	fp,sp,8
    fcd4:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_PS2_PORT_CTRL_REG(ps2->base); 
    fcd8:	e0bfff17 	ldw	r2,-4(fp)
    fcdc:	10800a17 	ldw	r2,40(r2)
    fce0:	10800104 	addi	r2,r2,4
    fce4:	10800037 	ldwio	r2,0(r2)
    fce8:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_PS2_PORT_CTRL_REG_RE_MSK;
    fcec:	e0fffe17 	ldw	r3,-8(fp)
    fcf0:	00bfff84 	movi	r2,-2
    fcf4:	1884703a 	and	r2,r3,r2
    fcf8:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_PS2_PORT_CTRL_REG(ps2->base, ctrl_reg);
    fcfc:	e0bfff17 	ldw	r2,-4(fp)
    fd00:	10800a17 	ldw	r2,40(r2)
    fd04:	10800104 	addi	r2,r2,4
    fd08:	1007883a 	mov	r3,r2
    fd0c:	e0bffe17 	ldw	r2,-8(fp)
    fd10:	18800035 	stwio	r2,0(r3)
}
    fd14:	0001883a 	nop
    fd18:	e037883a 	mov	sp,fp
    fd1c:	df000017 	ldw	fp,0(sp)
    fd20:	dec00104 	addi	sp,sp,4
    fd24:	f800283a 	ret

0000fd28 <alt_up_ps2_write_data_byte>:

int alt_up_ps2_write_data_byte(alt_up_ps2_dev *ps2, unsigned char byte)
{
    fd28:	defffb04 	addi	sp,sp,-20
    fd2c:	dfc00415 	stw	ra,16(sp)
    fd30:	df000315 	stw	fp,12(sp)
    fd34:	df000304 	addi	fp,sp,12
    fd38:	e13ffe15 	stw	r4,-8(fp)
    fd3c:	2805883a 	mov	r2,r5
    fd40:	e0bfff05 	stb	r2,-4(fp)
	//note: data are only located at the lower 8 bits
	//note: the software send command to the PS2 peripheral through the data
	//		register rather than the control register
	IOWR_ALT_UP_PS2_PORT_DATA(ps2->base, byte);
    fd44:	e0bffe17 	ldw	r2,-8(fp)
    fd48:	10800a17 	ldw	r2,40(r2)
    fd4c:	1007883a 	mov	r3,r2
    fd50:	e0bfff03 	ldbu	r2,-4(fp)
    fd54:	18800025 	stbio	r2,0(r3)
	alt_u32 ctrl_reg = IORD_ALT_UP_PS2_PORT_CTRL_REG(ps2->base);
    fd58:	e0bffe17 	ldw	r2,-8(fp)
    fd5c:	10800a17 	ldw	r2,40(r2)
    fd60:	10800104 	addi	r2,r2,4
    fd64:	10800037 	ldwio	r2,0(r2)
    fd68:	e0bffd15 	stw	r2,-12(fp)
	if (read_CE_bit(ctrl_reg))
    fd6c:	e13ffd17 	ldw	r4,-12(fp)
    fd70:	000fae00 	call	fae0 <read_CE_bit>
    fd74:	10803fcc 	andi	r2,r2,255
    fd78:	10000226 	beq	r2,zero,fd84 <alt_up_ps2_write_data_byte+0x5c>
	{
		//CE bit is set --> error occurs on sending commands
		return -EIO;
    fd7c:	00bffec4 	movi	r2,-5
    fd80:	00000106 	br	fd88 <alt_up_ps2_write_data_byte+0x60>
	}
	return 0;
    fd84:	0005883a 	mov	r2,zero
}
    fd88:	e037883a 	mov	sp,fp
    fd8c:	dfc00117 	ldw	ra,4(sp)
    fd90:	df000017 	ldw	fp,0(sp)
    fd94:	dec00204 	addi	sp,sp,8
    fd98:	f800283a 	ret

0000fd9c <alt_up_ps2_wait_for_ack>:

int alt_up_ps2_wait_for_ack(alt_up_ps2_dev *ps2)
{
    fd9c:	defffc04 	addi	sp,sp,-16
    fda0:	dfc00315 	stw	ra,12(sp)
    fda4:	df000215 	stw	fp,8(sp)
    fda8:	df000204 	addi	fp,sp,8
    fdac:	e13fff15 	stw	r4,-4(fp)
	unsigned char data = 0;
    fdb0:	e03ffe45 	stb	zero,-7(fp)
	unsigned char status = 0;
    fdb4:	e03ffe05 	stb	zero,-8(fp)
	do
	{
		status = alt_up_ps2_read_data_byte_timeout(ps2, &data); 
    fdb8:	e0bffe44 	addi	r2,fp,-7
    fdbc:	100b883a 	mov	r5,r2
    fdc0:	e13fff17 	ldw	r4,-4(fp)
    fdc4:	000fe680 	call	fe68 <alt_up_ps2_read_data_byte_timeout>
    fdc8:	e0bffe05 	stb	r2,-8(fp)
		if ( status == 0)
    fdcc:	e0bffe03 	ldbu	r2,-8(fp)
    fdd0:	1000061e 	bne	r2,zero,fdec <alt_up_ps2_wait_for_ack+0x50>
		{
			if (data == PS2_ACK)
    fdd4:	e0bffe43 	ldbu	r2,-7(fp)
    fdd8:	10803fcc 	andi	r2,r2,255
    fddc:	10803e98 	cmpnei	r2,r2,250
    fde0:	103ff51e 	bne	r2,zero,fdb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700fdb8>
				return 0;
    fde4:	0005883a 	mov	r2,zero
    fde8:	00000106 	br	fdf0 <alt_up_ps2_wait_for_ack+0x54>
		}
		else 
		{
			return status;
    fdec:	e0bffe03 	ldbu	r2,-8(fp)
		}
	} while(1);
	return -ETIMEDOUT;
}
    fdf0:	e037883a 	mov	sp,fp
    fdf4:	dfc00117 	ldw	ra,4(sp)
    fdf8:	df000017 	ldw	fp,0(sp)
    fdfc:	dec00204 	addi	sp,sp,8
    fe00:	f800283a 	ret

0000fe04 <alt_up_ps2_write_data_byte_with_ack>:

int alt_up_ps2_write_data_byte_with_ack(alt_up_ps2_dev *ps2, unsigned char byte)
{
    fe04:	defffa04 	addi	sp,sp,-24
    fe08:	dfc00515 	stw	ra,20(sp)
    fe0c:	df000415 	stw	fp,16(sp)
    fe10:	df000404 	addi	fp,sp,16
    fe14:	e13ffe15 	stw	r4,-8(fp)
    fe18:	2805883a 	mov	r2,r5
    fe1c:	e0bfff05 	stb	r2,-4(fp)
	int send_status = alt_up_ps2_write_data_byte(ps2, byte);
    fe20:	e0bfff03 	ldbu	r2,-4(fp)
    fe24:	100b883a 	mov	r5,r2
    fe28:	e13ffe17 	ldw	r4,-8(fp)
    fe2c:	000fd280 	call	fd28 <alt_up_ps2_write_data_byte>
    fe30:	e0bffc15 	stw	r2,-16(fp)
	if ( send_status != 0)
    fe34:	e0bffc17 	ldw	r2,-16(fp)
    fe38:	10000226 	beq	r2,zero,fe44 <alt_up_ps2_write_data_byte_with_ack+0x40>
		// return on sending error
		return send_status;
    fe3c:	e0bffc17 	ldw	r2,-16(fp)
    fe40:	00000406 	br	fe54 <alt_up_ps2_write_data_byte_with_ack+0x50>

	int ack_status = alt_up_ps2_wait_for_ack(ps2);
    fe44:	e13ffe17 	ldw	r4,-8(fp)
    fe48:	000fd9c0 	call	fd9c <alt_up_ps2_wait_for_ack>
    fe4c:	e0bffd15 	stw	r2,-12(fp)
	return ack_status;
    fe50:	e0bffd17 	ldw	r2,-12(fp)
}
    fe54:	e037883a 	mov	sp,fp
    fe58:	dfc00117 	ldw	ra,4(sp)
    fe5c:	df000017 	ldw	fp,0(sp)
    fe60:	dec00204 	addi	sp,sp,8
    fe64:	f800283a 	ret

0000fe68 <alt_up_ps2_read_data_byte_timeout>:

int alt_up_ps2_read_data_byte_timeout(alt_up_ps2_dev *ps2, unsigned char *byte)
{
    fe68:	defffa04 	addi	sp,sp,-24
    fe6c:	dfc00515 	stw	ra,20(sp)
    fe70:	df000415 	stw	fp,16(sp)
    fe74:	df000404 	addi	fp,sp,16
    fe78:	e13ffe15 	stw	r4,-8(fp)
    fe7c:	e17fff15 	stw	r5,-4(fp)
	unsigned int data_reg = 0; 
    fe80:	e03ffd15 	stw	zero,-12(fp)
	unsigned int count = 0;
    fe84:	e03ffc15 	stw	zero,-16(fp)
	do {
		count++;
    fe88:	e0bffc17 	ldw	r2,-16(fp)
    fe8c:	10800044 	addi	r2,r2,1
    fe90:	e0bffc15 	stw	r2,-16(fp)
		data_reg = IORD_ALT_UP_PS2_PORT_DATA_REG(ps2->base);
    fe94:	e0bffe17 	ldw	r2,-8(fp)
    fe98:	10800a17 	ldw	r2,40(r2)
    fe9c:	10800037 	ldwio	r2,0(r2)
    fea0:	e0bffd15 	stw	r2,-12(fp)
		if (read_data_valid(data_reg))
    fea4:	e13ffd17 	ldw	r4,-12(fp)
    fea8:	000fb440 	call	fb44 <read_data_valid>
    feac:	10803fcc 	andi	r2,r2,255
    feb0:	10000726 	beq	r2,zero,fed0 <alt_up_ps2_read_data_byte_timeout+0x68>
		{
			*byte = read_data_byte(data_reg);
    feb4:	e13ffd17 	ldw	r4,-12(fp)
    feb8:	000fb780 	call	fb78 <read_data_byte>
    febc:	1007883a 	mov	r3,r2
    fec0:	e0bfff17 	ldw	r2,-4(fp)
    fec4:	10c00005 	stb	r3,0(r2)
			return 0;
    fec8:	0005883a 	mov	r2,zero
    fecc:	00000806 	br	fef0 <alt_up_ps2_read_data_byte_timeout+0x88>
		}
		//timeout = 0 means to disable the timeout
		if ( ps2->timeout != 0 && count > ps2->timeout)
    fed0:	e0bffe17 	ldw	r2,-8(fp)
    fed4:	10800c17 	ldw	r2,48(r2)
    fed8:	103feb26 	beq	r2,zero,fe88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700fe88>
    fedc:	e0bffe17 	ldw	r2,-8(fp)
    fee0:	10c00c17 	ldw	r3,48(r2)
    fee4:	e0bffc17 	ldw	r2,-16(fp)
    fee8:	18bfe72e 	bgeu	r3,r2,fe88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700fe88>
		{
			return -ETIMEDOUT;
    feec:	00bfe304 	movi	r2,-116
		}
	} while (1);
}
    fef0:	e037883a 	mov	sp,fp
    fef4:	dfc00117 	ldw	ra,4(sp)
    fef8:	df000017 	ldw	fp,0(sp)
    fefc:	dec00204 	addi	sp,sp,8
    ff00:	f800283a 	ret

0000ff04 <alt_up_ps2_read_data_byte>:

int alt_up_ps2_read_data_byte(alt_up_ps2_dev *ps2, unsigned char *byte)
{
    ff04:	defffb04 	addi	sp,sp,-20
    ff08:	dfc00415 	stw	ra,16(sp)
    ff0c:	df000315 	stw	fp,12(sp)
    ff10:	df000304 	addi	fp,sp,12
    ff14:	e13ffe15 	stw	r4,-8(fp)
    ff18:	e17fff15 	stw	r5,-4(fp)
	unsigned int data_reg = 0; 
    ff1c:	e03ffd15 	stw	zero,-12(fp)
	data_reg = IORD_ALT_UP_PS2_PORT_DATA_REG(ps2->base);
    ff20:	e0bffe17 	ldw	r2,-8(fp)
    ff24:	10800a17 	ldw	r2,40(r2)
    ff28:	10800037 	ldwio	r2,0(r2)
    ff2c:	e0bffd15 	stw	r2,-12(fp)
	if (read_data_valid(data_reg))
    ff30:	e13ffd17 	ldw	r4,-12(fp)
    ff34:	000fb440 	call	fb44 <read_data_valid>
    ff38:	10803fcc 	andi	r2,r2,255
    ff3c:	10000726 	beq	r2,zero,ff5c <alt_up_ps2_read_data_byte+0x58>
	{
		*byte = read_data_byte(data_reg);
    ff40:	e13ffd17 	ldw	r4,-12(fp)
    ff44:	000fb780 	call	fb78 <read_data_byte>
    ff48:	1007883a 	mov	r3,r2
    ff4c:	e0bfff17 	ldw	r2,-4(fp)
    ff50:	10c00005 	stb	r3,0(r2)
		return 0;
    ff54:	0005883a 	mov	r2,zero
    ff58:	00000106 	br	ff60 <alt_up_ps2_read_data_byte+0x5c>
	}
	return -1;
    ff5c:	00bfffc4 	movi	r2,-1
}
    ff60:	e037883a 	mov	sp,fp
    ff64:	dfc00117 	ldw	ra,4(sp)
    ff68:	df000017 	ldw	fp,0(sp)
    ff6c:	dec00204 	addi	sp,sp,8
    ff70:	f800283a 	ret

0000ff74 <alt_up_ps2_clear_fifo>:

void alt_up_ps2_clear_fifo(alt_up_ps2_dev *ps2)
{
    ff74:	defffb04 	addi	sp,sp,-20
    ff78:	dfc00415 	stw	ra,16(sp)
    ff7c:	df000315 	stw	fp,12(sp)
    ff80:	df000304 	addi	fp,sp,12
    ff84:	e13fff15 	stw	r4,-4(fp)
	// The DATA byte of the data register will be automatically cleared after a read
	// So we simply keep reading it until there are no available bytes
	alt_u16 num = 0;
    ff88:	e03ffd0d 	sth	zero,-12(fp)
	unsigned int data_reg = 0;
    ff8c:	e03ffe15 	stw	zero,-8(fp)
	do
	{
		// read the data register (the DATA byte is cleared)
		data_reg = IORD_ALT_UP_PS2_PORT_DATA_REG(ps2->base);
    ff90:	e0bfff17 	ldw	r2,-4(fp)
    ff94:	10800a17 	ldw	r2,40(r2)
    ff98:	10800037 	ldwio	r2,0(r2)
    ff9c:	e0bffe15 	stw	r2,-8(fp)
		// get the number of available bytes from the RAVAIL part of data register
		num = read_num_bytes_available(data_reg);
    ffa0:	e13ffe17 	ldw	r4,-8(fp)
    ffa4:	000fb140 	call	fb14 <read_num_bytes_available>
    ffa8:	e0bffd0d 	sth	r2,-12(fp)
	} while (num > 0);
    ffac:	e0bffd0b 	ldhu	r2,-12(fp)
    ffb0:	103ff71e 	bne	r2,zero,ff90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ff90>
}
    ffb4:	0001883a 	nop
    ffb8:	e037883a 	mov	sp,fp
    ffbc:	dfc00117 	ldw	ra,4(sp)
    ffc0:	df000017 	ldw	fp,0(sp)
    ffc4:	dec00204 	addi	sp,sp,8
    ffc8:	f800283a 	ret

0000ffcc <alt_up_ps2_read_fd>:

//////////////////////////////////////////////////////////////
// FD Functions
int alt_up_ps2_read_fd (alt_fd* fd, char* ptr, int len)
{
    ffcc:	defff804 	addi	sp,sp,-32
    ffd0:	dfc00715 	stw	ra,28(sp)
    ffd4:	df000615 	stw	fp,24(sp)
    ffd8:	df000604 	addi	fp,sp,24
    ffdc:	e13ffd15 	stw	r4,-12(fp)
    ffe0:	e17ffe15 	stw	r5,-8(fp)
    ffe4:	e1bfff15 	stw	r6,-4(fp)
	alt_up_ps2_dev *ps2 = (alt_up_ps2_dev*) fd->dev;
    ffe8:	e0bffd17 	ldw	r2,-12(fp)
    ffec:	10800017 	ldw	r2,0(r2)
    fff0:	e0bffa15 	stw	r2,-24(fp)
	int status = 0;
    fff4:	e03ffb15 	stw	zero,-20(fp)
	int count = 0;
    fff8:	e03ffc15 	stw	zero,-16(fp)
	while (count < len);
    fffc:	e0fffc17 	ldw	r3,-16(fp)
   10000:	e0bfff17 	ldw	r2,-4(fp)
   10004:	18bffd16 	blt	r3,r2,fffc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700fffc>
	{
		status = alt_up_ps2_read_data_byte_timeout(ps2, (unsigned char *)ptr++);
   10008:	e0bffe17 	ldw	r2,-8(fp)
   1000c:	10c00044 	addi	r3,r2,1
   10010:	e0fffe15 	stw	r3,-8(fp)
   10014:	100b883a 	mov	r5,r2
   10018:	e13ffa17 	ldw	r4,-24(fp)
   1001c:	000fe680 	call	fe68 <alt_up_ps2_read_data_byte_timeout>
   10020:	e0bffb15 	stw	r2,-20(fp)
		if (status!=0)
   10024:	e0bffb17 	ldw	r2,-20(fp)
   10028:	10000226 	beq	r2,zero,10034 <alt_up_ps2_read_fd+0x68>
			return count;
   1002c:	e0bffc17 	ldw	r2,-16(fp)
   10030:	00000406 	br	10044 <alt_up_ps2_read_fd+0x78>
		count++;
   10034:	e0bffc17 	ldw	r2,-16(fp)
   10038:	10800044 	addi	r2,r2,1
   1003c:	e0bffc15 	stw	r2,-16(fp)
	} 
	return count;
   10040:	e0bffc17 	ldw	r2,-16(fp)
}
   10044:	e037883a 	mov	sp,fp
   10048:	dfc00117 	ldw	ra,4(sp)
   1004c:	df000017 	ldw	fp,0(sp)
   10050:	dec00204 	addi	sp,sp,8
   10054:	f800283a 	ret

00010058 <alt_up_ps2_write_fd>:

int alt_up_ps2_write_fd (alt_fd* fd, const char* ptr, int len)
{
   10058:	defff804 	addi	sp,sp,-32
   1005c:	dfc00715 	stw	ra,28(sp)
   10060:	df000615 	stw	fp,24(sp)
   10064:	df000604 	addi	fp,sp,24
   10068:	e13ffd15 	stw	r4,-12(fp)
   1006c:	e17ffe15 	stw	r5,-8(fp)
   10070:	e1bfff15 	stw	r6,-4(fp)
	alt_up_ps2_dev *ps2 = (alt_up_ps2_dev*) fd->dev;
   10074:	e0bffd17 	ldw	r2,-12(fp)
   10078:	10800017 	ldw	r2,0(r2)
   1007c:	e0bffb15 	stw	r2,-20(fp)
	int status = 0;
   10080:	e03ffc15 	stw	zero,-16(fp)
	int count = 0;
   10084:	e03ffa15 	stw	zero,-24(fp)
	while (count < len)
   10088:	00001006 	br	100cc <alt_up_ps2_write_fd+0x74>
	{
		status = alt_up_ps2_write_data_byte(ps2, *(ptr++) );
   1008c:	e0bffe17 	ldw	r2,-8(fp)
   10090:	10c00044 	addi	r3,r2,1
   10094:	e0fffe15 	stw	r3,-8(fp)
   10098:	10800003 	ldbu	r2,0(r2)
   1009c:	10803fcc 	andi	r2,r2,255
   100a0:	100b883a 	mov	r5,r2
   100a4:	e13ffb17 	ldw	r4,-20(fp)
   100a8:	000fd280 	call	fd28 <alt_up_ps2_write_data_byte>
   100ac:	e0bffc15 	stw	r2,-16(fp)
		if (status!=0)
   100b0:	e0bffc17 	ldw	r2,-16(fp)
   100b4:	10000226 	beq	r2,zero,100c0 <alt_up_ps2_write_fd+0x68>
			return count;
   100b8:	e0bffa17 	ldw	r2,-24(fp)
   100bc:	00000706 	br	100dc <alt_up_ps2_write_fd+0x84>
		count++;
   100c0:	e0bffa17 	ldw	r2,-24(fp)
   100c4:	10800044 	addi	r2,r2,1
   100c8:	e0bffa15 	stw	r2,-24(fp)
int alt_up_ps2_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_ps2_dev *ps2 = (alt_up_ps2_dev*) fd->dev;
	int status = 0;
	int count = 0;
	while (count < len)
   100cc:	e0fffa17 	ldw	r3,-24(fp)
   100d0:	e0bfff17 	ldw	r2,-4(fp)
   100d4:	18bfed16 	blt	r3,r2,1008c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf701008c>
		status = alt_up_ps2_write_data_byte(ps2, *(ptr++) );
		if (status!=0)
			return count;
		count++;
	}
	return count;
   100d8:	e0bffa17 	ldw	r2,-24(fp)
}
   100dc:	e037883a 	mov	sp,fp
   100e0:	dfc00117 	ldw	ra,4(sp)
   100e4:	df000017 	ldw	fp,0(sp)
   100e8:	dec00204 	addi	sp,sp,8
   100ec:	f800283a 	ret

000100f0 <alt_up_ps2_open_dev>:

alt_up_ps2_dev* alt_up_ps2_open_dev(const char* name)
{
   100f0:	defffc04 	addi	sp,sp,-16
   100f4:	dfc00315 	stw	ra,12(sp)
   100f8:	df000215 	stw	fp,8(sp)
   100fc:	df000204 	addi	fp,sp,8
   10100:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_ps2_dev *dev = (alt_up_ps2_dev*)alt_find_dev(name, &alt_dev_list);
   10104:	d1600904 	addi	r5,gp,-32732
   10108:	e13fff17 	ldw	r4,-4(fp)
   1010c:	00107a80 	call	107a8 <alt_find_dev>
   10110:	e0bffe15 	stw	r2,-8(fp)

  return dev;
   10114:	e0bffe17 	ldw	r2,-8(fp)
}
   10118:	e037883a 	mov	sp,fp
   1011c:	dfc00117 	ldw	ra,4(sp)
   10120:	df000017 	ldw	fp,0(sp)
   10124:	dec00204 	addi	sp,sp,8
   10128:	f800283a 	ret

0001012c <alt_up_rs232_enable_read_interrupt>:
#include "altera_up_avalon_rs232.h"
#include "altera_up_avalon_rs232_regs.h"


void alt_up_rs232_enable_read_interrupt(alt_up_rs232_dev *rs232)
{
   1012c:	defffd04 	addi	sp,sp,-12
   10130:	df000215 	stw	fp,8(sp)
   10134:	df000204 	addi	fp,sp,8
   10138:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   1013c:	e0bfff17 	ldw	r2,-4(fp)
   10140:	10800a17 	ldw	r2,40(r2)
   10144:	10800104 	addi	r2,r2,4
   10148:	10800037 	ldwio	r2,0(r2)
   1014c:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_RS232_CONTROL_RE_MSK;
   10150:	e0bffe17 	ldw	r2,-8(fp)
   10154:	10800054 	ori	r2,r2,1
   10158:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
   1015c:	e0bfff17 	ldw	r2,-4(fp)
   10160:	10800a17 	ldw	r2,40(r2)
   10164:	10800104 	addi	r2,r2,4
   10168:	1007883a 	mov	r3,r2
   1016c:	e0bffe17 	ldw	r2,-8(fp)
   10170:	18800035 	stwio	r2,0(r3)
}
   10174:	0001883a 	nop
   10178:	e037883a 	mov	sp,fp
   1017c:	df000017 	ldw	fp,0(sp)
   10180:	dec00104 	addi	sp,sp,4
   10184:	f800283a 	ret

00010188 <alt_up_rs232_disable_read_interrupt>:

void alt_up_rs232_disable_read_interrupt(alt_up_rs232_dev *rs232)
{
   10188:	defffd04 	addi	sp,sp,-12
   1018c:	df000215 	stw	fp,8(sp)
   10190:	df000204 	addi	fp,sp,8
   10194:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   10198:	e0bfff17 	ldw	r2,-4(fp)
   1019c:	10800a17 	ldw	r2,40(r2)
   101a0:	10800104 	addi	r2,r2,4
   101a4:	10800037 	ldwio	r2,0(r2)
   101a8:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_RS232_CONTROL_RE_MSK;
   101ac:	e0fffe17 	ldw	r3,-8(fp)
   101b0:	00bfff84 	movi	r2,-2
   101b4:	1884703a 	and	r2,r3,r2
   101b8:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
   101bc:	e0bfff17 	ldw	r2,-4(fp)
   101c0:	10800a17 	ldw	r2,40(r2)
   101c4:	10800104 	addi	r2,r2,4
   101c8:	1007883a 	mov	r3,r2
   101cc:	e0bffe17 	ldw	r2,-8(fp)
   101d0:	18800035 	stwio	r2,0(r3)
}
   101d4:	0001883a 	nop
   101d8:	e037883a 	mov	sp,fp
   101dc:	df000017 	ldw	fp,0(sp)
   101e0:	dec00104 	addi	sp,sp,4
   101e4:	f800283a 	ret

000101e8 <alt_up_rs232_get_used_space_in_read_FIFO>:

unsigned alt_up_rs232_get_used_space_in_read_FIFO(alt_up_rs232_dev *rs232)
{
   101e8:	defffd04 	addi	sp,sp,-12
   101ec:	df000215 	stw	fp,8(sp)
   101f0:	df000204 	addi	fp,sp,8
   101f4:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = 0;
   101f8:	e03ffe0d 	sth	zero,-8(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_RS232_DATA(rs232->base), 2); 
	ravail = IORD_ALT_UP_RS232_RAVAIL(rs232->base); 
   101fc:	e0bfff17 	ldw	r2,-4(fp)
   10200:	10800a17 	ldw	r2,40(r2)
   10204:	10800084 	addi	r2,r2,2
   10208:	1080002b 	ldhuio	r2,0(r2)
   1020c:	10bfffcc 	andi	r2,r2,65535
   10210:	e0bffe0d 	sth	r2,-8(fp)
//	return ravail;
	return (ravail & ALT_UP_RS232_RAVAIL_MSK) >> ALT_UP_RS232_RAVAIL_OFST;
   10214:	e0bffe0b 	ldhu	r2,-8(fp)
}
   10218:	e037883a 	mov	sp,fp
   1021c:	df000017 	ldw	fp,0(sp)
   10220:	dec00104 	addi	sp,sp,4
   10224:	f800283a 	ret

00010228 <alt_up_rs232_get_available_space_in_write_FIFO>:

unsigned alt_up_rs232_get_available_space_in_write_FIFO(alt_up_rs232_dev *rs232)
{
   10228:	defffd04 	addi	sp,sp,-12
   1022c:	df000215 	stw	fp,8(sp)
   10230:	df000204 	addi	fp,sp,8
   10234:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   10238:	e0bfff17 	ldw	r2,-4(fp)
   1023c:	10800a17 	ldw	r2,40(r2)
   10240:	10800104 	addi	r2,r2,4
   10244:	10800037 	ldwio	r2,0(r2)
   10248:	e0bffe15 	stw	r2,-8(fp)
	return (ctrl_reg & ALT_UP_RS232_CONTROL_WSPACE_MSK) >> ALT_UP_RS232_CONTROL_WSPACE_OFST;
   1024c:	e0bffe17 	ldw	r2,-8(fp)
   10250:	1004d43a 	srli	r2,r2,16
}
   10254:	e037883a 	mov	sp,fp
   10258:	df000017 	ldw	fp,0(sp)
   1025c:	dec00104 	addi	sp,sp,4
   10260:	f800283a 	ret

00010264 <alt_up_rs232_check_parity>:

int alt_up_rs232_check_parity(alt_u32 data_reg)
{
   10264:	defffd04 	addi	sp,sp,-12
   10268:	df000215 	stw	fp,8(sp)
   1026c:	df000204 	addi	fp,sp,8
   10270:	e13fff15 	stw	r4,-4(fp)
	unsigned parity_error = (data_reg & ALT_UP_RS232_DATA_PE_MSK) >> ALT_UP_RS232_DATA_PE_OFST;
   10274:	e0bfff17 	ldw	r2,-4(fp)
   10278:	1080800c 	andi	r2,r2,512
   1027c:	1004d27a 	srli	r2,r2,9
   10280:	e0bffe15 	stw	r2,-8(fp)
	return (parity_error ? -1 : 0);
   10284:	e0bffe17 	ldw	r2,-8(fp)
   10288:	10000226 	beq	r2,zero,10294 <alt_up_rs232_check_parity+0x30>
   1028c:	00bfffc4 	movi	r2,-1
   10290:	00000106 	br	10298 <alt_up_rs232_check_parity+0x34>
   10294:	0005883a 	mov	r2,zero
}
   10298:	e037883a 	mov	sp,fp
   1029c:	df000017 	ldw	fp,0(sp)
   102a0:	dec00104 	addi	sp,sp,4
   102a4:	f800283a 	ret

000102a8 <alt_up_rs232_write_data>:

int alt_up_rs232_write_data(alt_up_rs232_dev *rs232, alt_u8 data)
{
   102a8:	defffd04 	addi	sp,sp,-12
   102ac:	df000215 	stw	fp,8(sp)
   102b0:	df000204 	addi	fp,sp,8
   102b4:	e13ffe15 	stw	r4,-8(fp)
   102b8:	2805883a 	mov	r2,r5
   102bc:	e0bfff05 	stb	r2,-4(fp)
	/*alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);*/
    
	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_RS232_DATA(rs232->base, (data>>ALT_UP_RS232_DATA_DATA_OFST) & ALT_UP_RS232_DATA_DATA_MSK);
   102c0:	e0bffe17 	ldw	r2,-8(fp)
   102c4:	10800a17 	ldw	r2,40(r2)
   102c8:	1007883a 	mov	r3,r2
   102cc:	e0bfff03 	ldbu	r2,-4(fp)
   102d0:	18800035 	stwio	r2,0(r3)
	return 0;
   102d4:	0005883a 	mov	r2,zero
}
   102d8:	e037883a 	mov	sp,fp
   102dc:	df000017 	ldw	fp,0(sp)
   102e0:	dec00104 	addi	sp,sp,4
   102e4:	f800283a 	ret

000102e8 <alt_up_rs232_read_data>:

int alt_up_rs232_read_data(alt_up_rs232_dev *rs232, alt_u8 *data, alt_u8 *parity_error)
{
   102e8:	defffa04 	addi	sp,sp,-24
   102ec:	dfc00515 	stw	ra,20(sp)
   102f0:	df000415 	stw	fp,16(sp)
   102f4:	df000404 	addi	fp,sp,16
   102f8:	e13ffd15 	stw	r4,-12(fp)
   102fc:	e17ffe15 	stw	r5,-8(fp)
   10300:	e1bfff15 	stw	r6,-4(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);
   10304:	e0bffd17 	ldw	r2,-12(fp)
   10308:	10800a17 	ldw	r2,40(r2)
   1030c:	10800037 	ldwio	r2,0(r2)
   10310:	e0bffc15 	stw	r2,-16(fp)
	*data = (data_reg & ALT_UP_RS232_DATA_DATA_MSK) >> ALT_UP_RS232_DATA_DATA_OFST;
   10314:	e0bffc17 	ldw	r2,-16(fp)
   10318:	1007883a 	mov	r3,r2
   1031c:	e0bffe17 	ldw	r2,-8(fp)
   10320:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_rs232_check_parity(data_reg);
   10324:	e13ffc17 	ldw	r4,-16(fp)
   10328:	00102640 	call	10264 <alt_up_rs232_check_parity>
   1032c:	1007883a 	mov	r3,r2
   10330:	e0bfff17 	ldw	r2,-4(fp)
   10334:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_RS232_DATA_RVALID_MSK) >> ALT_UP_RS232_DATA_RVALID_OFST) - 1);
   10338:	e0bffc17 	ldw	r2,-16(fp)
   1033c:	10a0000c 	andi	r2,r2,32768
   10340:	1004d3fa 	srli	r2,r2,15
   10344:	10bfffc4 	addi	r2,r2,-1
}
   10348:	e037883a 	mov	sp,fp
   1034c:	dfc00117 	ldw	ra,4(sp)
   10350:	df000017 	ldw	fp,0(sp)
   10354:	dec00204 	addi	sp,sp,8
   10358:	f800283a 	ret

0001035c <alt_up_rs232_read_fd>:

int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
   1035c:	defff804 	addi	sp,sp,-32
   10360:	dfc00715 	stw	ra,28(sp)
   10364:	df000615 	stw	fp,24(sp)
   10368:	df000604 	addi	fp,sp,24
   1036c:	e13ffd15 	stw	r4,-12(fp)
   10370:	e17ffe15 	stw	r5,-8(fp)
   10374:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
   10378:	e0bffd17 	ldw	r2,-12(fp)
   1037c:	10800017 	ldw	r2,0(r2)
   10380:	e0bffb15 	stw	r2,-20(fp)
	int count = 0;
   10384:	e03ffa15 	stw	zero,-24(fp)
	alt_u8 parity_error;
	while(len--)
   10388:	00000c06 	br	103bc <alt_up_rs232_read_fd+0x60>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
   1038c:	e0bffe17 	ldw	r2,-8(fp)
   10390:	10c00044 	addi	r3,r2,1
   10394:	e0fffe15 	stw	r3,-8(fp)
   10398:	e0fffc04 	addi	r3,fp,-16
   1039c:	180d883a 	mov	r6,r3
   103a0:	100b883a 	mov	r5,r2
   103a4:	e13ffb17 	ldw	r4,-20(fp)
   103a8:	00102e80 	call	102e8 <alt_up_rs232_read_data>
   103ac:	1000081e 	bne	r2,zero,103d0 <alt_up_rs232_read_fd+0x74>
			count++;
   103b0:	e0bffa17 	ldw	r2,-24(fp)
   103b4:	10800044 	addi	r2,r2,1
   103b8:	e0bffa15 	stw	r2,-24(fp)
int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	alt_u8 parity_error;
	while(len--)
   103bc:	e0bfff17 	ldw	r2,-4(fp)
   103c0:	10ffffc4 	addi	r3,r2,-1
   103c4:	e0ffff15 	stw	r3,-4(fp)
   103c8:	103ff01e 	bne	r2,zero,1038c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf701038c>
   103cc:	00000106 	br	103d4 <alt_up_rs232_read_fd+0x78>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
			count++;
		else
			break;
   103d0:	0001883a 	nop
	}
	return count;
   103d4:	e0bffa17 	ldw	r2,-24(fp)
}
   103d8:	e037883a 	mov	sp,fp
   103dc:	dfc00117 	ldw	ra,4(sp)
   103e0:	df000017 	ldw	fp,0(sp)
   103e4:	dec00204 	addi	sp,sp,8
   103e8:	f800283a 	ret

000103ec <alt_up_rs232_write_fd>:

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
   103ec:	defff904 	addi	sp,sp,-28
   103f0:	dfc00615 	stw	ra,24(sp)
   103f4:	df000515 	stw	fp,20(sp)
   103f8:	df000504 	addi	fp,sp,20
   103fc:	e13ffd15 	stw	r4,-12(fp)
   10400:	e17ffe15 	stw	r5,-8(fp)
   10404:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
   10408:	e0bffd17 	ldw	r2,-12(fp)
   1040c:	10800017 	ldw	r2,0(r2)
   10410:	e0bffc15 	stw	r2,-16(fp)
	int count = 0;
   10414:	e03ffb15 	stw	zero,-20(fp)
	while(len--)
   10418:	00000d06 	br	10450 <alt_up_rs232_write_fd+0x64>
	{
		if (alt_up_rs232_write_data(rs232, *ptr)==0)
   1041c:	e0bffe17 	ldw	r2,-8(fp)
   10420:	10800003 	ldbu	r2,0(r2)
   10424:	10803fcc 	andi	r2,r2,255
   10428:	100b883a 	mov	r5,r2
   1042c:	e13ffc17 	ldw	r4,-16(fp)
   10430:	00102a80 	call	102a8 <alt_up_rs232_write_data>
   10434:	10000b1e 	bne	r2,zero,10464 <alt_up_rs232_write_fd+0x78>
		{
			count++;
   10438:	e0bffb17 	ldw	r2,-20(fp)
   1043c:	10800044 	addi	r2,r2,1
   10440:	e0bffb15 	stw	r2,-20(fp)
			ptr++;
   10444:	e0bffe17 	ldw	r2,-8(fp)
   10448:	10800044 	addi	r2,r2,1
   1044c:	e0bffe15 	stw	r2,-8(fp)

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	while(len--)
   10450:	e0bfff17 	ldw	r2,-4(fp)
   10454:	10ffffc4 	addi	r3,r2,-1
   10458:	e0ffff15 	stw	r3,-4(fp)
   1045c:	103fef1e 	bne	r2,zero,1041c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf701041c>
   10460:	00000106 	br	10468 <alt_up_rs232_write_fd+0x7c>
		{
			count++;
			ptr++;
		}
		else
			break;
   10464:	0001883a 	nop
	}
	return count;
   10468:	e0bffb17 	ldw	r2,-20(fp)
}
   1046c:	e037883a 	mov	sp,fp
   10470:	dfc00117 	ldw	ra,4(sp)
   10474:	df000017 	ldw	fp,0(sp)
   10478:	dec00204 	addi	sp,sp,8
   1047c:	f800283a 	ret

00010480 <alt_up_rs232_open_dev>:

alt_up_rs232_dev* alt_up_rs232_open_dev(const char* name)
{
   10480:	defffc04 	addi	sp,sp,-16
   10484:	dfc00315 	stw	ra,12(sp)
   10488:	df000215 	stw	fp,8(sp)
   1048c:	df000204 	addi	fp,sp,8
   10490:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_rs232_dev *dev = (alt_up_rs232_dev*)alt_find_dev(name, &alt_dev_list);
   10494:	d1600904 	addi	r5,gp,-32732
   10498:	e13fff17 	ldw	r4,-4(fp)
   1049c:	00107a80 	call	107a8 <alt_find_dev>
   104a0:	e0bffe15 	stw	r2,-8(fp)

  return dev;
   104a4:	e0bffe17 	ldw	r2,-8(fp)
}
   104a8:	e037883a 	mov	sp,fp
   104ac:	dfc00117 	ldw	ra,4(sp)
   104b0:	df000017 	ldw	fp,0(sp)
   104b4:	dec00204 	addi	sp,sp,8
   104b8:	f800283a 	ret

000104bc <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   104bc:	defff504 	addi	sp,sp,-44
   104c0:	df000a15 	stw	fp,40(sp)
   104c4:	df000a04 	addi	fp,sp,40
   104c8:	e13ffc15 	stw	r4,-16(fp)
   104cc:	e17ffd15 	stw	r5,-12(fp)
   104d0:	e1bffe15 	stw	r6,-8(fp)
   104d4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   104d8:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   104dc:	d0a7a217 	ldw	r2,-24952(gp)
  
  if (alt_ticks_per_second ())
   104e0:	10003c26 	beq	r2,zero,105d4 <alt_alarm_start+0x118>
  {
    if (alarm)
   104e4:	e0bffc17 	ldw	r2,-16(fp)
   104e8:	10003826 	beq	r2,zero,105cc <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   104ec:	e0bffc17 	ldw	r2,-16(fp)
   104f0:	e0fffe17 	ldw	r3,-8(fp)
   104f4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   104f8:	e0bffc17 	ldw	r2,-16(fp)
   104fc:	e0ffff17 	ldw	r3,-4(fp)
   10500:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10504:	0005303a 	rdctl	r2,status
   10508:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1050c:	e0fff917 	ldw	r3,-28(fp)
   10510:	00bfff84 	movi	r2,-2
   10514:	1884703a 	and	r2,r3,r2
   10518:	1001703a 	wrctl	status,r2
  
  return context;
   1051c:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   10520:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   10524:	d0a7a317 	ldw	r2,-24948(gp)
      
      current_nticks = alt_nticks();
   10528:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   1052c:	e0fffd17 	ldw	r3,-12(fp)
   10530:	e0bff617 	ldw	r2,-40(fp)
   10534:	1885883a 	add	r2,r3,r2
   10538:	10c00044 	addi	r3,r2,1
   1053c:	e0bffc17 	ldw	r2,-16(fp)
   10540:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   10544:	e0bffc17 	ldw	r2,-16(fp)
   10548:	10c00217 	ldw	r3,8(r2)
   1054c:	e0bff617 	ldw	r2,-40(fp)
   10550:	1880042e 	bgeu	r3,r2,10564 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   10554:	e0bffc17 	ldw	r2,-16(fp)
   10558:	00c00044 	movi	r3,1
   1055c:	10c00405 	stb	r3,16(r2)
   10560:	00000206 	br	1056c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   10564:	e0bffc17 	ldw	r2,-16(fp)
   10568:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   1056c:	e0bffc17 	ldw	r2,-16(fp)
   10570:	d0e00e04 	addi	r3,gp,-32712
   10574:	e0fffa15 	stw	r3,-24(fp)
   10578:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   1057c:	e0bffb17 	ldw	r2,-20(fp)
   10580:	e0fffa17 	ldw	r3,-24(fp)
   10584:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   10588:	e0bffa17 	ldw	r2,-24(fp)
   1058c:	10c00017 	ldw	r3,0(r2)
   10590:	e0bffb17 	ldw	r2,-20(fp)
   10594:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   10598:	e0bffa17 	ldw	r2,-24(fp)
   1059c:	10800017 	ldw	r2,0(r2)
   105a0:	e0fffb17 	ldw	r3,-20(fp)
   105a4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   105a8:	e0bffa17 	ldw	r2,-24(fp)
   105ac:	e0fffb17 	ldw	r3,-20(fp)
   105b0:	10c00015 	stw	r3,0(r2)
   105b4:	e0bff817 	ldw	r2,-32(fp)
   105b8:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   105bc:	e0bff717 	ldw	r2,-36(fp)
   105c0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   105c4:	0005883a 	mov	r2,zero
   105c8:	00000306 	br	105d8 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   105cc:	00bffa84 	movi	r2,-22
   105d0:	00000106 	br	105d8 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   105d4:	00bfde84 	movi	r2,-134
  }
}
   105d8:	e037883a 	mov	sp,fp
   105dc:	df000017 	ldw	fp,0(sp)
   105e0:	dec00104 	addi	sp,sp,4
   105e4:	f800283a 	ret

000105e8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   105e8:	deffff04 	addi	sp,sp,-4
   105ec:	df000015 	stw	fp,0(sp)
   105f0:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   105f4:	0001883a 	nop
   105f8:	e037883a 	mov	sp,fp
   105fc:	df000017 	ldw	fp,0(sp)
   10600:	dec00104 	addi	sp,sp,4
   10604:	f800283a 	ret

00010608 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   10608:	defffe04 	addi	sp,sp,-8
   1060c:	dfc00115 	stw	ra,4(sp)
   10610:	df000015 	stw	fp,0(sp)
   10614:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   10618:	d0a00c17 	ldw	r2,-32720(gp)
   1061c:	10000326 	beq	r2,zero,1062c <alt_get_errno+0x24>
   10620:	d0a00c17 	ldw	r2,-32720(gp)
   10624:	103ee83a 	callr	r2
   10628:	00000106 	br	10630 <alt_get_errno+0x28>
   1062c:	d0a79a04 	addi	r2,gp,-24984
}
   10630:	e037883a 	mov	sp,fp
   10634:	dfc00117 	ldw	ra,4(sp)
   10638:	df000017 	ldw	fp,0(sp)
   1063c:	dec00204 	addi	sp,sp,8
   10640:	f800283a 	ret

00010644 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   10644:	defffa04 	addi	sp,sp,-24
   10648:	dfc00515 	stw	ra,20(sp)
   1064c:	df000415 	stw	fp,16(sp)
   10650:	df000404 	addi	fp,sp,16
   10654:	e13ffe15 	stw	r4,-8(fp)
   10658:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   1065c:	e0bffe17 	ldw	r2,-8(fp)
   10660:	10000326 	beq	r2,zero,10670 <alt_dev_llist_insert+0x2c>
   10664:	e0bffe17 	ldw	r2,-8(fp)
   10668:	10800217 	ldw	r2,8(r2)
   1066c:	1000061e 	bne	r2,zero,10688 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   10670:	00106080 	call	10608 <alt_get_errno>
   10674:	1007883a 	mov	r3,r2
   10678:	00800584 	movi	r2,22
   1067c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   10680:	00bffa84 	movi	r2,-22
   10684:	00001306 	br	106d4 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   10688:	e0bffe17 	ldw	r2,-8(fp)
   1068c:	e0ffff17 	ldw	r3,-4(fp)
   10690:	e0fffc15 	stw	r3,-16(fp)
   10694:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   10698:	e0bffd17 	ldw	r2,-12(fp)
   1069c:	e0fffc17 	ldw	r3,-16(fp)
   106a0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   106a4:	e0bffc17 	ldw	r2,-16(fp)
   106a8:	10c00017 	ldw	r3,0(r2)
   106ac:	e0bffd17 	ldw	r2,-12(fp)
   106b0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   106b4:	e0bffc17 	ldw	r2,-16(fp)
   106b8:	10800017 	ldw	r2,0(r2)
   106bc:	e0fffd17 	ldw	r3,-12(fp)
   106c0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   106c4:	e0bffc17 	ldw	r2,-16(fp)
   106c8:	e0fffd17 	ldw	r3,-12(fp)
   106cc:	10c00015 	stw	r3,0(r2)

  return 0;  
   106d0:	0005883a 	mov	r2,zero
}
   106d4:	e037883a 	mov	sp,fp
   106d8:	dfc00117 	ldw	ra,4(sp)
   106dc:	df000017 	ldw	fp,0(sp)
   106e0:	dec00204 	addi	sp,sp,8
   106e4:	f800283a 	ret

000106e8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   106e8:	defffd04 	addi	sp,sp,-12
   106ec:	dfc00215 	stw	ra,8(sp)
   106f0:	df000115 	stw	fp,4(sp)
   106f4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   106f8:	00800074 	movhi	r2,1
   106fc:	10850304 	addi	r2,r2,5132
   10700:	e0bfff15 	stw	r2,-4(fp)
   10704:	00000606 	br	10720 <_do_ctors+0x38>
        (*ctor) (); 
   10708:	e0bfff17 	ldw	r2,-4(fp)
   1070c:	10800017 	ldw	r2,0(r2)
   10710:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   10714:	e0bfff17 	ldw	r2,-4(fp)
   10718:	10bfff04 	addi	r2,r2,-4
   1071c:	e0bfff15 	stw	r2,-4(fp)
   10720:	e0ffff17 	ldw	r3,-4(fp)
   10724:	00800074 	movhi	r2,1
   10728:	10850404 	addi	r2,r2,5136
   1072c:	18bff62e 	bgeu	r3,r2,10708 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7010708>
        (*ctor) (); 
}
   10730:	0001883a 	nop
   10734:	e037883a 	mov	sp,fp
   10738:	dfc00117 	ldw	ra,4(sp)
   1073c:	df000017 	ldw	fp,0(sp)
   10740:	dec00204 	addi	sp,sp,8
   10744:	f800283a 	ret

00010748 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   10748:	defffd04 	addi	sp,sp,-12
   1074c:	dfc00215 	stw	ra,8(sp)
   10750:	df000115 	stw	fp,4(sp)
   10754:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   10758:	00800074 	movhi	r2,1
   1075c:	10850304 	addi	r2,r2,5132
   10760:	e0bfff15 	stw	r2,-4(fp)
   10764:	00000606 	br	10780 <_do_dtors+0x38>
        (*dtor) (); 
   10768:	e0bfff17 	ldw	r2,-4(fp)
   1076c:	10800017 	ldw	r2,0(r2)
   10770:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   10774:	e0bfff17 	ldw	r2,-4(fp)
   10778:	10bfff04 	addi	r2,r2,-4
   1077c:	e0bfff15 	stw	r2,-4(fp)
   10780:	e0ffff17 	ldw	r3,-4(fp)
   10784:	00800074 	movhi	r2,1
   10788:	10850404 	addi	r2,r2,5136
   1078c:	18bff62e 	bgeu	r3,r2,10768 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7010768>
        (*dtor) (); 
}
   10790:	0001883a 	nop
   10794:	e037883a 	mov	sp,fp
   10798:	dfc00117 	ldw	ra,4(sp)
   1079c:	df000017 	ldw	fp,0(sp)
   107a0:	dec00204 	addi	sp,sp,8
   107a4:	f800283a 	ret

000107a8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   107a8:	defffa04 	addi	sp,sp,-24
   107ac:	dfc00515 	stw	ra,20(sp)
   107b0:	df000415 	stw	fp,16(sp)
   107b4:	df000404 	addi	fp,sp,16
   107b8:	e13ffe15 	stw	r4,-8(fp)
   107bc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   107c0:	e0bfff17 	ldw	r2,-4(fp)
   107c4:	10800017 	ldw	r2,0(r2)
   107c8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   107cc:	e13ffe17 	ldw	r4,-8(fp)
   107d0:	00072200 	call	7220 <strlen>
   107d4:	10800044 	addi	r2,r2,1
   107d8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   107dc:	00000d06 	br	10814 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   107e0:	e0bffc17 	ldw	r2,-16(fp)
   107e4:	10800217 	ldw	r2,8(r2)
   107e8:	e0fffd17 	ldw	r3,-12(fp)
   107ec:	180d883a 	mov	r6,r3
   107f0:	e17ffe17 	ldw	r5,-8(fp)
   107f4:	1009883a 	mov	r4,r2
   107f8:	00110c80 	call	110c8 <memcmp>
   107fc:	1000021e 	bne	r2,zero,10808 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   10800:	e0bffc17 	ldw	r2,-16(fp)
   10804:	00000706 	br	10824 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   10808:	e0bffc17 	ldw	r2,-16(fp)
   1080c:	10800017 	ldw	r2,0(r2)
   10810:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   10814:	e0fffc17 	ldw	r3,-16(fp)
   10818:	e0bfff17 	ldw	r2,-4(fp)
   1081c:	18bff01e 	bne	r3,r2,107e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70107e0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   10820:	0005883a 	mov	r2,zero
}
   10824:	e037883a 	mov	sp,fp
   10828:	dfc00117 	ldw	ra,4(sp)
   1082c:	df000017 	ldw	fp,0(sp)
   10830:	dec00204 	addi	sp,sp,8
   10834:	f800283a 	ret

00010838 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   10838:	defffe04 	addi	sp,sp,-8
   1083c:	dfc00115 	stw	ra,4(sp)
   10840:	df000015 	stw	fp,0(sp)
   10844:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   10848:	01440004 	movi	r5,4096
   1084c:	0009883a 	mov	r4,zero
   10850:	0010f500 	call	10f50 <alt_icache_flush>
#endif
}
   10854:	0001883a 	nop
   10858:	e037883a 	mov	sp,fp
   1085c:	dfc00117 	ldw	ra,4(sp)
   10860:	df000017 	ldw	fp,0(sp)
   10864:	dec00204 	addi	sp,sp,8
   10868:	f800283a 	ret

0001086c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   1086c:	defff904 	addi	sp,sp,-28
   10870:	dfc00615 	stw	ra,24(sp)
   10874:	df000515 	stw	fp,20(sp)
   10878:	df000504 	addi	fp,sp,20
   1087c:	e13ffc15 	stw	r4,-16(fp)
   10880:	e17ffd15 	stw	r5,-12(fp)
   10884:	e1bffe15 	stw	r6,-8(fp)
   10888:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   1088c:	e1bfff17 	ldw	r6,-4(fp)
   10890:	e17ffe17 	ldw	r5,-8(fp)
   10894:	e13ffd17 	ldw	r4,-12(fp)
   10898:	0010c2c0 	call	10c2c <open>
   1089c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   108a0:	e0bffb17 	ldw	r2,-20(fp)
   108a4:	10001c16 	blt	r2,zero,10918 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   108a8:	00800074 	movhi	r2,1
   108ac:	10885304 	addi	r2,r2,8524
   108b0:	e0fffb17 	ldw	r3,-20(fp)
   108b4:	18c00324 	muli	r3,r3,12
   108b8:	10c5883a 	add	r2,r2,r3
   108bc:	10c00017 	ldw	r3,0(r2)
   108c0:	e0bffc17 	ldw	r2,-16(fp)
   108c4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   108c8:	00800074 	movhi	r2,1
   108cc:	10885304 	addi	r2,r2,8524
   108d0:	e0fffb17 	ldw	r3,-20(fp)
   108d4:	18c00324 	muli	r3,r3,12
   108d8:	10c5883a 	add	r2,r2,r3
   108dc:	10800104 	addi	r2,r2,4
   108e0:	10c00017 	ldw	r3,0(r2)
   108e4:	e0bffc17 	ldw	r2,-16(fp)
   108e8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   108ec:	00800074 	movhi	r2,1
   108f0:	10885304 	addi	r2,r2,8524
   108f4:	e0fffb17 	ldw	r3,-20(fp)
   108f8:	18c00324 	muli	r3,r3,12
   108fc:	10c5883a 	add	r2,r2,r3
   10900:	10800204 	addi	r2,r2,8
   10904:	10c00017 	ldw	r3,0(r2)
   10908:	e0bffc17 	ldw	r2,-16(fp)
   1090c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   10910:	e13ffb17 	ldw	r4,-20(fp)
   10914:	000d8e80 	call	d8e8 <alt_release_fd>
  }
} 
   10918:	0001883a 	nop
   1091c:	e037883a 	mov	sp,fp
   10920:	dfc00117 	ldw	ra,4(sp)
   10924:	df000017 	ldw	fp,0(sp)
   10928:	dec00204 	addi	sp,sp,8
   1092c:	f800283a 	ret

00010930 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   10930:	defffb04 	addi	sp,sp,-20
   10934:	dfc00415 	stw	ra,16(sp)
   10938:	df000315 	stw	fp,12(sp)
   1093c:	df000304 	addi	fp,sp,12
   10940:	e13ffd15 	stw	r4,-12(fp)
   10944:	e17ffe15 	stw	r5,-8(fp)
   10948:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   1094c:	01c07fc4 	movi	r7,511
   10950:	01800044 	movi	r6,1
   10954:	e17ffd17 	ldw	r5,-12(fp)
   10958:	01000074 	movhi	r4,1
   1095c:	21085604 	addi	r4,r4,8536
   10960:	001086c0 	call	1086c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   10964:	01c07fc4 	movi	r7,511
   10968:	000d883a 	mov	r6,zero
   1096c:	e17ffe17 	ldw	r5,-8(fp)
   10970:	01000074 	movhi	r4,1
   10974:	21085304 	addi	r4,r4,8524
   10978:	001086c0 	call	1086c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   1097c:	01c07fc4 	movi	r7,511
   10980:	01800044 	movi	r6,1
   10984:	e17fff17 	ldw	r5,-4(fp)
   10988:	01000074 	movhi	r4,1
   1098c:	21085904 	addi	r4,r4,8548
   10990:	001086c0 	call	1086c <alt_open_fd>
}  
   10994:	0001883a 	nop
   10998:	e037883a 	mov	sp,fp
   1099c:	dfc00117 	ldw	ra,4(sp)
   109a0:	df000017 	ldw	fp,0(sp)
   109a4:	dec00204 	addi	sp,sp,8
   109a8:	f800283a 	ret

000109ac <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   109ac:	defff004 	addi	sp,sp,-64
   109b0:	df000f15 	stw	fp,60(sp)
   109b4:	df000f04 	addi	fp,sp,60
   109b8:	e13ffd15 	stw	r4,-12(fp)
   109bc:	e17ffe15 	stw	r5,-8(fp)
   109c0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
   109c4:	00bffa84 	movi	r2,-22
   109c8:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   109cc:	e0bffd17 	ldw	r2,-12(fp)
   109d0:	10800828 	cmpgeui	r2,r2,32
   109d4:	1000501e 	bne	r2,zero,10b18 <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   109d8:	0005303a 	rdctl	r2,status
   109dc:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   109e0:	e0fff617 	ldw	r3,-40(fp)
   109e4:	00bfff84 	movi	r2,-2
   109e8:	1884703a 	and	r2,r3,r2
   109ec:	1001703a 	wrctl	status,r2
  
  return context;
   109f0:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   109f4:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
   109f8:	00800074 	movhi	r2,1
   109fc:	10953e04 	addi	r2,r2,21752
   10a00:	e0fffd17 	ldw	r3,-12(fp)
   10a04:	180690fa 	slli	r3,r3,3
   10a08:	10c5883a 	add	r2,r2,r3
   10a0c:	e0ffff17 	ldw	r3,-4(fp)
   10a10:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
   10a14:	00800074 	movhi	r2,1
   10a18:	10953e04 	addi	r2,r2,21752
   10a1c:	e0fffd17 	ldw	r3,-12(fp)
   10a20:	180690fa 	slli	r3,r3,3
   10a24:	10c5883a 	add	r2,r2,r3
   10a28:	10800104 	addi	r2,r2,4
   10a2c:	e0fffe17 	ldw	r3,-8(fp)
   10a30:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   10a34:	e0bfff17 	ldw	r2,-4(fp)
   10a38:	10001926 	beq	r2,zero,10aa0 <alt_irq_register+0xf4>
   10a3c:	e0bffd17 	ldw	r2,-12(fp)
   10a40:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10a44:	0005303a 	rdctl	r2,status
   10a48:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10a4c:	e0fff717 	ldw	r3,-36(fp)
   10a50:	00bfff84 	movi	r2,-2
   10a54:	1884703a 	and	r2,r3,r2
   10a58:	1001703a 	wrctl	status,r2
  
  return context;
   10a5c:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   10a60:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
   10a64:	00c00044 	movi	r3,1
   10a68:	e0bff217 	ldw	r2,-56(fp)
   10a6c:	1884983a 	sll	r2,r3,r2
   10a70:	1007883a 	mov	r3,r2
   10a74:	d0a7a417 	ldw	r2,-24944(gp)
   10a78:	1884b03a 	or	r2,r3,r2
   10a7c:	d0a7a415 	stw	r2,-24944(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   10a80:	d0a7a417 	ldw	r2,-24944(gp)
   10a84:	100170fa 	wrctl	ienable,r2
   10a88:	e0bff817 	ldw	r2,-32(fp)
   10a8c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10a90:	e0bff917 	ldw	r2,-28(fp)
   10a94:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   10a98:	0005883a 	mov	r2,zero
   10a9c:	00001906 	br	10b04 <alt_irq_register+0x158>
   10aa0:	e0bffd17 	ldw	r2,-12(fp)
   10aa4:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10aa8:	0005303a 	rdctl	r2,status
   10aac:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10ab0:	e0fffa17 	ldw	r3,-24(fp)
   10ab4:	00bfff84 	movi	r2,-2
   10ab8:	1884703a 	and	r2,r3,r2
   10abc:	1001703a 	wrctl	status,r2
  
  return context;
   10ac0:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   10ac4:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
   10ac8:	00c00044 	movi	r3,1
   10acc:	e0bff417 	ldw	r2,-48(fp)
   10ad0:	1884983a 	sll	r2,r3,r2
   10ad4:	0084303a 	nor	r2,zero,r2
   10ad8:	1007883a 	mov	r3,r2
   10adc:	d0a7a417 	ldw	r2,-24944(gp)
   10ae0:	1884703a 	and	r2,r3,r2
   10ae4:	d0a7a415 	stw	r2,-24944(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   10ae8:	d0a7a417 	ldw	r2,-24944(gp)
   10aec:	100170fa 	wrctl	ienable,r2
   10af0:	e0bffb17 	ldw	r2,-20(fp)
   10af4:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10af8:	e0bffc17 	ldw	r2,-16(fp)
   10afc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   10b00:	0005883a 	mov	r2,zero
   10b04:	e0bff115 	stw	r2,-60(fp)
   10b08:	e0bff317 	ldw	r2,-52(fp)
   10b0c:	e0bff515 	stw	r2,-44(fp)
   10b10:	e0bff517 	ldw	r2,-44(fp)
   10b14:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
   10b18:	e0bff117 	ldw	r2,-60(fp)
}
   10b1c:	e037883a 	mov	sp,fp
   10b20:	df000017 	ldw	fp,0(sp)
   10b24:	dec00104 	addi	sp,sp,4
   10b28:	f800283a 	ret

00010b2c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   10b2c:	defffe04 	addi	sp,sp,-8
   10b30:	dfc00115 	stw	ra,4(sp)
   10b34:	df000015 	stw	fp,0(sp)
   10b38:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   10b3c:	d0a00c17 	ldw	r2,-32720(gp)
   10b40:	10000326 	beq	r2,zero,10b50 <alt_get_errno+0x24>
   10b44:	d0a00c17 	ldw	r2,-32720(gp)
   10b48:	103ee83a 	callr	r2
   10b4c:	00000106 	br	10b54 <alt_get_errno+0x28>
   10b50:	d0a79a04 	addi	r2,gp,-24984
}
   10b54:	e037883a 	mov	sp,fp
   10b58:	dfc00117 	ldw	ra,4(sp)
   10b5c:	df000017 	ldw	fp,0(sp)
   10b60:	dec00204 	addi	sp,sp,8
   10b64:	f800283a 	ret

00010b68 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   10b68:	defffd04 	addi	sp,sp,-12
   10b6c:	df000215 	stw	fp,8(sp)
   10b70:	df000204 	addi	fp,sp,8
   10b74:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   10b78:	e0bfff17 	ldw	r2,-4(fp)
   10b7c:	10800217 	ldw	r2,8(r2)
   10b80:	10d00034 	orhi	r3,r2,16384
   10b84:	e0bfff17 	ldw	r2,-4(fp)
   10b88:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   10b8c:	e03ffe15 	stw	zero,-8(fp)
   10b90:	00001d06 	br	10c08 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   10b94:	00800074 	movhi	r2,1
   10b98:	10885304 	addi	r2,r2,8524
   10b9c:	e0fffe17 	ldw	r3,-8(fp)
   10ba0:	18c00324 	muli	r3,r3,12
   10ba4:	10c5883a 	add	r2,r2,r3
   10ba8:	10c00017 	ldw	r3,0(r2)
   10bac:	e0bfff17 	ldw	r2,-4(fp)
   10bb0:	10800017 	ldw	r2,0(r2)
   10bb4:	1880111e 	bne	r3,r2,10bfc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   10bb8:	00800074 	movhi	r2,1
   10bbc:	10885304 	addi	r2,r2,8524
   10bc0:	e0fffe17 	ldw	r3,-8(fp)
   10bc4:	18c00324 	muli	r3,r3,12
   10bc8:	10c5883a 	add	r2,r2,r3
   10bcc:	10800204 	addi	r2,r2,8
   10bd0:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   10bd4:	1000090e 	bge	r2,zero,10bfc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   10bd8:	e0bffe17 	ldw	r2,-8(fp)
   10bdc:	10c00324 	muli	r3,r2,12
   10be0:	00800074 	movhi	r2,1
   10be4:	10885304 	addi	r2,r2,8524
   10be8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   10bec:	e0bfff17 	ldw	r2,-4(fp)
   10bf0:	18800226 	beq	r3,r2,10bfc <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   10bf4:	00bffcc4 	movi	r2,-13
   10bf8:	00000806 	br	10c1c <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   10bfc:	e0bffe17 	ldw	r2,-8(fp)
   10c00:	10800044 	addi	r2,r2,1
   10c04:	e0bffe15 	stw	r2,-8(fp)
   10c08:	d0a00b17 	ldw	r2,-32724(gp)
   10c0c:	1007883a 	mov	r3,r2
   10c10:	e0bffe17 	ldw	r2,-8(fp)
   10c14:	18bfdf2e 	bgeu	r3,r2,10b94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7010b94>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   10c18:	0005883a 	mov	r2,zero
}
   10c1c:	e037883a 	mov	sp,fp
   10c20:	df000017 	ldw	fp,0(sp)
   10c24:	dec00104 	addi	sp,sp,4
   10c28:	f800283a 	ret

00010c2c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   10c2c:	defff604 	addi	sp,sp,-40
   10c30:	dfc00915 	stw	ra,36(sp)
   10c34:	df000815 	stw	fp,32(sp)
   10c38:	df000804 	addi	fp,sp,32
   10c3c:	e13ffd15 	stw	r4,-12(fp)
   10c40:	e17ffe15 	stw	r5,-8(fp)
   10c44:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   10c48:	00bfffc4 	movi	r2,-1
   10c4c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   10c50:	00bffb44 	movi	r2,-19
   10c54:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   10c58:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   10c5c:	d1600904 	addi	r5,gp,-32732
   10c60:	e13ffd17 	ldw	r4,-12(fp)
   10c64:	00107a80 	call	107a8 <alt_find_dev>
   10c68:	e0bff815 	stw	r2,-32(fp)
   10c6c:	e0bff817 	ldw	r2,-32(fp)
   10c70:	1000051e 	bne	r2,zero,10c88 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   10c74:	e13ffd17 	ldw	r4,-12(fp)
   10c78:	0010da40 	call	10da4 <alt_find_file>
   10c7c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   10c80:	00800044 	movi	r2,1
   10c84:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   10c88:	e0bff817 	ldw	r2,-32(fp)
   10c8c:	10002926 	beq	r2,zero,10d34 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   10c90:	e13ff817 	ldw	r4,-32(fp)
   10c94:	0010eac0 	call	10eac <alt_get_fd>
   10c98:	e0bff915 	stw	r2,-28(fp)
   10c9c:	e0bff917 	ldw	r2,-28(fp)
   10ca0:	1000030e 	bge	r2,zero,10cb0 <open+0x84>
    {
      status = index;
   10ca4:	e0bff917 	ldw	r2,-28(fp)
   10ca8:	e0bffa15 	stw	r2,-24(fp)
   10cac:	00002306 	br	10d3c <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   10cb0:	e0bff917 	ldw	r2,-28(fp)
   10cb4:	10c00324 	muli	r3,r2,12
   10cb8:	00800074 	movhi	r2,1
   10cbc:	10885304 	addi	r2,r2,8524
   10cc0:	1885883a 	add	r2,r3,r2
   10cc4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   10cc8:	e0fffe17 	ldw	r3,-8(fp)
   10ccc:	00900034 	movhi	r2,16384
   10cd0:	10bfffc4 	addi	r2,r2,-1
   10cd4:	1886703a 	and	r3,r3,r2
   10cd8:	e0bffc17 	ldw	r2,-16(fp)
   10cdc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   10ce0:	e0bffb17 	ldw	r2,-20(fp)
   10ce4:	1000051e 	bne	r2,zero,10cfc <open+0xd0>
   10ce8:	e13ffc17 	ldw	r4,-16(fp)
   10cec:	0010b680 	call	10b68 <alt_file_locked>
   10cf0:	e0bffa15 	stw	r2,-24(fp)
   10cf4:	e0bffa17 	ldw	r2,-24(fp)
   10cf8:	10001016 	blt	r2,zero,10d3c <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   10cfc:	e0bff817 	ldw	r2,-32(fp)
   10d00:	10800317 	ldw	r2,12(r2)
   10d04:	10000826 	beq	r2,zero,10d28 <open+0xfc>
   10d08:	e0bff817 	ldw	r2,-32(fp)
   10d0c:	10800317 	ldw	r2,12(r2)
   10d10:	e1ffff17 	ldw	r7,-4(fp)
   10d14:	e1bffe17 	ldw	r6,-8(fp)
   10d18:	e17ffd17 	ldw	r5,-12(fp)
   10d1c:	e13ffc17 	ldw	r4,-16(fp)
   10d20:	103ee83a 	callr	r2
   10d24:	00000106 	br	10d2c <open+0x100>
   10d28:	0005883a 	mov	r2,zero
   10d2c:	e0bffa15 	stw	r2,-24(fp)
   10d30:	00000206 	br	10d3c <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   10d34:	00bffb44 	movi	r2,-19
   10d38:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   10d3c:	e0bffa17 	ldw	r2,-24(fp)
   10d40:	1000090e 	bge	r2,zero,10d68 <open+0x13c>
  {
    alt_release_fd (index);  
   10d44:	e13ff917 	ldw	r4,-28(fp)
   10d48:	000d8e80 	call	d8e8 <alt_release_fd>
    ALT_ERRNO = -status;
   10d4c:	0010b2c0 	call	10b2c <alt_get_errno>
   10d50:	1007883a 	mov	r3,r2
   10d54:	e0bffa17 	ldw	r2,-24(fp)
   10d58:	0085c83a 	sub	r2,zero,r2
   10d5c:	18800015 	stw	r2,0(r3)
    return -1;
   10d60:	00bfffc4 	movi	r2,-1
   10d64:	00000106 	br	10d6c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   10d68:	e0bff917 	ldw	r2,-28(fp)
}
   10d6c:	e037883a 	mov	sp,fp
   10d70:	dfc00117 	ldw	ra,4(sp)
   10d74:	df000017 	ldw	fp,0(sp)
   10d78:	dec00204 	addi	sp,sp,8
   10d7c:	f800283a 	ret

00010d80 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   10d80:	deffff04 	addi	sp,sp,-4
   10d84:	df000015 	stw	fp,0(sp)
   10d88:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   10d8c:	000170fa 	wrctl	ienable,zero
}
   10d90:	0001883a 	nop
   10d94:	e037883a 	mov	sp,fp
   10d98:	df000017 	ldw	fp,0(sp)
   10d9c:	dec00104 	addi	sp,sp,4
   10da0:	f800283a 	ret

00010da4 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   10da4:	defffb04 	addi	sp,sp,-20
   10da8:	dfc00415 	stw	ra,16(sp)
   10dac:	df000315 	stw	fp,12(sp)
   10db0:	df000304 	addi	fp,sp,12
   10db4:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   10db8:	d0a00717 	ldw	r2,-32740(gp)
   10dbc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   10dc0:	00003106 	br	10e88 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   10dc4:	e0bffd17 	ldw	r2,-12(fp)
   10dc8:	10800217 	ldw	r2,8(r2)
   10dcc:	1009883a 	mov	r4,r2
   10dd0:	00072200 	call	7220 <strlen>
   10dd4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   10dd8:	e0bffd17 	ldw	r2,-12(fp)
   10ddc:	10c00217 	ldw	r3,8(r2)
   10de0:	e0bffe17 	ldw	r2,-8(fp)
   10de4:	10bfffc4 	addi	r2,r2,-1
   10de8:	1885883a 	add	r2,r3,r2
   10dec:	10800003 	ldbu	r2,0(r2)
   10df0:	10803fcc 	andi	r2,r2,255
   10df4:	1080201c 	xori	r2,r2,128
   10df8:	10bfe004 	addi	r2,r2,-128
   10dfc:	10800bd8 	cmpnei	r2,r2,47
   10e00:	1000031e 	bne	r2,zero,10e10 <alt_find_file+0x6c>
    {
      len -= 1;
   10e04:	e0bffe17 	ldw	r2,-8(fp)
   10e08:	10bfffc4 	addi	r2,r2,-1
   10e0c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   10e10:	e0bffe17 	ldw	r2,-8(fp)
   10e14:	e0ffff17 	ldw	r3,-4(fp)
   10e18:	1885883a 	add	r2,r3,r2
   10e1c:	10800003 	ldbu	r2,0(r2)
   10e20:	10803fcc 	andi	r2,r2,255
   10e24:	1080201c 	xori	r2,r2,128
   10e28:	10bfe004 	addi	r2,r2,-128
   10e2c:	10800be0 	cmpeqi	r2,r2,47
   10e30:	1000081e 	bne	r2,zero,10e54 <alt_find_file+0xb0>
   10e34:	e0bffe17 	ldw	r2,-8(fp)
   10e38:	e0ffff17 	ldw	r3,-4(fp)
   10e3c:	1885883a 	add	r2,r3,r2
   10e40:	10800003 	ldbu	r2,0(r2)
   10e44:	10803fcc 	andi	r2,r2,255
   10e48:	1080201c 	xori	r2,r2,128
   10e4c:	10bfe004 	addi	r2,r2,-128
   10e50:	10000a1e 	bne	r2,zero,10e7c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   10e54:	e0bffd17 	ldw	r2,-12(fp)
   10e58:	10800217 	ldw	r2,8(r2)
   10e5c:	e0fffe17 	ldw	r3,-8(fp)
   10e60:	180d883a 	mov	r6,r3
   10e64:	e17fff17 	ldw	r5,-4(fp)
   10e68:	1009883a 	mov	r4,r2
   10e6c:	00110c80 	call	110c8 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   10e70:	1000021e 	bne	r2,zero,10e7c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   10e74:	e0bffd17 	ldw	r2,-12(fp)
   10e78:	00000706 	br	10e98 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   10e7c:	e0bffd17 	ldw	r2,-12(fp)
   10e80:	10800017 	ldw	r2,0(r2)
   10e84:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   10e88:	e0fffd17 	ldw	r3,-12(fp)
   10e8c:	d0a00704 	addi	r2,gp,-32740
   10e90:	18bfcc1e 	bne	r3,r2,10dc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7010dc4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   10e94:	0005883a 	mov	r2,zero
}
   10e98:	e037883a 	mov	sp,fp
   10e9c:	dfc00117 	ldw	ra,4(sp)
   10ea0:	df000017 	ldw	fp,0(sp)
   10ea4:	dec00204 	addi	sp,sp,8
   10ea8:	f800283a 	ret

00010eac <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   10eac:	defffc04 	addi	sp,sp,-16
   10eb0:	df000315 	stw	fp,12(sp)
   10eb4:	df000304 	addi	fp,sp,12
   10eb8:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   10ebc:	00bffa04 	movi	r2,-24
   10ec0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   10ec4:	e03ffd15 	stw	zero,-12(fp)
   10ec8:	00001906 	br	10f30 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   10ecc:	00800074 	movhi	r2,1
   10ed0:	10885304 	addi	r2,r2,8524
   10ed4:	e0fffd17 	ldw	r3,-12(fp)
   10ed8:	18c00324 	muli	r3,r3,12
   10edc:	10c5883a 	add	r2,r2,r3
   10ee0:	10800017 	ldw	r2,0(r2)
   10ee4:	10000f1e 	bne	r2,zero,10f24 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   10ee8:	00800074 	movhi	r2,1
   10eec:	10885304 	addi	r2,r2,8524
   10ef0:	e0fffd17 	ldw	r3,-12(fp)
   10ef4:	18c00324 	muli	r3,r3,12
   10ef8:	10c5883a 	add	r2,r2,r3
   10efc:	e0ffff17 	ldw	r3,-4(fp)
   10f00:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   10f04:	d0e00b17 	ldw	r3,-32724(gp)
   10f08:	e0bffd17 	ldw	r2,-12(fp)
   10f0c:	1880020e 	bge	r3,r2,10f18 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   10f10:	e0bffd17 	ldw	r2,-12(fp)
   10f14:	d0a00b15 	stw	r2,-32724(gp)
      }
      rc = i;
   10f18:	e0bffd17 	ldw	r2,-12(fp)
   10f1c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   10f20:	00000606 	br	10f3c <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   10f24:	e0bffd17 	ldw	r2,-12(fp)
   10f28:	10800044 	addi	r2,r2,1
   10f2c:	e0bffd15 	stw	r2,-12(fp)
   10f30:	e0bffd17 	ldw	r2,-12(fp)
   10f34:	10800810 	cmplti	r2,r2,32
   10f38:	103fe41e 	bne	r2,zero,10ecc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7010ecc>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   10f3c:	e0bffe17 	ldw	r2,-8(fp)
}
   10f40:	e037883a 	mov	sp,fp
   10f44:	df000017 	ldw	fp,0(sp)
   10f48:	dec00104 	addi	sp,sp,4
   10f4c:	f800283a 	ret

00010f50 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   10f50:	defffb04 	addi	sp,sp,-20
   10f54:	df000415 	stw	fp,16(sp)
   10f58:	df000404 	addi	fp,sp,16
   10f5c:	e13ffe15 	stw	r4,-8(fp)
   10f60:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   10f64:	e0bfff17 	ldw	r2,-4(fp)
   10f68:	10840070 	cmpltui	r2,r2,4097
   10f6c:	1000021e 	bne	r2,zero,10f78 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   10f70:	00840004 	movi	r2,4096
   10f74:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   10f78:	e0fffe17 	ldw	r3,-8(fp)
   10f7c:	e0bfff17 	ldw	r2,-4(fp)
   10f80:	1885883a 	add	r2,r3,r2
   10f84:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   10f88:	e0bffe17 	ldw	r2,-8(fp)
   10f8c:	e0bffc15 	stw	r2,-16(fp)
   10f90:	00000506 	br	10fa8 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   10f94:	e0bffc17 	ldw	r2,-16(fp)
   10f98:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   10f9c:	e0bffc17 	ldw	r2,-16(fp)
   10fa0:	10800804 	addi	r2,r2,32
   10fa4:	e0bffc15 	stw	r2,-16(fp)
   10fa8:	e0fffc17 	ldw	r3,-16(fp)
   10fac:	e0bffd17 	ldw	r2,-12(fp)
   10fb0:	18bff836 	bltu	r3,r2,10f94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7010f94>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   10fb4:	e0bffe17 	ldw	r2,-8(fp)
   10fb8:	108007cc 	andi	r2,r2,31
   10fbc:	10000226 	beq	r2,zero,10fc8 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   10fc0:	e0bffc17 	ldw	r2,-16(fp)
   10fc4:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   10fc8:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   10fcc:	0001883a 	nop
   10fd0:	e037883a 	mov	sp,fp
   10fd4:	df000017 	ldw	fp,0(sp)
   10fd8:	dec00104 	addi	sp,sp,4
   10fdc:	f800283a 	ret

00010fe0 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   10fe0:	defffe04 	addi	sp,sp,-8
   10fe4:	df000115 	stw	fp,4(sp)
   10fe8:	df000104 	addi	fp,sp,4
   10fec:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   10ff0:	e0bfff17 	ldw	r2,-4(fp)
   10ff4:	10bffe84 	addi	r2,r2,-6
   10ff8:	10c00428 	cmpgeui	r3,r2,16
   10ffc:	18001a1e 	bne	r3,zero,11068 <alt_exception_cause_generated_bad_addr+0x88>
   11000:	100690ba 	slli	r3,r2,2
   11004:	00800074 	movhi	r2,1
   11008:	10840604 	addi	r2,r2,4120
   1100c:	1885883a 	add	r2,r3,r2
   11010:	10800017 	ldw	r2,0(r2)
   11014:	1000683a 	jmp	r2
   11018:	00011058 	cmpnei	zero,zero,1089
   1101c:	00011058 	cmpnei	zero,zero,1089
   11020:	00011068 	cmpgeui	zero,zero,1089
   11024:	00011068 	cmpgeui	zero,zero,1089
   11028:	00011068 	cmpgeui	zero,zero,1089
   1102c:	00011058 	cmpnei	zero,zero,1089
   11030:	00011060 	cmpeqi	zero,zero,1089
   11034:	00011068 	cmpgeui	zero,zero,1089
   11038:	00011058 	cmpnei	zero,zero,1089
   1103c:	00011058 	cmpnei	zero,zero,1089
   11040:	00011068 	cmpgeui	zero,zero,1089
   11044:	00011058 	cmpnei	zero,zero,1089
   11048:	00011060 	cmpeqi	zero,zero,1089
   1104c:	00011068 	cmpgeui	zero,zero,1089
   11050:	00011068 	cmpgeui	zero,zero,1089
   11054:	00011058 	cmpnei	zero,zero,1089
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   11058:	00800044 	movi	r2,1
   1105c:	00000306 	br	1106c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   11060:	0005883a 	mov	r2,zero
   11064:	00000106 	br	1106c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   11068:	0005883a 	mov	r2,zero
  }
}
   1106c:	e037883a 	mov	sp,fp
   11070:	df000017 	ldw	fp,0(sp)
   11074:	dec00104 	addi	sp,sp,4
   11078:	f800283a 	ret

0001107c <atexit>:
   1107c:	200b883a 	mov	r5,r4
   11080:	000f883a 	mov	r7,zero
   11084:	000d883a 	mov	r6,zero
   11088:	0009883a 	mov	r4,zero
   1108c:	00111441 	jmpi	11144 <__register_exitproc>

00011090 <exit>:
   11090:	defffe04 	addi	sp,sp,-8
   11094:	000b883a 	mov	r5,zero
   11098:	dc000015 	stw	r16,0(sp)
   1109c:	dfc00115 	stw	ra,4(sp)
   110a0:	2021883a 	mov	r16,r4
   110a4:	001125c0 	call	1125c <__call_exitprocs>
   110a8:	00800074 	movhi	r2,1
   110ac:	108d8f04 	addi	r2,r2,13884
   110b0:	11000017 	ldw	r4,0(r2)
   110b4:	20800f17 	ldw	r2,60(r4)
   110b8:	10000126 	beq	r2,zero,110c0 <exit+0x30>
   110bc:	103ee83a 	callr	r2
   110c0:	8009883a 	mov	r4,r16
   110c4:	00113dc0 	call	113dc <_exit>

000110c8 <memcmp>:
   110c8:	01c000c4 	movi	r7,3
   110cc:	3980192e 	bgeu	r7,r6,11134 <memcmp+0x6c>
   110d0:	2144b03a 	or	r2,r4,r5
   110d4:	11c4703a 	and	r2,r2,r7
   110d8:	10000f26 	beq	r2,zero,11118 <memcmp+0x50>
   110dc:	20800003 	ldbu	r2,0(r4)
   110e0:	28c00003 	ldbu	r3,0(r5)
   110e4:	10c0151e 	bne	r2,r3,1113c <memcmp+0x74>
   110e8:	31bfff84 	addi	r6,r6,-2
   110ec:	01ffffc4 	movi	r7,-1
   110f0:	00000406 	br	11104 <memcmp+0x3c>
   110f4:	20800003 	ldbu	r2,0(r4)
   110f8:	28c00003 	ldbu	r3,0(r5)
   110fc:	31bfffc4 	addi	r6,r6,-1
   11100:	10c00e1e 	bne	r2,r3,1113c <memcmp+0x74>
   11104:	21000044 	addi	r4,r4,1
   11108:	29400044 	addi	r5,r5,1
   1110c:	31fff91e 	bne	r6,r7,110f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70110f4>
   11110:	0005883a 	mov	r2,zero
   11114:	f800283a 	ret
   11118:	20c00017 	ldw	r3,0(r4)
   1111c:	28800017 	ldw	r2,0(r5)
   11120:	18bfee1e 	bne	r3,r2,110dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70110dc>
   11124:	31bfff04 	addi	r6,r6,-4
   11128:	21000104 	addi	r4,r4,4
   1112c:	29400104 	addi	r5,r5,4
   11130:	39bff936 	bltu	r7,r6,11118 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011118>
   11134:	303fe91e 	bne	r6,zero,110dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70110dc>
   11138:	003ff506 	br	11110 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011110>
   1113c:	10c5c83a 	sub	r2,r2,r3
   11140:	f800283a 	ret

00011144 <__register_exitproc>:
   11144:	defffa04 	addi	sp,sp,-24
   11148:	dc000315 	stw	r16,12(sp)
   1114c:	04000074 	movhi	r16,1
   11150:	840d8f04 	addi	r16,r16,13884
   11154:	80c00017 	ldw	r3,0(r16)
   11158:	dc400415 	stw	r17,16(sp)
   1115c:	dfc00515 	stw	ra,20(sp)
   11160:	18805217 	ldw	r2,328(r3)
   11164:	2023883a 	mov	r17,r4
   11168:	10003726 	beq	r2,zero,11248 <__register_exitproc+0x104>
   1116c:	10c00117 	ldw	r3,4(r2)
   11170:	010007c4 	movi	r4,31
   11174:	20c00e16 	blt	r4,r3,111b0 <__register_exitproc+0x6c>
   11178:	1a000044 	addi	r8,r3,1
   1117c:	8800221e 	bne	r17,zero,11208 <__register_exitproc+0xc4>
   11180:	18c00084 	addi	r3,r3,2
   11184:	18c7883a 	add	r3,r3,r3
   11188:	18c7883a 	add	r3,r3,r3
   1118c:	12000115 	stw	r8,4(r2)
   11190:	10c7883a 	add	r3,r2,r3
   11194:	19400015 	stw	r5,0(r3)
   11198:	0005883a 	mov	r2,zero
   1119c:	dfc00517 	ldw	ra,20(sp)
   111a0:	dc400417 	ldw	r17,16(sp)
   111a4:	dc000317 	ldw	r16,12(sp)
   111a8:	dec00604 	addi	sp,sp,24
   111ac:	f800283a 	ret
   111b0:	00800034 	movhi	r2,0
   111b4:	10800004 	addi	r2,r2,0
   111b8:	10002626 	beq	r2,zero,11254 <__register_exitproc+0x110>
   111bc:	01006404 	movi	r4,400
   111c0:	d9400015 	stw	r5,0(sp)
   111c4:	d9800115 	stw	r6,4(sp)
   111c8:	d9c00215 	stw	r7,8(sp)
   111cc:	00000000 	call	0 <__alt_mem_SDRAM>
   111d0:	d9400017 	ldw	r5,0(sp)
   111d4:	d9800117 	ldw	r6,4(sp)
   111d8:	d9c00217 	ldw	r7,8(sp)
   111dc:	10001d26 	beq	r2,zero,11254 <__register_exitproc+0x110>
   111e0:	81000017 	ldw	r4,0(r16)
   111e4:	10000115 	stw	zero,4(r2)
   111e8:	02000044 	movi	r8,1
   111ec:	22405217 	ldw	r9,328(r4)
   111f0:	0007883a 	mov	r3,zero
   111f4:	12400015 	stw	r9,0(r2)
   111f8:	20805215 	stw	r2,328(r4)
   111fc:	10006215 	stw	zero,392(r2)
   11200:	10006315 	stw	zero,396(r2)
   11204:	883fde26 	beq	r17,zero,11180 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011180>
   11208:	18c9883a 	add	r4,r3,r3
   1120c:	2109883a 	add	r4,r4,r4
   11210:	1109883a 	add	r4,r2,r4
   11214:	21802215 	stw	r6,136(r4)
   11218:	01800044 	movi	r6,1
   1121c:	12406217 	ldw	r9,392(r2)
   11220:	30cc983a 	sll	r6,r6,r3
   11224:	4992b03a 	or	r9,r9,r6
   11228:	12406215 	stw	r9,392(r2)
   1122c:	21c04215 	stw	r7,264(r4)
   11230:	01000084 	movi	r4,2
   11234:	893fd21e 	bne	r17,r4,11180 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011180>
   11238:	11006317 	ldw	r4,396(r2)
   1123c:	218cb03a 	or	r6,r4,r6
   11240:	11806315 	stw	r6,396(r2)
   11244:	003fce06 	br	11180 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011180>
   11248:	18805304 	addi	r2,r3,332
   1124c:	18805215 	stw	r2,328(r3)
   11250:	003fc606 	br	1116c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf701116c>
   11254:	00bfffc4 	movi	r2,-1
   11258:	003fd006 	br	1119c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf701119c>

0001125c <__call_exitprocs>:
   1125c:	defff504 	addi	sp,sp,-44
   11260:	df000915 	stw	fp,36(sp)
   11264:	dd400615 	stw	r21,24(sp)
   11268:	dc800315 	stw	r18,12(sp)
   1126c:	dfc00a15 	stw	ra,40(sp)
   11270:	ddc00815 	stw	r23,32(sp)
   11274:	dd800715 	stw	r22,28(sp)
   11278:	dd000515 	stw	r20,20(sp)
   1127c:	dcc00415 	stw	r19,16(sp)
   11280:	dc400215 	stw	r17,8(sp)
   11284:	dc000115 	stw	r16,4(sp)
   11288:	d9000015 	stw	r4,0(sp)
   1128c:	2839883a 	mov	fp,r5
   11290:	04800044 	movi	r18,1
   11294:	057fffc4 	movi	r21,-1
   11298:	00800074 	movhi	r2,1
   1129c:	108d8f04 	addi	r2,r2,13884
   112a0:	12000017 	ldw	r8,0(r2)
   112a4:	45005217 	ldw	r20,328(r8)
   112a8:	44c05204 	addi	r19,r8,328
   112ac:	a0001c26 	beq	r20,zero,11320 <__call_exitprocs+0xc4>
   112b0:	a0800117 	ldw	r2,4(r20)
   112b4:	15ffffc4 	addi	r23,r2,-1
   112b8:	b8000d16 	blt	r23,zero,112f0 <__call_exitprocs+0x94>
   112bc:	14000044 	addi	r16,r2,1
   112c0:	8421883a 	add	r16,r16,r16
   112c4:	8421883a 	add	r16,r16,r16
   112c8:	84402004 	addi	r17,r16,128
   112cc:	a463883a 	add	r17,r20,r17
   112d0:	a421883a 	add	r16,r20,r16
   112d4:	e0001e26 	beq	fp,zero,11350 <__call_exitprocs+0xf4>
   112d8:	80804017 	ldw	r2,256(r16)
   112dc:	e0801c26 	beq	fp,r2,11350 <__call_exitprocs+0xf4>
   112e0:	bdffffc4 	addi	r23,r23,-1
   112e4:	843fff04 	addi	r16,r16,-4
   112e8:	8c7fff04 	addi	r17,r17,-4
   112ec:	bd7ff91e 	bne	r23,r21,112d4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70112d4>
   112f0:	00800034 	movhi	r2,0
   112f4:	10800004 	addi	r2,r2,0
   112f8:	10000926 	beq	r2,zero,11320 <__call_exitprocs+0xc4>
   112fc:	a0800117 	ldw	r2,4(r20)
   11300:	1000301e 	bne	r2,zero,113c4 <__call_exitprocs+0x168>
   11304:	a0800017 	ldw	r2,0(r20)
   11308:	10003226 	beq	r2,zero,113d4 <__call_exitprocs+0x178>
   1130c:	a009883a 	mov	r4,r20
   11310:	98800015 	stw	r2,0(r19)
   11314:	00000000 	call	0 <__alt_mem_SDRAM>
   11318:	9d000017 	ldw	r20,0(r19)
   1131c:	a03fe41e 	bne	r20,zero,112b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70112b0>
   11320:	dfc00a17 	ldw	ra,40(sp)
   11324:	df000917 	ldw	fp,36(sp)
   11328:	ddc00817 	ldw	r23,32(sp)
   1132c:	dd800717 	ldw	r22,28(sp)
   11330:	dd400617 	ldw	r21,24(sp)
   11334:	dd000517 	ldw	r20,20(sp)
   11338:	dcc00417 	ldw	r19,16(sp)
   1133c:	dc800317 	ldw	r18,12(sp)
   11340:	dc400217 	ldw	r17,8(sp)
   11344:	dc000117 	ldw	r16,4(sp)
   11348:	dec00b04 	addi	sp,sp,44
   1134c:	f800283a 	ret
   11350:	a0800117 	ldw	r2,4(r20)
   11354:	80c00017 	ldw	r3,0(r16)
   11358:	10bfffc4 	addi	r2,r2,-1
   1135c:	15c01426 	beq	r2,r23,113b0 <__call_exitprocs+0x154>
   11360:	80000015 	stw	zero,0(r16)
   11364:	183fde26 	beq	r3,zero,112e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70112e0>
   11368:	95c8983a 	sll	r4,r18,r23
   1136c:	a0806217 	ldw	r2,392(r20)
   11370:	a5800117 	ldw	r22,4(r20)
   11374:	2084703a 	and	r2,r4,r2
   11378:	10000b26 	beq	r2,zero,113a8 <__call_exitprocs+0x14c>
   1137c:	a0806317 	ldw	r2,396(r20)
   11380:	2088703a 	and	r4,r4,r2
   11384:	20000c1e 	bne	r4,zero,113b8 <__call_exitprocs+0x15c>
   11388:	89400017 	ldw	r5,0(r17)
   1138c:	d9000017 	ldw	r4,0(sp)
   11390:	183ee83a 	callr	r3
   11394:	a0800117 	ldw	r2,4(r20)
   11398:	15bfbf1e 	bne	r2,r22,11298 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011298>
   1139c:	98800017 	ldw	r2,0(r19)
   113a0:	153fcf26 	beq	r2,r20,112e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70112e0>
   113a4:	003fbc06 	br	11298 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011298>
   113a8:	183ee83a 	callr	r3
   113ac:	003ff906 	br	11394 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011394>
   113b0:	a5c00115 	stw	r23,4(r20)
   113b4:	003feb06 	br	11364 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011364>
   113b8:	89000017 	ldw	r4,0(r17)
   113bc:	183ee83a 	callr	r3
   113c0:	003ff406 	br	11394 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011394>
   113c4:	a0800017 	ldw	r2,0(r20)
   113c8:	a027883a 	mov	r19,r20
   113cc:	1029883a 	mov	r20,r2
   113d0:	003fb606 	br	112ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70112ac>
   113d4:	0005883a 	mov	r2,zero
   113d8:	003ffb06 	br	113c8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70113c8>

000113dc <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   113dc:	defffd04 	addi	sp,sp,-12
   113e0:	df000215 	stw	fp,8(sp)
   113e4:	df000204 	addi	fp,sp,8
   113e8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   113ec:	0001883a 	nop
   113f0:	e0bfff17 	ldw	r2,-4(fp)
   113f4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   113f8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   113fc:	10000226 	beq	r2,zero,11408 <_exit+0x2c>
    ALT_SIM_FAIL();
   11400:	002af070 	cmpltui	zero,zero,43969
   11404:	00000106 	br	1140c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   11408:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   1140c:	003fff06 	br	1140c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf701140c>
