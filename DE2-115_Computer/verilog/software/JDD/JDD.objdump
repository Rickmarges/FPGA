
JDD.elf:     file format elf32-littlenios2
JDD.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000248

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00011a60 memsz 0x00011a60 flags r-x
    LOAD off    0x00012a80 vaddr 0x00011a80 paddr 0x0001387c align 2**12
         filesz 0x00001dfc memsz 0x00001dfc flags rw-
    LOAD off    0x00015678 vaddr 0x00015678 paddr 0x00015678 align 2**12
         filesz 0x00000000 memsz 0x00000180 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000228  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000113a8  00000248  00000248  00001248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000490  000115f0  000115f0  000125f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001dfc  00011a80  0001387c  00012a80  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000180  00015678  00015678  00015678  2**2
                  ALLOC, SMALL_DATA
  6 .SDRAM        00000000  000157f8  000157f8  0001487c  2**0
                  CONTENTS
  7 .VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM 00000000  09000000  09000000  0001487c  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  0001487c  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000f90  00000000  00000000  000148a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00025260  00000000  00000000  00015830  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000986a  00000000  00000000  0003aa90  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000c02b  00000000  00000000  000442fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002898  00000000  00000000  00050328  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000044e8  00000000  00000000  00052bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00017e16  00000000  00000000  000570a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000020  00000000  00000000  0006eec0  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001a38  00000000  00000000  0006eee0  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00074686  2**0
                  CONTENTS, READONLY
 19 .cpu          00000005  00000000  00000000  00074689  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0007468e  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0007468f  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  00074690  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  00074694  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  00074698  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  0007469c  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  000746a5  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  000746ae  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000f  00000000  00000000  000746b7  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000005b  00000000  00000000  000746c6  2**0
                  CONTENTS, READONLY
 30 .jdi          0000eb16  00000000  00000000  00074721  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     001d8a7e  00000000  00000000  00083237  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000248 l    d  .text	00000000 .text
000115f0 l    d  .rodata	00000000 .rodata
00011a80 l    d  .rwdata	00000000 .rwdata
00015678 l    d  .bss	00000000 .bss
000157f8 l    d  .SDRAM	00000000 .SDRAM
09000000 l    d  .VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM	00000000 .VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../JDD_bsp//obj/HAL/src/crt0.o
00000280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
00011782 l     O .rodata	00000010 zeroes.4404
00002c90 l     F .text	000000bc __sbprintf
00011792 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002ea0 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000049d0 l     F .text	00000008 __fp_unlock
000049e4 l     F .text	0000019c __sinit.part.1
00004b80 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00011a80 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00011ec4 l     O .rwdata	00000020 lc_ctype_charset
00011ea4 l     O .rwdata	00000020 lc_message_charset
00011ee4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000117c4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00007498 l     F .text	000000fc __sprint_r.part.0
000118f8 l     O .rodata	00000010 blanks.4348
000118e8 l     O .rodata	00000010 zeroes.4349
00008a24 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0000d1f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000d304 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000d330 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_gettod.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d5f0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d6d0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d7bc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000d990 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0001386c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_write.c
0000dd80 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000deb4 l     F .text	00000034 alt_dev_reg
000124cc l     O .rwdata	00001060 JTAG_UART
0001352c l     O .rwdata	00000030 AV_Config
0001355c l     O .rwdata	00000030 Audio_Subsystem_Audio
0001358c l     O .rwdata	0000002c Char_LCD_16x2
000135b8 l     O .rwdata	0000002c IrDA
000135e4 l     O .rwdata	00000038 PS2_Port
0001361c l     O .rwdata	00000038 PS2_Port_Dual
00013654 l     O .rwdata	0000002c Serial_Port
00013680 l     O .rwdata	00000034 USB
000136b4 l     O .rwdata	0000005c VGA_Subsystem_Char_Buf_Subsystem_Char_Buf_DMA
00013710 l     O .rwdata	0000005c VGA_Subsystem_VGA_Pixel_DMA
0001376c l     O .rwdata	0000005c Video_In_Subsystem_Video_In_DMA
000137c8 l     O .rwdata	00000044 VGA_Subsystem_VGA_Pixel_RGB_Resampler
0001380c l     O .rwdata	0000002c SD_Card
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000eaa4 l     F .text	00000210 altera_avalon_jtag_uart_irq
0000ecb4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0000f2ec l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_character_lcd.c
00000000 l    df *ABS*	00000000 altera_up_avalon_irda.c
00000000 l    df *ABS*	00000000 altera_up_avalon_ps2.c
00000000 l    df *ABS*	00000000 altera_up_avalon_rs232.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
000107e8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00010a4c l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00010d0c l     F .text	0000003c alt_get_errno
00010d48 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
000156cc g     O .bss	00000004 alt_instruction_exception_handler
00006fa8 g     F .text	00000074 _mprec_log10
00007094 g     F .text	0000008c __any_on
0000947c g     F .text	00000054 _isatty_r
000117d0 g     O .rodata	00000028 __mprec_tinytens
0000d8cc g     F .text	0000007c alt_main
000156f8 g     O .bss	00000100 alt_irq
0000fea8 g     F .text	00000060 alt_up_ps2_disable_read_interrupt
000094d0 g     F .text	00000060 _lseek_r
0001387c g       *ABS*	00000000 __flash_rwdata_start
0000f450 g     F .text	00000040 alt_up_character_lcd_send_cmd
0000bd88 g     F .text	00000088 .hidden __eqdf2
000157f8 g       *ABS*	00000000 __alt_heap_start
00000a40 g     F .text	0000003c printf
00009da8 g     F .text	0000009c _wcrtomb_r
000072c0 g     F .text	0000005c __sseek
00004d20 g     F .text	00000010 __sinit
00009c50 g     F .text	00000140 __swbuf_r
0000fcc0 g     F .text	00000034 read_CE_bit
0000532c g     F .text	0000007c _setlocale_r
00004b88 g     F .text	00000068 __sfmoreglue
0000d96c g     F .text	00000024 __malloc_unlock
00010048 g     F .text	0000009c alt_up_ps2_read_data_byte_timeout
0001053c g     F .text	00000090 alt_up_rs232_read_fd
00009530 g     F .text	0000015c memmove
00004d08 g     F .text	00000018 _cleanup
00006124 g     F .text	000000a8 _Balloc
0000be10 g     F .text	000000dc .hidden __gtdf2
00010f60 g     F .text	00000024 altera_nios2_gen2_irq_init
0000f3dc g     F .text	00000074 get_DDRAM_addr
00000000 g     F .entry	0000001c __reset
000002f0 g     F .text	00000088 timedifference_msec
00000020 g       *ABS*	00000000 __flash_exceptions_start
00008f64 g     F .text	0000005c _fstat_r
000156a0 g     O .bss	00000004 errno
0000723c g     F .text	00000008 __seofread
000156b8 g     O .bss	00000004 alt_argv
0001b838 g       *ABS*	00000000 _gp
0001234c g     O .rwdata	00000180 alt_fd_list
00010988 g     F .text	00000090 alt_find_dev
00005eb4 g     F .text	00000148 memcpy
0000f5f8 g     F .text	00000050 alt_up_character_lcd_write_fd
000049d8 g     F .text	0000000c _cleanup_r
0000d074 g     F .text	000000dc .hidden __floatsidf
00010b10 g     F .text	0000007c alt_io_redirect
0000beec g     F .text	000000f4 .hidden __ltdf2
000115f0 g       *ABS*	00000000 __DTOR_END__
0000fb90 g     F .text	00000090 alt_up_irda_write_fd
000104c8 g     F .text	00000074 alt_up_rs232_read_data
000111c0 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00007120 g     F .text	00000074 __fpclassifyd
00006f04 g     F .text	000000a4 __ratio
00008a08 g     F .text	0000001c __vfiprintf_internal
0000f98c g     F .text	00000040 alt_up_irda_get_used_space_in_read_FIFO
0000eeac g     F .text	0000021c altera_avalon_jtag_uart_read
00000a10 g     F .text	00000030 _printf_r
0000ab38 g     F .text	00000064 .hidden __udivsi3
0000d62c g     F .text	000000a4 isatty
00011820 g     O .rodata	000000c8 __mprec_tens
000053a8 g     F .text	0000000c __locale_charset
000006b0 g     F .text	000000c8 .hidden __lesf2
0000f92c g     F .text	00000060 alt_up_irda_disable_read_interrupt
000156a4 g     O .bss	00000008 alt_timezone
00011130 g     F .text	00000090 alt_icache_flush
0001569c g     O .bss	00000004 __malloc_top_pad
00013844 g     O .rwdata	00000004 __mb_cur_max
000053d8 g     F .text	0000000c _localeconv_r
00008fc0 g     F .text	000004bc __sfvwrite_r
00006530 g     F .text	0000003c __i2b
00007194 g     F .text	00000054 _sbrk_r
0000968c g     F .text	00000060 _read_r
00013864 g     O .rwdata	00000004 alt_max_fd
00010444 g     F .text	00000044 alt_up_rs232_check_parity
00008c58 g     F .text	000000f0 _fclose_r
0000fcf4 g     F .text	00000030 read_num_bytes_available
000049a0 g     F .text	00000030 fflush
00015698 g     O .bss	00000004 __malloc_max_sbrked_mem
00010b8c g     F .text	00000180 alt_irq_register
0000fc5c g     F .text	00000034 read_RI_bit
0000089c g     F .text	00000110 .hidden __extendsfdf2
0000abf4 g     F .text	000008ac .hidden __adddf3
00006cac g     F .text	0000010c __b2d
0000a508 g     F .text	00000538 .hidden __umoddi3
0000d7f8 g     F .text	000000d4 lseek
0001383c g     O .rwdata	00000004 _global_impure_ptr
000096ec g     F .text	00000564 _realloc_r
000157f8 g       *ABS*	00000000 __bss_end
0000dc78 g     F .text	00000108 alt_tick
00000284 g     F .text	0000006c int_to_int
00009f90 g     F .text	00000578 .hidden __udivdi3
00008ec0 g     F .text	00000024 _fputwc_r
000117f8 g     O .rodata	00000028 __mprec_bigtens
00006314 g     F .text	00000104 __s2b
0000d150 g     F .text	000000a8 .hidden __floatunsidf
000069ec g     F .text	00000060 __mcmp
0000fd58 g     F .text	0000002c read_data_byte
00004d40 g     F .text	00000018 __fp_lock_all
0000dbdc g     F .text	0000009c alt_alarm_stop
0000fc90 g     F .text	00000030 read_RE_bit
000156c8 g     O .bss	00000004 alt_irq_active
0000f9cc g     F .text	0000003c alt_up_irda_get_available_space_in_write_FIFO
000000fc g     F .exceptions	000000d8 alt_irq_handler
00012324 g     O .rwdata	00000028 alt_dev_null
0000f898 g     F .text	00000038 alt_up_character_lcd_cursor_blink_on
0000ff08 g     F .text	00000074 alt_up_ps2_write_data_byte
000107c8 g     F .text	00000020 alt_dcache_flush_all
00006418 g     F .text	00000068 __hi0bits
0000cff4 g     F .text	00000080 .hidden __fixdfsi
0001387c g       *ABS*	00000000 __ram_rwdata_end
0001385c g     O .rwdata	00000008 alt_dev_list
0000ddbc g     F .text	000000f8 write
000005f4 g     F .text	000000bc .hidden __gtsf2
00011a80 g       *ABS*	00000000 __ram_rodata_end
0000d36c g     F .text	000000b0 fstat
000105cc g     F .text	00000094 alt_up_rs232_write_fd
00000000 g       *ABS*	00000000 __alt_mem_SDRAM
0000beec g     F .text	000000f4 .hidden __ledf2
00006764 g     F .text	00000140 __pow5mult
000075ac g     F .text	0000145c ___vfiprintf_internal_r
00015690 g     O .bss	00000004 __nlocale_changed
0000ab9c g     F .text	00000058 .hidden __umodsi3
000157f8 g       *ABS*	00000000 end
00010238 g     F .text	00000098 alt_up_ps2_write_fd
0000fa08 g     F .text	00000044 alt_up_irda_check_parity
0000e9f0 g     F .text	000000b4 altera_avalon_jtag_uart_init
000001d4 g     F .exceptions	00000074 alt_instruction_exception_entry
000115f0 g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
0000f368 g     F .text	00000074 alt_avalon_timer_sc_init
000009ac g     F .text	00000064 .hidden __clzsi2
0000f0c8 g     F .text	00000224 altera_avalon_jtag_uart_write
00004d30 g     F .text	00000004 __sfp_lock_acquire
00005dd0 g     F .text	000000e4 memchr
0000f504 g     F .text	0000007c alt_up_character_lcd_write
00000a7c g     F .text	000021f8 ___vfprintf_internal_r
00004e94 g     F .text	00000310 _free_r
000053b4 g     F .text	00000010 __locale_mb_cur_max
0001143c g     F .text	00000180 __call_exitprocs
0001568c g     O .bss	00000004 __mlocale_changed
00013848 g     O .rwdata	00000004 __malloc_sbrk_base
00000248 g     F .text	0000003c _start
000156c0 g     O .bss	00000004 _alt_tick_rate
000068a4 g     F .text	00000148 __lshift
000156c4 g     O .bss	00000004 _alt_nticks
0000d9cc g     F .text	000000fc read
0000df20 g     F .text	0000096c alt_sys_init
0000f748 g     F .text	0000008c alt_up_character_lcd_shift_display
00000778 g     F .text	00000124 .hidden __floatsisf
00011324 g     F .text	00000118 __register_exitproc
00010154 g     F .text	00000058 alt_up_ps2_clear_fifo
00010408 g     F .text	0000003c alt_up_rs232_get_available_space_in_write_FIFO
0000656c g     F .text	000001f8 __multiply
0000f7d4 g     F .text	0000008c alt_up_character_lcd_erase_pos
0000ed54 g     F .text	00000068 altera_avalon_jtag_uart_close
00011a80 g       *ABS*	00000000 __ram_rwdata_start
000115f0 g       *ABS*	00000000 __ram_rodata_start
000156d0 g     O .bss	00000028 __malloc_current_mallinfo
00006db8 g     F .text	0000014c __d2b
0000e88c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0001108c g     F .text	000000a4 alt_get_fd
00008b40 g     F .text	00000054 _close_r
000112a8 g     F .text	0000007c memcmp
0000e94c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
000157f8 g       *ABS*	00000000 __alt_stack_base
0000e99c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0000f8d0 g     F .text	0000005c alt_up_irda_enable_read_interrupt
00002d4c g     F .text	00000154 __swsetup_r
0000b4a0 g     F .text	000008e8 .hidden __divdf3
00004bf0 g     F .text	00000118 __sfp
0000701c g     F .text	00000078 __copybits
00011f1c g     O .rwdata	00000408 __malloc_av_
00004d3c g     F .text	00000004 __sinit_lock_release
0000bfe0 g     F .text	00000718 .hidden __muldf3
000071e8 g     F .text	00000054 __sread
00010368 g     F .text	00000060 alt_up_rs232_disable_read_interrupt
00010f84 g     F .text	00000108 alt_find_file
00010824 g     F .text	000000a4 alt_dev_llist_insert
0000d948 g     F .text	00000024 __malloc_lock
0000db2c g     F .text	000000b0 sbrk
00004944 g     F .text	0000005c _fflush_r
00008b94 g     F .text	000000c4 _calloc_r
0000d41c g     F .text	000001d4 gettimeofday
00015678 g       *ABS*	00000000 __bss_start
00005ffc g     F .text	00000128 memset
00000378 g     F .text	0000027c main
000156bc g     O .bss	00000004 alt_envp
00015694 g     O .bss	00000004 __malloc_max_total_mem
0000e8ec g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00009d90 g     F .text	00000018 __swbuf
000006b0 g     F .text	000000c8 .hidden __ltsf2
0000f6bc g     F .text	0000008c alt_up_character_lcd_shift_cursor
0000731c g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
00008d48 g     F .text	00000014 fclose
000100e4 g     F .text	00000070 alt_up_ps2_read_data_byte
000030a0 g     F .text	00001688 _dtoa_r
000055c4 g     F .text	0000080c _malloc_r
00009f04 g     F .text	00000030 __ascii_wctomb
00013868 g     O .rwdata	00000004 alt_errno
000051a4 g     F .text	000000c4 _fwalk
0000fa4c g     F .text	00000040 alt_up_irda_write_data
000102d0 g     F .text	0000003c alt_up_ps2_open_dev
0000aa40 g     F .text	00000084 .hidden __divsi3
0000f4c8 g     F .text	0000003c alt_up_character_lcd_open_dev
00004d70 g     F .text	00000124 _malloc_trim_r
0000fe4c g     F .text	0000005c alt_up_ps2_enable_read_interrupt
000115f0 g       *ABS*	00000000 __CTOR_END__
0000f490 g     F .text	00000038 alt_up_character_lcd_init
00007324 g     F .text	000000dc strcmp
000115f0 g       *ABS*	00000000 __flash_rodata_start
000115f0 g       *ABS*	00000000 __DTOR_LIST__
00010660 g     F .text	0000003c alt_up_rs232_open_dev
0000bd88 g     F .text	00000088 .hidden __nedf2
0000dee8 g     F .text	00000038 alt_irq_init
0000dac8 g     F .text	00000064 alt_release_fd
0000fd24 g     F .text	00000034 read_data_valid
0000f860 g     F .text	00000038 alt_up_character_lcd_cursor_off
0001163f g     O .rodata	00000100 .hidden __clz_tab
00015688 g     O .bss	00000004 _PathLocale
0000ffe4 g     F .text	00000064 alt_up_ps2_write_data_byte_with_ack
0001125c g     F .text	00000014 atexit
000005f4 g     F .text	000000bc .hidden __gesf2
00008ae0 g     F .text	00000060 _write_r
000053e4 g     F .text	00000018 setlocale
00013840 g     O .rwdata	00000004 _impure_ptr
000156b4 g     O .bss	00000004 alt_argc
00004728 g     F .text	0000021c __sflush_r
00015678 g     O .bss	00000008 t0
00010928 g     F .text	00000060 _do_dtors
000053d0 g     F .text	00000008 __locale_cjk_lang
09000000 g       *ABS*	00000000 __alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM
00000020 g       .exceptions	00000000 alt_irq_entry
00006c48 g     F .text	00000064 __ulp
00004d58 g     F .text	00000018 __fp_unlock_all
00013854 g     O .rwdata	00000008 alt_fs_list
0001030c g     F .text	0000005c alt_up_rs232_enable_read_interrupt
00010488 g     F .text	00000040 alt_up_rs232_write_data
000156ac g     O .bss	00000008 alt_resettime
00000020 g       *ABS*	00000000 __ram_exceptions_start
000053fc g     F .text	0000000c localeconv
0001387c g       *ABS*	00000000 _edata
000157f8 g       *ABS*	00000000 _end
00008d5c g     F .text	00000164 __fputwc
00000248 g       *ABS*	00000000 __ram_exceptions_end
0000edbc g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00007244 g     F .text	0000007c __swrite
0001384c g     O .rwdata	00000004 __malloc_trim_threshold
000053c4 g     F .text	0000000c __locale_msgcharset
00011270 g     F .text	00000038 exit
0000fa8c g     F .text	00000074 alt_up_irda_read_data
00005268 g     F .text	000000c4 _fwalk_reent
0000fd84 g     F .text	000000c8 alt_up_ps2_init
00006a4c g     F .text	000001fc __mdiff
0000aac4 g     F .text	00000074 .hidden __modsi3
04000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00004d34 g     F .text	00000004 __sfp_lock_release
0000f580 g     F .text	00000078 alt_up_character_lcd_string
0000fc20 g     F .text	0000003c alt_up_irda_open_dev
000115bc g     F .text	00000034 _exit
0001069c g     F .text	0000012c alt_alarm_start
00005408 g     F .text	000001bc __smakebuf_r
0000ff7c g     F .text	00000068 alt_up_ps2_wait_for_ack
00007400 g     F .text	00000098 strlen
00010e0c g     F .text	00000154 open
0000be10 g     F .text	000000dc .hidden __gedf2
00013850 g     O .rwdata	00000004 __wctomb
00007594 g     F .text	00000018 __sprint_r
00010a18 g     F .text	00000034 alt_icache_flush_all
0000f648 g     F .text	00000074 alt_up_character_lcd_set_cursor_pos
00013878 g     O .rwdata	00000004 alt_priority_mask
00015680 g     O .bss	00000008 currentTime
00002c74 g     F .text	0000001c __vfprintf_internal
00009f34 g     F .text	0000005c _wctomb_r
000101ac g     F .text	0000008c alt_up_ps2_read_fd
0000c6f8 g     F .text	000008fc .hidden __subdf3
0000fb00 g     F .text	00000090 alt_up_irda_read_fd
00006480 g     F .text	000000b0 __lo0bits
00013870 g     O .rwdata	00000008 alt_alarm_list
000108c8 g     F .text	00000060 _do_ctors
00013838 g     O .rwdata	00000004 jumpDelay
000103c8 g     F .text	00000040 alt_up_rs232_get_used_space_in_read_FIFO
00009e44 g     F .text	000000c0 wcrtomb
0000d234 g     F .text	000000d0 close
0000d738 g     F .text	00000084 alt_load
00008ee4 g     F .text	00000080 fputwc
00004d38 g     F .text	00000004 __sinit_lock_acquire
000061f4 g     F .text	00000120 __multadd
000061cc g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   0:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   4:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   8:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   c:	00bffd16 	blt	zero,r2,4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  10:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
  14:	08409214 	ori	at,at,584
    jmp r1
  18:	0800683a 	jmp	at
  1c:	00000000 	call	0 <__reset>

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d40 	call	1d4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001526 	beq	r2,zero,190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 13c:	00800074 	movhi	r2,1
 140:	1095be04 	addi	r2,r2,22264
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00800074 	movhi	r2,1
 158:	1095be04 	addi	r2,r2,22264
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	e17ffd17 	ldw	r5,-12(fp)
 174:	1009883a 	mov	r4,r2
 178:	183ee83a 	callr	r3
#endif
        break;
 17c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 180:	0005313a 	rdctl	r2,ipending
 184:	e0bfff15 	stw	r2,-4(fp)

  return active;
 188:	e0bfff17 	ldw	r2,-4(fp)
 18c:	00000706 	br	1ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
 190:	e0bffc17 	ldw	r2,-16(fp)
 194:	1085883a 	add	r2,r2,r2
 198:	e0bffc15 	stw	r2,-16(fp)
      i++;
 19c:	e0bffd17 	ldw	r2,-12(fp)
 1a0:	10800044 	addi	r2,r2,1
 1a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a8:	003fe006 	br	12c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700012c>

    active = alt_irq_pending ();
 1ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1b0:	e0bffb17 	ldw	r2,-20(fp)
 1b4:	103fda1e 	bne	r2,zero,120 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b8:	0001883a 	nop
}
 1bc:	0001883a 	nop
 1c0:	e037883a 	mov	sp,fp
 1c4:	dfc00117 	ldw	ra,4(sp)
 1c8:	df000017 	ldw	fp,0(sp)
 1cc:	dec00204 	addi	sp,sp,8
 1d0:	f800283a 	ret

000001d4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d4:	defffb04 	addi	sp,sp,-20
 1d8:	dfc00415 	stw	ra,16(sp)
 1dc:	df000315 	stw	fp,12(sp)
 1e0:	df000304 	addi	fp,sp,12
 1e4:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 1e8:	000531fa 	rdctl	r2,exception
 1ec:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 1f0:	e0bffd17 	ldw	r2,-12(fp)
 1f4:	10801f0c 	andi	r2,r2,124
 1f8:	1004d0ba 	srli	r2,r2,2
 1fc:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 200:	0005333a 	rdctl	r2,badaddr
 204:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 208:	d0a7a517 	ldw	r2,-24940(gp)
 20c:	10000726 	beq	r2,zero,22c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 210:	d0a7a517 	ldw	r2,-24940(gp)
 214:	e0fffd17 	ldw	r3,-12(fp)
 218:	e1bffe17 	ldw	r6,-8(fp)
 21c:	e17fff17 	ldw	r5,-4(fp)
 220:	1809883a 	mov	r4,r3
 224:	103ee83a 	callr	r2
 228:	00000206 	br	234 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 22c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 230:	0005883a 	mov	r2,zero
}
 234:	e037883a 	mov	sp,fp
 238:	dfc00117 	ldw	ra,4(sp)
 23c:	df000017 	ldw	fp,0(sp)
 240:	dec00204 	addi	sp,sp,8
 244:	f800283a 	ret

Disassembly of section .text:

00000248 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     248:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
     24c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     250:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     254:	d6ae0e14 	ori	gp,gp,47160
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     258:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     25c:	10959e14 	ori	r2,r2,22136

    movhi r3, %hi(__bss_end)
     260:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     264:	18d5fe14 	ori	r3,r3,22520

    beq r2, r3, 1f
     268:	10c00326 	beq	r2,r3,278 <_start+0x30>

0:
    stw zero, (r2)
     26c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     274:	10fffd36 	bltu	r2,r3,26c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700026c>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     278:	000d7380 	call	d738 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     27c:	000d8cc0 	call	d8cc <alt_main>

00000280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     280:	003fff06 	br	280 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000280>

00000284 <int_to_int>:

struct timeval currentTime;
//struct timeval previousDetectionMillis;
struct timeval t0;

unsigned int int_to_int(unsigned int k) {
     284:	defffc04 	addi	sp,sp,-16
     288:	dfc00315 	stw	ra,12(sp)
     28c:	df000215 	stw	fp,8(sp)
     290:	dc000115 	stw	r16,4(sp)
     294:	df000204 	addi	fp,sp,8
     298:	e13ffe15 	stw	r4,-8(fp)
	return (k == 0 || k == 1 ? k : ((k % 2) + 10 * int_to_int(k / 2)));
     29c:	e0bffe17 	ldw	r2,-8(fp)
     2a0:	10000c26 	beq	r2,zero,2d4 <int_to_int+0x50>
     2a4:	e0bffe17 	ldw	r2,-8(fp)
     2a8:	10800060 	cmpeqi	r2,r2,1
     2ac:	1000091e 	bne	r2,zero,2d4 <int_to_int+0x50>
     2b0:	e0bffe17 	ldw	r2,-8(fp)
     2b4:	1400004c 	andi	r16,r2,1
     2b8:	e0bffe17 	ldw	r2,-8(fp)
     2bc:	1004d07a 	srli	r2,r2,1
     2c0:	1009883a 	mov	r4,r2
     2c4:	00002840 	call	284 <int_to_int>
     2c8:	108002a4 	muli	r2,r2,10
     2cc:	8085883a 	add	r2,r16,r2
     2d0:	00000106 	br	2d8 <int_to_int+0x54>
     2d4:	e0bffe17 	ldw	r2,-8(fp)
}
     2d8:	e6ffff04 	addi	sp,fp,-4
     2dc:	dfc00217 	ldw	ra,8(sp)
     2e0:	df000117 	ldw	fp,4(sp)
     2e4:	dc000017 	ldw	r16,0(sp)
     2e8:	dec00304 	addi	sp,sp,12
     2ec:	f800283a 	ret

000002f0 <timedifference_msec>:

float timedifference_msec(struct timeval t0, struct timeval t1) {
     2f0:	defff904 	addi	sp,sp,-28
     2f4:	dfc00615 	stw	ra,24(sp)
     2f8:	df000515 	stw	fp,20(sp)
     2fc:	dc000415 	stw	r16,16(sp)
     300:	df000504 	addi	fp,sp,20
     304:	e13ffb15 	stw	r4,-20(fp)
     308:	e17ffc15 	stw	r5,-16(fp)
     30c:	e1bffd15 	stw	r6,-12(fp)
     310:	e1fffe15 	stw	r7,-8(fp)
	return (t1.tv_sec - t0.tv_sec) * 1000.0f
     314:	e0fffd17 	ldw	r3,-12(fp)
     318:	e0bffb17 	ldw	r2,-20(fp)
     31c:	1885c83a 	sub	r2,r3,r2
     320:	1009883a 	mov	r4,r2
     324:	00007780 	call	778 <__floatsisf>
     328:	1007883a 	mov	r3,r2
     32c:	00911eb4 	movhi	r2,17530
     330:	18a1ff32 	custom	252,r16,r3,r2
			+ (t1.tv_usec - t0.tv_usec) / 1000.0f;
     334:	e0fffe17 	ldw	r3,-8(fp)
     338:	e0bffc17 	ldw	r2,-16(fp)
     33c:	1885c83a 	sub	r2,r3,r2
     340:	1009883a 	mov	r4,r2
     344:	00007780 	call	778 <__floatsisf>
     348:	1007883a 	mov	r3,r2
     34c:	00911eb4 	movhi	r2,17530
     350:	1885fff2 	custom	255,r2,r3,r2
unsigned int int_to_int(unsigned int k) {
	return (k == 0 || k == 1 ? k : ((k % 2) + 10 * int_to_int(k / 2)));
}

float timedifference_msec(struct timeval t0, struct timeval t1) {
	return (t1.tv_sec - t0.tv_sec) * 1000.0f
     354:	8085ff72 	custom	253,r2,r16,r2
     358:	1007883a 	mov	r3,r2
			+ (t1.tv_usec - t0.tv_usec) / 1000.0f;
}
     35c:	1805883a 	mov	r2,r3
     360:	e6ffff04 	addi	sp,fp,-4
     364:	dfc00217 	ldw	ra,8(sp)
     368:	df000117 	ldw	fp,4(sp)
     36c:	dc000017 	ldw	r16,0(sp)
     370:	dec00304 	addi	sp,sp,12
     374:	f800283a 	ret

00000378 <main>:

int main() {
     378:	deffee04 	addi	sp,sp,-72
     37c:	dfc01115 	stw	ra,68(sp)
     380:	df001015 	stw	fp,64(sp)
     384:	dc400f15 	stw	r17,60(sp)
     388:	dc000e15 	stw	r16,56(sp)
     38c:	df001004 	addi	fp,sp,64
	gettimeofday(&t0, 0);
     390:	000b883a 	mov	r5,zero
     394:	d1279004 	addi	r4,gp,-25024
     398:	000d41c0 	call	d41c <gettimeofday>
	int jumpCounter = 0;
     39c:	e03ff215 	stw	zero,-56(fp)
	float previousDetectionMillis = 0;
     3a0:	e03ff315 	stw	zero,-52(fp)
	float jumps[5];
	while (1) {
		gettimeofday(&currentTime, 0);
     3a4:	000b883a 	mov	r5,zero
     3a8:	d1279204 	addi	r4,gp,-25016
     3ac:	000d41c0 	call	d41c <gettimeofday>
		float currentMillis = timedifference_msec(t0, currentTime);
     3b0:	d1a79217 	ldw	r6,-25016(gp)
     3b4:	d1e79317 	ldw	r7,-25012(gp)
     3b8:	d1279017 	ldw	r4,-25024(gp)
     3bc:	d1679117 	ldw	r5,-25020(gp)
     3c0:	00002f00 	call	2f0 <timedifference_msec>
     3c4:	e0bff515 	stw	r2,-44(fp)
		int total = int_to_int(read_PIO(GPI_BASE) % 100);
     3c8:	00820834 	movhi	r2,2080
     3cc:	10800804 	addi	r2,r2,32
     3d0:	10800037 	ldwio	r2,0(r2)
     3d4:	00c01904 	movi	r3,100
     3d8:	10c7283a 	div	r3,r2,r3
     3dc:	18c01924 	muli	r3,r3,100
     3e0:	10c5c83a 	sub	r2,r2,r3
     3e4:	1009883a 	mov	r4,r2
     3e8:	00002840 	call	284 <int_to_int>
     3ec:	e0bff615 	stw	r2,-40(fp)
		int foregroundLDR = total % 10; // register cacti
     3f0:	e0bff617 	ldw	r2,-40(fp)
     3f4:	00c00284 	movi	r3,10
     3f8:	10c7283a 	div	r3,r2,r3
     3fc:	18c002a4 	muli	r3,r3,10
     400:	10c5c83a 	sub	r2,r2,r3
     404:	e0bff715 	stw	r2,-36(fp)
		int backgroundLDR = (total / 10) % 10; // register background color
     408:	e0fff617 	ldw	r3,-40(fp)
     40c:	00800284 	movi	r2,10
     410:	1885283a 	div	r2,r3,r2
     414:	00c00284 	movi	r3,10
     418:	10c7283a 	div	r3,r2,r3
     41c:	18c002a4 	muli	r3,r3,10
     420:	10c5c83a 	sub	r2,r2,r3
     424:	e0bff815 	stw	r2,-32(fp)
		// printf("Foreground LDR: %d -- Background LDR: %d -- Total: %d \n", foregroundLDR, backgroundLDR, total);
		if (jumpCounter > 0) {
     428:	e0bff217 	ldw	r2,-56(fp)
     42c:	00804a0e 	bge	zero,r2,558 <main+0x1e0>
			//printf("Counter: %d -- Value: %d\n", jumpCounter, jumps[jumpCounter]);
			for (int i = 1; i <= sizeof(jumps)/sizeof(jumps[0]); i++) {
     430:	00800044 	movi	r2,1
     434:	e0bff415 	stw	r2,-48(fp)
     438:	00004206 	br	544 <main+0x1cc>
				if (currentMillis >= jumps[i] && jumps[i] > 0) {
     43c:	e0bff417 	ldw	r2,-48(fp)
     440:	1085883a 	add	r2,r2,r2
     444:	1085883a 	add	r2,r2,r2
     448:	e0fff204 	addi	r3,fp,-56
     44c:	1885883a 	add	r2,r3,r2
     450:	10800704 	addi	r2,r2,28
     454:	10c00017 	ldw	r3,0(r2)
     458:	e17ff517 	ldw	r5,-44(fp)
     45c:	1809883a 	mov	r4,r3
     460:	00006b00 	call	6b0 <__lesf2>
     464:	00803116 	blt	zero,r2,52c <main+0x1b4>
     468:	e0bff417 	ldw	r2,-48(fp)
     46c:	1085883a 	add	r2,r2,r2
     470:	1085883a 	add	r2,r2,r2
     474:	e13ff204 	addi	r4,fp,-56
     478:	2085883a 	add	r2,r4,r2
     47c:	10800704 	addi	r2,r2,28
     480:	10c00017 	ldw	r3,0(r2)
     484:	000b883a 	mov	r5,zero
     488:	1809883a 	mov	r4,r3
     48c:	00005f40 	call	5f4 <__gesf2>
     490:	0080260e 	bge	zero,r2,52c <main+0x1b4>
					write_PIO(GPO_BASE, 1 << 11); // jump
     494:	00c20004 	movi	r3,2048
     498:	00820834 	movhi	r2,2080
     49c:	10c00035 	stwio	r3,0(r2)
					printf("Jumps: %d -- detecttime: %f -- currentTime: %f\n", jumpCounter, jumps[i], currentMillis);
     4a0:	e0bff417 	ldw	r2,-48(fp)
     4a4:	1085883a 	add	r2,r2,r2
     4a8:	1085883a 	add	r2,r2,r2
     4ac:	e0fff204 	addi	r3,fp,-56
     4b0:	1885883a 	add	r2,r3,r2
     4b4:	10800704 	addi	r2,r2,28
     4b8:	10c00017 	ldw	r3,0(r2)
     4bc:	1809883a 	mov	r4,r3
     4c0:	000089c0 	call	89c <__extendsfdf2>
     4c4:	1021883a 	mov	r16,r2
     4c8:	1823883a 	mov	r17,r3
     4cc:	e13ff517 	ldw	r4,-44(fp)
     4d0:	000089c0 	call	89c <__extendsfdf2>
     4d4:	1009883a 	mov	r4,r2
     4d8:	180b883a 	mov	r5,r3
     4dc:	d9000015 	stw	r4,0(sp)
     4e0:	d9400115 	stw	r5,4(sp)
     4e4:	800d883a 	mov	r6,r16
     4e8:	880f883a 	mov	r7,r17
     4ec:	e17ff217 	ldw	r5,-56(fp)
     4f0:	01000074 	movhi	r4,1
     4f4:	21057c04 	addi	r4,r4,5616
     4f8:	0000a400 	call	a40 <printf>
					jumps[i] = 0;
     4fc:	e0bff417 	ldw	r2,-48(fp)
     500:	1085883a 	add	r2,r2,r2
     504:	1085883a 	add	r2,r2,r2
     508:	e13ff204 	addi	r4,fp,-56
     50c:	2085883a 	add	r2,r4,r2
     510:	10800704 	addi	r2,r2,28
     514:	10000015 	stw	zero,0(r2)
					if (i == 5) {
     518:	e0bff417 	ldw	r2,-48(fp)
     51c:	10800158 	cmpnei	r2,r2,5
     520:	10000c1e 	bne	r2,zero,554 <main+0x1dc>
						jumpCounter = 0;
     524:	e03ff215 	stw	zero,-56(fp)
					}
					break;
     528:	00000a06 	br	554 <main+0x1dc>
				} else {
					write_PIO(GPO_BASE, 0);
     52c:	0007883a 	mov	r3,zero
     530:	00820834 	movhi	r2,2080
     534:	10c00035 	stwio	r3,0(r2)
		int foregroundLDR = total % 10; // register cacti
		int backgroundLDR = (total / 10) % 10; // register background color
		// printf("Foreground LDR: %d -- Background LDR: %d -- Total: %d \n", foregroundLDR, backgroundLDR, total);
		if (jumpCounter > 0) {
			//printf("Counter: %d -- Value: %d\n", jumpCounter, jumps[jumpCounter]);
			for (int i = 1; i <= sizeof(jumps)/sizeof(jumps[0]); i++) {
     538:	e0bff417 	ldw	r2,-48(fp)
     53c:	10800044 	addi	r2,r2,1
     540:	e0bff415 	stw	r2,-48(fp)
     544:	e0bff417 	ldw	r2,-48(fp)
     548:	108001b0 	cmpltui	r2,r2,6
     54c:	103fbb1e 	bne	r2,zero,43c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700043c>
     550:	00000106 	br	558 <main+0x1e0>
					printf("Jumps: %d -- detecttime: %f -- currentTime: %f\n", jumpCounter, jumps[i], currentMillis);
					jumps[i] = 0;
					if (i == 5) {
						jumpCounter = 0;
					}
					break;
     554:	0001883a 	nop
					write_PIO(GPO_BASE, 0);
				}
			}
		}
		// Only check for cacti once every tenth of a second so it won't flood pending jumps
		if (currentMillis - previousDetectionMillis >= 100) {
     558:	e0fff517 	ldw	r3,-44(fp)
     55c:	e0bff317 	ldw	r2,-52(fp)
     560:	1885ffb2 	custom	254,r2,r3,r2
     564:	0150b234 	movhi	r5,17096
     568:	1009883a 	mov	r4,r2
     56c:	00005f40 	call	5f4 <__gesf2>
     570:	10001f16 	blt	r2,zero,5f0 <main+0x278>
			// Use the 2 LDR's to check for cacti
			// The LDR which check the foreground has to be 1.4 times higher or lower than the background
			// This value is a threshold which will be exceded by the passing cacti
			if (foregroundLDR != backgroundLDR) {
     574:	e0fff717 	ldw	r3,-36(fp)
     578:	e0bff817 	ldw	r2,-32(fp)
     57c:	18bf8926 	beq	r3,r2,3a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70003a4>
				previousDetectionMillis = currentMillis;
     580:	e0bff517 	ldw	r2,-44(fp)
     584:	e0bff315 	stw	r2,-52(fp)
				jumpCounter++;
     588:	e0bff217 	ldw	r2,-56(fp)
     58c:	10800044 	addi	r2,r2,1
     590:	e0bff215 	stw	r2,-56(fp)
				jumps[jumpCounter] = previousDetectionMillis + jumpDelay;
     594:	d0a00017 	ldw	r2,-32768(gp)
     598:	1009883a 	mov	r4,r2
     59c:	00007780 	call	778 <__floatsisf>
     5a0:	1007883a 	mov	r3,r2
     5a4:	e0bff317 	ldw	r2,-52(fp)
     5a8:	1887ff72 	custom	253,r3,r3,r2
     5ac:	e0bff217 	ldw	r2,-56(fp)
     5b0:	1085883a 	add	r2,r2,r2
     5b4:	1085883a 	add	r2,r2,r2
     5b8:	e13ff204 	addi	r4,fp,-56
     5bc:	2085883a 	add	r2,r4,r2
     5c0:	10800704 	addi	r2,r2,28
     5c4:	10c00015 	stw	r3,0(r2)
				printf("jumpcounter: %d -- millis: %f\n", jumpCounter, previousDetectionMillis);
     5c8:	e13ff317 	ldw	r4,-52(fp)
     5cc:	000089c0 	call	89c <__extendsfdf2>
     5d0:	1009883a 	mov	r4,r2
     5d4:	180b883a 	mov	r5,r3
     5d8:	200d883a 	mov	r6,r4
     5dc:	280f883a 	mov	r7,r5
     5e0:	e17ff217 	ldw	r5,-56(fp)
     5e4:	01000074 	movhi	r4,1
     5e8:	21058804 	addi	r4,r4,5664
     5ec:	0000a400 	call	a40 <printf>
			}
		}
	}
     5f0:	003f6c06 	br	3a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70003a4>

000005f4 <__gesf2>:
     5f4:	2004d5fa 	srli	r2,r4,23
     5f8:	2806d5fa 	srli	r3,r5,23
     5fc:	01802034 	movhi	r6,128
     600:	31bfffc4 	addi	r6,r6,-1
     604:	10803fcc 	andi	r2,r2,255
     608:	01c03fc4 	movi	r7,255
     60c:	3110703a 	and	r8,r6,r4
     610:	18c03fcc 	andi	r3,r3,255
     614:	314c703a 	and	r6,r6,r5
     618:	2008d7fa 	srli	r4,r4,31
     61c:	280ad7fa 	srli	r5,r5,31
     620:	11c01926 	beq	r2,r7,688 <__gesf2+0x94>
     624:	01c03fc4 	movi	r7,255
     628:	19c00f26 	beq	r3,r7,668 <__gesf2+0x74>
     62c:	1000061e 	bne	r2,zero,648 <__gesf2+0x54>
     630:	400f003a 	cmpeq	r7,r8,zero
     634:	1800071e 	bne	r3,zero,654 <__gesf2+0x60>
     638:	3000061e 	bne	r6,zero,654 <__gesf2+0x60>
     63c:	0005883a 	mov	r2,zero
     640:	40000e1e 	bne	r8,zero,67c <__gesf2+0x88>
     644:	f800283a 	ret
     648:	18000a1e 	bne	r3,zero,674 <__gesf2+0x80>
     64c:	30000b26 	beq	r6,zero,67c <__gesf2+0x88>
     650:	000f883a 	mov	r7,zero
     654:	29403fcc 	andi	r5,r5,255
     658:	38000726 	beq	r7,zero,678 <__gesf2+0x84>
     65c:	28000826 	beq	r5,zero,680 <__gesf2+0x8c>
     660:	00800044 	movi	r2,1
     664:	f800283a 	ret
     668:	303ff026 	beq	r6,zero,62c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700062c>
     66c:	00bfff84 	movi	r2,-2
     670:	f800283a 	ret
     674:	29403fcc 	andi	r5,r5,255
     678:	21400526 	beq	r4,r5,690 <__gesf2+0x9c>
     67c:	203ff826 	beq	r4,zero,660 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000660>
     680:	00bfffc4 	movi	r2,-1
     684:	f800283a 	ret
     688:	403fe626 	beq	r8,zero,624 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000624>
     68c:	003ff706 	br	66c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700066c>
     690:	18bffa16 	blt	r3,r2,67c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700067c>
     694:	10c00216 	blt	r2,r3,6a0 <__gesf2+0xac>
     698:	323ff836 	bltu	r6,r8,67c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700067c>
     69c:	4180022e 	bgeu	r8,r6,6a8 <__gesf2+0xb4>
     6a0:	203fef1e 	bne	r4,zero,660 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000660>
     6a4:	003ff606 	br	680 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000680>
     6a8:	0005883a 	mov	r2,zero
     6ac:	f800283a 	ret

000006b0 <__lesf2>:
     6b0:	2004d5fa 	srli	r2,r4,23
     6b4:	280cd5fa 	srli	r6,r5,23
     6b8:	00c02034 	movhi	r3,128
     6bc:	18ffffc4 	addi	r3,r3,-1
     6c0:	10803fcc 	andi	r2,r2,255
     6c4:	01c03fc4 	movi	r7,255
     6c8:	1910703a 	and	r8,r3,r4
     6cc:	31803fcc 	andi	r6,r6,255
     6d0:	1946703a 	and	r3,r3,r5
     6d4:	2008d7fa 	srli	r4,r4,31
     6d8:	280ad7fa 	srli	r5,r5,31
     6dc:	11c01b26 	beq	r2,r7,74c <__lesf2+0x9c>
     6e0:	01c03fc4 	movi	r7,255
     6e4:	31c01126 	beq	r6,r7,72c <__lesf2+0x7c>
     6e8:	1000071e 	bne	r2,zero,708 <__lesf2+0x58>
     6ec:	400f003a 	cmpeq	r7,r8,zero
     6f0:	21003fcc 	andi	r4,r4,255
     6f4:	3000081e 	bne	r6,zero,718 <__lesf2+0x68>
     6f8:	1800071e 	bne	r3,zero,718 <__lesf2+0x68>
     6fc:	0005883a 	mov	r2,zero
     700:	40000f1e 	bne	r8,zero,740 <__lesf2+0x90>
     704:	f800283a 	ret
     708:	21003fcc 	andi	r4,r4,255
     70c:	30000a1e 	bne	r6,zero,738 <__lesf2+0x88>
     710:	18000b26 	beq	r3,zero,740 <__lesf2+0x90>
     714:	000f883a 	mov	r7,zero
     718:	29403fcc 	andi	r5,r5,255
     71c:	38000726 	beq	r7,zero,73c <__lesf2+0x8c>
     720:	28000826 	beq	r5,zero,744 <__lesf2+0x94>
     724:	00800044 	movi	r2,1
     728:	f800283a 	ret
     72c:	183fee26 	beq	r3,zero,6e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70006e8>
     730:	00800084 	movi	r2,2
     734:	f800283a 	ret
     738:	29403fcc 	andi	r5,r5,255
     73c:	21400626 	beq	r4,r5,758 <__lesf2+0xa8>
     740:	203ff826 	beq	r4,zero,724 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000724>
     744:	00bfffc4 	movi	r2,-1
     748:	f800283a 	ret
     74c:	403fe426 	beq	r8,zero,6e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70006e0>
     750:	00800084 	movi	r2,2
     754:	f800283a 	ret
     758:	30bff916 	blt	r6,r2,740 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000740>
     75c:	11800216 	blt	r2,r6,768 <__lesf2+0xb8>
     760:	1a3ff736 	bltu	r3,r8,740 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000740>
     764:	40c0022e 	bgeu	r8,r3,770 <__lesf2+0xc0>
     768:	203fee1e 	bne	r4,zero,724 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000724>
     76c:	003ff506 	br	744 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000744>
     770:	0005883a 	mov	r2,zero
     774:	f800283a 	ret

00000778 <__floatsisf>:
     778:	defffd04 	addi	sp,sp,-12
     77c:	dfc00215 	stw	ra,8(sp)
     780:	dc400115 	stw	r17,4(sp)
     784:	dc000015 	stw	r16,0(sp)
     788:	20003526 	beq	r4,zero,860 <__floatsisf+0xe8>
     78c:	2021883a 	mov	r16,r4
     790:	2022d7fa 	srli	r17,r4,31
     794:	20003616 	blt	r4,zero,870 <__floatsisf+0xf8>
     798:	8009883a 	mov	r4,r16
     79c:	00009ac0 	call	9ac <__clzsi2>
     7a0:	00c02784 	movi	r3,158
     7a4:	1887c83a 	sub	r3,r3,r2
     7a8:	01002584 	movi	r4,150
     7ac:	20c01416 	blt	r4,r3,800 <__floatsisf+0x88>
     7b0:	20c9c83a 	sub	r4,r4,r3
     7b4:	8120983a 	sll	r16,r16,r4
     7b8:	00802034 	movhi	r2,128
     7bc:	10bfffc4 	addi	r2,r2,-1
     7c0:	8809883a 	mov	r4,r17
     7c4:	80a0703a 	and	r16,r16,r2
     7c8:	18803fcc 	andi	r2,r3,255
     7cc:	100695fa 	slli	r3,r2,23
     7d0:	20803fcc 	andi	r2,r4,255
     7d4:	100897fa 	slli	r4,r2,31
     7d8:	00802034 	movhi	r2,128
     7dc:	10bfffc4 	addi	r2,r2,-1
     7e0:	8084703a 	and	r2,r16,r2
     7e4:	10c4b03a 	or	r2,r2,r3
     7e8:	1104b03a 	or	r2,r2,r4
     7ec:	dfc00217 	ldw	ra,8(sp)
     7f0:	dc400117 	ldw	r17,4(sp)
     7f4:	dc000017 	ldw	r16,0(sp)
     7f8:	dec00304 	addi	sp,sp,12
     7fc:	f800283a 	ret
     800:	01002644 	movi	r4,153
     804:	20c01c16 	blt	r4,r3,878 <__floatsisf+0x100>
     808:	20c9c83a 	sub	r4,r4,r3
     80c:	8120983a 	sll	r16,r16,r4
     810:	013f0034 	movhi	r4,64512
     814:	213fffc4 	addi	r4,r4,-1
     818:	814001cc 	andi	r5,r16,7
     81c:	8108703a 	and	r4,r16,r4
     820:	28000426 	beq	r5,zero,834 <__floatsisf+0xbc>
     824:	840003cc 	andi	r16,r16,15
     828:	01400104 	movi	r5,4
     82c:	81400126 	beq	r16,r5,834 <__floatsisf+0xbc>
     830:	2149883a 	add	r4,r4,r5
     834:	2141002c 	andhi	r5,r4,1024
     838:	28000526 	beq	r5,zero,850 <__floatsisf+0xd8>
     83c:	00c027c4 	movi	r3,159
     840:	1887c83a 	sub	r3,r3,r2
     844:	00bf0034 	movhi	r2,64512
     848:	10bfffc4 	addi	r2,r2,-1
     84c:	2088703a 	and	r4,r4,r2
     850:	202091ba 	slli	r16,r4,6
     854:	8809883a 	mov	r4,r17
     858:	8020d27a 	srli	r16,r16,9
     85c:	003fda06 	br	7c8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70007c8>
     860:	0009883a 	mov	r4,zero
     864:	0007883a 	mov	r3,zero
     868:	0021883a 	mov	r16,zero
     86c:	003fd606 	br	7c8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70007c8>
     870:	0121c83a 	sub	r16,zero,r4
     874:	003fc806 	br	798 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000798>
     878:	01002e44 	movi	r4,185
     87c:	20c9c83a 	sub	r4,r4,r3
     880:	01400144 	movi	r5,5
     884:	8108983a 	sll	r4,r16,r4
     888:	288bc83a 	sub	r5,r5,r2
     88c:	8160d83a 	srl	r16,r16,r5
     890:	2008c03a 	cmpne	r4,r4,zero
     894:	8120b03a 	or	r16,r16,r4
     898:	003fdd06 	br	810 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000810>

0000089c <__extendsfdf2>:
     89c:	200ad5fa 	srli	r5,r4,23
     8a0:	defffd04 	addi	sp,sp,-12
     8a4:	dc400115 	stw	r17,4(sp)
     8a8:	29403fcc 	andi	r5,r5,255
     8ac:	29800044 	addi	r6,r5,1
     8b0:	04402034 	movhi	r17,128
     8b4:	dc000015 	stw	r16,0(sp)
     8b8:	8c7fffc4 	addi	r17,r17,-1
     8bc:	dfc00215 	stw	ra,8(sp)
     8c0:	31803fcc 	andi	r6,r6,255
     8c4:	00800044 	movi	r2,1
     8c8:	8922703a 	and	r17,r17,r4
     8cc:	2020d7fa 	srli	r16,r4,31
     8d0:	1180110e 	bge	r2,r6,918 <__extendsfdf2+0x7c>
     8d4:	880cd0fa 	srli	r6,r17,3
     8d8:	8822977a 	slli	r17,r17,29
     8dc:	2940e004 	addi	r5,r5,896
     8e0:	2941ffcc 	andi	r5,r5,2047
     8e4:	2804953a 	slli	r2,r5,20
     8e8:	01400434 	movhi	r5,16
     8ec:	800697fa 	slli	r3,r16,31
     8f0:	297fffc4 	addi	r5,r5,-1
     8f4:	314a703a 	and	r5,r6,r5
     8f8:	288ab03a 	or	r5,r5,r2
     8fc:	28c6b03a 	or	r3,r5,r3
     900:	8805883a 	mov	r2,r17
     904:	dfc00217 	ldw	ra,8(sp)
     908:	dc400117 	ldw	r17,4(sp)
     90c:	dc000017 	ldw	r16,0(sp)
     910:	dec00304 	addi	sp,sp,12
     914:	f800283a 	ret
     918:	2800111e 	bne	r5,zero,960 <__extendsfdf2+0xc4>
     91c:	88001c26 	beq	r17,zero,990 <__extendsfdf2+0xf4>
     920:	8809883a 	mov	r4,r17
     924:	00009ac0 	call	9ac <__clzsi2>
     928:	00c00284 	movi	r3,10
     92c:	18801b16 	blt	r3,r2,99c <__extendsfdf2+0x100>
     930:	018002c4 	movi	r6,11
     934:	308dc83a 	sub	r6,r6,r2
     938:	11000544 	addi	r4,r2,21
     93c:	8986d83a 	srl	r3,r17,r6
     940:	8922983a 	sll	r17,r17,r4
     944:	0180e244 	movi	r6,905
     948:	01400434 	movhi	r5,16
     94c:	3085c83a 	sub	r2,r6,r2
     950:	297fffc4 	addi	r5,r5,-1
     954:	194c703a 	and	r6,r3,r5
     958:	1141ffcc 	andi	r5,r2,2047
     95c:	003fe006 	br	8e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70008e0>
     960:	88000826 	beq	r17,zero,984 <__extendsfdf2+0xe8>
     964:	880cd0fa 	srli	r6,r17,3
     968:	00800434 	movhi	r2,16
     96c:	10bfffc4 	addi	r2,r2,-1
     970:	31800234 	orhi	r6,r6,8
     974:	8822977a 	slli	r17,r17,29
     978:	308c703a 	and	r6,r6,r2
     97c:	0141ffc4 	movi	r5,2047
     980:	003fd706 	br	8e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70008e0>
     984:	0141ffc4 	movi	r5,2047
     988:	000d883a 	mov	r6,zero
     98c:	003fd406 	br	8e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70008e0>
     990:	000b883a 	mov	r5,zero
     994:	000d883a 	mov	r6,zero
     998:	003fd106 	br	8e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70008e0>
     99c:	11bffd44 	addi	r6,r2,-11
     9a0:	8986983a 	sll	r3,r17,r6
     9a4:	0023883a 	mov	r17,zero
     9a8:	003fe606 	br	944 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000944>

000009ac <__clzsi2>:
     9ac:	00bfffd4 	movui	r2,65535
     9b0:	11000536 	bltu	r2,r4,9c8 <__clzsi2+0x1c>
     9b4:	00803fc4 	movi	r2,255
     9b8:	11000f36 	bltu	r2,r4,9f8 <__clzsi2+0x4c>
     9bc:	00800804 	movi	r2,32
     9c0:	0007883a 	mov	r3,zero
     9c4:	00000506 	br	9dc <__clzsi2+0x30>
     9c8:	00804034 	movhi	r2,256
     9cc:	10bfffc4 	addi	r2,r2,-1
     9d0:	11000c2e 	bgeu	r2,r4,a04 <__clzsi2+0x58>
     9d4:	00800204 	movi	r2,8
     9d8:	00c00604 	movi	r3,24
     9dc:	20c8d83a 	srl	r4,r4,r3
     9e0:	00c00074 	movhi	r3,1
     9e4:	18c58fc4 	addi	r3,r3,5695
     9e8:	1909883a 	add	r4,r3,r4
     9ec:	20c00003 	ldbu	r3,0(r4)
     9f0:	10c5c83a 	sub	r2,r2,r3
     9f4:	f800283a 	ret
     9f8:	00800604 	movi	r2,24
     9fc:	00c00204 	movi	r3,8
     a00:	003ff606 	br	9dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70009dc>
     a04:	00800404 	movi	r2,16
     a08:	1007883a 	mov	r3,r2
     a0c:	003ff306 	br	9dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70009dc>

00000a10 <_printf_r>:
     a10:	defffd04 	addi	sp,sp,-12
     a14:	2805883a 	mov	r2,r5
     a18:	dfc00015 	stw	ra,0(sp)
     a1c:	d9800115 	stw	r6,4(sp)
     a20:	d9c00215 	stw	r7,8(sp)
     a24:	21400217 	ldw	r5,8(r4)
     a28:	d9c00104 	addi	r7,sp,4
     a2c:	100d883a 	mov	r6,r2
     a30:	0000a7c0 	call	a7c <___vfprintf_internal_r>
     a34:	dfc00017 	ldw	ra,0(sp)
     a38:	dec00304 	addi	sp,sp,12
     a3c:	f800283a 	ret

00000a40 <printf>:
     a40:	defffc04 	addi	sp,sp,-16
     a44:	dfc00015 	stw	ra,0(sp)
     a48:	d9400115 	stw	r5,4(sp)
     a4c:	d9800215 	stw	r6,8(sp)
     a50:	d9c00315 	stw	r7,12(sp)
     a54:	00800074 	movhi	r2,1
     a58:	108e1004 	addi	r2,r2,14400
     a5c:	10800017 	ldw	r2,0(r2)
     a60:	200b883a 	mov	r5,r4
     a64:	d9800104 	addi	r6,sp,4
     a68:	11000217 	ldw	r4,8(r2)
     a6c:	0002c740 	call	2c74 <__vfprintf_internal>
     a70:	dfc00017 	ldw	ra,0(sp)
     a74:	dec00404 	addi	sp,sp,16
     a78:	f800283a 	ret

00000a7c <___vfprintf_internal_r>:
     a7c:	deffb804 	addi	sp,sp,-288
     a80:	dfc04715 	stw	ra,284(sp)
     a84:	ddc04515 	stw	r23,276(sp)
     a88:	dd404315 	stw	r21,268(sp)
     a8c:	d9002c15 	stw	r4,176(sp)
     a90:	282f883a 	mov	r23,r5
     a94:	302b883a 	mov	r21,r6
     a98:	d9c02d15 	stw	r7,180(sp)
     a9c:	df004615 	stw	fp,280(sp)
     aa0:	dd804415 	stw	r22,272(sp)
     aa4:	dd004215 	stw	r20,264(sp)
     aa8:	dcc04115 	stw	r19,260(sp)
     aac:	dc804015 	stw	r18,256(sp)
     ab0:	dc403f15 	stw	r17,252(sp)
     ab4:	dc003e15 	stw	r16,248(sp)
     ab8:	00053d80 	call	53d8 <_localeconv_r>
     abc:	10800017 	ldw	r2,0(r2)
     ac0:	1009883a 	mov	r4,r2
     ac4:	d8803415 	stw	r2,208(sp)
     ac8:	00074000 	call	7400 <strlen>
     acc:	d8803715 	stw	r2,220(sp)
     ad0:	d8802c17 	ldw	r2,176(sp)
     ad4:	10000226 	beq	r2,zero,ae0 <___vfprintf_internal_r+0x64>
     ad8:	10800e17 	ldw	r2,56(r2)
     adc:	1000f926 	beq	r2,zero,ec4 <___vfprintf_internal_r+0x448>
     ae0:	b880030b 	ldhu	r2,12(r23)
     ae4:	10c8000c 	andi	r3,r2,8192
     ae8:	1800061e 	bne	r3,zero,b04 <___vfprintf_internal_r+0x88>
     aec:	b9001917 	ldw	r4,100(r23)
     af0:	00f7ffc4 	movi	r3,-8193
     af4:	10880014 	ori	r2,r2,8192
     af8:	20c6703a 	and	r3,r4,r3
     afc:	b880030d 	sth	r2,12(r23)
     b00:	b8c01915 	stw	r3,100(r23)
     b04:	10c0020c 	andi	r3,r2,8
     b08:	1800c126 	beq	r3,zero,e10 <___vfprintf_internal_r+0x394>
     b0c:	b8c00417 	ldw	r3,16(r23)
     b10:	1800bf26 	beq	r3,zero,e10 <___vfprintf_internal_r+0x394>
     b14:	1080068c 	andi	r2,r2,26
     b18:	00c00284 	movi	r3,10
     b1c:	10c0c426 	beq	r2,r3,e30 <___vfprintf_internal_r+0x3b4>
     b20:	d8c00404 	addi	r3,sp,16
     b24:	05000074 	movhi	r20,1
     b28:	d9001e04 	addi	r4,sp,120
     b2c:	a505e084 	addi	r20,r20,6018
     b30:	d8c01e15 	stw	r3,120(sp)
     b34:	d8002015 	stw	zero,128(sp)
     b38:	d8001f15 	stw	zero,124(sp)
     b3c:	d8003315 	stw	zero,204(sp)
     b40:	d8003615 	stw	zero,216(sp)
     b44:	d8003815 	stw	zero,224(sp)
     b48:	1811883a 	mov	r8,r3
     b4c:	d8003915 	stw	zero,228(sp)
     b50:	d8003a15 	stw	zero,232(sp)
     b54:	d8002f15 	stw	zero,188(sp)
     b58:	d9002815 	stw	r4,160(sp)
     b5c:	a8800007 	ldb	r2,0(r21)
     b60:	10027b26 	beq	r2,zero,1550 <___vfprintf_internal_r+0xad4>
     b64:	00c00944 	movi	r3,37
     b68:	a821883a 	mov	r16,r21
     b6c:	10c0021e 	bne	r2,r3,b78 <___vfprintf_internal_r+0xfc>
     b70:	00001406 	br	bc4 <___vfprintf_internal_r+0x148>
     b74:	10c00326 	beq	r2,r3,b84 <___vfprintf_internal_r+0x108>
     b78:	84000044 	addi	r16,r16,1
     b7c:	80800007 	ldb	r2,0(r16)
     b80:	103ffc1e 	bne	r2,zero,b74 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000b74>
     b84:	8563c83a 	sub	r17,r16,r21
     b88:	88000e26 	beq	r17,zero,bc4 <___vfprintf_internal_r+0x148>
     b8c:	d8c02017 	ldw	r3,128(sp)
     b90:	d8801f17 	ldw	r2,124(sp)
     b94:	45400015 	stw	r21,0(r8)
     b98:	1c47883a 	add	r3,r3,r17
     b9c:	10800044 	addi	r2,r2,1
     ba0:	d8c02015 	stw	r3,128(sp)
     ba4:	44400115 	stw	r17,4(r8)
     ba8:	d8801f15 	stw	r2,124(sp)
     bac:	00c001c4 	movi	r3,7
     bb0:	1880a716 	blt	r3,r2,e50 <___vfprintf_internal_r+0x3d4>
     bb4:	42000204 	addi	r8,r8,8
     bb8:	d9402f17 	ldw	r5,188(sp)
     bbc:	2c4b883a 	add	r5,r5,r17
     bc0:	d9402f15 	stw	r5,188(sp)
     bc4:	80800007 	ldb	r2,0(r16)
     bc8:	1000a826 	beq	r2,zero,e6c <___vfprintf_internal_r+0x3f0>
     bcc:	84400047 	ldb	r17,1(r16)
     bd0:	00bfffc4 	movi	r2,-1
     bd4:	85400044 	addi	r21,r16,1
     bd8:	d8002785 	stb	zero,158(sp)
     bdc:	0007883a 	mov	r3,zero
     be0:	000f883a 	mov	r7,zero
     be4:	d8802915 	stw	r2,164(sp)
     be8:	d8003115 	stw	zero,196(sp)
     bec:	0025883a 	mov	r18,zero
     bf0:	01401604 	movi	r5,88
     bf4:	01800244 	movi	r6,9
     bf8:	02800a84 	movi	r10,42
     bfc:	02401b04 	movi	r9,108
     c00:	ad400044 	addi	r21,r21,1
     c04:	88bff804 	addi	r2,r17,-32
     c08:	28830436 	bltu	r5,r2,181c <___vfprintf_internal_r+0xda0>
     c0c:	100490ba 	slli	r2,r2,2
     c10:	01000034 	movhi	r4,0
     c14:	21030904 	addi	r4,r4,3108
     c18:	1105883a 	add	r2,r2,r4
     c1c:	10800017 	ldw	r2,0(r2)
     c20:	1000683a 	jmp	r2
     c24:	0000173c 	xorhi	zero,zero,92
     c28:	0000181c 	xori	zero,zero,96
     c2c:	0000181c 	xori	zero,zero,96
     c30:	0000175c 	xori	zero,zero,93
     c34:	0000181c 	xori	zero,zero,96
     c38:	0000181c 	xori	zero,zero,96
     c3c:	0000181c 	xori	zero,zero,96
     c40:	0000181c 	xori	zero,zero,96
     c44:	0000181c 	xori	zero,zero,96
     c48:	0000181c 	xori	zero,zero,96
     c4c:	00000ed0 	cmplti	zero,zero,59
     c50:	00001678 	rdprs	zero,zero,89
     c54:	0000181c 	xori	zero,zero,96
     c58:	00000d98 	cmpnei	zero,zero,54
     c5c:	00000ef8 	rdprs	zero,zero,59
     c60:	0000181c 	xori	zero,zero,96
     c64:	00000f38 	rdprs	zero,zero,60
     c68:	00000f44 	movi	zero,61
     c6c:	00000f44 	movi	zero,61
     c70:	00000f44 	movi	zero,61
     c74:	00000f44 	movi	zero,61
     c78:	00000f44 	movi	zero,61
     c7c:	00000f44 	movi	zero,61
     c80:	00000f44 	movi	zero,61
     c84:	00000f44 	movi	zero,61
     c88:	00000f44 	movi	zero,61
     c8c:	0000181c 	xori	zero,zero,96
     c90:	0000181c 	xori	zero,zero,96
     c94:	0000181c 	xori	zero,zero,96
     c98:	0000181c 	xori	zero,zero,96
     c9c:	0000181c 	xori	zero,zero,96
     ca0:	0000181c 	xori	zero,zero,96
     ca4:	0000181c 	xori	zero,zero,96
     ca8:	0000181c 	xori	zero,zero,96
     cac:	0000181c 	xori	zero,zero,96
     cb0:	0000181c 	xori	zero,zero,96
     cb4:	00000f78 	rdprs	zero,zero,61
     cb8:	00001034 	movhi	zero,64
     cbc:	0000181c 	xori	zero,zero,96
     cc0:	00001034 	movhi	zero,64
     cc4:	0000181c 	xori	zero,zero,96
     cc8:	0000181c 	xori	zero,zero,96
     ccc:	0000181c 	xori	zero,zero,96
     cd0:	0000181c 	xori	zero,zero,96
     cd4:	000010d4 	movui	zero,67
     cd8:	0000181c 	xori	zero,zero,96
     cdc:	0000181c 	xori	zero,zero,96
     ce0:	000010e0 	cmpeqi	zero,zero,67
     ce4:	0000181c 	xori	zero,zero,96
     ce8:	0000181c 	xori	zero,zero,96
     cec:	0000181c 	xori	zero,zero,96
     cf0:	0000181c 	xori	zero,zero,96
     cf4:	0000181c 	xori	zero,zero,96
     cf8:	00001558 	cmpnei	zero,zero,85
     cfc:	0000181c 	xori	zero,zero,96
     d00:	0000181c 	xori	zero,zero,96
     d04:	000015b8 	rdprs	zero,zero,86
     d08:	0000181c 	xori	zero,zero,96
     d0c:	0000181c 	xori	zero,zero,96
     d10:	0000181c 	xori	zero,zero,96
     d14:	0000181c 	xori	zero,zero,96
     d18:	0000181c 	xori	zero,zero,96
     d1c:	0000181c 	xori	zero,zero,96
     d20:	0000181c 	xori	zero,zero,96
     d24:	0000181c 	xori	zero,zero,96
     d28:	0000181c 	xori	zero,zero,96
     d2c:	0000181c 	xori	zero,zero,96
     d30:	000017c8 	cmpgei	zero,zero,95
     d34:	00001768 	cmpgeui	zero,zero,93
     d38:	00001034 	movhi	zero,64
     d3c:	00001034 	movhi	zero,64
     d40:	00001034 	movhi	zero,64
     d44:	00001778 	rdprs	zero,zero,93
     d48:	00001768 	cmpgeui	zero,zero,93
     d4c:	0000181c 	xori	zero,zero,96
     d50:	0000181c 	xori	zero,zero,96
     d54:	00001784 	movi	zero,94
     d58:	0000181c 	xori	zero,zero,96
     d5c:	00001794 	movui	zero,94
     d60:	00001668 	cmpgeui	zero,zero,89
     d64:	00000da4 	muli	zero,zero,54
     d68:	00001688 	cmpgei	zero,zero,90
     d6c:	0000181c 	xori	zero,zero,96
     d70:	00001694 	movui	zero,90
     d74:	0000181c 	xori	zero,zero,96
     d78:	000016f0 	cmpltui	zero,zero,91
     d7c:	0000181c 	xori	zero,zero,96
     d80:	0000181c 	xori	zero,zero,96
     d84:	00001700 	call	170 <alt_irq_handler+0x74>
     d88:	d9003117 	ldw	r4,196(sp)
     d8c:	d8802d15 	stw	r2,180(sp)
     d90:	0109c83a 	sub	r4,zero,r4
     d94:	d9003115 	stw	r4,196(sp)
     d98:	94800114 	ori	r18,r18,4
     d9c:	ac400007 	ldb	r17,0(r21)
     da0:	003f9706 	br	c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c00>
     da4:	00800c04 	movi	r2,48
     da8:	d9002d17 	ldw	r4,180(sp)
     dac:	d9402917 	ldw	r5,164(sp)
     db0:	d8802705 	stb	r2,156(sp)
     db4:	00801e04 	movi	r2,120
     db8:	d8802745 	stb	r2,157(sp)
     dbc:	d8002785 	stb	zero,158(sp)
     dc0:	20c00104 	addi	r3,r4,4
     dc4:	24c00017 	ldw	r19,0(r4)
     dc8:	002d883a 	mov	r22,zero
     dcc:	90800094 	ori	r2,r18,2
     dd0:	28029a16 	blt	r5,zero,183c <___vfprintf_internal_r+0xdc0>
     dd4:	00bfdfc4 	movi	r2,-129
     dd8:	90a4703a 	and	r18,r18,r2
     ddc:	d8c02d15 	stw	r3,180(sp)
     de0:	94800094 	ori	r18,r18,2
     de4:	9802871e 	bne	r19,zero,1804 <___vfprintf_internal_r+0xd88>
     de8:	00800074 	movhi	r2,1
     dec:	1085d904 	addi	r2,r2,5988
     df0:	d8803915 	stw	r2,228(sp)
     df4:	04401e04 	movi	r17,120
     df8:	d8802917 	ldw	r2,164(sp)
     dfc:	0039883a 	mov	fp,zero
     e00:	1001e926 	beq	r2,zero,15a8 <___vfprintf_internal_r+0xb2c>
     e04:	0027883a 	mov	r19,zero
     e08:	002d883a 	mov	r22,zero
     e0c:	00020506 	br	1624 <___vfprintf_internal_r+0xba8>
     e10:	d9002c17 	ldw	r4,176(sp)
     e14:	b80b883a 	mov	r5,r23
     e18:	0002d4c0 	call	2d4c <__swsetup_r>
     e1c:	1005ac1e 	bne	r2,zero,24d0 <___vfprintf_internal_r+0x1a54>
     e20:	b880030b 	ldhu	r2,12(r23)
     e24:	00c00284 	movi	r3,10
     e28:	1080068c 	andi	r2,r2,26
     e2c:	10ff3c1e 	bne	r2,r3,b20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000b20>
     e30:	b880038f 	ldh	r2,14(r23)
     e34:	103f3a16 	blt	r2,zero,b20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000b20>
     e38:	d9c02d17 	ldw	r7,180(sp)
     e3c:	d9002c17 	ldw	r4,176(sp)
     e40:	a80d883a 	mov	r6,r21
     e44:	b80b883a 	mov	r5,r23
     e48:	0002c900 	call	2c90 <__sbprintf>
     e4c:	00001106 	br	e94 <___vfprintf_internal_r+0x418>
     e50:	d9002c17 	ldw	r4,176(sp)
     e54:	d9801e04 	addi	r6,sp,120
     e58:	b80b883a 	mov	r5,r23
     e5c:	00075940 	call	7594 <__sprint_r>
     e60:	1000081e 	bne	r2,zero,e84 <___vfprintf_internal_r+0x408>
     e64:	da000404 	addi	r8,sp,16
     e68:	003f5306 	br	bb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000bb8>
     e6c:	d8802017 	ldw	r2,128(sp)
     e70:	10000426 	beq	r2,zero,e84 <___vfprintf_internal_r+0x408>
     e74:	d9002c17 	ldw	r4,176(sp)
     e78:	d9801e04 	addi	r6,sp,120
     e7c:	b80b883a 	mov	r5,r23
     e80:	00075940 	call	7594 <__sprint_r>
     e84:	b880030b 	ldhu	r2,12(r23)
     e88:	1080100c 	andi	r2,r2,64
     e8c:	1005901e 	bne	r2,zero,24d0 <___vfprintf_internal_r+0x1a54>
     e90:	d8802f17 	ldw	r2,188(sp)
     e94:	dfc04717 	ldw	ra,284(sp)
     e98:	df004617 	ldw	fp,280(sp)
     e9c:	ddc04517 	ldw	r23,276(sp)
     ea0:	dd804417 	ldw	r22,272(sp)
     ea4:	dd404317 	ldw	r21,268(sp)
     ea8:	dd004217 	ldw	r20,264(sp)
     eac:	dcc04117 	ldw	r19,260(sp)
     eb0:	dc804017 	ldw	r18,256(sp)
     eb4:	dc403f17 	ldw	r17,252(sp)
     eb8:	dc003e17 	ldw	r16,248(sp)
     ebc:	dec04804 	addi	sp,sp,288
     ec0:	f800283a 	ret
     ec4:	d9002c17 	ldw	r4,176(sp)
     ec8:	0004d200 	call	4d20 <__sinit>
     ecc:	003f0406 	br	ae0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000ae0>
     ed0:	d8802d17 	ldw	r2,180(sp)
     ed4:	d9002d17 	ldw	r4,180(sp)
     ed8:	10800017 	ldw	r2,0(r2)
     edc:	d8803115 	stw	r2,196(sp)
     ee0:	20800104 	addi	r2,r4,4
     ee4:	d9003117 	ldw	r4,196(sp)
     ee8:	203fa716 	blt	r4,zero,d88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000d88>
     eec:	d8802d15 	stw	r2,180(sp)
     ef0:	ac400007 	ldb	r17,0(r21)
     ef4:	003f4206 	br	c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c00>
     ef8:	ac400007 	ldb	r17,0(r21)
     efc:	aac00044 	addi	r11,r21,1
     f00:	8a872826 	beq	r17,r10,2ba4 <___vfprintf_internal_r+0x2128>
     f04:	88bff404 	addi	r2,r17,-48
     f08:	0009883a 	mov	r4,zero
     f0c:	30867d36 	bltu	r6,r2,2904 <___vfprintf_internal_r+0x1e88>
     f10:	5c400007 	ldb	r17,0(r11)
     f14:	210002a4 	muli	r4,r4,10
     f18:	5d400044 	addi	r21,r11,1
     f1c:	a817883a 	mov	r11,r21
     f20:	2089883a 	add	r4,r4,r2
     f24:	88bff404 	addi	r2,r17,-48
     f28:	30bff92e 	bgeu	r6,r2,f10 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f10>
     f2c:	2005c916 	blt	r4,zero,2654 <___vfprintf_internal_r+0x1bd8>
     f30:	d9002915 	stw	r4,164(sp)
     f34:	003f3306 	br	c04 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c04>
     f38:	94802014 	ori	r18,r18,128
     f3c:	ac400007 	ldb	r17,0(r21)
     f40:	003f2f06 	br	c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c00>
     f44:	a809883a 	mov	r4,r21
     f48:	d8003115 	stw	zero,196(sp)
     f4c:	88bff404 	addi	r2,r17,-48
     f50:	0017883a 	mov	r11,zero
     f54:	24400007 	ldb	r17,0(r4)
     f58:	5ac002a4 	muli	r11,r11,10
     f5c:	ad400044 	addi	r21,r21,1
     f60:	a809883a 	mov	r4,r21
     f64:	12d7883a 	add	r11,r2,r11
     f68:	88bff404 	addi	r2,r17,-48
     f6c:	30bff92e 	bgeu	r6,r2,f54 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f54>
     f70:	dac03115 	stw	r11,196(sp)
     f74:	003f2306 	br	c04 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c04>
     f78:	18c03fcc 	andi	r3,r3,255
     f7c:	18072b1e 	bne	r3,zero,2c2c <___vfprintf_internal_r+0x21b0>
     f80:	94800414 	ori	r18,r18,16
     f84:	9080080c 	andi	r2,r18,32
     f88:	10037b26 	beq	r2,zero,1d78 <___vfprintf_internal_r+0x12fc>
     f8c:	d9402d17 	ldw	r5,180(sp)
     f90:	28800117 	ldw	r2,4(r5)
     f94:	2cc00017 	ldw	r19,0(r5)
     f98:	29400204 	addi	r5,r5,8
     f9c:	d9402d15 	stw	r5,180(sp)
     fa0:	102d883a 	mov	r22,r2
     fa4:	10044b16 	blt	r2,zero,20d4 <___vfprintf_internal_r+0x1658>
     fa8:	d9402917 	ldw	r5,164(sp)
     fac:	df002783 	ldbu	fp,158(sp)
     fb0:	2803bc16 	blt	r5,zero,1ea4 <___vfprintf_internal_r+0x1428>
     fb4:	00ffdfc4 	movi	r3,-129
     fb8:	9d84b03a 	or	r2,r19,r22
     fbc:	90e4703a 	and	r18,r18,r3
     fc0:	10017726 	beq	r2,zero,15a0 <___vfprintf_internal_r+0xb24>
     fc4:	b0038326 	beq	r22,zero,1dd4 <___vfprintf_internal_r+0x1358>
     fc8:	dc402a15 	stw	r17,168(sp)
     fcc:	dc001e04 	addi	r16,sp,120
     fd0:	b023883a 	mov	r17,r22
     fd4:	402d883a 	mov	r22,r8
     fd8:	9809883a 	mov	r4,r19
     fdc:	880b883a 	mov	r5,r17
     fe0:	01800284 	movi	r6,10
     fe4:	000f883a 	mov	r7,zero
     fe8:	000a5080 	call	a508 <__umoddi3>
     fec:	10800c04 	addi	r2,r2,48
     ff0:	843fffc4 	addi	r16,r16,-1
     ff4:	9809883a 	mov	r4,r19
     ff8:	880b883a 	mov	r5,r17
     ffc:	80800005 	stb	r2,0(r16)
    1000:	01800284 	movi	r6,10
    1004:	000f883a 	mov	r7,zero
    1008:	0009f900 	call	9f90 <__udivdi3>
    100c:	1027883a 	mov	r19,r2
    1010:	10c4b03a 	or	r2,r2,r3
    1014:	1823883a 	mov	r17,r3
    1018:	103fef1e 	bne	r2,zero,fd8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fd8>
    101c:	d8c02817 	ldw	r3,160(sp)
    1020:	dc402a17 	ldw	r17,168(sp)
    1024:	b011883a 	mov	r8,r22
    1028:	1c07c83a 	sub	r3,r3,r16
    102c:	d8c02e15 	stw	r3,184(sp)
    1030:	00005906 	br	1198 <___vfprintf_internal_r+0x71c>
    1034:	18c03fcc 	andi	r3,r3,255
    1038:	1806fa1e 	bne	r3,zero,2c24 <___vfprintf_internal_r+0x21a8>
    103c:	9080020c 	andi	r2,r18,8
    1040:	10048a26 	beq	r2,zero,226c <___vfprintf_internal_r+0x17f0>
    1044:	d8c02d17 	ldw	r3,180(sp)
    1048:	d9002d17 	ldw	r4,180(sp)
    104c:	d9402d17 	ldw	r5,180(sp)
    1050:	18c00017 	ldw	r3,0(r3)
    1054:	21000117 	ldw	r4,4(r4)
    1058:	29400204 	addi	r5,r5,8
    105c:	d8c03615 	stw	r3,216(sp)
    1060:	d9003815 	stw	r4,224(sp)
    1064:	d9402d15 	stw	r5,180(sp)
    1068:	d9003617 	ldw	r4,216(sp)
    106c:	d9403817 	ldw	r5,224(sp)
    1070:	da003d15 	stw	r8,244(sp)
    1074:	04000044 	movi	r16,1
    1078:	00071200 	call	7120 <__fpclassifyd>
    107c:	da003d17 	ldw	r8,244(sp)
    1080:	14041f1e 	bne	r2,r16,2100 <___vfprintf_internal_r+0x1684>
    1084:	d9003617 	ldw	r4,216(sp)
    1088:	d9403817 	ldw	r5,224(sp)
    108c:	000d883a 	mov	r6,zero
    1090:	000f883a 	mov	r7,zero
    1094:	000beec0 	call	beec <__ledf2>
    1098:	da003d17 	ldw	r8,244(sp)
    109c:	1005be16 	blt	r2,zero,2798 <___vfprintf_internal_r+0x1d1c>
    10a0:	df002783 	ldbu	fp,158(sp)
    10a4:	008011c4 	movi	r2,71
    10a8:	1445330e 	bge	r2,r17,2578 <___vfprintf_internal_r+0x1afc>
    10ac:	04000074 	movhi	r16,1
    10b0:	8405d104 	addi	r16,r16,5956
    10b4:	00c000c4 	movi	r3,3
    10b8:	00bfdfc4 	movi	r2,-129
    10bc:	d8c02a15 	stw	r3,168(sp)
    10c0:	90a4703a 	and	r18,r18,r2
    10c4:	d8c02e15 	stw	r3,184(sp)
    10c8:	d8002915 	stw	zero,164(sp)
    10cc:	d8003215 	stw	zero,200(sp)
    10d0:	00003706 	br	11b0 <___vfprintf_internal_r+0x734>
    10d4:	94800214 	ori	r18,r18,8
    10d8:	ac400007 	ldb	r17,0(r21)
    10dc:	003ec806 	br	c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c00>
    10e0:	18c03fcc 	andi	r3,r3,255
    10e4:	1806db1e 	bne	r3,zero,2c54 <___vfprintf_internal_r+0x21d8>
    10e8:	94800414 	ori	r18,r18,16
    10ec:	9080080c 	andi	r2,r18,32
    10f0:	1002d826 	beq	r2,zero,1c54 <___vfprintf_internal_r+0x11d8>
    10f4:	d9402d17 	ldw	r5,180(sp)
    10f8:	d8c02917 	ldw	r3,164(sp)
    10fc:	d8002785 	stb	zero,158(sp)
    1100:	28800204 	addi	r2,r5,8
    1104:	2cc00017 	ldw	r19,0(r5)
    1108:	2d800117 	ldw	r22,4(r5)
    110c:	18048f16 	blt	r3,zero,234c <___vfprintf_internal_r+0x18d0>
    1110:	013fdfc4 	movi	r4,-129
    1114:	9d86b03a 	or	r3,r19,r22
    1118:	d8802d15 	stw	r2,180(sp)
    111c:	9124703a 	and	r18,r18,r4
    1120:	1802d91e 	bne	r3,zero,1c88 <___vfprintf_internal_r+0x120c>
    1124:	d8c02917 	ldw	r3,164(sp)
    1128:	0039883a 	mov	fp,zero
    112c:	1805c326 	beq	r3,zero,283c <___vfprintf_internal_r+0x1dc0>
    1130:	0027883a 	mov	r19,zero
    1134:	002d883a 	mov	r22,zero
    1138:	dc001e04 	addi	r16,sp,120
    113c:	9806d0fa 	srli	r3,r19,3
    1140:	b008977a 	slli	r4,r22,29
    1144:	b02cd0fa 	srli	r22,r22,3
    1148:	9cc001cc 	andi	r19,r19,7
    114c:	98800c04 	addi	r2,r19,48
    1150:	843fffc4 	addi	r16,r16,-1
    1154:	20e6b03a 	or	r19,r4,r3
    1158:	80800005 	stb	r2,0(r16)
    115c:	9d86b03a 	or	r3,r19,r22
    1160:	183ff61e 	bne	r3,zero,113c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700113c>
    1164:	90c0004c 	andi	r3,r18,1
    1168:	18013b26 	beq	r3,zero,1658 <___vfprintf_internal_r+0xbdc>
    116c:	10803fcc 	andi	r2,r2,255
    1170:	1080201c 	xori	r2,r2,128
    1174:	10bfe004 	addi	r2,r2,-128
    1178:	00c00c04 	movi	r3,48
    117c:	10c13626 	beq	r2,r3,1658 <___vfprintf_internal_r+0xbdc>
    1180:	80ffffc5 	stb	r3,-1(r16)
    1184:	d8c02817 	ldw	r3,160(sp)
    1188:	80bfffc4 	addi	r2,r16,-1
    118c:	1021883a 	mov	r16,r2
    1190:	1887c83a 	sub	r3,r3,r2
    1194:	d8c02e15 	stw	r3,184(sp)
    1198:	d8802e17 	ldw	r2,184(sp)
    119c:	d9002917 	ldw	r4,164(sp)
    11a0:	1100010e 	bge	r2,r4,11a8 <___vfprintf_internal_r+0x72c>
    11a4:	2005883a 	mov	r2,r4
    11a8:	d8802a15 	stw	r2,168(sp)
    11ac:	d8003215 	stw	zero,200(sp)
    11b0:	e7003fcc 	andi	fp,fp,255
    11b4:	e700201c 	xori	fp,fp,128
    11b8:	e73fe004 	addi	fp,fp,-128
    11bc:	e0000326 	beq	fp,zero,11cc <___vfprintf_internal_r+0x750>
    11c0:	d8c02a17 	ldw	r3,168(sp)
    11c4:	18c00044 	addi	r3,r3,1
    11c8:	d8c02a15 	stw	r3,168(sp)
    11cc:	90c0008c 	andi	r3,r18,2
    11d0:	d8c02b15 	stw	r3,172(sp)
    11d4:	18000326 	beq	r3,zero,11e4 <___vfprintf_internal_r+0x768>
    11d8:	d8c02a17 	ldw	r3,168(sp)
    11dc:	18c00084 	addi	r3,r3,2
    11e0:	d8c02a15 	stw	r3,168(sp)
    11e4:	90c0210c 	andi	r3,r18,132
    11e8:	d8c03015 	stw	r3,192(sp)
    11ec:	1801a31e 	bne	r3,zero,187c <___vfprintf_internal_r+0xe00>
    11f0:	d9003117 	ldw	r4,196(sp)
    11f4:	d8c02a17 	ldw	r3,168(sp)
    11f8:	20e7c83a 	sub	r19,r4,r3
    11fc:	04c19f0e 	bge	zero,r19,187c <___vfprintf_internal_r+0xe00>
    1200:	02400404 	movi	r9,16
    1204:	d8c02017 	ldw	r3,128(sp)
    1208:	d8801f17 	ldw	r2,124(sp)
    120c:	4cc50d0e 	bge	r9,r19,2644 <___vfprintf_internal_r+0x1bc8>
    1210:	01400074 	movhi	r5,1
    1214:	2945e484 	addi	r5,r5,6034
    1218:	dc403b15 	stw	r17,236(sp)
    121c:	d9403515 	stw	r5,212(sp)
    1220:	9823883a 	mov	r17,r19
    1224:	482d883a 	mov	r22,r9
    1228:	9027883a 	mov	r19,r18
    122c:	070001c4 	movi	fp,7
    1230:	8025883a 	mov	r18,r16
    1234:	dc002c17 	ldw	r16,176(sp)
    1238:	00000306 	br	1248 <___vfprintf_internal_r+0x7cc>
    123c:	8c7ffc04 	addi	r17,r17,-16
    1240:	42000204 	addi	r8,r8,8
    1244:	b440130e 	bge	r22,r17,1294 <___vfprintf_internal_r+0x818>
    1248:	01000074 	movhi	r4,1
    124c:	18c00404 	addi	r3,r3,16
    1250:	10800044 	addi	r2,r2,1
    1254:	2105e484 	addi	r4,r4,6034
    1258:	41000015 	stw	r4,0(r8)
    125c:	45800115 	stw	r22,4(r8)
    1260:	d8c02015 	stw	r3,128(sp)
    1264:	d8801f15 	stw	r2,124(sp)
    1268:	e0bff40e 	bge	fp,r2,123c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700123c>
    126c:	d9801e04 	addi	r6,sp,120
    1270:	b80b883a 	mov	r5,r23
    1274:	8009883a 	mov	r4,r16
    1278:	00075940 	call	7594 <__sprint_r>
    127c:	103f011e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    1280:	8c7ffc04 	addi	r17,r17,-16
    1284:	d8c02017 	ldw	r3,128(sp)
    1288:	d8801f17 	ldw	r2,124(sp)
    128c:	da000404 	addi	r8,sp,16
    1290:	b47fed16 	blt	r22,r17,1248 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001248>
    1294:	9021883a 	mov	r16,r18
    1298:	9825883a 	mov	r18,r19
    129c:	8827883a 	mov	r19,r17
    12a0:	dc403b17 	ldw	r17,236(sp)
    12a4:	d9403517 	ldw	r5,212(sp)
    12a8:	98c7883a 	add	r3,r19,r3
    12ac:	10800044 	addi	r2,r2,1
    12b0:	41400015 	stw	r5,0(r8)
    12b4:	44c00115 	stw	r19,4(r8)
    12b8:	d8c02015 	stw	r3,128(sp)
    12bc:	d8801f15 	stw	r2,124(sp)
    12c0:	010001c4 	movi	r4,7
    12c4:	2082a316 	blt	r4,r2,1d54 <___vfprintf_internal_r+0x12d8>
    12c8:	df002787 	ldb	fp,158(sp)
    12cc:	42000204 	addi	r8,r8,8
    12d0:	e0000c26 	beq	fp,zero,1304 <___vfprintf_internal_r+0x888>
    12d4:	d8801f17 	ldw	r2,124(sp)
    12d8:	d9002784 	addi	r4,sp,158
    12dc:	18c00044 	addi	r3,r3,1
    12e0:	10800044 	addi	r2,r2,1
    12e4:	41000015 	stw	r4,0(r8)
    12e8:	01000044 	movi	r4,1
    12ec:	41000115 	stw	r4,4(r8)
    12f0:	d8c02015 	stw	r3,128(sp)
    12f4:	d8801f15 	stw	r2,124(sp)
    12f8:	010001c4 	movi	r4,7
    12fc:	20823c16 	blt	r4,r2,1bf0 <___vfprintf_internal_r+0x1174>
    1300:	42000204 	addi	r8,r8,8
    1304:	d8802b17 	ldw	r2,172(sp)
    1308:	10000c26 	beq	r2,zero,133c <___vfprintf_internal_r+0x8c0>
    130c:	d8801f17 	ldw	r2,124(sp)
    1310:	d9002704 	addi	r4,sp,156
    1314:	18c00084 	addi	r3,r3,2
    1318:	10800044 	addi	r2,r2,1
    131c:	41000015 	stw	r4,0(r8)
    1320:	01000084 	movi	r4,2
    1324:	41000115 	stw	r4,4(r8)
    1328:	d8c02015 	stw	r3,128(sp)
    132c:	d8801f15 	stw	r2,124(sp)
    1330:	010001c4 	movi	r4,7
    1334:	20823616 	blt	r4,r2,1c10 <___vfprintf_internal_r+0x1194>
    1338:	42000204 	addi	r8,r8,8
    133c:	d9003017 	ldw	r4,192(sp)
    1340:	00802004 	movi	r2,128
    1344:	20819926 	beq	r4,r2,19ac <___vfprintf_internal_r+0xf30>
    1348:	d9402917 	ldw	r5,164(sp)
    134c:	d8802e17 	ldw	r2,184(sp)
    1350:	28adc83a 	sub	r22,r5,r2
    1354:	0580310e 	bge	zero,r22,141c <___vfprintf_internal_r+0x9a0>
    1358:	07000404 	movi	fp,16
    135c:	d8801f17 	ldw	r2,124(sp)
    1360:	e584140e 	bge	fp,r22,23b4 <___vfprintf_internal_r+0x1938>
    1364:	01400074 	movhi	r5,1
    1368:	2945e084 	addi	r5,r5,6018
    136c:	dc402915 	stw	r17,164(sp)
    1370:	d9402b15 	stw	r5,172(sp)
    1374:	b023883a 	mov	r17,r22
    1378:	04c001c4 	movi	r19,7
    137c:	a82d883a 	mov	r22,r21
    1380:	902b883a 	mov	r21,r18
    1384:	8025883a 	mov	r18,r16
    1388:	dc002c17 	ldw	r16,176(sp)
    138c:	00000306 	br	139c <___vfprintf_internal_r+0x920>
    1390:	8c7ffc04 	addi	r17,r17,-16
    1394:	42000204 	addi	r8,r8,8
    1398:	e440110e 	bge	fp,r17,13e0 <___vfprintf_internal_r+0x964>
    139c:	18c00404 	addi	r3,r3,16
    13a0:	10800044 	addi	r2,r2,1
    13a4:	45000015 	stw	r20,0(r8)
    13a8:	47000115 	stw	fp,4(r8)
    13ac:	d8c02015 	stw	r3,128(sp)
    13b0:	d8801f15 	stw	r2,124(sp)
    13b4:	98bff60e 	bge	r19,r2,1390 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001390>
    13b8:	d9801e04 	addi	r6,sp,120
    13bc:	b80b883a 	mov	r5,r23
    13c0:	8009883a 	mov	r4,r16
    13c4:	00075940 	call	7594 <__sprint_r>
    13c8:	103eae1e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    13cc:	8c7ffc04 	addi	r17,r17,-16
    13d0:	d8c02017 	ldw	r3,128(sp)
    13d4:	d8801f17 	ldw	r2,124(sp)
    13d8:	da000404 	addi	r8,sp,16
    13dc:	e47fef16 	blt	fp,r17,139c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700139c>
    13e0:	9021883a 	mov	r16,r18
    13e4:	a825883a 	mov	r18,r21
    13e8:	b02b883a 	mov	r21,r22
    13ec:	882d883a 	mov	r22,r17
    13f0:	dc402917 	ldw	r17,164(sp)
    13f4:	d9002b17 	ldw	r4,172(sp)
    13f8:	1d87883a 	add	r3,r3,r22
    13fc:	10800044 	addi	r2,r2,1
    1400:	41000015 	stw	r4,0(r8)
    1404:	45800115 	stw	r22,4(r8)
    1408:	d8c02015 	stw	r3,128(sp)
    140c:	d8801f15 	stw	r2,124(sp)
    1410:	010001c4 	movi	r4,7
    1414:	2081ee16 	blt	r4,r2,1bd0 <___vfprintf_internal_r+0x1154>
    1418:	42000204 	addi	r8,r8,8
    141c:	9080400c 	andi	r2,r18,256
    1420:	1001181e 	bne	r2,zero,1884 <___vfprintf_internal_r+0xe08>
    1424:	d9402e17 	ldw	r5,184(sp)
    1428:	d8801f17 	ldw	r2,124(sp)
    142c:	44000015 	stw	r16,0(r8)
    1430:	1947883a 	add	r3,r3,r5
    1434:	10800044 	addi	r2,r2,1
    1438:	41400115 	stw	r5,4(r8)
    143c:	d8c02015 	stw	r3,128(sp)
    1440:	d8801f15 	stw	r2,124(sp)
    1444:	010001c4 	movi	r4,7
    1448:	2081d316 	blt	r4,r2,1b98 <___vfprintf_internal_r+0x111c>
    144c:	42000204 	addi	r8,r8,8
    1450:	9480010c 	andi	r18,r18,4
    1454:	90003226 	beq	r18,zero,1520 <___vfprintf_internal_r+0xaa4>
    1458:	d9403117 	ldw	r5,196(sp)
    145c:	d8802a17 	ldw	r2,168(sp)
    1460:	28a1c83a 	sub	r16,r5,r2
    1464:	04002e0e 	bge	zero,r16,1520 <___vfprintf_internal_r+0xaa4>
    1468:	04400404 	movi	r17,16
    146c:	d8801f17 	ldw	r2,124(sp)
    1470:	8c04a20e 	bge	r17,r16,26fc <___vfprintf_internal_r+0x1c80>
    1474:	01400074 	movhi	r5,1
    1478:	2945e484 	addi	r5,r5,6034
    147c:	d9403515 	stw	r5,212(sp)
    1480:	048001c4 	movi	r18,7
    1484:	dcc02c17 	ldw	r19,176(sp)
    1488:	00000306 	br	1498 <___vfprintf_internal_r+0xa1c>
    148c:	843ffc04 	addi	r16,r16,-16
    1490:	42000204 	addi	r8,r8,8
    1494:	8c00130e 	bge	r17,r16,14e4 <___vfprintf_internal_r+0xa68>
    1498:	01000074 	movhi	r4,1
    149c:	18c00404 	addi	r3,r3,16
    14a0:	10800044 	addi	r2,r2,1
    14a4:	2105e484 	addi	r4,r4,6034
    14a8:	41000015 	stw	r4,0(r8)
    14ac:	44400115 	stw	r17,4(r8)
    14b0:	d8c02015 	stw	r3,128(sp)
    14b4:	d8801f15 	stw	r2,124(sp)
    14b8:	90bff40e 	bge	r18,r2,148c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700148c>
    14bc:	d9801e04 	addi	r6,sp,120
    14c0:	b80b883a 	mov	r5,r23
    14c4:	9809883a 	mov	r4,r19
    14c8:	00075940 	call	7594 <__sprint_r>
    14cc:	103e6d1e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    14d0:	843ffc04 	addi	r16,r16,-16
    14d4:	d8c02017 	ldw	r3,128(sp)
    14d8:	d8801f17 	ldw	r2,124(sp)
    14dc:	da000404 	addi	r8,sp,16
    14e0:	8c3fed16 	blt	r17,r16,1498 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001498>
    14e4:	d9403517 	ldw	r5,212(sp)
    14e8:	1c07883a 	add	r3,r3,r16
    14ec:	10800044 	addi	r2,r2,1
    14f0:	41400015 	stw	r5,0(r8)
    14f4:	44000115 	stw	r16,4(r8)
    14f8:	d8c02015 	stw	r3,128(sp)
    14fc:	d8801f15 	stw	r2,124(sp)
    1500:	010001c4 	movi	r4,7
    1504:	2080060e 	bge	r4,r2,1520 <___vfprintf_internal_r+0xaa4>
    1508:	d9002c17 	ldw	r4,176(sp)
    150c:	d9801e04 	addi	r6,sp,120
    1510:	b80b883a 	mov	r5,r23
    1514:	00075940 	call	7594 <__sprint_r>
    1518:	103e5a1e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    151c:	d8c02017 	ldw	r3,128(sp)
    1520:	d8803117 	ldw	r2,196(sp)
    1524:	d9002a17 	ldw	r4,168(sp)
    1528:	1100010e 	bge	r2,r4,1530 <___vfprintf_internal_r+0xab4>
    152c:	2005883a 	mov	r2,r4
    1530:	d9402f17 	ldw	r5,188(sp)
    1534:	288b883a 	add	r5,r5,r2
    1538:	d9402f15 	stw	r5,188(sp)
    153c:	18019e1e 	bne	r3,zero,1bb8 <___vfprintf_internal_r+0x113c>
    1540:	a8800007 	ldb	r2,0(r21)
    1544:	d8001f15 	stw	zero,124(sp)
    1548:	da000404 	addi	r8,sp,16
    154c:	103d851e 	bne	r2,zero,b64 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000b64>
    1550:	a821883a 	mov	r16,r21
    1554:	003d9b06 	br	bc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000bc4>
    1558:	18c03fcc 	andi	r3,r3,255
    155c:	1805c11e 	bne	r3,zero,2c64 <___vfprintf_internal_r+0x21e8>
    1560:	94800414 	ori	r18,r18,16
    1564:	9080080c 	andi	r2,r18,32
    1568:	10020c26 	beq	r2,zero,1d9c <___vfprintf_internal_r+0x1320>
    156c:	d8802d17 	ldw	r2,180(sp)
    1570:	d9002917 	ldw	r4,164(sp)
    1574:	d8002785 	stb	zero,158(sp)
    1578:	10c00204 	addi	r3,r2,8
    157c:	14c00017 	ldw	r19,0(r2)
    1580:	15800117 	ldw	r22,4(r2)
    1584:	20040f16 	blt	r4,zero,25c4 <___vfprintf_internal_r+0x1b48>
    1588:	013fdfc4 	movi	r4,-129
    158c:	9d84b03a 	or	r2,r19,r22
    1590:	d8c02d15 	stw	r3,180(sp)
    1594:	9124703a 	and	r18,r18,r4
    1598:	0039883a 	mov	fp,zero
    159c:	103e891e 	bne	r2,zero,fc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fc4>
    15a0:	d9002917 	ldw	r4,164(sp)
    15a4:	2002c11e 	bne	r4,zero,20ac <___vfprintf_internal_r+0x1630>
    15a8:	d8002915 	stw	zero,164(sp)
    15ac:	d8002e15 	stw	zero,184(sp)
    15b0:	dc001e04 	addi	r16,sp,120
    15b4:	003ef806 	br	1198 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001198>
    15b8:	18c03fcc 	andi	r3,r3,255
    15bc:	18059d1e 	bne	r3,zero,2c34 <___vfprintf_internal_r+0x21b8>
    15c0:	01400074 	movhi	r5,1
    15c4:	2945d404 	addi	r5,r5,5968
    15c8:	d9403915 	stw	r5,228(sp)
    15cc:	9080080c 	andi	r2,r18,32
    15d0:	10005226 	beq	r2,zero,171c <___vfprintf_internal_r+0xca0>
    15d4:	d8802d17 	ldw	r2,180(sp)
    15d8:	14c00017 	ldw	r19,0(r2)
    15dc:	15800117 	ldw	r22,4(r2)
    15e0:	10800204 	addi	r2,r2,8
    15e4:	d8802d15 	stw	r2,180(sp)
    15e8:	9080004c 	andi	r2,r18,1
    15ec:	10019026 	beq	r2,zero,1c30 <___vfprintf_internal_r+0x11b4>
    15f0:	9d84b03a 	or	r2,r19,r22
    15f4:	10036926 	beq	r2,zero,239c <___vfprintf_internal_r+0x1920>
    15f8:	d8c02917 	ldw	r3,164(sp)
    15fc:	00800c04 	movi	r2,48
    1600:	d8802705 	stb	r2,156(sp)
    1604:	dc402745 	stb	r17,157(sp)
    1608:	d8002785 	stb	zero,158(sp)
    160c:	90800094 	ori	r2,r18,2
    1610:	18045d16 	blt	r3,zero,2788 <___vfprintf_internal_r+0x1d0c>
    1614:	00bfdfc4 	movi	r2,-129
    1618:	90a4703a 	and	r18,r18,r2
    161c:	94800094 	ori	r18,r18,2
    1620:	0039883a 	mov	fp,zero
    1624:	d9003917 	ldw	r4,228(sp)
    1628:	dc001e04 	addi	r16,sp,120
    162c:	988003cc 	andi	r2,r19,15
    1630:	b006973a 	slli	r3,r22,28
    1634:	2085883a 	add	r2,r4,r2
    1638:	9826d13a 	srli	r19,r19,4
    163c:	10800003 	ldbu	r2,0(r2)
    1640:	b02cd13a 	srli	r22,r22,4
    1644:	843fffc4 	addi	r16,r16,-1
    1648:	1ce6b03a 	or	r19,r3,r19
    164c:	80800005 	stb	r2,0(r16)
    1650:	9d84b03a 	or	r2,r19,r22
    1654:	103ff51e 	bne	r2,zero,162c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700162c>
    1658:	d8c02817 	ldw	r3,160(sp)
    165c:	1c07c83a 	sub	r3,r3,r16
    1660:	d8c02e15 	stw	r3,184(sp)
    1664:	003ecc06 	br	1198 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001198>
    1668:	18c03fcc 	andi	r3,r3,255
    166c:	183e9f26 	beq	r3,zero,10ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70010ec>
    1670:	d9c02785 	stb	r7,158(sp)
    1674:	003e9d06 	br	10ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70010ec>
    1678:	00c00044 	movi	r3,1
    167c:	01c00ac4 	movi	r7,43
    1680:	ac400007 	ldb	r17,0(r21)
    1684:	003d5e06 	br	c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c00>
    1688:	94800814 	ori	r18,r18,32
    168c:	ac400007 	ldb	r17,0(r21)
    1690:	003d5b06 	br	c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c00>
    1694:	d8c02d17 	ldw	r3,180(sp)
    1698:	d8002785 	stb	zero,158(sp)
    169c:	1c000017 	ldw	r16,0(r3)
    16a0:	1cc00104 	addi	r19,r3,4
    16a4:	80041926 	beq	r16,zero,270c <___vfprintf_internal_r+0x1c90>
    16a8:	d9002917 	ldw	r4,164(sp)
    16ac:	2003d016 	blt	r4,zero,25f0 <___vfprintf_internal_r+0x1b74>
    16b0:	200d883a 	mov	r6,r4
    16b4:	000b883a 	mov	r5,zero
    16b8:	8009883a 	mov	r4,r16
    16bc:	da003d15 	stw	r8,244(sp)
    16c0:	0005dd00 	call	5dd0 <memchr>
    16c4:	da003d17 	ldw	r8,244(sp)
    16c8:	10045426 	beq	r2,zero,281c <___vfprintf_internal_r+0x1da0>
    16cc:	1405c83a 	sub	r2,r2,r16
    16d0:	d8802e15 	stw	r2,184(sp)
    16d4:	1003cc16 	blt	r2,zero,2608 <___vfprintf_internal_r+0x1b8c>
    16d8:	df002783 	ldbu	fp,158(sp)
    16dc:	d8802a15 	stw	r2,168(sp)
    16e0:	dcc02d15 	stw	r19,180(sp)
    16e4:	d8002915 	stw	zero,164(sp)
    16e8:	d8003215 	stw	zero,200(sp)
    16ec:	003eb006 	br	11b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70011b0>
    16f0:	18c03fcc 	andi	r3,r3,255
    16f4:	183f9b26 	beq	r3,zero,1564 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001564>
    16f8:	d9c02785 	stb	r7,158(sp)
    16fc:	003f9906 	br	1564 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001564>
    1700:	18c03fcc 	andi	r3,r3,255
    1704:	1805551e 	bne	r3,zero,2c5c <___vfprintf_internal_r+0x21e0>
    1708:	01400074 	movhi	r5,1
    170c:	2945d904 	addi	r5,r5,5988
    1710:	d9403915 	stw	r5,228(sp)
    1714:	9080080c 	andi	r2,r18,32
    1718:	103fae1e 	bne	r2,zero,15d4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70015d4>
    171c:	9080040c 	andi	r2,r18,16
    1720:	1002de26 	beq	r2,zero,229c <___vfprintf_internal_r+0x1820>
    1724:	d8c02d17 	ldw	r3,180(sp)
    1728:	002d883a 	mov	r22,zero
    172c:	1cc00017 	ldw	r19,0(r3)
    1730:	18c00104 	addi	r3,r3,4
    1734:	d8c02d15 	stw	r3,180(sp)
    1738:	003fab06 	br	15e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70015e8>
    173c:	38803fcc 	andi	r2,r7,255
    1740:	1080201c 	xori	r2,r2,128
    1744:	10bfe004 	addi	r2,r2,-128
    1748:	1002d21e 	bne	r2,zero,2294 <___vfprintf_internal_r+0x1818>
    174c:	00c00044 	movi	r3,1
    1750:	01c00804 	movi	r7,32
    1754:	ac400007 	ldb	r17,0(r21)
    1758:	003d2906 	br	c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c00>
    175c:	94800054 	ori	r18,r18,1
    1760:	ac400007 	ldb	r17,0(r21)
    1764:	003d2606 	br	c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c00>
    1768:	18c03fcc 	andi	r3,r3,255
    176c:	183e0526 	beq	r3,zero,f84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f84>
    1770:	d9c02785 	stb	r7,158(sp)
    1774:	003e0306 	br	f84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f84>
    1778:	94801014 	ori	r18,r18,64
    177c:	ac400007 	ldb	r17,0(r21)
    1780:	003d1f06 	br	c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c00>
    1784:	ac400007 	ldb	r17,0(r21)
    1788:	8a438726 	beq	r17,r9,25a8 <___vfprintf_internal_r+0x1b2c>
    178c:	94800414 	ori	r18,r18,16
    1790:	003d1b06 	br	c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c00>
    1794:	18c03fcc 	andi	r3,r3,255
    1798:	1805341e 	bne	r3,zero,2c6c <___vfprintf_internal_r+0x21f0>
    179c:	9080080c 	andi	r2,r18,32
    17a0:	1002cd26 	beq	r2,zero,22d8 <___vfprintf_internal_r+0x185c>
    17a4:	d9402d17 	ldw	r5,180(sp)
    17a8:	d9002f17 	ldw	r4,188(sp)
    17ac:	28800017 	ldw	r2,0(r5)
    17b0:	2007d7fa 	srai	r3,r4,31
    17b4:	29400104 	addi	r5,r5,4
    17b8:	d9402d15 	stw	r5,180(sp)
    17bc:	11000015 	stw	r4,0(r2)
    17c0:	10c00115 	stw	r3,4(r2)
    17c4:	003ce506 	br	b5c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000b5c>
    17c8:	d8c02d17 	ldw	r3,180(sp)
    17cc:	d9002d17 	ldw	r4,180(sp)
    17d0:	d8002785 	stb	zero,158(sp)
    17d4:	18800017 	ldw	r2,0(r3)
    17d8:	21000104 	addi	r4,r4,4
    17dc:	00c00044 	movi	r3,1
    17e0:	d8c02a15 	stw	r3,168(sp)
    17e4:	d8801405 	stb	r2,80(sp)
    17e8:	d9002d15 	stw	r4,180(sp)
    17ec:	d8c02e15 	stw	r3,184(sp)
    17f0:	d8002915 	stw	zero,164(sp)
    17f4:	d8003215 	stw	zero,200(sp)
    17f8:	dc001404 	addi	r16,sp,80
    17fc:	0039883a 	mov	fp,zero
    1800:	003e7206 	br	11cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70011cc>
    1804:	01000074 	movhi	r4,1
    1808:	2105d904 	addi	r4,r4,5988
    180c:	0039883a 	mov	fp,zero
    1810:	d9003915 	stw	r4,228(sp)
    1814:	04401e04 	movi	r17,120
    1818:	003f8206 	br	1624 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001624>
    181c:	18c03fcc 	andi	r3,r3,255
    1820:	1805061e 	bne	r3,zero,2c3c <___vfprintf_internal_r+0x21c0>
    1824:	883d9126 	beq	r17,zero,e6c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e6c>
    1828:	00c00044 	movi	r3,1
    182c:	d8c02a15 	stw	r3,168(sp)
    1830:	dc401405 	stb	r17,80(sp)
    1834:	d8002785 	stb	zero,158(sp)
    1838:	003fec06 	br	17ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70017ec>
    183c:	01400074 	movhi	r5,1
    1840:	2945d904 	addi	r5,r5,5988
    1844:	d9403915 	stw	r5,228(sp)
    1848:	d8c02d15 	stw	r3,180(sp)
    184c:	1025883a 	mov	r18,r2
    1850:	04401e04 	movi	r17,120
    1854:	9d84b03a 	or	r2,r19,r22
    1858:	1000fc1e 	bne	r2,zero,1c4c <___vfprintf_internal_r+0x11d0>
    185c:	0039883a 	mov	fp,zero
    1860:	00800084 	movi	r2,2
    1864:	10803fcc 	andi	r2,r2,255
    1868:	00c00044 	movi	r3,1
    186c:	10c20f26 	beq	r2,r3,20ac <___vfprintf_internal_r+0x1630>
    1870:	00c00084 	movi	r3,2
    1874:	10fd6326 	beq	r2,r3,e04 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e04>
    1878:	003e2d06 	br	1130 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001130>
    187c:	d8c02017 	ldw	r3,128(sp)
    1880:	003e9306 	br	12d0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70012d0>
    1884:	00801944 	movi	r2,101
    1888:	14407e0e 	bge	r2,r17,1a84 <___vfprintf_internal_r+0x1008>
    188c:	d9003617 	ldw	r4,216(sp)
    1890:	d9403817 	ldw	r5,224(sp)
    1894:	000d883a 	mov	r6,zero
    1898:	000f883a 	mov	r7,zero
    189c:	d8c03c15 	stw	r3,240(sp)
    18a0:	da003d15 	stw	r8,244(sp)
    18a4:	000bd880 	call	bd88 <__eqdf2>
    18a8:	d8c03c17 	ldw	r3,240(sp)
    18ac:	da003d17 	ldw	r8,244(sp)
    18b0:	1000f71e 	bne	r2,zero,1c90 <___vfprintf_internal_r+0x1214>
    18b4:	d8801f17 	ldw	r2,124(sp)
    18b8:	01000074 	movhi	r4,1
    18bc:	2105e004 	addi	r4,r4,6016
    18c0:	18c00044 	addi	r3,r3,1
    18c4:	10800044 	addi	r2,r2,1
    18c8:	41000015 	stw	r4,0(r8)
    18cc:	01000044 	movi	r4,1
    18d0:	41000115 	stw	r4,4(r8)
    18d4:	d8c02015 	stw	r3,128(sp)
    18d8:	d8801f15 	stw	r2,124(sp)
    18dc:	010001c4 	movi	r4,7
    18e0:	2082b816 	blt	r4,r2,23c4 <___vfprintf_internal_r+0x1948>
    18e4:	42000204 	addi	r8,r8,8
    18e8:	d8802617 	ldw	r2,152(sp)
    18ec:	d9403317 	ldw	r5,204(sp)
    18f0:	11400216 	blt	r2,r5,18fc <___vfprintf_internal_r+0xe80>
    18f4:	9080004c 	andi	r2,r18,1
    18f8:	103ed526 	beq	r2,zero,1450 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001450>
    18fc:	d8803717 	ldw	r2,220(sp)
    1900:	d9003417 	ldw	r4,208(sp)
    1904:	d9403717 	ldw	r5,220(sp)
    1908:	1887883a 	add	r3,r3,r2
    190c:	d8801f17 	ldw	r2,124(sp)
    1910:	41000015 	stw	r4,0(r8)
    1914:	41400115 	stw	r5,4(r8)
    1918:	10800044 	addi	r2,r2,1
    191c:	d8c02015 	stw	r3,128(sp)
    1920:	d8801f15 	stw	r2,124(sp)
    1924:	010001c4 	movi	r4,7
    1928:	20832916 	blt	r4,r2,25d0 <___vfprintf_internal_r+0x1b54>
    192c:	42000204 	addi	r8,r8,8
    1930:	d8803317 	ldw	r2,204(sp)
    1934:	143fffc4 	addi	r16,r2,-1
    1938:	043ec50e 	bge	zero,r16,1450 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001450>
    193c:	04400404 	movi	r17,16
    1940:	d8801f17 	ldw	r2,124(sp)
    1944:	8c00880e 	bge	r17,r16,1b68 <___vfprintf_internal_r+0x10ec>
    1948:	01400074 	movhi	r5,1
    194c:	2945e084 	addi	r5,r5,6018
    1950:	d9402b15 	stw	r5,172(sp)
    1954:	058001c4 	movi	r22,7
    1958:	dcc02c17 	ldw	r19,176(sp)
    195c:	00000306 	br	196c <___vfprintf_internal_r+0xef0>
    1960:	42000204 	addi	r8,r8,8
    1964:	843ffc04 	addi	r16,r16,-16
    1968:	8c00820e 	bge	r17,r16,1b74 <___vfprintf_internal_r+0x10f8>
    196c:	18c00404 	addi	r3,r3,16
    1970:	10800044 	addi	r2,r2,1
    1974:	45000015 	stw	r20,0(r8)
    1978:	44400115 	stw	r17,4(r8)
    197c:	d8c02015 	stw	r3,128(sp)
    1980:	d8801f15 	stw	r2,124(sp)
    1984:	b0bff60e 	bge	r22,r2,1960 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001960>
    1988:	d9801e04 	addi	r6,sp,120
    198c:	b80b883a 	mov	r5,r23
    1990:	9809883a 	mov	r4,r19
    1994:	00075940 	call	7594 <__sprint_r>
    1998:	103d3a1e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    199c:	d8c02017 	ldw	r3,128(sp)
    19a0:	d8801f17 	ldw	r2,124(sp)
    19a4:	da000404 	addi	r8,sp,16
    19a8:	003fee06 	br	1964 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001964>
    19ac:	d9403117 	ldw	r5,196(sp)
    19b0:	d8802a17 	ldw	r2,168(sp)
    19b4:	28adc83a 	sub	r22,r5,r2
    19b8:	05be630e 	bge	zero,r22,1348 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001348>
    19bc:	07000404 	movi	fp,16
    19c0:	d8801f17 	ldw	r2,124(sp)
    19c4:	e5838f0e 	bge	fp,r22,2804 <___vfprintf_internal_r+0x1d88>
    19c8:	01400074 	movhi	r5,1
    19cc:	2945e084 	addi	r5,r5,6018
    19d0:	dc403015 	stw	r17,192(sp)
    19d4:	d9402b15 	stw	r5,172(sp)
    19d8:	b023883a 	mov	r17,r22
    19dc:	04c001c4 	movi	r19,7
    19e0:	a82d883a 	mov	r22,r21
    19e4:	902b883a 	mov	r21,r18
    19e8:	8025883a 	mov	r18,r16
    19ec:	dc002c17 	ldw	r16,176(sp)
    19f0:	00000306 	br	1a00 <___vfprintf_internal_r+0xf84>
    19f4:	8c7ffc04 	addi	r17,r17,-16
    19f8:	42000204 	addi	r8,r8,8
    19fc:	e440110e 	bge	fp,r17,1a44 <___vfprintf_internal_r+0xfc8>
    1a00:	18c00404 	addi	r3,r3,16
    1a04:	10800044 	addi	r2,r2,1
    1a08:	45000015 	stw	r20,0(r8)
    1a0c:	47000115 	stw	fp,4(r8)
    1a10:	d8c02015 	stw	r3,128(sp)
    1a14:	d8801f15 	stw	r2,124(sp)
    1a18:	98bff60e 	bge	r19,r2,19f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70019f4>
    1a1c:	d9801e04 	addi	r6,sp,120
    1a20:	b80b883a 	mov	r5,r23
    1a24:	8009883a 	mov	r4,r16
    1a28:	00075940 	call	7594 <__sprint_r>
    1a2c:	103d151e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    1a30:	8c7ffc04 	addi	r17,r17,-16
    1a34:	d8c02017 	ldw	r3,128(sp)
    1a38:	d8801f17 	ldw	r2,124(sp)
    1a3c:	da000404 	addi	r8,sp,16
    1a40:	e47fef16 	blt	fp,r17,1a00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001a00>
    1a44:	9021883a 	mov	r16,r18
    1a48:	a825883a 	mov	r18,r21
    1a4c:	b02b883a 	mov	r21,r22
    1a50:	882d883a 	mov	r22,r17
    1a54:	dc403017 	ldw	r17,192(sp)
    1a58:	d9002b17 	ldw	r4,172(sp)
    1a5c:	1d87883a 	add	r3,r3,r22
    1a60:	10800044 	addi	r2,r2,1
    1a64:	41000015 	stw	r4,0(r8)
    1a68:	45800115 	stw	r22,4(r8)
    1a6c:	d8c02015 	stw	r3,128(sp)
    1a70:	d8801f15 	stw	r2,124(sp)
    1a74:	010001c4 	movi	r4,7
    1a78:	20818e16 	blt	r4,r2,20b4 <___vfprintf_internal_r+0x1638>
    1a7c:	42000204 	addi	r8,r8,8
    1a80:	003e3106 	br	1348 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001348>
    1a84:	d9403317 	ldw	r5,204(sp)
    1a88:	00800044 	movi	r2,1
    1a8c:	18c00044 	addi	r3,r3,1
    1a90:	1141530e 	bge	r2,r5,1fe0 <___vfprintf_internal_r+0x1564>
    1a94:	dc401f17 	ldw	r17,124(sp)
    1a98:	00800044 	movi	r2,1
    1a9c:	40800115 	stw	r2,4(r8)
    1aa0:	8c400044 	addi	r17,r17,1
    1aa4:	44000015 	stw	r16,0(r8)
    1aa8:	d8c02015 	stw	r3,128(sp)
    1aac:	dc401f15 	stw	r17,124(sp)
    1ab0:	008001c4 	movi	r2,7
    1ab4:	14416b16 	blt	r2,r17,2064 <___vfprintf_internal_r+0x15e8>
    1ab8:	42000204 	addi	r8,r8,8
    1abc:	d8803717 	ldw	r2,220(sp)
    1ac0:	d9003417 	ldw	r4,208(sp)
    1ac4:	8c400044 	addi	r17,r17,1
    1ac8:	10c7883a 	add	r3,r2,r3
    1acc:	40800115 	stw	r2,4(r8)
    1ad0:	41000015 	stw	r4,0(r8)
    1ad4:	d8c02015 	stw	r3,128(sp)
    1ad8:	dc401f15 	stw	r17,124(sp)
    1adc:	008001c4 	movi	r2,7
    1ae0:	14416916 	blt	r2,r17,2088 <___vfprintf_internal_r+0x160c>
    1ae4:	45800204 	addi	r22,r8,8
    1ae8:	d9003617 	ldw	r4,216(sp)
    1aec:	d9403817 	ldw	r5,224(sp)
    1af0:	000d883a 	mov	r6,zero
    1af4:	000f883a 	mov	r7,zero
    1af8:	d8c03c15 	stw	r3,240(sp)
    1afc:	000bd880 	call	bd88 <__eqdf2>
    1b00:	d8c03c17 	ldw	r3,240(sp)
    1b04:	1000bc26 	beq	r2,zero,1df8 <___vfprintf_internal_r+0x137c>
    1b08:	d9403317 	ldw	r5,204(sp)
    1b0c:	84000044 	addi	r16,r16,1
    1b10:	8c400044 	addi	r17,r17,1
    1b14:	28bfffc4 	addi	r2,r5,-1
    1b18:	1887883a 	add	r3,r3,r2
    1b1c:	b0800115 	stw	r2,4(r22)
    1b20:	b4000015 	stw	r16,0(r22)
    1b24:	d8c02015 	stw	r3,128(sp)
    1b28:	dc401f15 	stw	r17,124(sp)
    1b2c:	008001c4 	movi	r2,7
    1b30:	14414316 	blt	r2,r17,2040 <___vfprintf_internal_r+0x15c4>
    1b34:	b5800204 	addi	r22,r22,8
    1b38:	d9003a17 	ldw	r4,232(sp)
    1b3c:	df0022c4 	addi	fp,sp,139
    1b40:	8c400044 	addi	r17,r17,1
    1b44:	20c7883a 	add	r3,r4,r3
    1b48:	b7000015 	stw	fp,0(r22)
    1b4c:	b1000115 	stw	r4,4(r22)
    1b50:	d8c02015 	stw	r3,128(sp)
    1b54:	dc401f15 	stw	r17,124(sp)
    1b58:	008001c4 	movi	r2,7
    1b5c:	14400e16 	blt	r2,r17,1b98 <___vfprintf_internal_r+0x111c>
    1b60:	b2000204 	addi	r8,r22,8
    1b64:	003e3a06 	br	1450 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001450>
    1b68:	01000074 	movhi	r4,1
    1b6c:	2105e084 	addi	r4,r4,6018
    1b70:	d9002b15 	stw	r4,172(sp)
    1b74:	d9002b17 	ldw	r4,172(sp)
    1b78:	1c07883a 	add	r3,r3,r16
    1b7c:	44000115 	stw	r16,4(r8)
    1b80:	41000015 	stw	r4,0(r8)
    1b84:	10800044 	addi	r2,r2,1
    1b88:	d8c02015 	stw	r3,128(sp)
    1b8c:	d8801f15 	stw	r2,124(sp)
    1b90:	010001c4 	movi	r4,7
    1b94:	20be2d0e 	bge	r4,r2,144c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700144c>
    1b98:	d9002c17 	ldw	r4,176(sp)
    1b9c:	d9801e04 	addi	r6,sp,120
    1ba0:	b80b883a 	mov	r5,r23
    1ba4:	00075940 	call	7594 <__sprint_r>
    1ba8:	103cb61e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    1bac:	d8c02017 	ldw	r3,128(sp)
    1bb0:	da000404 	addi	r8,sp,16
    1bb4:	003e2606 	br	1450 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001450>
    1bb8:	d9002c17 	ldw	r4,176(sp)
    1bbc:	d9801e04 	addi	r6,sp,120
    1bc0:	b80b883a 	mov	r5,r23
    1bc4:	00075940 	call	7594 <__sprint_r>
    1bc8:	103e5d26 	beq	r2,zero,1540 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001540>
    1bcc:	003cad06 	br	e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    1bd0:	d9002c17 	ldw	r4,176(sp)
    1bd4:	d9801e04 	addi	r6,sp,120
    1bd8:	b80b883a 	mov	r5,r23
    1bdc:	00075940 	call	7594 <__sprint_r>
    1be0:	103ca81e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    1be4:	d8c02017 	ldw	r3,128(sp)
    1be8:	da000404 	addi	r8,sp,16
    1bec:	003e0b06 	br	141c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700141c>
    1bf0:	d9002c17 	ldw	r4,176(sp)
    1bf4:	d9801e04 	addi	r6,sp,120
    1bf8:	b80b883a 	mov	r5,r23
    1bfc:	00075940 	call	7594 <__sprint_r>
    1c00:	103ca01e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    1c04:	d8c02017 	ldw	r3,128(sp)
    1c08:	da000404 	addi	r8,sp,16
    1c0c:	003dbd06 	br	1304 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001304>
    1c10:	d9002c17 	ldw	r4,176(sp)
    1c14:	d9801e04 	addi	r6,sp,120
    1c18:	b80b883a 	mov	r5,r23
    1c1c:	00075940 	call	7594 <__sprint_r>
    1c20:	103c981e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    1c24:	d8c02017 	ldw	r3,128(sp)
    1c28:	da000404 	addi	r8,sp,16
    1c2c:	003dc306 	br	133c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700133c>
    1c30:	d8802917 	ldw	r2,164(sp)
    1c34:	d8002785 	stb	zero,158(sp)
    1c38:	103f0616 	blt	r2,zero,1854 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001854>
    1c3c:	00ffdfc4 	movi	r3,-129
    1c40:	9d84b03a 	or	r2,r19,r22
    1c44:	90e4703a 	and	r18,r18,r3
    1c48:	103c6b26 	beq	r2,zero,df8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000df8>
    1c4c:	0039883a 	mov	fp,zero
    1c50:	003e7406 	br	1624 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001624>
    1c54:	9080040c 	andi	r2,r18,16
    1c58:	1001b326 	beq	r2,zero,2328 <___vfprintf_internal_r+0x18ac>
    1c5c:	d9002d17 	ldw	r4,180(sp)
    1c60:	d9402917 	ldw	r5,164(sp)
    1c64:	d8002785 	stb	zero,158(sp)
    1c68:	20800104 	addi	r2,r4,4
    1c6c:	24c00017 	ldw	r19,0(r4)
    1c70:	002d883a 	mov	r22,zero
    1c74:	2801b516 	blt	r5,zero,234c <___vfprintf_internal_r+0x18d0>
    1c78:	00ffdfc4 	movi	r3,-129
    1c7c:	d8802d15 	stw	r2,180(sp)
    1c80:	90e4703a 	and	r18,r18,r3
    1c84:	983d2726 	beq	r19,zero,1124 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001124>
    1c88:	0039883a 	mov	fp,zero
    1c8c:	003d2a06 	br	1138 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001138>
    1c90:	dc402617 	ldw	r17,152(sp)
    1c94:	0441d30e 	bge	zero,r17,23e4 <___vfprintf_internal_r+0x1968>
    1c98:	dc403217 	ldw	r17,200(sp)
    1c9c:	d8803317 	ldw	r2,204(sp)
    1ca0:	1440010e 	bge	r2,r17,1ca8 <___vfprintf_internal_r+0x122c>
    1ca4:	1023883a 	mov	r17,r2
    1ca8:	04400a0e 	bge	zero,r17,1cd4 <___vfprintf_internal_r+0x1258>
    1cac:	d8801f17 	ldw	r2,124(sp)
    1cb0:	1c47883a 	add	r3,r3,r17
    1cb4:	44000015 	stw	r16,0(r8)
    1cb8:	10800044 	addi	r2,r2,1
    1cbc:	44400115 	stw	r17,4(r8)
    1cc0:	d8c02015 	stw	r3,128(sp)
    1cc4:	d8801f15 	stw	r2,124(sp)
    1cc8:	010001c4 	movi	r4,7
    1ccc:	20826516 	blt	r4,r2,2664 <___vfprintf_internal_r+0x1be8>
    1cd0:	42000204 	addi	r8,r8,8
    1cd4:	88026116 	blt	r17,zero,265c <___vfprintf_internal_r+0x1be0>
    1cd8:	d9003217 	ldw	r4,200(sp)
    1cdc:	2463c83a 	sub	r17,r4,r17
    1ce0:	04407b0e 	bge	zero,r17,1ed0 <___vfprintf_internal_r+0x1454>
    1ce4:	05800404 	movi	r22,16
    1ce8:	d8801f17 	ldw	r2,124(sp)
    1cec:	b4419d0e 	bge	r22,r17,2364 <___vfprintf_internal_r+0x18e8>
    1cf0:	01000074 	movhi	r4,1
    1cf4:	2105e084 	addi	r4,r4,6018
    1cf8:	d9002b15 	stw	r4,172(sp)
    1cfc:	070001c4 	movi	fp,7
    1d00:	dcc02c17 	ldw	r19,176(sp)
    1d04:	00000306 	br	1d14 <___vfprintf_internal_r+0x1298>
    1d08:	42000204 	addi	r8,r8,8
    1d0c:	8c7ffc04 	addi	r17,r17,-16
    1d10:	b441970e 	bge	r22,r17,2370 <___vfprintf_internal_r+0x18f4>
    1d14:	18c00404 	addi	r3,r3,16
    1d18:	10800044 	addi	r2,r2,1
    1d1c:	45000015 	stw	r20,0(r8)
    1d20:	45800115 	stw	r22,4(r8)
    1d24:	d8c02015 	stw	r3,128(sp)
    1d28:	d8801f15 	stw	r2,124(sp)
    1d2c:	e0bff60e 	bge	fp,r2,1d08 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001d08>
    1d30:	d9801e04 	addi	r6,sp,120
    1d34:	b80b883a 	mov	r5,r23
    1d38:	9809883a 	mov	r4,r19
    1d3c:	00075940 	call	7594 <__sprint_r>
    1d40:	103c501e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    1d44:	d8c02017 	ldw	r3,128(sp)
    1d48:	d8801f17 	ldw	r2,124(sp)
    1d4c:	da000404 	addi	r8,sp,16
    1d50:	003fee06 	br	1d0c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001d0c>
    1d54:	d9002c17 	ldw	r4,176(sp)
    1d58:	d9801e04 	addi	r6,sp,120
    1d5c:	b80b883a 	mov	r5,r23
    1d60:	00075940 	call	7594 <__sprint_r>
    1d64:	103c471e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    1d68:	d8c02017 	ldw	r3,128(sp)
    1d6c:	df002787 	ldb	fp,158(sp)
    1d70:	da000404 	addi	r8,sp,16
    1d74:	003d5606 	br	12d0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70012d0>
    1d78:	9080040c 	andi	r2,r18,16
    1d7c:	10016126 	beq	r2,zero,2304 <___vfprintf_internal_r+0x1888>
    1d80:	d8802d17 	ldw	r2,180(sp)
    1d84:	14c00017 	ldw	r19,0(r2)
    1d88:	10800104 	addi	r2,r2,4
    1d8c:	d8802d15 	stw	r2,180(sp)
    1d90:	982dd7fa 	srai	r22,r19,31
    1d94:	b005883a 	mov	r2,r22
    1d98:	003c8206 	br	fa4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fa4>
    1d9c:	9080040c 	andi	r2,r18,16
    1da0:	10003526 	beq	r2,zero,1e78 <___vfprintf_internal_r+0x13fc>
    1da4:	d9402d17 	ldw	r5,180(sp)
    1da8:	d8c02917 	ldw	r3,164(sp)
    1dac:	d8002785 	stb	zero,158(sp)
    1db0:	28800104 	addi	r2,r5,4
    1db4:	2cc00017 	ldw	r19,0(r5)
    1db8:	002d883a 	mov	r22,zero
    1dbc:	18003716 	blt	r3,zero,1e9c <___vfprintf_internal_r+0x1420>
    1dc0:	00ffdfc4 	movi	r3,-129
    1dc4:	d8802d15 	stw	r2,180(sp)
    1dc8:	90e4703a 	and	r18,r18,r3
    1dcc:	0039883a 	mov	fp,zero
    1dd0:	983df326 	beq	r19,zero,15a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70015a0>
    1dd4:	00800244 	movi	r2,9
    1dd8:	14fc7b36 	bltu	r2,r19,fc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fc8>
    1ddc:	d8c02817 	ldw	r3,160(sp)
    1de0:	dc001dc4 	addi	r16,sp,119
    1de4:	9cc00c04 	addi	r19,r19,48
    1de8:	1c07c83a 	sub	r3,r3,r16
    1dec:	dcc01dc5 	stb	r19,119(sp)
    1df0:	d8c02e15 	stw	r3,184(sp)
    1df4:	003ce806 	br	1198 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001198>
    1df8:	d8803317 	ldw	r2,204(sp)
    1dfc:	143fffc4 	addi	r16,r2,-1
    1e00:	043f4d0e 	bge	zero,r16,1b38 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001b38>
    1e04:	07000404 	movi	fp,16
    1e08:	e400810e 	bge	fp,r16,2010 <___vfprintf_internal_r+0x1594>
    1e0c:	01400074 	movhi	r5,1
    1e10:	2945e084 	addi	r5,r5,6018
    1e14:	d9402b15 	stw	r5,172(sp)
    1e18:	01c001c4 	movi	r7,7
    1e1c:	dcc02c17 	ldw	r19,176(sp)
    1e20:	00000306 	br	1e30 <___vfprintf_internal_r+0x13b4>
    1e24:	b5800204 	addi	r22,r22,8
    1e28:	843ffc04 	addi	r16,r16,-16
    1e2c:	e4007b0e 	bge	fp,r16,201c <___vfprintf_internal_r+0x15a0>
    1e30:	18c00404 	addi	r3,r3,16
    1e34:	8c400044 	addi	r17,r17,1
    1e38:	b5000015 	stw	r20,0(r22)
    1e3c:	b7000115 	stw	fp,4(r22)
    1e40:	d8c02015 	stw	r3,128(sp)
    1e44:	dc401f15 	stw	r17,124(sp)
    1e48:	3c7ff60e 	bge	r7,r17,1e24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001e24>
    1e4c:	d9801e04 	addi	r6,sp,120
    1e50:	b80b883a 	mov	r5,r23
    1e54:	9809883a 	mov	r4,r19
    1e58:	d9c03c15 	stw	r7,240(sp)
    1e5c:	00075940 	call	7594 <__sprint_r>
    1e60:	d9c03c17 	ldw	r7,240(sp)
    1e64:	103c071e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    1e68:	d8c02017 	ldw	r3,128(sp)
    1e6c:	dc401f17 	ldw	r17,124(sp)
    1e70:	dd800404 	addi	r22,sp,16
    1e74:	003fec06 	br	1e28 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001e28>
    1e78:	9080100c 	andi	r2,r18,64
    1e7c:	d8002785 	stb	zero,158(sp)
    1e80:	10010e26 	beq	r2,zero,22bc <___vfprintf_internal_r+0x1840>
    1e84:	d9002d17 	ldw	r4,180(sp)
    1e88:	d9402917 	ldw	r5,164(sp)
    1e8c:	002d883a 	mov	r22,zero
    1e90:	20800104 	addi	r2,r4,4
    1e94:	24c0000b 	ldhu	r19,0(r4)
    1e98:	283fc90e 	bge	r5,zero,1dc0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001dc0>
    1e9c:	d8802d15 	stw	r2,180(sp)
    1ea0:	0039883a 	mov	fp,zero
    1ea4:	9d84b03a 	or	r2,r19,r22
    1ea8:	103c461e 	bne	r2,zero,fc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fc4>
    1eac:	00800044 	movi	r2,1
    1eb0:	003e6c06 	br	1864 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001864>
    1eb4:	d9002c17 	ldw	r4,176(sp)
    1eb8:	d9801e04 	addi	r6,sp,120
    1ebc:	b80b883a 	mov	r5,r23
    1ec0:	00075940 	call	7594 <__sprint_r>
    1ec4:	103bef1e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    1ec8:	d8c02017 	ldw	r3,128(sp)
    1ecc:	da000404 	addi	r8,sp,16
    1ed0:	d9003217 	ldw	r4,200(sp)
    1ed4:	d8802617 	ldw	r2,152(sp)
    1ed8:	d9403317 	ldw	r5,204(sp)
    1edc:	8123883a 	add	r17,r16,r4
    1ee0:	11400216 	blt	r2,r5,1eec <___vfprintf_internal_r+0x1470>
    1ee4:	9100004c 	andi	r4,r18,1
    1ee8:	20000d26 	beq	r4,zero,1f20 <___vfprintf_internal_r+0x14a4>
    1eec:	d9003717 	ldw	r4,220(sp)
    1ef0:	d9403417 	ldw	r5,208(sp)
    1ef4:	1907883a 	add	r3,r3,r4
    1ef8:	d9001f17 	ldw	r4,124(sp)
    1efc:	41400015 	stw	r5,0(r8)
    1f00:	d9403717 	ldw	r5,220(sp)
    1f04:	21000044 	addi	r4,r4,1
    1f08:	d8c02015 	stw	r3,128(sp)
    1f0c:	41400115 	stw	r5,4(r8)
    1f10:	d9001f15 	stw	r4,124(sp)
    1f14:	014001c4 	movi	r5,7
    1f18:	2901e816 	blt	r5,r4,26bc <___vfprintf_internal_r+0x1c40>
    1f1c:	42000204 	addi	r8,r8,8
    1f20:	d9003317 	ldw	r4,204(sp)
    1f24:	8121883a 	add	r16,r16,r4
    1f28:	2085c83a 	sub	r2,r4,r2
    1f2c:	8461c83a 	sub	r16,r16,r17
    1f30:	1400010e 	bge	r2,r16,1f38 <___vfprintf_internal_r+0x14bc>
    1f34:	1021883a 	mov	r16,r2
    1f38:	04000a0e 	bge	zero,r16,1f64 <___vfprintf_internal_r+0x14e8>
    1f3c:	d9001f17 	ldw	r4,124(sp)
    1f40:	1c07883a 	add	r3,r3,r16
    1f44:	44400015 	stw	r17,0(r8)
    1f48:	21000044 	addi	r4,r4,1
    1f4c:	44000115 	stw	r16,4(r8)
    1f50:	d8c02015 	stw	r3,128(sp)
    1f54:	d9001f15 	stw	r4,124(sp)
    1f58:	014001c4 	movi	r5,7
    1f5c:	2901fb16 	blt	r5,r4,274c <___vfprintf_internal_r+0x1cd0>
    1f60:	42000204 	addi	r8,r8,8
    1f64:	8001f716 	blt	r16,zero,2744 <___vfprintf_internal_r+0x1cc8>
    1f68:	1421c83a 	sub	r16,r2,r16
    1f6c:	043d380e 	bge	zero,r16,1450 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001450>
    1f70:	04400404 	movi	r17,16
    1f74:	d8801f17 	ldw	r2,124(sp)
    1f78:	8c3efb0e 	bge	r17,r16,1b68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001b68>
    1f7c:	01400074 	movhi	r5,1
    1f80:	2945e084 	addi	r5,r5,6018
    1f84:	d9402b15 	stw	r5,172(sp)
    1f88:	058001c4 	movi	r22,7
    1f8c:	dcc02c17 	ldw	r19,176(sp)
    1f90:	00000306 	br	1fa0 <___vfprintf_internal_r+0x1524>
    1f94:	42000204 	addi	r8,r8,8
    1f98:	843ffc04 	addi	r16,r16,-16
    1f9c:	8c3ef50e 	bge	r17,r16,1b74 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001b74>
    1fa0:	18c00404 	addi	r3,r3,16
    1fa4:	10800044 	addi	r2,r2,1
    1fa8:	45000015 	stw	r20,0(r8)
    1fac:	44400115 	stw	r17,4(r8)
    1fb0:	d8c02015 	stw	r3,128(sp)
    1fb4:	d8801f15 	stw	r2,124(sp)
    1fb8:	b0bff60e 	bge	r22,r2,1f94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001f94>
    1fbc:	d9801e04 	addi	r6,sp,120
    1fc0:	b80b883a 	mov	r5,r23
    1fc4:	9809883a 	mov	r4,r19
    1fc8:	00075940 	call	7594 <__sprint_r>
    1fcc:	103bad1e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    1fd0:	d8c02017 	ldw	r3,128(sp)
    1fd4:	d8801f17 	ldw	r2,124(sp)
    1fd8:	da000404 	addi	r8,sp,16
    1fdc:	003fee06 	br	1f98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001f98>
    1fe0:	9088703a 	and	r4,r18,r2
    1fe4:	203eab1e 	bne	r4,zero,1a94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001a94>
    1fe8:	dc401f17 	ldw	r17,124(sp)
    1fec:	40800115 	stw	r2,4(r8)
    1ff0:	44000015 	stw	r16,0(r8)
    1ff4:	8c400044 	addi	r17,r17,1
    1ff8:	d8c02015 	stw	r3,128(sp)
    1ffc:	dc401f15 	stw	r17,124(sp)
    2000:	008001c4 	movi	r2,7
    2004:	14400e16 	blt	r2,r17,2040 <___vfprintf_internal_r+0x15c4>
    2008:	45800204 	addi	r22,r8,8
    200c:	003eca06 	br	1b38 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001b38>
    2010:	01000074 	movhi	r4,1
    2014:	2105e084 	addi	r4,r4,6018
    2018:	d9002b15 	stw	r4,172(sp)
    201c:	d8802b17 	ldw	r2,172(sp)
    2020:	1c07883a 	add	r3,r3,r16
    2024:	8c400044 	addi	r17,r17,1
    2028:	b0800015 	stw	r2,0(r22)
    202c:	b4000115 	stw	r16,4(r22)
    2030:	d8c02015 	stw	r3,128(sp)
    2034:	dc401f15 	stw	r17,124(sp)
    2038:	008001c4 	movi	r2,7
    203c:	147ebd0e 	bge	r2,r17,1b34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001b34>
    2040:	d9002c17 	ldw	r4,176(sp)
    2044:	d9801e04 	addi	r6,sp,120
    2048:	b80b883a 	mov	r5,r23
    204c:	00075940 	call	7594 <__sprint_r>
    2050:	103b8c1e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    2054:	d8c02017 	ldw	r3,128(sp)
    2058:	dc401f17 	ldw	r17,124(sp)
    205c:	dd800404 	addi	r22,sp,16
    2060:	003eb506 	br	1b38 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001b38>
    2064:	d9002c17 	ldw	r4,176(sp)
    2068:	d9801e04 	addi	r6,sp,120
    206c:	b80b883a 	mov	r5,r23
    2070:	00075940 	call	7594 <__sprint_r>
    2074:	103b831e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    2078:	d8c02017 	ldw	r3,128(sp)
    207c:	dc401f17 	ldw	r17,124(sp)
    2080:	da000404 	addi	r8,sp,16
    2084:	003e8d06 	br	1abc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001abc>
    2088:	d9002c17 	ldw	r4,176(sp)
    208c:	d9801e04 	addi	r6,sp,120
    2090:	b80b883a 	mov	r5,r23
    2094:	00075940 	call	7594 <__sprint_r>
    2098:	103b7a1e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    209c:	d8c02017 	ldw	r3,128(sp)
    20a0:	dc401f17 	ldw	r17,124(sp)
    20a4:	dd800404 	addi	r22,sp,16
    20a8:	003e8f06 	br	1ae8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001ae8>
    20ac:	0027883a 	mov	r19,zero
    20b0:	003f4a06 	br	1ddc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001ddc>
    20b4:	d9002c17 	ldw	r4,176(sp)
    20b8:	d9801e04 	addi	r6,sp,120
    20bc:	b80b883a 	mov	r5,r23
    20c0:	00075940 	call	7594 <__sprint_r>
    20c4:	103b6f1e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    20c8:	d8c02017 	ldw	r3,128(sp)
    20cc:	da000404 	addi	r8,sp,16
    20d0:	003c9d06 	br	1348 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001348>
    20d4:	04e7c83a 	sub	r19,zero,r19
    20d8:	9804c03a 	cmpne	r2,r19,zero
    20dc:	05adc83a 	sub	r22,zero,r22
    20e0:	b0adc83a 	sub	r22,r22,r2
    20e4:	d8802917 	ldw	r2,164(sp)
    20e8:	07000b44 	movi	fp,45
    20ec:	df002785 	stb	fp,158(sp)
    20f0:	10017b16 	blt	r2,zero,26e0 <___vfprintf_internal_r+0x1c64>
    20f4:	00bfdfc4 	movi	r2,-129
    20f8:	90a4703a 	and	r18,r18,r2
    20fc:	003bb106 	br	fc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fc4>
    2100:	d9003617 	ldw	r4,216(sp)
    2104:	d9403817 	ldw	r5,224(sp)
    2108:	da003d15 	stw	r8,244(sp)
    210c:	00071200 	call	7120 <__fpclassifyd>
    2110:	da003d17 	ldw	r8,244(sp)
    2114:	1000f026 	beq	r2,zero,24d8 <___vfprintf_internal_r+0x1a5c>
    2118:	d9002917 	ldw	r4,164(sp)
    211c:	05bff7c4 	movi	r22,-33
    2120:	00bfffc4 	movi	r2,-1
    2124:	8dac703a 	and	r22,r17,r22
    2128:	20820026 	beq	r4,r2,292c <___vfprintf_internal_r+0x1eb0>
    212c:	008011c4 	movi	r2,71
    2130:	b081f726 	beq	r22,r2,2910 <___vfprintf_internal_r+0x1e94>
    2134:	d9003817 	ldw	r4,224(sp)
    2138:	90c04014 	ori	r3,r18,256
    213c:	d8c02b15 	stw	r3,172(sp)
    2140:	20021516 	blt	r4,zero,2998 <___vfprintf_internal_r+0x1f1c>
    2144:	dcc03817 	ldw	r19,224(sp)
    2148:	d8002a05 	stb	zero,168(sp)
    214c:	00801984 	movi	r2,102
    2150:	8881f926 	beq	r17,r2,2938 <___vfprintf_internal_r+0x1ebc>
    2154:	00801184 	movi	r2,70
    2158:	88821c26 	beq	r17,r2,29cc <___vfprintf_internal_r+0x1f50>
    215c:	00801144 	movi	r2,69
    2160:	b081ef26 	beq	r22,r2,2920 <___vfprintf_internal_r+0x1ea4>
    2164:	d8c02917 	ldw	r3,164(sp)
    2168:	d8802104 	addi	r2,sp,132
    216c:	d8800315 	stw	r2,12(sp)
    2170:	d9403617 	ldw	r5,216(sp)
    2174:	d8802504 	addi	r2,sp,148
    2178:	d9002c17 	ldw	r4,176(sp)
    217c:	d8800215 	stw	r2,8(sp)
    2180:	d8802604 	addi	r2,sp,152
    2184:	d8c00015 	stw	r3,0(sp)
    2188:	d8800115 	stw	r2,4(sp)
    218c:	01c00084 	movi	r7,2
    2190:	980d883a 	mov	r6,r19
    2194:	d8c03c15 	stw	r3,240(sp)
    2198:	da003d15 	stw	r8,244(sp)
    219c:	00030a00 	call	30a0 <_dtoa_r>
    21a0:	1021883a 	mov	r16,r2
    21a4:	008019c4 	movi	r2,103
    21a8:	d8c03c17 	ldw	r3,240(sp)
    21ac:	da003d17 	ldw	r8,244(sp)
    21b0:	88817126 	beq	r17,r2,2778 <___vfprintf_internal_r+0x1cfc>
    21b4:	008011c4 	movi	r2,71
    21b8:	88829226 	beq	r17,r2,2c04 <___vfprintf_internal_r+0x2188>
    21bc:	80f9883a 	add	fp,r16,r3
    21c0:	d9003617 	ldw	r4,216(sp)
    21c4:	000d883a 	mov	r6,zero
    21c8:	000f883a 	mov	r7,zero
    21cc:	980b883a 	mov	r5,r19
    21d0:	da003d15 	stw	r8,244(sp)
    21d4:	000bd880 	call	bd88 <__eqdf2>
    21d8:	da003d17 	ldw	r8,244(sp)
    21dc:	10018d26 	beq	r2,zero,2814 <___vfprintf_internal_r+0x1d98>
    21e0:	d8802117 	ldw	r2,132(sp)
    21e4:	1700062e 	bgeu	r2,fp,2200 <___vfprintf_internal_r+0x1784>
    21e8:	01000c04 	movi	r4,48
    21ec:	10c00044 	addi	r3,r2,1
    21f0:	d8c02115 	stw	r3,132(sp)
    21f4:	11000005 	stb	r4,0(r2)
    21f8:	d8802117 	ldw	r2,132(sp)
    21fc:	173ffb36 	bltu	r2,fp,21ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70021ec>
    2200:	1405c83a 	sub	r2,r2,r16
    2204:	d8803315 	stw	r2,204(sp)
    2208:	008011c4 	movi	r2,71
    220c:	b0817626 	beq	r22,r2,27e8 <___vfprintf_internal_r+0x1d6c>
    2210:	00801944 	movi	r2,101
    2214:	1442810e 	bge	r2,r17,2c1c <___vfprintf_internal_r+0x21a0>
    2218:	d8c02617 	ldw	r3,152(sp)
    221c:	00801984 	movi	r2,102
    2220:	d8c03215 	stw	r3,200(sp)
    2224:	8881fe26 	beq	r17,r2,2a20 <___vfprintf_internal_r+0x1fa4>
    2228:	d8c03217 	ldw	r3,200(sp)
    222c:	d9003317 	ldw	r4,204(sp)
    2230:	1901dd16 	blt	r3,r4,29a8 <___vfprintf_internal_r+0x1f2c>
    2234:	9480004c 	andi	r18,r18,1
    2238:	90022b1e 	bne	r18,zero,2ae8 <___vfprintf_internal_r+0x206c>
    223c:	1805883a 	mov	r2,r3
    2240:	18028016 	blt	r3,zero,2c44 <___vfprintf_internal_r+0x21c8>
    2244:	d8c03217 	ldw	r3,200(sp)
    2248:	044019c4 	movi	r17,103
    224c:	d8c02e15 	stw	r3,184(sp)
    2250:	df002a07 	ldb	fp,168(sp)
    2254:	e001531e 	bne	fp,zero,27a4 <___vfprintf_internal_r+0x1d28>
    2258:	df002783 	ldbu	fp,158(sp)
    225c:	d8802a15 	stw	r2,168(sp)
    2260:	dc802b17 	ldw	r18,172(sp)
    2264:	d8002915 	stw	zero,164(sp)
    2268:	003bd106 	br	11b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70011b0>
    226c:	d8802d17 	ldw	r2,180(sp)
    2270:	d8c02d17 	ldw	r3,180(sp)
    2274:	d9002d17 	ldw	r4,180(sp)
    2278:	10800017 	ldw	r2,0(r2)
    227c:	18c00117 	ldw	r3,4(r3)
    2280:	21000204 	addi	r4,r4,8
    2284:	d8803615 	stw	r2,216(sp)
    2288:	d8c03815 	stw	r3,224(sp)
    228c:	d9002d15 	stw	r4,180(sp)
    2290:	003b7506 	br	1068 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001068>
    2294:	ac400007 	ldb	r17,0(r21)
    2298:	003a5906 	br	c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c00>
    229c:	9080100c 	andi	r2,r18,64
    22a0:	1000a826 	beq	r2,zero,2544 <___vfprintf_internal_r+0x1ac8>
    22a4:	d9002d17 	ldw	r4,180(sp)
    22a8:	002d883a 	mov	r22,zero
    22ac:	24c0000b 	ldhu	r19,0(r4)
    22b0:	21000104 	addi	r4,r4,4
    22b4:	d9002d15 	stw	r4,180(sp)
    22b8:	003ccb06 	br	15e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70015e8>
    22bc:	d8c02d17 	ldw	r3,180(sp)
    22c0:	d9002917 	ldw	r4,164(sp)
    22c4:	002d883a 	mov	r22,zero
    22c8:	18800104 	addi	r2,r3,4
    22cc:	1cc00017 	ldw	r19,0(r3)
    22d0:	203ebb0e 	bge	r4,zero,1dc0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001dc0>
    22d4:	003ef106 	br	1e9c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001e9c>
    22d8:	9080040c 	andi	r2,r18,16
    22dc:	1000921e 	bne	r2,zero,2528 <___vfprintf_internal_r+0x1aac>
    22e0:	9480100c 	andi	r18,r18,64
    22e4:	90013926 	beq	r18,zero,27cc <___vfprintf_internal_r+0x1d50>
    22e8:	d9002d17 	ldw	r4,180(sp)
    22ec:	d9402f17 	ldw	r5,188(sp)
    22f0:	20800017 	ldw	r2,0(r4)
    22f4:	21000104 	addi	r4,r4,4
    22f8:	d9002d15 	stw	r4,180(sp)
    22fc:	1140000d 	sth	r5,0(r2)
    2300:	003a1606 	br	b5c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000b5c>
    2304:	9080100c 	andi	r2,r18,64
    2308:	10008026 	beq	r2,zero,250c <___vfprintf_internal_r+0x1a90>
    230c:	d8c02d17 	ldw	r3,180(sp)
    2310:	1cc0000f 	ldh	r19,0(r3)
    2314:	18c00104 	addi	r3,r3,4
    2318:	d8c02d15 	stw	r3,180(sp)
    231c:	982dd7fa 	srai	r22,r19,31
    2320:	b005883a 	mov	r2,r22
    2324:	003b1f06 	br	fa4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fa4>
    2328:	9080100c 	andi	r2,r18,64
    232c:	d8002785 	stb	zero,158(sp)
    2330:	10008a1e 	bne	r2,zero,255c <___vfprintf_internal_r+0x1ae0>
    2334:	d9402d17 	ldw	r5,180(sp)
    2338:	d8c02917 	ldw	r3,164(sp)
    233c:	002d883a 	mov	r22,zero
    2340:	28800104 	addi	r2,r5,4
    2344:	2cc00017 	ldw	r19,0(r5)
    2348:	183e4b0e 	bge	r3,zero,1c78 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001c78>
    234c:	9d86b03a 	or	r3,r19,r22
    2350:	d8802d15 	stw	r2,180(sp)
    2354:	183e4c1e 	bne	r3,zero,1c88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001c88>
    2358:	0039883a 	mov	fp,zero
    235c:	0005883a 	mov	r2,zero
    2360:	003d4006 	br	1864 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001864>
    2364:	01400074 	movhi	r5,1
    2368:	2945e084 	addi	r5,r5,6018
    236c:	d9402b15 	stw	r5,172(sp)
    2370:	d9402b17 	ldw	r5,172(sp)
    2374:	1c47883a 	add	r3,r3,r17
    2378:	10800044 	addi	r2,r2,1
    237c:	41400015 	stw	r5,0(r8)
    2380:	44400115 	stw	r17,4(r8)
    2384:	d8c02015 	stw	r3,128(sp)
    2388:	d8801f15 	stw	r2,124(sp)
    238c:	010001c4 	movi	r4,7
    2390:	20bec816 	blt	r4,r2,1eb4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001eb4>
    2394:	42000204 	addi	r8,r8,8
    2398:	003ecd06 	br	1ed0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001ed0>
    239c:	d9002917 	ldw	r4,164(sp)
    23a0:	d8002785 	stb	zero,158(sp)
    23a4:	203d2d16 	blt	r4,zero,185c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700185c>
    23a8:	00bfdfc4 	movi	r2,-129
    23ac:	90a4703a 	and	r18,r18,r2
    23b0:	003a9106 	br	df8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000df8>
    23b4:	01000074 	movhi	r4,1
    23b8:	2105e084 	addi	r4,r4,6018
    23bc:	d9002b15 	stw	r4,172(sp)
    23c0:	003c0c06 	br	13f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70013f4>
    23c4:	d9002c17 	ldw	r4,176(sp)
    23c8:	d9801e04 	addi	r6,sp,120
    23cc:	b80b883a 	mov	r5,r23
    23d0:	00075940 	call	7594 <__sprint_r>
    23d4:	103aab1e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    23d8:	d8c02017 	ldw	r3,128(sp)
    23dc:	da000404 	addi	r8,sp,16
    23e0:	003d4106 	br	18e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70018e8>
    23e4:	d8801f17 	ldw	r2,124(sp)
    23e8:	01400074 	movhi	r5,1
    23ec:	01000044 	movi	r4,1
    23f0:	18c00044 	addi	r3,r3,1
    23f4:	10800044 	addi	r2,r2,1
    23f8:	2945e004 	addi	r5,r5,6016
    23fc:	41000115 	stw	r4,4(r8)
    2400:	41400015 	stw	r5,0(r8)
    2404:	d8c02015 	stw	r3,128(sp)
    2408:	d8801f15 	stw	r2,124(sp)
    240c:	010001c4 	movi	r4,7
    2410:	20805c16 	blt	r4,r2,2584 <___vfprintf_internal_r+0x1b08>
    2414:	42000204 	addi	r8,r8,8
    2418:	8800041e 	bne	r17,zero,242c <___vfprintf_internal_r+0x19b0>
    241c:	d8803317 	ldw	r2,204(sp)
    2420:	1000021e 	bne	r2,zero,242c <___vfprintf_internal_r+0x19b0>
    2424:	9080004c 	andi	r2,r18,1
    2428:	103c0926 	beq	r2,zero,1450 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001450>
    242c:	d9003717 	ldw	r4,220(sp)
    2430:	d8801f17 	ldw	r2,124(sp)
    2434:	d9403417 	ldw	r5,208(sp)
    2438:	20c7883a 	add	r3,r4,r3
    243c:	10800044 	addi	r2,r2,1
    2440:	41000115 	stw	r4,4(r8)
    2444:	41400015 	stw	r5,0(r8)
    2448:	d8c02015 	stw	r3,128(sp)
    244c:	d8801f15 	stw	r2,124(sp)
    2450:	010001c4 	movi	r4,7
    2454:	20812116 	blt	r4,r2,28dc <___vfprintf_internal_r+0x1e60>
    2458:	42000204 	addi	r8,r8,8
    245c:	0463c83a 	sub	r17,zero,r17
    2460:	0440730e 	bge	zero,r17,2630 <___vfprintf_internal_r+0x1bb4>
    2464:	05800404 	movi	r22,16
    2468:	b440860e 	bge	r22,r17,2684 <___vfprintf_internal_r+0x1c08>
    246c:	01400074 	movhi	r5,1
    2470:	2945e084 	addi	r5,r5,6018
    2474:	d9402b15 	stw	r5,172(sp)
    2478:	070001c4 	movi	fp,7
    247c:	dcc02c17 	ldw	r19,176(sp)
    2480:	00000306 	br	2490 <___vfprintf_internal_r+0x1a14>
    2484:	42000204 	addi	r8,r8,8
    2488:	8c7ffc04 	addi	r17,r17,-16
    248c:	b440800e 	bge	r22,r17,2690 <___vfprintf_internal_r+0x1c14>
    2490:	18c00404 	addi	r3,r3,16
    2494:	10800044 	addi	r2,r2,1
    2498:	45000015 	stw	r20,0(r8)
    249c:	45800115 	stw	r22,4(r8)
    24a0:	d8c02015 	stw	r3,128(sp)
    24a4:	d8801f15 	stw	r2,124(sp)
    24a8:	e0bff60e 	bge	fp,r2,2484 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002484>
    24ac:	d9801e04 	addi	r6,sp,120
    24b0:	b80b883a 	mov	r5,r23
    24b4:	9809883a 	mov	r4,r19
    24b8:	00075940 	call	7594 <__sprint_r>
    24bc:	103a711e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    24c0:	d8c02017 	ldw	r3,128(sp)
    24c4:	d8801f17 	ldw	r2,124(sp)
    24c8:	da000404 	addi	r8,sp,16
    24cc:	003fee06 	br	2488 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002488>
    24d0:	00bfffc4 	movi	r2,-1
    24d4:	003a6f06 	br	e94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e94>
    24d8:	008011c4 	movi	r2,71
    24dc:	1440b816 	blt	r2,r17,27c0 <___vfprintf_internal_r+0x1d44>
    24e0:	04000074 	movhi	r16,1
    24e4:	8405d204 	addi	r16,r16,5960
    24e8:	00c000c4 	movi	r3,3
    24ec:	00bfdfc4 	movi	r2,-129
    24f0:	d8c02a15 	stw	r3,168(sp)
    24f4:	90a4703a 	and	r18,r18,r2
    24f8:	df002783 	ldbu	fp,158(sp)
    24fc:	d8c02e15 	stw	r3,184(sp)
    2500:	d8002915 	stw	zero,164(sp)
    2504:	d8003215 	stw	zero,200(sp)
    2508:	003b2906 	br	11b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70011b0>
    250c:	d9002d17 	ldw	r4,180(sp)
    2510:	24c00017 	ldw	r19,0(r4)
    2514:	21000104 	addi	r4,r4,4
    2518:	d9002d15 	stw	r4,180(sp)
    251c:	982dd7fa 	srai	r22,r19,31
    2520:	b005883a 	mov	r2,r22
    2524:	003a9f06 	br	fa4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fa4>
    2528:	d9402d17 	ldw	r5,180(sp)
    252c:	d8c02f17 	ldw	r3,188(sp)
    2530:	28800017 	ldw	r2,0(r5)
    2534:	29400104 	addi	r5,r5,4
    2538:	d9402d15 	stw	r5,180(sp)
    253c:	10c00015 	stw	r3,0(r2)
    2540:	00398606 	br	b5c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000b5c>
    2544:	d9402d17 	ldw	r5,180(sp)
    2548:	002d883a 	mov	r22,zero
    254c:	2cc00017 	ldw	r19,0(r5)
    2550:	29400104 	addi	r5,r5,4
    2554:	d9402d15 	stw	r5,180(sp)
    2558:	003c2306 	br	15e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70015e8>
    255c:	d8c02d17 	ldw	r3,180(sp)
    2560:	d9002917 	ldw	r4,164(sp)
    2564:	002d883a 	mov	r22,zero
    2568:	18800104 	addi	r2,r3,4
    256c:	1cc0000b 	ldhu	r19,0(r3)
    2570:	203dc10e 	bge	r4,zero,1c78 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001c78>
    2574:	003f7506 	br	234c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700234c>
    2578:	04000074 	movhi	r16,1
    257c:	8405d004 	addi	r16,r16,5952
    2580:	003acc06 	br	10b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70010b4>
    2584:	d9002c17 	ldw	r4,176(sp)
    2588:	d9801e04 	addi	r6,sp,120
    258c:	b80b883a 	mov	r5,r23
    2590:	00075940 	call	7594 <__sprint_r>
    2594:	103a3b1e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    2598:	dc402617 	ldw	r17,152(sp)
    259c:	d8c02017 	ldw	r3,128(sp)
    25a0:	da000404 	addi	r8,sp,16
    25a4:	003f9c06 	br	2418 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002418>
    25a8:	ac400043 	ldbu	r17,1(r21)
    25ac:	94800814 	ori	r18,r18,32
    25b0:	ad400044 	addi	r21,r21,1
    25b4:	8c403fcc 	andi	r17,r17,255
    25b8:	8c40201c 	xori	r17,r17,128
    25bc:	8c7fe004 	addi	r17,r17,-128
    25c0:	00398f06 	br	c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c00>
    25c4:	d8c02d15 	stw	r3,180(sp)
    25c8:	0039883a 	mov	fp,zero
    25cc:	003e3506 	br	1ea4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001ea4>
    25d0:	d9002c17 	ldw	r4,176(sp)
    25d4:	d9801e04 	addi	r6,sp,120
    25d8:	b80b883a 	mov	r5,r23
    25dc:	00075940 	call	7594 <__sprint_r>
    25e0:	103a281e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    25e4:	d8c02017 	ldw	r3,128(sp)
    25e8:	da000404 	addi	r8,sp,16
    25ec:	003cd006 	br	1930 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001930>
    25f0:	8009883a 	mov	r4,r16
    25f4:	da003d15 	stw	r8,244(sp)
    25f8:	00074000 	call	7400 <strlen>
    25fc:	d8802e15 	stw	r2,184(sp)
    2600:	da003d17 	ldw	r8,244(sp)
    2604:	103c340e 	bge	r2,zero,16d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70016d8>
    2608:	0005883a 	mov	r2,zero
    260c:	003c3206 	br	16d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70016d8>
    2610:	d9002c17 	ldw	r4,176(sp)
    2614:	d9801e04 	addi	r6,sp,120
    2618:	b80b883a 	mov	r5,r23
    261c:	00075940 	call	7594 <__sprint_r>
    2620:	103a181e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    2624:	d8c02017 	ldw	r3,128(sp)
    2628:	d8801f17 	ldw	r2,124(sp)
    262c:	da000404 	addi	r8,sp,16
    2630:	d9403317 	ldw	r5,204(sp)
    2634:	10800044 	addi	r2,r2,1
    2638:	44000015 	stw	r16,0(r8)
    263c:	28c7883a 	add	r3,r5,r3
    2640:	003b7d06 	br	1438 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001438>
    2644:	01000074 	movhi	r4,1
    2648:	2105e484 	addi	r4,r4,6034
    264c:	d9003515 	stw	r4,212(sp)
    2650:	003b1406 	br	12a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70012a4>
    2654:	013fffc4 	movi	r4,-1
    2658:	003a3506 	br	f30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f30>
    265c:	0023883a 	mov	r17,zero
    2660:	003d9d06 	br	1cd8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001cd8>
    2664:	d9002c17 	ldw	r4,176(sp)
    2668:	d9801e04 	addi	r6,sp,120
    266c:	b80b883a 	mov	r5,r23
    2670:	00075940 	call	7594 <__sprint_r>
    2674:	103a031e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    2678:	d8c02017 	ldw	r3,128(sp)
    267c:	da000404 	addi	r8,sp,16
    2680:	003d9406 	br	1cd4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001cd4>
    2684:	01000074 	movhi	r4,1
    2688:	2105e084 	addi	r4,r4,6018
    268c:	d9002b15 	stw	r4,172(sp)
    2690:	d9002b17 	ldw	r4,172(sp)
    2694:	1c47883a 	add	r3,r3,r17
    2698:	10800044 	addi	r2,r2,1
    269c:	41000015 	stw	r4,0(r8)
    26a0:	44400115 	stw	r17,4(r8)
    26a4:	d8c02015 	stw	r3,128(sp)
    26a8:	d8801f15 	stw	r2,124(sp)
    26ac:	010001c4 	movi	r4,7
    26b0:	20bfd716 	blt	r4,r2,2610 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002610>
    26b4:	42000204 	addi	r8,r8,8
    26b8:	003fdd06 	br	2630 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002630>
    26bc:	d9002c17 	ldw	r4,176(sp)
    26c0:	d9801e04 	addi	r6,sp,120
    26c4:	b80b883a 	mov	r5,r23
    26c8:	00075940 	call	7594 <__sprint_r>
    26cc:	1039ed1e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    26d0:	d8802617 	ldw	r2,152(sp)
    26d4:	d8c02017 	ldw	r3,128(sp)
    26d8:	da000404 	addi	r8,sp,16
    26dc:	003e1006 	br	1f20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001f20>
    26e0:	00800044 	movi	r2,1
    26e4:	10803fcc 	andi	r2,r2,255
    26e8:	00c00044 	movi	r3,1
    26ec:	10fa3526 	beq	r2,r3,fc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000fc4>
    26f0:	00c00084 	movi	r3,2
    26f4:	10fbcb26 	beq	r2,r3,1624 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001624>
    26f8:	003a8f06 	br	1138 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001138>
    26fc:	01000074 	movhi	r4,1
    2700:	2105e484 	addi	r4,r4,6034
    2704:	d9003515 	stw	r4,212(sp)
    2708:	003b7606 	br	14e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70014e4>
    270c:	d8802917 	ldw	r2,164(sp)
    2710:	00c00184 	movi	r3,6
    2714:	1880012e 	bgeu	r3,r2,271c <___vfprintf_internal_r+0x1ca0>
    2718:	1805883a 	mov	r2,r3
    271c:	d8802e15 	stw	r2,184(sp)
    2720:	1000ef16 	blt	r2,zero,2ae0 <___vfprintf_internal_r+0x2064>
    2724:	04000074 	movhi	r16,1
    2728:	d8802a15 	stw	r2,168(sp)
    272c:	dcc02d15 	stw	r19,180(sp)
    2730:	d8002915 	stw	zero,164(sp)
    2734:	d8003215 	stw	zero,200(sp)
    2738:	8405de04 	addi	r16,r16,6008
    273c:	0039883a 	mov	fp,zero
    2740:	003aa206 	br	11cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70011cc>
    2744:	0021883a 	mov	r16,zero
    2748:	003e0706 	br	1f68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001f68>
    274c:	d9002c17 	ldw	r4,176(sp)
    2750:	d9801e04 	addi	r6,sp,120
    2754:	b80b883a 	mov	r5,r23
    2758:	00075940 	call	7594 <__sprint_r>
    275c:	1039c91e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    2760:	d8802617 	ldw	r2,152(sp)
    2764:	d9403317 	ldw	r5,204(sp)
    2768:	d8c02017 	ldw	r3,128(sp)
    276c:	da000404 	addi	r8,sp,16
    2770:	2885c83a 	sub	r2,r5,r2
    2774:	003dfb06 	br	1f64 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001f64>
    2778:	9080004c 	andi	r2,r18,1
    277c:	103e8f1e 	bne	r2,zero,21bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70021bc>
    2780:	d8802117 	ldw	r2,132(sp)
    2784:	003e9e06 	br	2200 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002200>
    2788:	1025883a 	mov	r18,r2
    278c:	0039883a 	mov	fp,zero
    2790:	00800084 	movi	r2,2
    2794:	003fd306 	br	26e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70026e4>
    2798:	07000b44 	movi	fp,45
    279c:	df002785 	stb	fp,158(sp)
    27a0:	003a4006 	br	10a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70010a4>
    27a4:	00c00b44 	movi	r3,45
    27a8:	d8c02785 	stb	r3,158(sp)
    27ac:	d8802a15 	stw	r2,168(sp)
    27b0:	dc802b17 	ldw	r18,172(sp)
    27b4:	d8002915 	stw	zero,164(sp)
    27b8:	07000b44 	movi	fp,45
    27bc:	003a8006 	br	11c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70011c0>
    27c0:	04000074 	movhi	r16,1
    27c4:	8405d304 	addi	r16,r16,5964
    27c8:	003f4706 	br	24e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70024e8>
    27cc:	d8c02d17 	ldw	r3,180(sp)
    27d0:	d9002f17 	ldw	r4,188(sp)
    27d4:	18800017 	ldw	r2,0(r3)
    27d8:	18c00104 	addi	r3,r3,4
    27dc:	d8c02d15 	stw	r3,180(sp)
    27e0:	11000015 	stw	r4,0(r2)
    27e4:	0038dd06 	br	b5c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000b5c>
    27e8:	dd802617 	ldw	r22,152(sp)
    27ec:	00bfff44 	movi	r2,-3
    27f0:	b0801c16 	blt	r22,r2,2864 <___vfprintf_internal_r+0x1de8>
    27f4:	d9402917 	ldw	r5,164(sp)
    27f8:	2d801a16 	blt	r5,r22,2864 <___vfprintf_internal_r+0x1de8>
    27fc:	dd803215 	stw	r22,200(sp)
    2800:	003e8906 	br	2228 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002228>
    2804:	01000074 	movhi	r4,1
    2808:	2105e084 	addi	r4,r4,6018
    280c:	d9002b15 	stw	r4,172(sp)
    2810:	003c9106 	br	1a58 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001a58>
    2814:	e005883a 	mov	r2,fp
    2818:	003e7906 	br	2200 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002200>
    281c:	d9402917 	ldw	r5,164(sp)
    2820:	df002783 	ldbu	fp,158(sp)
    2824:	dcc02d15 	stw	r19,180(sp)
    2828:	d9402a15 	stw	r5,168(sp)
    282c:	d9402e15 	stw	r5,184(sp)
    2830:	d8002915 	stw	zero,164(sp)
    2834:	d8003215 	stw	zero,200(sp)
    2838:	003a5d06 	br	11b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70011b0>
    283c:	9080004c 	andi	r2,r18,1
    2840:	0039883a 	mov	fp,zero
    2844:	10000426 	beq	r2,zero,2858 <___vfprintf_internal_r+0x1ddc>
    2848:	00800c04 	movi	r2,48
    284c:	dc001dc4 	addi	r16,sp,119
    2850:	d8801dc5 	stb	r2,119(sp)
    2854:	003b8006 	br	1658 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001658>
    2858:	d8002e15 	stw	zero,184(sp)
    285c:	dc001e04 	addi	r16,sp,120
    2860:	003a4d06 	br	1198 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001198>
    2864:	8c7fff84 	addi	r17,r17,-2
    2868:	b5bfffc4 	addi	r22,r22,-1
    286c:	dd802615 	stw	r22,152(sp)
    2870:	dc4022c5 	stb	r17,139(sp)
    2874:	b000bf16 	blt	r22,zero,2b74 <___vfprintf_internal_r+0x20f8>
    2878:	00800ac4 	movi	r2,43
    287c:	d8802305 	stb	r2,140(sp)
    2880:	00800244 	movi	r2,9
    2884:	15807016 	blt	r2,r22,2a48 <___vfprintf_internal_r+0x1fcc>
    2888:	00800c04 	movi	r2,48
    288c:	b5800c04 	addi	r22,r22,48
    2890:	d8802345 	stb	r2,141(sp)
    2894:	dd802385 	stb	r22,142(sp)
    2898:	d88023c4 	addi	r2,sp,143
    289c:	df0022c4 	addi	fp,sp,139
    28a0:	d8c03317 	ldw	r3,204(sp)
    28a4:	1739c83a 	sub	fp,r2,fp
    28a8:	d9003317 	ldw	r4,204(sp)
    28ac:	e0c7883a 	add	r3,fp,r3
    28b0:	df003a15 	stw	fp,232(sp)
    28b4:	d8c02e15 	stw	r3,184(sp)
    28b8:	00800044 	movi	r2,1
    28bc:	1100b30e 	bge	r2,r4,2b8c <___vfprintf_internal_r+0x2110>
    28c0:	d8c02e17 	ldw	r3,184(sp)
    28c4:	18c00044 	addi	r3,r3,1
    28c8:	d8c02e15 	stw	r3,184(sp)
    28cc:	1805883a 	mov	r2,r3
    28d0:	1800ac16 	blt	r3,zero,2b84 <___vfprintf_internal_r+0x2108>
    28d4:	d8003215 	stw	zero,200(sp)
    28d8:	003e5d06 	br	2250 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002250>
    28dc:	d9002c17 	ldw	r4,176(sp)
    28e0:	d9801e04 	addi	r6,sp,120
    28e4:	b80b883a 	mov	r5,r23
    28e8:	00075940 	call	7594 <__sprint_r>
    28ec:	1039651e 	bne	r2,zero,e84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000e84>
    28f0:	dc402617 	ldw	r17,152(sp)
    28f4:	d8c02017 	ldw	r3,128(sp)
    28f8:	d8801f17 	ldw	r2,124(sp)
    28fc:	da000404 	addi	r8,sp,16
    2900:	003ed606 	br	245c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700245c>
    2904:	582b883a 	mov	r21,r11
    2908:	d8002915 	stw	zero,164(sp)
    290c:	0038bd06 	br	c04 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c04>
    2910:	d8802917 	ldw	r2,164(sp)
    2914:	103e071e 	bne	r2,zero,2134 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002134>
    2918:	dc002915 	stw	r16,164(sp)
    291c:	003e0506 	br	2134 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002134>
    2920:	d9002917 	ldw	r4,164(sp)
    2924:	20c00044 	addi	r3,r4,1
    2928:	003e0f06 	br	2168 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002168>
    292c:	01400184 	movi	r5,6
    2930:	d9402915 	stw	r5,164(sp)
    2934:	003dff06 	br	2134 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002134>
    2938:	d8802104 	addi	r2,sp,132
    293c:	d8800315 	stw	r2,12(sp)
    2940:	d8802504 	addi	r2,sp,148
    2944:	d8800215 	stw	r2,8(sp)
    2948:	d8802604 	addi	r2,sp,152
    294c:	d8800115 	stw	r2,4(sp)
    2950:	d8802917 	ldw	r2,164(sp)
    2954:	d9403617 	ldw	r5,216(sp)
    2958:	d9002c17 	ldw	r4,176(sp)
    295c:	d8800015 	stw	r2,0(sp)
    2960:	01c000c4 	movi	r7,3
    2964:	980d883a 	mov	r6,r19
    2968:	da003d15 	stw	r8,244(sp)
    296c:	00030a00 	call	30a0 <_dtoa_r>
    2970:	d8c02917 	ldw	r3,164(sp)
    2974:	da003d17 	ldw	r8,244(sp)
    2978:	1021883a 	mov	r16,r2
    297c:	10f9883a 	add	fp,r2,r3
    2980:	81000007 	ldb	r4,0(r16)
    2984:	00800c04 	movi	r2,48
    2988:	20805e26 	beq	r4,r2,2b04 <___vfprintf_internal_r+0x2088>
    298c:	d8c02617 	ldw	r3,152(sp)
    2990:	e0f9883a 	add	fp,fp,r3
    2994:	003e0a06 	br	21c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70021c0>
    2998:	00c00b44 	movi	r3,45
    299c:	24e0003c 	xorhi	r19,r4,32768
    29a0:	d8c02a05 	stb	r3,168(sp)
    29a4:	003de906 	br	214c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700214c>
    29a8:	d8c03217 	ldw	r3,200(sp)
    29ac:	00c07a0e 	bge	zero,r3,2b98 <___vfprintf_internal_r+0x211c>
    29b0:	00800044 	movi	r2,1
    29b4:	d9003317 	ldw	r4,204(sp)
    29b8:	1105883a 	add	r2,r2,r4
    29bc:	d8802e15 	stw	r2,184(sp)
    29c0:	10004e16 	blt	r2,zero,2afc <___vfprintf_internal_r+0x2080>
    29c4:	044019c4 	movi	r17,103
    29c8:	003e2106 	br	2250 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002250>
    29cc:	d9002917 	ldw	r4,164(sp)
    29d0:	d8802104 	addi	r2,sp,132
    29d4:	d8800315 	stw	r2,12(sp)
    29d8:	d9000015 	stw	r4,0(sp)
    29dc:	d8802504 	addi	r2,sp,148
    29e0:	d9403617 	ldw	r5,216(sp)
    29e4:	d9002c17 	ldw	r4,176(sp)
    29e8:	d8800215 	stw	r2,8(sp)
    29ec:	d8802604 	addi	r2,sp,152
    29f0:	d8800115 	stw	r2,4(sp)
    29f4:	01c000c4 	movi	r7,3
    29f8:	980d883a 	mov	r6,r19
    29fc:	da003d15 	stw	r8,244(sp)
    2a00:	00030a00 	call	30a0 <_dtoa_r>
    2a04:	d8c02917 	ldw	r3,164(sp)
    2a08:	da003d17 	ldw	r8,244(sp)
    2a0c:	1021883a 	mov	r16,r2
    2a10:	00801184 	movi	r2,70
    2a14:	80f9883a 	add	fp,r16,r3
    2a18:	88bfd926 	beq	r17,r2,2980 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002980>
    2a1c:	003de806 	br	21c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70021c0>
    2a20:	d9002917 	ldw	r4,164(sp)
    2a24:	00c04d0e 	bge	zero,r3,2b5c <___vfprintf_internal_r+0x20e0>
    2a28:	2000441e 	bne	r4,zero,2b3c <___vfprintf_internal_r+0x20c0>
    2a2c:	9480004c 	andi	r18,r18,1
    2a30:	9000421e 	bne	r18,zero,2b3c <___vfprintf_internal_r+0x20c0>
    2a34:	1805883a 	mov	r2,r3
    2a38:	18007016 	blt	r3,zero,2bfc <___vfprintf_internal_r+0x2180>
    2a3c:	d8c03217 	ldw	r3,200(sp)
    2a40:	d8c02e15 	stw	r3,184(sp)
    2a44:	003e0206 	br	2250 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002250>
    2a48:	df0022c4 	addi	fp,sp,139
    2a4c:	dc002915 	stw	r16,164(sp)
    2a50:	4027883a 	mov	r19,r8
    2a54:	e021883a 	mov	r16,fp
    2a58:	b009883a 	mov	r4,r22
    2a5c:	01400284 	movi	r5,10
    2a60:	000aac40 	call	aac4 <__modsi3>
    2a64:	10800c04 	addi	r2,r2,48
    2a68:	843fffc4 	addi	r16,r16,-1
    2a6c:	b009883a 	mov	r4,r22
    2a70:	01400284 	movi	r5,10
    2a74:	80800005 	stb	r2,0(r16)
    2a78:	000aa400 	call	aa40 <__divsi3>
    2a7c:	102d883a 	mov	r22,r2
    2a80:	00800244 	movi	r2,9
    2a84:	15bff416 	blt	r2,r22,2a58 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002a58>
    2a88:	9811883a 	mov	r8,r19
    2a8c:	b0800c04 	addi	r2,r22,48
    2a90:	8027883a 	mov	r19,r16
    2a94:	997fffc4 	addi	r5,r19,-1
    2a98:	98bfffc5 	stb	r2,-1(r19)
    2a9c:	dc002917 	ldw	r16,164(sp)
    2aa0:	2f006a2e 	bgeu	r5,fp,2c4c <___vfprintf_internal_r+0x21d0>
    2aa4:	d9c02384 	addi	r7,sp,142
    2aa8:	3ccfc83a 	sub	r7,r7,r19
    2aac:	d9002344 	addi	r4,sp,141
    2ab0:	e1cf883a 	add	r7,fp,r7
    2ab4:	00000106 	br	2abc <___vfprintf_internal_r+0x2040>
    2ab8:	28800003 	ldbu	r2,0(r5)
    2abc:	20800005 	stb	r2,0(r4)
    2ac0:	21000044 	addi	r4,r4,1
    2ac4:	29400044 	addi	r5,r5,1
    2ac8:	393ffb1e 	bne	r7,r4,2ab8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002ab8>
    2acc:	d8802304 	addi	r2,sp,140
    2ad0:	14c5c83a 	sub	r2,r2,r19
    2ad4:	d8c02344 	addi	r3,sp,141
    2ad8:	1885883a 	add	r2,r3,r2
    2adc:	003f7006 	br	28a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70028a0>
    2ae0:	0005883a 	mov	r2,zero
    2ae4:	003f0f06 	br	2724 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002724>
    2ae8:	d8c03217 	ldw	r3,200(sp)
    2aec:	18c00044 	addi	r3,r3,1
    2af0:	d8c02e15 	stw	r3,184(sp)
    2af4:	1805883a 	mov	r2,r3
    2af8:	183fb20e 	bge	r3,zero,29c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70029c4>
    2afc:	0005883a 	mov	r2,zero
    2b00:	003fb006 	br	29c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70029c4>
    2b04:	d9003617 	ldw	r4,216(sp)
    2b08:	000d883a 	mov	r6,zero
    2b0c:	000f883a 	mov	r7,zero
    2b10:	980b883a 	mov	r5,r19
    2b14:	d8c03c15 	stw	r3,240(sp)
    2b18:	da003d15 	stw	r8,244(sp)
    2b1c:	000bd880 	call	bd88 <__eqdf2>
    2b20:	d8c03c17 	ldw	r3,240(sp)
    2b24:	da003d17 	ldw	r8,244(sp)
    2b28:	103f9826 	beq	r2,zero,298c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700298c>
    2b2c:	00800044 	movi	r2,1
    2b30:	10c7c83a 	sub	r3,r2,r3
    2b34:	d8c02615 	stw	r3,152(sp)
    2b38:	003f9506 	br	2990 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002990>
    2b3c:	d9002917 	ldw	r4,164(sp)
    2b40:	d8c03217 	ldw	r3,200(sp)
    2b44:	20800044 	addi	r2,r4,1
    2b48:	1885883a 	add	r2,r3,r2
    2b4c:	d8802e15 	stw	r2,184(sp)
    2b50:	103dbf0e 	bge	r2,zero,2250 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002250>
    2b54:	0005883a 	mov	r2,zero
    2b58:	003dbd06 	br	2250 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002250>
    2b5c:	2000211e 	bne	r4,zero,2be4 <___vfprintf_internal_r+0x2168>
    2b60:	9480004c 	andi	r18,r18,1
    2b64:	90001f1e 	bne	r18,zero,2be4 <___vfprintf_internal_r+0x2168>
    2b68:	00800044 	movi	r2,1
    2b6c:	d8802e15 	stw	r2,184(sp)
    2b70:	003db706 	br	2250 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002250>
    2b74:	00800b44 	movi	r2,45
    2b78:	05adc83a 	sub	r22,zero,r22
    2b7c:	d8802305 	stb	r2,140(sp)
    2b80:	003f3f06 	br	2880 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002880>
    2b84:	0005883a 	mov	r2,zero
    2b88:	003f5206 	br	28d4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70028d4>
    2b8c:	90a4703a 	and	r18,r18,r2
    2b90:	903f4e26 	beq	r18,zero,28cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70028cc>
    2b94:	003f4a06 	br	28c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70028c0>
    2b98:	00800084 	movi	r2,2
    2b9c:	10c5c83a 	sub	r2,r2,r3
    2ba0:	003f8406 	br	29b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70029b4>
    2ba4:	d8802d17 	ldw	r2,180(sp)
    2ba8:	d9002d17 	ldw	r4,180(sp)
    2bac:	ac400043 	ldbu	r17,1(r21)
    2bb0:	10800017 	ldw	r2,0(r2)
    2bb4:	582b883a 	mov	r21,r11
    2bb8:	d8802915 	stw	r2,164(sp)
    2bbc:	20800104 	addi	r2,r4,4
    2bc0:	d9002917 	ldw	r4,164(sp)
    2bc4:	d8802d15 	stw	r2,180(sp)
    2bc8:	203e7a0e 	bge	r4,zero,25b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70025b4>
    2bcc:	8c403fcc 	andi	r17,r17,255
    2bd0:	00bfffc4 	movi	r2,-1
    2bd4:	8c40201c 	xori	r17,r17,128
    2bd8:	d8802915 	stw	r2,164(sp)
    2bdc:	8c7fe004 	addi	r17,r17,-128
    2be0:	00380706 	br	c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000c00>
    2be4:	d8c02917 	ldw	r3,164(sp)
    2be8:	18c00084 	addi	r3,r3,2
    2bec:	d8c02e15 	stw	r3,184(sp)
    2bf0:	1805883a 	mov	r2,r3
    2bf4:	183d960e 	bge	r3,zero,2250 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002250>
    2bf8:	003fd606 	br	2b54 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002b54>
    2bfc:	0005883a 	mov	r2,zero
    2c00:	003f8e06 	br	2a3c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002a3c>
    2c04:	9080004c 	andi	r2,r18,1
    2c08:	103f811e 	bne	r2,zero,2a10 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002a10>
    2c0c:	d8802117 	ldw	r2,132(sp)
    2c10:	1405c83a 	sub	r2,r2,r16
    2c14:	d8803315 	stw	r2,204(sp)
    2c18:	b47ef326 	beq	r22,r17,27e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70027e8>
    2c1c:	dd802617 	ldw	r22,152(sp)
    2c20:	003f1106 	br	2868 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002868>
    2c24:	d9c02785 	stb	r7,158(sp)
    2c28:	00390406 	br	103c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700103c>
    2c2c:	d9c02785 	stb	r7,158(sp)
    2c30:	0038d306 	br	f80 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7000f80>
    2c34:	d9c02785 	stb	r7,158(sp)
    2c38:	003a6106 	br	15c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70015c0>
    2c3c:	d9c02785 	stb	r7,158(sp)
    2c40:	003af806 	br	1824 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001824>
    2c44:	0005883a 	mov	r2,zero
    2c48:	003d7e06 	br	2244 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002244>
    2c4c:	d8802344 	addi	r2,sp,141
    2c50:	003f1306 	br	28a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70028a0>
    2c54:	d9c02785 	stb	r7,158(sp)
    2c58:	00392306 	br	10e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70010e8>
    2c5c:	d9c02785 	stb	r7,158(sp)
    2c60:	003aa906 	br	1708 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001708>
    2c64:	d9c02785 	stb	r7,158(sp)
    2c68:	003a3d06 	br	1560 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7001560>
    2c6c:	d9c02785 	stb	r7,158(sp)
    2c70:	003aca06 	br	179c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700179c>

00002c74 <__vfprintf_internal>:
    2c74:	00800074 	movhi	r2,1
    2c78:	108e1004 	addi	r2,r2,14400
    2c7c:	300f883a 	mov	r7,r6
    2c80:	280d883a 	mov	r6,r5
    2c84:	200b883a 	mov	r5,r4
    2c88:	11000017 	ldw	r4,0(r2)
    2c8c:	0000a7c1 	jmpi	a7c <___vfprintf_internal_r>

00002c90 <__sbprintf>:
    2c90:	2880030b 	ldhu	r2,12(r5)
    2c94:	2ac01917 	ldw	r11,100(r5)
    2c98:	2a80038b 	ldhu	r10,14(r5)
    2c9c:	2a400717 	ldw	r9,28(r5)
    2ca0:	2a000917 	ldw	r8,36(r5)
    2ca4:	defee204 	addi	sp,sp,-1144
    2ca8:	00c10004 	movi	r3,1024
    2cac:	dc011a15 	stw	r16,1128(sp)
    2cb0:	10bfff4c 	andi	r2,r2,65533
    2cb4:	2821883a 	mov	r16,r5
    2cb8:	d8cb883a 	add	r5,sp,r3
    2cbc:	dc811c15 	stw	r18,1136(sp)
    2cc0:	dc411b15 	stw	r17,1132(sp)
    2cc4:	dfc11d15 	stw	ra,1140(sp)
    2cc8:	2025883a 	mov	r18,r4
    2ccc:	d881030d 	sth	r2,1036(sp)
    2cd0:	dac11915 	stw	r11,1124(sp)
    2cd4:	da81038d 	sth	r10,1038(sp)
    2cd8:	da410715 	stw	r9,1052(sp)
    2cdc:	da010915 	stw	r8,1060(sp)
    2ce0:	dec10015 	stw	sp,1024(sp)
    2ce4:	dec10415 	stw	sp,1040(sp)
    2ce8:	d8c10215 	stw	r3,1032(sp)
    2cec:	d8c10515 	stw	r3,1044(sp)
    2cf0:	d8010615 	stw	zero,1048(sp)
    2cf4:	0000a7c0 	call	a7c <___vfprintf_internal_r>
    2cf8:	1023883a 	mov	r17,r2
    2cfc:	10000416 	blt	r2,zero,2d10 <__sbprintf+0x80>
    2d00:	d9410004 	addi	r5,sp,1024
    2d04:	9009883a 	mov	r4,r18
    2d08:	00049440 	call	4944 <_fflush_r>
    2d0c:	10000d1e 	bne	r2,zero,2d44 <__sbprintf+0xb4>
    2d10:	d881030b 	ldhu	r2,1036(sp)
    2d14:	1080100c 	andi	r2,r2,64
    2d18:	10000326 	beq	r2,zero,2d28 <__sbprintf+0x98>
    2d1c:	8080030b 	ldhu	r2,12(r16)
    2d20:	10801014 	ori	r2,r2,64
    2d24:	8080030d 	sth	r2,12(r16)
    2d28:	8805883a 	mov	r2,r17
    2d2c:	dfc11d17 	ldw	ra,1140(sp)
    2d30:	dc811c17 	ldw	r18,1136(sp)
    2d34:	dc411b17 	ldw	r17,1132(sp)
    2d38:	dc011a17 	ldw	r16,1128(sp)
    2d3c:	dec11e04 	addi	sp,sp,1144
    2d40:	f800283a 	ret
    2d44:	047fffc4 	movi	r17,-1
    2d48:	003ff106 	br	2d10 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002d10>

00002d4c <__swsetup_r>:
    2d4c:	00800074 	movhi	r2,1
    2d50:	defffd04 	addi	sp,sp,-12
    2d54:	108e1004 	addi	r2,r2,14400
    2d58:	dc400115 	stw	r17,4(sp)
    2d5c:	2023883a 	mov	r17,r4
    2d60:	11000017 	ldw	r4,0(r2)
    2d64:	dc000015 	stw	r16,0(sp)
    2d68:	dfc00215 	stw	ra,8(sp)
    2d6c:	2821883a 	mov	r16,r5
    2d70:	20000226 	beq	r4,zero,2d7c <__swsetup_r+0x30>
    2d74:	20800e17 	ldw	r2,56(r4)
    2d78:	10003126 	beq	r2,zero,2e40 <__swsetup_r+0xf4>
    2d7c:	8080030b 	ldhu	r2,12(r16)
    2d80:	10c0020c 	andi	r3,r2,8
    2d84:	1009883a 	mov	r4,r2
    2d88:	18000f26 	beq	r3,zero,2dc8 <__swsetup_r+0x7c>
    2d8c:	80c00417 	ldw	r3,16(r16)
    2d90:	18001526 	beq	r3,zero,2de8 <__swsetup_r+0x9c>
    2d94:	1100004c 	andi	r4,r2,1
    2d98:	20001c1e 	bne	r4,zero,2e0c <__swsetup_r+0xc0>
    2d9c:	1080008c 	andi	r2,r2,2
    2da0:	1000291e 	bne	r2,zero,2e48 <__swsetup_r+0xfc>
    2da4:	80800517 	ldw	r2,20(r16)
    2da8:	80800215 	stw	r2,8(r16)
    2dac:	18001c26 	beq	r3,zero,2e20 <__swsetup_r+0xd4>
    2db0:	0005883a 	mov	r2,zero
    2db4:	dfc00217 	ldw	ra,8(sp)
    2db8:	dc400117 	ldw	r17,4(sp)
    2dbc:	dc000017 	ldw	r16,0(sp)
    2dc0:	dec00304 	addi	sp,sp,12
    2dc4:	f800283a 	ret
    2dc8:	2080040c 	andi	r2,r4,16
    2dcc:	10002e26 	beq	r2,zero,2e88 <__swsetup_r+0x13c>
    2dd0:	2080010c 	andi	r2,r4,4
    2dd4:	10001e1e 	bne	r2,zero,2e50 <__swsetup_r+0x104>
    2dd8:	80c00417 	ldw	r3,16(r16)
    2ddc:	20800214 	ori	r2,r4,8
    2de0:	8080030d 	sth	r2,12(r16)
    2de4:	183feb1e 	bne	r3,zero,2d94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002d94>
    2de8:	1100a00c 	andi	r4,r2,640
    2dec:	01408004 	movi	r5,512
    2df0:	217fe826 	beq	r4,r5,2d94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002d94>
    2df4:	800b883a 	mov	r5,r16
    2df8:	8809883a 	mov	r4,r17
    2dfc:	00054080 	call	5408 <__smakebuf_r>
    2e00:	8080030b 	ldhu	r2,12(r16)
    2e04:	80c00417 	ldw	r3,16(r16)
    2e08:	003fe206 	br	2d94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002d94>
    2e0c:	80800517 	ldw	r2,20(r16)
    2e10:	80000215 	stw	zero,8(r16)
    2e14:	0085c83a 	sub	r2,zero,r2
    2e18:	80800615 	stw	r2,24(r16)
    2e1c:	183fe41e 	bne	r3,zero,2db0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002db0>
    2e20:	80c0030b 	ldhu	r3,12(r16)
    2e24:	0005883a 	mov	r2,zero
    2e28:	1900200c 	andi	r4,r3,128
    2e2c:	203fe126 	beq	r4,zero,2db4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002db4>
    2e30:	18c01014 	ori	r3,r3,64
    2e34:	80c0030d 	sth	r3,12(r16)
    2e38:	00bfffc4 	movi	r2,-1
    2e3c:	003fdd06 	br	2db4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002db4>
    2e40:	0004d200 	call	4d20 <__sinit>
    2e44:	003fcd06 	br	2d7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002d7c>
    2e48:	0005883a 	mov	r2,zero
    2e4c:	003fd606 	br	2da8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002da8>
    2e50:	81400c17 	ldw	r5,48(r16)
    2e54:	28000626 	beq	r5,zero,2e70 <__swsetup_r+0x124>
    2e58:	80801004 	addi	r2,r16,64
    2e5c:	28800326 	beq	r5,r2,2e6c <__swsetup_r+0x120>
    2e60:	8809883a 	mov	r4,r17
    2e64:	0004e940 	call	4e94 <_free_r>
    2e68:	8100030b 	ldhu	r4,12(r16)
    2e6c:	80000c15 	stw	zero,48(r16)
    2e70:	80c00417 	ldw	r3,16(r16)
    2e74:	00bff6c4 	movi	r2,-37
    2e78:	1108703a 	and	r4,r2,r4
    2e7c:	80000115 	stw	zero,4(r16)
    2e80:	80c00015 	stw	r3,0(r16)
    2e84:	003fd506 	br	2ddc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002ddc>
    2e88:	00800244 	movi	r2,9
    2e8c:	88800015 	stw	r2,0(r17)
    2e90:	20801014 	ori	r2,r4,64
    2e94:	8080030d 	sth	r2,12(r16)
    2e98:	00bfffc4 	movi	r2,-1
    2e9c:	003fc506 	br	2db4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002db4>

00002ea0 <quorem>:
    2ea0:	defff704 	addi	sp,sp,-36
    2ea4:	dc800215 	stw	r18,8(sp)
    2ea8:	20800417 	ldw	r2,16(r4)
    2eac:	2c800417 	ldw	r18,16(r5)
    2eb0:	dfc00815 	stw	ra,32(sp)
    2eb4:	ddc00715 	stw	r23,28(sp)
    2eb8:	dd800615 	stw	r22,24(sp)
    2ebc:	dd400515 	stw	r21,20(sp)
    2ec0:	dd000415 	stw	r20,16(sp)
    2ec4:	dcc00315 	stw	r19,12(sp)
    2ec8:	dc400115 	stw	r17,4(sp)
    2ecc:	dc000015 	stw	r16,0(sp)
    2ed0:	14807116 	blt	r2,r18,3098 <quorem+0x1f8>
    2ed4:	94bfffc4 	addi	r18,r18,-1
    2ed8:	94ad883a 	add	r22,r18,r18
    2edc:	b5ad883a 	add	r22,r22,r22
    2ee0:	2c400504 	addi	r17,r5,20
    2ee4:	8da9883a 	add	r20,r17,r22
    2ee8:	25400504 	addi	r21,r4,20
    2eec:	282f883a 	mov	r23,r5
    2ef0:	adad883a 	add	r22,r21,r22
    2ef4:	a1400017 	ldw	r5,0(r20)
    2ef8:	2021883a 	mov	r16,r4
    2efc:	b1000017 	ldw	r4,0(r22)
    2f00:	29400044 	addi	r5,r5,1
    2f04:	000ab380 	call	ab38 <__udivsi3>
    2f08:	1027883a 	mov	r19,r2
    2f0c:	10002c26 	beq	r2,zero,2fc0 <quorem+0x120>
    2f10:	a813883a 	mov	r9,r21
    2f14:	880b883a 	mov	r5,r17
    2f18:	0009883a 	mov	r4,zero
    2f1c:	000d883a 	mov	r6,zero
    2f20:	2a000017 	ldw	r8,0(r5)
    2f24:	49c00017 	ldw	r7,0(r9)
    2f28:	29400104 	addi	r5,r5,4
    2f2c:	40bfffcc 	andi	r2,r8,65535
    2f30:	14c5383a 	mul	r2,r2,r19
    2f34:	4010d43a 	srli	r8,r8,16
    2f38:	38ffffcc 	andi	r3,r7,65535
    2f3c:	1105883a 	add	r2,r2,r4
    2f40:	1008d43a 	srli	r4,r2,16
    2f44:	44d1383a 	mul	r8,r8,r19
    2f48:	198d883a 	add	r6,r3,r6
    2f4c:	10ffffcc 	andi	r3,r2,65535
    2f50:	30c7c83a 	sub	r3,r6,r3
    2f54:	380ed43a 	srli	r7,r7,16
    2f58:	4105883a 	add	r2,r8,r4
    2f5c:	180dd43a 	srai	r6,r3,16
    2f60:	113fffcc 	andi	r4,r2,65535
    2f64:	390fc83a 	sub	r7,r7,r4
    2f68:	398d883a 	add	r6,r7,r6
    2f6c:	300e943a 	slli	r7,r6,16
    2f70:	18ffffcc 	andi	r3,r3,65535
    2f74:	1008d43a 	srli	r4,r2,16
    2f78:	38ceb03a 	or	r7,r7,r3
    2f7c:	49c00015 	stw	r7,0(r9)
    2f80:	300dd43a 	srai	r6,r6,16
    2f84:	4a400104 	addi	r9,r9,4
    2f88:	a17fe52e 	bgeu	r20,r5,2f20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002f20>
    2f8c:	b0800017 	ldw	r2,0(r22)
    2f90:	10000b1e 	bne	r2,zero,2fc0 <quorem+0x120>
    2f94:	b0bfff04 	addi	r2,r22,-4
    2f98:	a880082e 	bgeu	r21,r2,2fbc <quorem+0x11c>
    2f9c:	b0ffff17 	ldw	r3,-4(r22)
    2fa0:	18000326 	beq	r3,zero,2fb0 <quorem+0x110>
    2fa4:	00000506 	br	2fbc <quorem+0x11c>
    2fa8:	10c00017 	ldw	r3,0(r2)
    2fac:	1800031e 	bne	r3,zero,2fbc <quorem+0x11c>
    2fb0:	10bfff04 	addi	r2,r2,-4
    2fb4:	94bfffc4 	addi	r18,r18,-1
    2fb8:	a8bffb36 	bltu	r21,r2,2fa8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002fa8>
    2fbc:	84800415 	stw	r18,16(r16)
    2fc0:	b80b883a 	mov	r5,r23
    2fc4:	8009883a 	mov	r4,r16
    2fc8:	00069ec0 	call	69ec <__mcmp>
    2fcc:	10002616 	blt	r2,zero,3068 <quorem+0x1c8>
    2fd0:	9cc00044 	addi	r19,r19,1
    2fd4:	a805883a 	mov	r2,r21
    2fd8:	000b883a 	mov	r5,zero
    2fdc:	11000017 	ldw	r4,0(r2)
    2fe0:	89800017 	ldw	r6,0(r17)
    2fe4:	10800104 	addi	r2,r2,4
    2fe8:	20ffffcc 	andi	r3,r4,65535
    2fec:	194b883a 	add	r5,r3,r5
    2ff0:	30ffffcc 	andi	r3,r6,65535
    2ff4:	28c7c83a 	sub	r3,r5,r3
    2ff8:	300cd43a 	srli	r6,r6,16
    2ffc:	2008d43a 	srli	r4,r4,16
    3000:	180bd43a 	srai	r5,r3,16
    3004:	18ffffcc 	andi	r3,r3,65535
    3008:	2189c83a 	sub	r4,r4,r6
    300c:	2149883a 	add	r4,r4,r5
    3010:	200c943a 	slli	r6,r4,16
    3014:	8c400104 	addi	r17,r17,4
    3018:	200bd43a 	srai	r5,r4,16
    301c:	30c6b03a 	or	r3,r6,r3
    3020:	10ffff15 	stw	r3,-4(r2)
    3024:	a47fed2e 	bgeu	r20,r17,2fdc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7002fdc>
    3028:	9485883a 	add	r2,r18,r18
    302c:	1085883a 	add	r2,r2,r2
    3030:	a887883a 	add	r3,r21,r2
    3034:	18800017 	ldw	r2,0(r3)
    3038:	10000b1e 	bne	r2,zero,3068 <quorem+0x1c8>
    303c:	18bfff04 	addi	r2,r3,-4
    3040:	a880082e 	bgeu	r21,r2,3064 <quorem+0x1c4>
    3044:	18ffff17 	ldw	r3,-4(r3)
    3048:	18000326 	beq	r3,zero,3058 <quorem+0x1b8>
    304c:	00000506 	br	3064 <quorem+0x1c4>
    3050:	10c00017 	ldw	r3,0(r2)
    3054:	1800031e 	bne	r3,zero,3064 <quorem+0x1c4>
    3058:	10bfff04 	addi	r2,r2,-4
    305c:	94bfffc4 	addi	r18,r18,-1
    3060:	a8bffb36 	bltu	r21,r2,3050 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003050>
    3064:	84800415 	stw	r18,16(r16)
    3068:	9805883a 	mov	r2,r19
    306c:	dfc00817 	ldw	ra,32(sp)
    3070:	ddc00717 	ldw	r23,28(sp)
    3074:	dd800617 	ldw	r22,24(sp)
    3078:	dd400517 	ldw	r21,20(sp)
    307c:	dd000417 	ldw	r20,16(sp)
    3080:	dcc00317 	ldw	r19,12(sp)
    3084:	dc800217 	ldw	r18,8(sp)
    3088:	dc400117 	ldw	r17,4(sp)
    308c:	dc000017 	ldw	r16,0(sp)
    3090:	dec00904 	addi	sp,sp,36
    3094:	f800283a 	ret
    3098:	0005883a 	mov	r2,zero
    309c:	003ff306 	br	306c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700306c>

000030a0 <_dtoa_r>:
    30a0:	20801017 	ldw	r2,64(r4)
    30a4:	deffde04 	addi	sp,sp,-136
    30a8:	df002015 	stw	fp,128(sp)
    30ac:	dcc01b15 	stw	r19,108(sp)
    30b0:	dc801a15 	stw	r18,104(sp)
    30b4:	dc401915 	stw	r17,100(sp)
    30b8:	dc001815 	stw	r16,96(sp)
    30bc:	dfc02115 	stw	ra,132(sp)
    30c0:	ddc01f15 	stw	r23,124(sp)
    30c4:	dd801e15 	stw	r22,120(sp)
    30c8:	dd401d15 	stw	r21,116(sp)
    30cc:	dd001c15 	stw	r20,112(sp)
    30d0:	d9c00315 	stw	r7,12(sp)
    30d4:	2039883a 	mov	fp,r4
    30d8:	3023883a 	mov	r17,r6
    30dc:	2825883a 	mov	r18,r5
    30e0:	dc002417 	ldw	r16,144(sp)
    30e4:	3027883a 	mov	r19,r6
    30e8:	10000826 	beq	r2,zero,310c <_dtoa_r+0x6c>
    30ec:	21801117 	ldw	r6,68(r4)
    30f0:	00c00044 	movi	r3,1
    30f4:	100b883a 	mov	r5,r2
    30f8:	1986983a 	sll	r3,r3,r6
    30fc:	11800115 	stw	r6,4(r2)
    3100:	10c00215 	stw	r3,8(r2)
    3104:	00061cc0 	call	61cc <_Bfree>
    3108:	e0001015 	stw	zero,64(fp)
    310c:	88002e16 	blt	r17,zero,31c8 <_dtoa_r+0x128>
    3110:	80000015 	stw	zero,0(r16)
    3114:	889ffc2c 	andhi	r2,r17,32752
    3118:	00dffc34 	movhi	r3,32752
    311c:	10c01c26 	beq	r2,r3,3190 <_dtoa_r+0xf0>
    3120:	000d883a 	mov	r6,zero
    3124:	000f883a 	mov	r7,zero
    3128:	9009883a 	mov	r4,r18
    312c:	980b883a 	mov	r5,r19
    3130:	000bd880 	call	bd88 <__eqdf2>
    3134:	10002b1e 	bne	r2,zero,31e4 <_dtoa_r+0x144>
    3138:	d9c02317 	ldw	r7,140(sp)
    313c:	00800044 	movi	r2,1
    3140:	38800015 	stw	r2,0(r7)
    3144:	d8802517 	ldw	r2,148(sp)
    3148:	10019e26 	beq	r2,zero,37c4 <_dtoa_r+0x724>
    314c:	d8c02517 	ldw	r3,148(sp)
    3150:	00800074 	movhi	r2,1
    3154:	1085e044 	addi	r2,r2,6017
    3158:	18800015 	stw	r2,0(r3)
    315c:	10bfffc4 	addi	r2,r2,-1
    3160:	dfc02117 	ldw	ra,132(sp)
    3164:	df002017 	ldw	fp,128(sp)
    3168:	ddc01f17 	ldw	r23,124(sp)
    316c:	dd801e17 	ldw	r22,120(sp)
    3170:	dd401d17 	ldw	r21,116(sp)
    3174:	dd001c17 	ldw	r20,112(sp)
    3178:	dcc01b17 	ldw	r19,108(sp)
    317c:	dc801a17 	ldw	r18,104(sp)
    3180:	dc401917 	ldw	r17,100(sp)
    3184:	dc001817 	ldw	r16,96(sp)
    3188:	dec02204 	addi	sp,sp,136
    318c:	f800283a 	ret
    3190:	d8c02317 	ldw	r3,140(sp)
    3194:	0089c3c4 	movi	r2,9999
    3198:	18800015 	stw	r2,0(r3)
    319c:	90017726 	beq	r18,zero,377c <_dtoa_r+0x6dc>
    31a0:	00800074 	movhi	r2,1
    31a4:	1085ec04 	addi	r2,r2,6064
    31a8:	d9002517 	ldw	r4,148(sp)
    31ac:	203fec26 	beq	r4,zero,3160 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003160>
    31b0:	10c000c7 	ldb	r3,3(r2)
    31b4:	1801781e 	bne	r3,zero,3798 <_dtoa_r+0x6f8>
    31b8:	10c000c4 	addi	r3,r2,3
    31bc:	d9802517 	ldw	r6,148(sp)
    31c0:	30c00015 	stw	r3,0(r6)
    31c4:	003fe606 	br	3160 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003160>
    31c8:	04e00034 	movhi	r19,32768
    31cc:	9cffffc4 	addi	r19,r19,-1
    31d0:	00800044 	movi	r2,1
    31d4:	8ce6703a 	and	r19,r17,r19
    31d8:	80800015 	stw	r2,0(r16)
    31dc:	9823883a 	mov	r17,r19
    31e0:	003fcc06 	br	3114 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003114>
    31e4:	d8800204 	addi	r2,sp,8
    31e8:	d8800015 	stw	r2,0(sp)
    31ec:	d9c00104 	addi	r7,sp,4
    31f0:	900b883a 	mov	r5,r18
    31f4:	980d883a 	mov	r6,r19
    31f8:	e009883a 	mov	r4,fp
    31fc:	8820d53a 	srli	r16,r17,20
    3200:	0006db80 	call	6db8 <__d2b>
    3204:	d8800915 	stw	r2,36(sp)
    3208:	8001651e 	bne	r16,zero,37a0 <_dtoa_r+0x700>
    320c:	dd800217 	ldw	r22,8(sp)
    3210:	dc000117 	ldw	r16,4(sp)
    3214:	00800804 	movi	r2,32
    3218:	b421883a 	add	r16,r22,r16
    321c:	80c10c84 	addi	r3,r16,1074
    3220:	10c2d10e 	bge	r2,r3,3d68 <_dtoa_r+0xcc8>
    3224:	00801004 	movi	r2,64
    3228:	81010484 	addi	r4,r16,1042
    322c:	10c7c83a 	sub	r3,r2,r3
    3230:	9108d83a 	srl	r4,r18,r4
    3234:	88e2983a 	sll	r17,r17,r3
    3238:	2448b03a 	or	r4,r4,r17
    323c:	000d1500 	call	d150 <__floatunsidf>
    3240:	017f8434 	movhi	r5,65040
    3244:	01800044 	movi	r6,1
    3248:	1009883a 	mov	r4,r2
    324c:	194b883a 	add	r5,r3,r5
    3250:	843fffc4 	addi	r16,r16,-1
    3254:	d9801115 	stw	r6,68(sp)
    3258:	000d883a 	mov	r6,zero
    325c:	01cffe34 	movhi	r7,16376
    3260:	000c6f80 	call	c6f8 <__subdf3>
    3264:	0198dbf4 	movhi	r6,25455
    3268:	01cff4f4 	movhi	r7,16339
    326c:	3190d844 	addi	r6,r6,17249
    3270:	39e1e9c4 	addi	r7,r7,-30809
    3274:	1009883a 	mov	r4,r2
    3278:	180b883a 	mov	r5,r3
    327c:	000bfe00 	call	bfe0 <__muldf3>
    3280:	01a2d874 	movhi	r6,35681
    3284:	01cff1f4 	movhi	r7,16327
    3288:	31b22cc4 	addi	r6,r6,-14157
    328c:	39e28a04 	addi	r7,r7,-30168
    3290:	180b883a 	mov	r5,r3
    3294:	1009883a 	mov	r4,r2
    3298:	000abf40 	call	abf4 <__adddf3>
    329c:	8009883a 	mov	r4,r16
    32a0:	1029883a 	mov	r20,r2
    32a4:	1823883a 	mov	r17,r3
    32a8:	000d0740 	call	d074 <__floatsidf>
    32ac:	019427f4 	movhi	r6,20639
    32b0:	01cff4f4 	movhi	r7,16339
    32b4:	319e7ec4 	addi	r6,r6,31227
    32b8:	39d104c4 	addi	r7,r7,17427
    32bc:	1009883a 	mov	r4,r2
    32c0:	180b883a 	mov	r5,r3
    32c4:	000bfe00 	call	bfe0 <__muldf3>
    32c8:	100d883a 	mov	r6,r2
    32cc:	180f883a 	mov	r7,r3
    32d0:	a009883a 	mov	r4,r20
    32d4:	880b883a 	mov	r5,r17
    32d8:	000abf40 	call	abf4 <__adddf3>
    32dc:	1009883a 	mov	r4,r2
    32e0:	180b883a 	mov	r5,r3
    32e4:	1029883a 	mov	r20,r2
    32e8:	1823883a 	mov	r17,r3
    32ec:	000cff40 	call	cff4 <__fixdfsi>
    32f0:	000d883a 	mov	r6,zero
    32f4:	000f883a 	mov	r7,zero
    32f8:	a009883a 	mov	r4,r20
    32fc:	880b883a 	mov	r5,r17
    3300:	d8800515 	stw	r2,20(sp)
    3304:	000beec0 	call	beec <__ledf2>
    3308:	10028716 	blt	r2,zero,3d28 <_dtoa_r+0xc88>
    330c:	d8c00517 	ldw	r3,20(sp)
    3310:	00800584 	movi	r2,22
    3314:	10c27536 	bltu	r2,r3,3cec <_dtoa_r+0xc4c>
    3318:	180490fa 	slli	r2,r3,3
    331c:	00c00074 	movhi	r3,1
    3320:	18c60804 	addi	r3,r3,6176
    3324:	1885883a 	add	r2,r3,r2
    3328:	11000017 	ldw	r4,0(r2)
    332c:	11400117 	ldw	r5,4(r2)
    3330:	900d883a 	mov	r6,r18
    3334:	980f883a 	mov	r7,r19
    3338:	000be100 	call	be10 <__gedf2>
    333c:	00828d0e 	bge	zero,r2,3d74 <_dtoa_r+0xcd4>
    3340:	d9000517 	ldw	r4,20(sp)
    3344:	d8000e15 	stw	zero,56(sp)
    3348:	213fffc4 	addi	r4,r4,-1
    334c:	d9000515 	stw	r4,20(sp)
    3350:	b42dc83a 	sub	r22,r22,r16
    3354:	b5bfffc4 	addi	r22,r22,-1
    3358:	b0026f16 	blt	r22,zero,3d18 <_dtoa_r+0xc78>
    335c:	d8000815 	stw	zero,32(sp)
    3360:	d9c00517 	ldw	r7,20(sp)
    3364:	38026416 	blt	r7,zero,3cf8 <_dtoa_r+0xc58>
    3368:	b1ed883a 	add	r22,r22,r7
    336c:	d9c00d15 	stw	r7,52(sp)
    3370:	d8000a15 	stw	zero,40(sp)
    3374:	d9800317 	ldw	r6,12(sp)
    3378:	00800244 	movi	r2,9
    337c:	11811436 	bltu	r2,r6,37d0 <_dtoa_r+0x730>
    3380:	00800144 	movi	r2,5
    3384:	1184e10e 	bge	r2,r6,470c <_dtoa_r+0x166c>
    3388:	31bfff04 	addi	r6,r6,-4
    338c:	d9800315 	stw	r6,12(sp)
    3390:	0023883a 	mov	r17,zero
    3394:	d9800317 	ldw	r6,12(sp)
    3398:	008000c4 	movi	r2,3
    339c:	30836726 	beq	r6,r2,413c <_dtoa_r+0x109c>
    33a0:	1183410e 	bge	r2,r6,40a8 <_dtoa_r+0x1008>
    33a4:	d9c00317 	ldw	r7,12(sp)
    33a8:	00800104 	movi	r2,4
    33ac:	38827c26 	beq	r7,r2,3da0 <_dtoa_r+0xd00>
    33b0:	00800144 	movi	r2,5
    33b4:	3884c41e 	bne	r7,r2,46c8 <_dtoa_r+0x1628>
    33b8:	00800044 	movi	r2,1
    33bc:	d8800b15 	stw	r2,44(sp)
    33c0:	d8c00517 	ldw	r3,20(sp)
    33c4:	d9002217 	ldw	r4,136(sp)
    33c8:	1907883a 	add	r3,r3,r4
    33cc:	19800044 	addi	r6,r3,1
    33d0:	d8c00c15 	stw	r3,48(sp)
    33d4:	d9800615 	stw	r6,24(sp)
    33d8:	0183a40e 	bge	zero,r6,426c <_dtoa_r+0x11cc>
    33dc:	d9800617 	ldw	r6,24(sp)
    33e0:	3021883a 	mov	r16,r6
    33e4:	e0001115 	stw	zero,68(fp)
    33e8:	008005c4 	movi	r2,23
    33ec:	1184c92e 	bgeu	r2,r6,4714 <_dtoa_r+0x1674>
    33f0:	00c00044 	movi	r3,1
    33f4:	00800104 	movi	r2,4
    33f8:	1085883a 	add	r2,r2,r2
    33fc:	11000504 	addi	r4,r2,20
    3400:	180b883a 	mov	r5,r3
    3404:	18c00044 	addi	r3,r3,1
    3408:	313ffb2e 	bgeu	r6,r4,33f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70033f8>
    340c:	e1401115 	stw	r5,68(fp)
    3410:	e009883a 	mov	r4,fp
    3414:	00061240 	call	6124 <_Balloc>
    3418:	d8800715 	stw	r2,28(sp)
    341c:	e0801015 	stw	r2,64(fp)
    3420:	00800384 	movi	r2,14
    3424:	1400f736 	bltu	r2,r16,3804 <_dtoa_r+0x764>
    3428:	8800f626 	beq	r17,zero,3804 <_dtoa_r+0x764>
    342c:	d9c00517 	ldw	r7,20(sp)
    3430:	01c39a0e 	bge	zero,r7,429c <_dtoa_r+0x11fc>
    3434:	388003cc 	andi	r2,r7,15
    3438:	100490fa 	slli	r2,r2,3
    343c:	382bd13a 	srai	r21,r7,4
    3440:	00c00074 	movhi	r3,1
    3444:	18c60804 	addi	r3,r3,6176
    3448:	1885883a 	add	r2,r3,r2
    344c:	a8c0040c 	andi	r3,r21,16
    3450:	12400017 	ldw	r9,0(r2)
    3454:	12000117 	ldw	r8,4(r2)
    3458:	18037926 	beq	r3,zero,4240 <_dtoa_r+0x11a0>
    345c:	00800074 	movhi	r2,1
    3460:	1085fe04 	addi	r2,r2,6136
    3464:	11800817 	ldw	r6,32(r2)
    3468:	11c00917 	ldw	r7,36(r2)
    346c:	9009883a 	mov	r4,r18
    3470:	980b883a 	mov	r5,r19
    3474:	da001715 	stw	r8,92(sp)
    3478:	da401615 	stw	r9,88(sp)
    347c:	000b4a00 	call	b4a0 <__divdf3>
    3480:	da001717 	ldw	r8,92(sp)
    3484:	da401617 	ldw	r9,88(sp)
    3488:	ad4003cc 	andi	r21,r21,15
    348c:	040000c4 	movi	r16,3
    3490:	1023883a 	mov	r17,r2
    3494:	1829883a 	mov	r20,r3
    3498:	a8001126 	beq	r21,zero,34e0 <_dtoa_r+0x440>
    349c:	05c00074 	movhi	r23,1
    34a0:	bdc5fe04 	addi	r23,r23,6136
    34a4:	4805883a 	mov	r2,r9
    34a8:	4007883a 	mov	r3,r8
    34ac:	a980004c 	andi	r6,r21,1
    34b0:	1009883a 	mov	r4,r2
    34b4:	a82bd07a 	srai	r21,r21,1
    34b8:	180b883a 	mov	r5,r3
    34bc:	30000426 	beq	r6,zero,34d0 <_dtoa_r+0x430>
    34c0:	b9800017 	ldw	r6,0(r23)
    34c4:	b9c00117 	ldw	r7,4(r23)
    34c8:	84000044 	addi	r16,r16,1
    34cc:	000bfe00 	call	bfe0 <__muldf3>
    34d0:	bdc00204 	addi	r23,r23,8
    34d4:	a83ff51e 	bne	r21,zero,34ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70034ac>
    34d8:	1013883a 	mov	r9,r2
    34dc:	1811883a 	mov	r8,r3
    34e0:	480d883a 	mov	r6,r9
    34e4:	400f883a 	mov	r7,r8
    34e8:	8809883a 	mov	r4,r17
    34ec:	a00b883a 	mov	r5,r20
    34f0:	000b4a00 	call	b4a0 <__divdf3>
    34f4:	d8800f15 	stw	r2,60(sp)
    34f8:	d8c01015 	stw	r3,64(sp)
    34fc:	d8c00e17 	ldw	r3,56(sp)
    3500:	18000626 	beq	r3,zero,351c <_dtoa_r+0x47c>
    3504:	d9000f17 	ldw	r4,60(sp)
    3508:	d9401017 	ldw	r5,64(sp)
    350c:	000d883a 	mov	r6,zero
    3510:	01cffc34 	movhi	r7,16368
    3514:	000beec0 	call	beec <__ledf2>
    3518:	10040b16 	blt	r2,zero,4548 <_dtoa_r+0x14a8>
    351c:	8009883a 	mov	r4,r16
    3520:	000d0740 	call	d074 <__floatsidf>
    3524:	d9800f17 	ldw	r6,60(sp)
    3528:	d9c01017 	ldw	r7,64(sp)
    352c:	1009883a 	mov	r4,r2
    3530:	180b883a 	mov	r5,r3
    3534:	000bfe00 	call	bfe0 <__muldf3>
    3538:	000d883a 	mov	r6,zero
    353c:	01d00734 	movhi	r7,16412
    3540:	1009883a 	mov	r4,r2
    3544:	180b883a 	mov	r5,r3
    3548:	000abf40 	call	abf4 <__adddf3>
    354c:	1021883a 	mov	r16,r2
    3550:	d8800617 	ldw	r2,24(sp)
    3554:	047f3034 	movhi	r17,64704
    3558:	1c63883a 	add	r17,r3,r17
    355c:	10031826 	beq	r2,zero,41c0 <_dtoa_r+0x1120>
    3560:	d8c00517 	ldw	r3,20(sp)
    3564:	db000617 	ldw	r12,24(sp)
    3568:	d8c01315 	stw	r3,76(sp)
    356c:	d9000b17 	ldw	r4,44(sp)
    3570:	20038f26 	beq	r4,zero,43b0 <_dtoa_r+0x1310>
    3574:	60bfffc4 	addi	r2,r12,-1
    3578:	100490fa 	slli	r2,r2,3
    357c:	00c00074 	movhi	r3,1
    3580:	18c60804 	addi	r3,r3,6176
    3584:	1885883a 	add	r2,r3,r2
    3588:	11800017 	ldw	r6,0(r2)
    358c:	11c00117 	ldw	r7,4(r2)
    3590:	d8800717 	ldw	r2,28(sp)
    3594:	0009883a 	mov	r4,zero
    3598:	014ff834 	movhi	r5,16352
    359c:	db001615 	stw	r12,88(sp)
    35a0:	15c00044 	addi	r23,r2,1
    35a4:	000b4a00 	call	b4a0 <__divdf3>
    35a8:	800d883a 	mov	r6,r16
    35ac:	880f883a 	mov	r7,r17
    35b0:	1009883a 	mov	r4,r2
    35b4:	180b883a 	mov	r5,r3
    35b8:	000c6f80 	call	c6f8 <__subdf3>
    35bc:	d9401017 	ldw	r5,64(sp)
    35c0:	d9000f17 	ldw	r4,60(sp)
    35c4:	102b883a 	mov	r21,r2
    35c8:	d8c01215 	stw	r3,72(sp)
    35cc:	000cff40 	call	cff4 <__fixdfsi>
    35d0:	1009883a 	mov	r4,r2
    35d4:	1029883a 	mov	r20,r2
    35d8:	000d0740 	call	d074 <__floatsidf>
    35dc:	d9000f17 	ldw	r4,60(sp)
    35e0:	d9401017 	ldw	r5,64(sp)
    35e4:	100d883a 	mov	r6,r2
    35e8:	180f883a 	mov	r7,r3
    35ec:	000c6f80 	call	c6f8 <__subdf3>
    35f0:	1823883a 	mov	r17,r3
    35f4:	d8c00717 	ldw	r3,28(sp)
    35f8:	d9401217 	ldw	r5,72(sp)
    35fc:	a2000c04 	addi	r8,r20,48
    3600:	1021883a 	mov	r16,r2
    3604:	1a000005 	stb	r8,0(r3)
    3608:	800d883a 	mov	r6,r16
    360c:	880f883a 	mov	r7,r17
    3610:	a809883a 	mov	r4,r21
    3614:	4029883a 	mov	r20,r8
    3618:	000be100 	call	be10 <__gedf2>
    361c:	00841d16 	blt	zero,r2,4694 <_dtoa_r+0x15f4>
    3620:	800d883a 	mov	r6,r16
    3624:	880f883a 	mov	r7,r17
    3628:	0009883a 	mov	r4,zero
    362c:	014ffc34 	movhi	r5,16368
    3630:	000c6f80 	call	c6f8 <__subdf3>
    3634:	d9401217 	ldw	r5,72(sp)
    3638:	100d883a 	mov	r6,r2
    363c:	180f883a 	mov	r7,r3
    3640:	a809883a 	mov	r4,r21
    3644:	000be100 	call	be10 <__gedf2>
    3648:	db001617 	ldw	r12,88(sp)
    364c:	00840e16 	blt	zero,r2,4688 <_dtoa_r+0x15e8>
    3650:	00800044 	movi	r2,1
    3654:	13006b0e 	bge	r2,r12,3804 <_dtoa_r+0x764>
    3658:	d9000717 	ldw	r4,28(sp)
    365c:	dd800f15 	stw	r22,60(sp)
    3660:	dcc01015 	stw	r19,64(sp)
    3664:	2319883a 	add	r12,r4,r12
    3668:	dcc01217 	ldw	r19,72(sp)
    366c:	602d883a 	mov	r22,r12
    3670:	dc801215 	stw	r18,72(sp)
    3674:	b825883a 	mov	r18,r23
    3678:	00000906 	br	36a0 <_dtoa_r+0x600>
    367c:	000c6f80 	call	c6f8 <__subdf3>
    3680:	a80d883a 	mov	r6,r21
    3684:	980f883a 	mov	r7,r19
    3688:	1009883a 	mov	r4,r2
    368c:	180b883a 	mov	r5,r3
    3690:	000beec0 	call	beec <__ledf2>
    3694:	1003e816 	blt	r2,zero,4638 <_dtoa_r+0x1598>
    3698:	b825883a 	mov	r18,r23
    369c:	bd83e926 	beq	r23,r22,4644 <_dtoa_r+0x15a4>
    36a0:	a809883a 	mov	r4,r21
    36a4:	980b883a 	mov	r5,r19
    36a8:	000d883a 	mov	r6,zero
    36ac:	01d00934 	movhi	r7,16420
    36b0:	000bfe00 	call	bfe0 <__muldf3>
    36b4:	000d883a 	mov	r6,zero
    36b8:	01d00934 	movhi	r7,16420
    36bc:	8009883a 	mov	r4,r16
    36c0:	880b883a 	mov	r5,r17
    36c4:	102b883a 	mov	r21,r2
    36c8:	1827883a 	mov	r19,r3
    36cc:	000bfe00 	call	bfe0 <__muldf3>
    36d0:	180b883a 	mov	r5,r3
    36d4:	1009883a 	mov	r4,r2
    36d8:	1821883a 	mov	r16,r3
    36dc:	1023883a 	mov	r17,r2
    36e0:	000cff40 	call	cff4 <__fixdfsi>
    36e4:	1009883a 	mov	r4,r2
    36e8:	1029883a 	mov	r20,r2
    36ec:	000d0740 	call	d074 <__floatsidf>
    36f0:	8809883a 	mov	r4,r17
    36f4:	800b883a 	mov	r5,r16
    36f8:	100d883a 	mov	r6,r2
    36fc:	180f883a 	mov	r7,r3
    3700:	000c6f80 	call	c6f8 <__subdf3>
    3704:	a5000c04 	addi	r20,r20,48
    3708:	a80d883a 	mov	r6,r21
    370c:	980f883a 	mov	r7,r19
    3710:	1009883a 	mov	r4,r2
    3714:	180b883a 	mov	r5,r3
    3718:	95000005 	stb	r20,0(r18)
    371c:	1021883a 	mov	r16,r2
    3720:	1823883a 	mov	r17,r3
    3724:	000beec0 	call	beec <__ledf2>
    3728:	bdc00044 	addi	r23,r23,1
    372c:	800d883a 	mov	r6,r16
    3730:	880f883a 	mov	r7,r17
    3734:	0009883a 	mov	r4,zero
    3738:	014ffc34 	movhi	r5,16368
    373c:	103fcf0e 	bge	r2,zero,367c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700367c>
    3740:	d8c01317 	ldw	r3,76(sp)
    3744:	d8c00515 	stw	r3,20(sp)
    3748:	d9400917 	ldw	r5,36(sp)
    374c:	e009883a 	mov	r4,fp
    3750:	00061cc0 	call	61cc <_Bfree>
    3754:	d9000517 	ldw	r4,20(sp)
    3758:	d9802317 	ldw	r6,140(sp)
    375c:	d9c02517 	ldw	r7,148(sp)
    3760:	b8000005 	stb	zero,0(r23)
    3764:	20800044 	addi	r2,r4,1
    3768:	30800015 	stw	r2,0(r6)
    376c:	3802aa26 	beq	r7,zero,4218 <_dtoa_r+0x1178>
    3770:	3dc00015 	stw	r23,0(r7)
    3774:	d8800717 	ldw	r2,28(sp)
    3778:	003e7906 	br	3160 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003160>
    377c:	00800434 	movhi	r2,16
    3780:	10bfffc4 	addi	r2,r2,-1
    3784:	88a2703a 	and	r17,r17,r2
    3788:	883e851e 	bne	r17,zero,31a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70031a0>
    378c:	00800074 	movhi	r2,1
    3790:	1085e904 	addi	r2,r2,6052
    3794:	003e8406 	br	31a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70031a8>
    3798:	10c00204 	addi	r3,r2,8
    379c:	003e8706 	br	31bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70031bc>
    37a0:	01400434 	movhi	r5,16
    37a4:	297fffc4 	addi	r5,r5,-1
    37a8:	994a703a 	and	r5,r19,r5
    37ac:	9009883a 	mov	r4,r18
    37b0:	843f0044 	addi	r16,r16,-1023
    37b4:	294ffc34 	orhi	r5,r5,16368
    37b8:	dd800217 	ldw	r22,8(sp)
    37bc:	d8001115 	stw	zero,68(sp)
    37c0:	003ea506 	br	3258 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003258>
    37c4:	00800074 	movhi	r2,1
    37c8:	1085e004 	addi	r2,r2,6016
    37cc:	003e6406 	br	3160 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003160>
    37d0:	e0001115 	stw	zero,68(fp)
    37d4:	000b883a 	mov	r5,zero
    37d8:	e009883a 	mov	r4,fp
    37dc:	00061240 	call	6124 <_Balloc>
    37e0:	01bfffc4 	movi	r6,-1
    37e4:	01c00044 	movi	r7,1
    37e8:	d8800715 	stw	r2,28(sp)
    37ec:	d9800c15 	stw	r6,48(sp)
    37f0:	e0801015 	stw	r2,64(fp)
    37f4:	d8000315 	stw	zero,12(sp)
    37f8:	d9c00b15 	stw	r7,44(sp)
    37fc:	d9800615 	stw	r6,24(sp)
    3800:	d8002215 	stw	zero,136(sp)
    3804:	d8800117 	ldw	r2,4(sp)
    3808:	10008916 	blt	r2,zero,3a30 <_dtoa_r+0x990>
    380c:	d9000517 	ldw	r4,20(sp)
    3810:	00c00384 	movi	r3,14
    3814:	19008616 	blt	r3,r4,3a30 <_dtoa_r+0x990>
    3818:	200490fa 	slli	r2,r4,3
    381c:	00c00074 	movhi	r3,1
    3820:	d9802217 	ldw	r6,136(sp)
    3824:	18c60804 	addi	r3,r3,6176
    3828:	1885883a 	add	r2,r3,r2
    382c:	14000017 	ldw	r16,0(r2)
    3830:	14400117 	ldw	r17,4(r2)
    3834:	30016316 	blt	r6,zero,3dc4 <_dtoa_r+0xd24>
    3838:	800d883a 	mov	r6,r16
    383c:	880f883a 	mov	r7,r17
    3840:	9009883a 	mov	r4,r18
    3844:	980b883a 	mov	r5,r19
    3848:	000b4a00 	call	b4a0 <__divdf3>
    384c:	180b883a 	mov	r5,r3
    3850:	1009883a 	mov	r4,r2
    3854:	000cff40 	call	cff4 <__fixdfsi>
    3858:	1009883a 	mov	r4,r2
    385c:	102b883a 	mov	r21,r2
    3860:	000d0740 	call	d074 <__floatsidf>
    3864:	800d883a 	mov	r6,r16
    3868:	880f883a 	mov	r7,r17
    386c:	1009883a 	mov	r4,r2
    3870:	180b883a 	mov	r5,r3
    3874:	000bfe00 	call	bfe0 <__muldf3>
    3878:	100d883a 	mov	r6,r2
    387c:	180f883a 	mov	r7,r3
    3880:	9009883a 	mov	r4,r18
    3884:	980b883a 	mov	r5,r19
    3888:	000c6f80 	call	c6f8 <__subdf3>
    388c:	d9c00717 	ldw	r7,28(sp)
    3890:	1009883a 	mov	r4,r2
    3894:	a8800c04 	addi	r2,r21,48
    3898:	38800005 	stb	r2,0(r7)
    389c:	3dc00044 	addi	r23,r7,1
    38a0:	d9c00617 	ldw	r7,24(sp)
    38a4:	01800044 	movi	r6,1
    38a8:	180b883a 	mov	r5,r3
    38ac:	2005883a 	mov	r2,r4
    38b0:	39803826 	beq	r7,r6,3994 <_dtoa_r+0x8f4>
    38b4:	000d883a 	mov	r6,zero
    38b8:	01d00934 	movhi	r7,16420
    38bc:	000bfe00 	call	bfe0 <__muldf3>
    38c0:	000d883a 	mov	r6,zero
    38c4:	000f883a 	mov	r7,zero
    38c8:	1009883a 	mov	r4,r2
    38cc:	180b883a 	mov	r5,r3
    38d0:	1025883a 	mov	r18,r2
    38d4:	1827883a 	mov	r19,r3
    38d8:	000bd880 	call	bd88 <__eqdf2>
    38dc:	103f9a26 	beq	r2,zero,3748 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003748>
    38e0:	d9c00617 	ldw	r7,24(sp)
    38e4:	d8c00717 	ldw	r3,28(sp)
    38e8:	b829883a 	mov	r20,r23
    38ec:	38bfffc4 	addi	r2,r7,-1
    38f0:	18ad883a 	add	r22,r3,r2
    38f4:	00000a06 	br	3920 <_dtoa_r+0x880>
    38f8:	000bfe00 	call	bfe0 <__muldf3>
    38fc:	000d883a 	mov	r6,zero
    3900:	000f883a 	mov	r7,zero
    3904:	1009883a 	mov	r4,r2
    3908:	180b883a 	mov	r5,r3
    390c:	1025883a 	mov	r18,r2
    3910:	1827883a 	mov	r19,r3
    3914:	b829883a 	mov	r20,r23
    3918:	000bd880 	call	bd88 <__eqdf2>
    391c:	103f8a26 	beq	r2,zero,3748 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003748>
    3920:	800d883a 	mov	r6,r16
    3924:	880f883a 	mov	r7,r17
    3928:	9009883a 	mov	r4,r18
    392c:	980b883a 	mov	r5,r19
    3930:	000b4a00 	call	b4a0 <__divdf3>
    3934:	180b883a 	mov	r5,r3
    3938:	1009883a 	mov	r4,r2
    393c:	000cff40 	call	cff4 <__fixdfsi>
    3940:	1009883a 	mov	r4,r2
    3944:	102b883a 	mov	r21,r2
    3948:	000d0740 	call	d074 <__floatsidf>
    394c:	800d883a 	mov	r6,r16
    3950:	880f883a 	mov	r7,r17
    3954:	1009883a 	mov	r4,r2
    3958:	180b883a 	mov	r5,r3
    395c:	000bfe00 	call	bfe0 <__muldf3>
    3960:	100d883a 	mov	r6,r2
    3964:	180f883a 	mov	r7,r3
    3968:	9009883a 	mov	r4,r18
    396c:	980b883a 	mov	r5,r19
    3970:	000c6f80 	call	c6f8 <__subdf3>
    3974:	aa000c04 	addi	r8,r21,48
    3978:	a2000005 	stb	r8,0(r20)
    397c:	000d883a 	mov	r6,zero
    3980:	01d00934 	movhi	r7,16420
    3984:	1009883a 	mov	r4,r2
    3988:	180b883a 	mov	r5,r3
    398c:	a5c00044 	addi	r23,r20,1
    3990:	b53fd91e 	bne	r22,r20,38f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70038f8>
    3994:	100d883a 	mov	r6,r2
    3998:	180f883a 	mov	r7,r3
    399c:	1009883a 	mov	r4,r2
    39a0:	180b883a 	mov	r5,r3
    39a4:	000abf40 	call	abf4 <__adddf3>
    39a8:	100d883a 	mov	r6,r2
    39ac:	180f883a 	mov	r7,r3
    39b0:	8009883a 	mov	r4,r16
    39b4:	880b883a 	mov	r5,r17
    39b8:	1027883a 	mov	r19,r2
    39bc:	1825883a 	mov	r18,r3
    39c0:	000beec0 	call	beec <__ledf2>
    39c4:	10000816 	blt	r2,zero,39e8 <_dtoa_r+0x948>
    39c8:	980d883a 	mov	r6,r19
    39cc:	900f883a 	mov	r7,r18
    39d0:	8009883a 	mov	r4,r16
    39d4:	880b883a 	mov	r5,r17
    39d8:	000bd880 	call	bd88 <__eqdf2>
    39dc:	103f5a1e 	bne	r2,zero,3748 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003748>
    39e0:	ad40004c 	andi	r21,r21,1
    39e4:	a83f5826 	beq	r21,zero,3748 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003748>
    39e8:	bd3fffc3 	ldbu	r20,-1(r23)
    39ec:	b8bfffc4 	addi	r2,r23,-1
    39f0:	1007883a 	mov	r3,r2
    39f4:	01400e44 	movi	r5,57
    39f8:	d9800717 	ldw	r6,28(sp)
    39fc:	00000506 	br	3a14 <_dtoa_r+0x974>
    3a00:	18ffffc4 	addi	r3,r3,-1
    3a04:	11824726 	beq	r2,r6,4324 <_dtoa_r+0x1284>
    3a08:	1d000003 	ldbu	r20,0(r3)
    3a0c:	102f883a 	mov	r23,r2
    3a10:	10bfffc4 	addi	r2,r2,-1
    3a14:	a1003fcc 	andi	r4,r20,255
    3a18:	2100201c 	xori	r4,r4,128
    3a1c:	213fe004 	addi	r4,r4,-128
    3a20:	217ff726 	beq	r4,r5,3a00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a00>
    3a24:	a2000044 	addi	r8,r20,1
    3a28:	12000005 	stb	r8,0(r2)
    3a2c:	003f4606 	br	3748 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003748>
    3a30:	d9000b17 	ldw	r4,44(sp)
    3a34:	2000c826 	beq	r4,zero,3d58 <_dtoa_r+0xcb8>
    3a38:	d9800317 	ldw	r6,12(sp)
    3a3c:	00c00044 	movi	r3,1
    3a40:	1980f90e 	bge	r3,r6,3e28 <_dtoa_r+0xd88>
    3a44:	d8800617 	ldw	r2,24(sp)
    3a48:	d8c00a17 	ldw	r3,40(sp)
    3a4c:	157fffc4 	addi	r21,r2,-1
    3a50:	1d41f316 	blt	r3,r21,4220 <_dtoa_r+0x1180>
    3a54:	1d6bc83a 	sub	r21,r3,r21
    3a58:	d9c00617 	ldw	r7,24(sp)
    3a5c:	3802aa16 	blt	r7,zero,4508 <_dtoa_r+0x1468>
    3a60:	dd000817 	ldw	r20,32(sp)
    3a64:	d8800617 	ldw	r2,24(sp)
    3a68:	d8c00817 	ldw	r3,32(sp)
    3a6c:	01400044 	movi	r5,1
    3a70:	e009883a 	mov	r4,fp
    3a74:	1887883a 	add	r3,r3,r2
    3a78:	d8c00815 	stw	r3,32(sp)
    3a7c:	b0ad883a 	add	r22,r22,r2
    3a80:	00065300 	call	6530 <__i2b>
    3a84:	1023883a 	mov	r17,r2
    3a88:	a0000826 	beq	r20,zero,3aac <_dtoa_r+0xa0c>
    3a8c:	0580070e 	bge	zero,r22,3aac <_dtoa_r+0xa0c>
    3a90:	a005883a 	mov	r2,r20
    3a94:	b500b916 	blt	r22,r20,3d7c <_dtoa_r+0xcdc>
    3a98:	d9000817 	ldw	r4,32(sp)
    3a9c:	a0a9c83a 	sub	r20,r20,r2
    3aa0:	b0adc83a 	sub	r22,r22,r2
    3aa4:	2089c83a 	sub	r4,r4,r2
    3aa8:	d9000815 	stw	r4,32(sp)
    3aac:	d9800a17 	ldw	r6,40(sp)
    3ab0:	0181810e 	bge	zero,r6,40b8 <_dtoa_r+0x1018>
    3ab4:	d9c00b17 	ldw	r7,44(sp)
    3ab8:	3800b326 	beq	r7,zero,3d88 <_dtoa_r+0xce8>
    3abc:	a800b226 	beq	r21,zero,3d88 <_dtoa_r+0xce8>
    3ac0:	880b883a 	mov	r5,r17
    3ac4:	a80d883a 	mov	r6,r21
    3ac8:	e009883a 	mov	r4,fp
    3acc:	00067640 	call	6764 <__pow5mult>
    3ad0:	d9800917 	ldw	r6,36(sp)
    3ad4:	100b883a 	mov	r5,r2
    3ad8:	e009883a 	mov	r4,fp
    3adc:	1023883a 	mov	r17,r2
    3ae0:	000656c0 	call	656c <__multiply>
    3ae4:	1021883a 	mov	r16,r2
    3ae8:	d8800a17 	ldw	r2,40(sp)
    3aec:	d9400917 	ldw	r5,36(sp)
    3af0:	e009883a 	mov	r4,fp
    3af4:	1545c83a 	sub	r2,r2,r21
    3af8:	d8800a15 	stw	r2,40(sp)
    3afc:	00061cc0 	call	61cc <_Bfree>
    3b00:	d8c00a17 	ldw	r3,40(sp)
    3b04:	18009f1e 	bne	r3,zero,3d84 <_dtoa_r+0xce4>
    3b08:	05c00044 	movi	r23,1
    3b0c:	e009883a 	mov	r4,fp
    3b10:	b80b883a 	mov	r5,r23
    3b14:	00065300 	call	6530 <__i2b>
    3b18:	d9000d17 	ldw	r4,52(sp)
    3b1c:	102b883a 	mov	r21,r2
    3b20:	2000ce26 	beq	r4,zero,3e5c <_dtoa_r+0xdbc>
    3b24:	200d883a 	mov	r6,r4
    3b28:	100b883a 	mov	r5,r2
    3b2c:	e009883a 	mov	r4,fp
    3b30:	00067640 	call	6764 <__pow5mult>
    3b34:	d9800317 	ldw	r6,12(sp)
    3b38:	102b883a 	mov	r21,r2
    3b3c:	b981810e 	bge	r23,r6,4144 <_dtoa_r+0x10a4>
    3b40:	0027883a 	mov	r19,zero
    3b44:	a8800417 	ldw	r2,16(r21)
    3b48:	05c00804 	movi	r23,32
    3b4c:	10800104 	addi	r2,r2,4
    3b50:	1085883a 	add	r2,r2,r2
    3b54:	1085883a 	add	r2,r2,r2
    3b58:	a885883a 	add	r2,r21,r2
    3b5c:	11000017 	ldw	r4,0(r2)
    3b60:	00064180 	call	6418 <__hi0bits>
    3b64:	b885c83a 	sub	r2,r23,r2
    3b68:	1585883a 	add	r2,r2,r22
    3b6c:	108007cc 	andi	r2,r2,31
    3b70:	1000b326 	beq	r2,zero,3e40 <_dtoa_r+0xda0>
    3b74:	00c00804 	movi	r3,32
    3b78:	1887c83a 	sub	r3,r3,r2
    3b7c:	01000104 	movi	r4,4
    3b80:	20c2cd0e 	bge	r4,r3,46b8 <_dtoa_r+0x1618>
    3b84:	00c00704 	movi	r3,28
    3b88:	1885c83a 	sub	r2,r3,r2
    3b8c:	d8c00817 	ldw	r3,32(sp)
    3b90:	a0a9883a 	add	r20,r20,r2
    3b94:	b0ad883a 	add	r22,r22,r2
    3b98:	1887883a 	add	r3,r3,r2
    3b9c:	d8c00815 	stw	r3,32(sp)
    3ba0:	d9800817 	ldw	r6,32(sp)
    3ba4:	0180040e 	bge	zero,r6,3bb8 <_dtoa_r+0xb18>
    3ba8:	800b883a 	mov	r5,r16
    3bac:	e009883a 	mov	r4,fp
    3bb0:	00068a40 	call	68a4 <__lshift>
    3bb4:	1021883a 	mov	r16,r2
    3bb8:	0580050e 	bge	zero,r22,3bd0 <_dtoa_r+0xb30>
    3bbc:	a80b883a 	mov	r5,r21
    3bc0:	b00d883a 	mov	r6,r22
    3bc4:	e009883a 	mov	r4,fp
    3bc8:	00068a40 	call	68a4 <__lshift>
    3bcc:	102b883a 	mov	r21,r2
    3bd0:	d9c00e17 	ldw	r7,56(sp)
    3bd4:	3801211e 	bne	r7,zero,405c <_dtoa_r+0xfbc>
    3bd8:	d9800617 	ldw	r6,24(sp)
    3bdc:	0181380e 	bge	zero,r6,40c0 <_dtoa_r+0x1020>
    3be0:	d8c00b17 	ldw	r3,44(sp)
    3be4:	1800ab1e 	bne	r3,zero,3e94 <_dtoa_r+0xdf4>
    3be8:	dc800717 	ldw	r18,28(sp)
    3bec:	dcc00617 	ldw	r19,24(sp)
    3bf0:	9029883a 	mov	r20,r18
    3bf4:	00000206 	br	3c00 <_dtoa_r+0xb60>
    3bf8:	00061f40 	call	61f4 <__multadd>
    3bfc:	1021883a 	mov	r16,r2
    3c00:	a80b883a 	mov	r5,r21
    3c04:	8009883a 	mov	r4,r16
    3c08:	0002ea00 	call	2ea0 <quorem>
    3c0c:	10800c04 	addi	r2,r2,48
    3c10:	90800005 	stb	r2,0(r18)
    3c14:	94800044 	addi	r18,r18,1
    3c18:	9507c83a 	sub	r3,r18,r20
    3c1c:	000f883a 	mov	r7,zero
    3c20:	01800284 	movi	r6,10
    3c24:	800b883a 	mov	r5,r16
    3c28:	e009883a 	mov	r4,fp
    3c2c:	1cfff216 	blt	r3,r19,3bf8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003bf8>
    3c30:	1011883a 	mov	r8,r2
    3c34:	d8800617 	ldw	r2,24(sp)
    3c38:	0082370e 	bge	zero,r2,4518 <_dtoa_r+0x1478>
    3c3c:	d9000717 	ldw	r4,28(sp)
    3c40:	0025883a 	mov	r18,zero
    3c44:	20af883a 	add	r23,r4,r2
    3c48:	01800044 	movi	r6,1
    3c4c:	800b883a 	mov	r5,r16
    3c50:	e009883a 	mov	r4,fp
    3c54:	da001715 	stw	r8,92(sp)
    3c58:	00068a40 	call	68a4 <__lshift>
    3c5c:	a80b883a 	mov	r5,r21
    3c60:	1009883a 	mov	r4,r2
    3c64:	d8800915 	stw	r2,36(sp)
    3c68:	00069ec0 	call	69ec <__mcmp>
    3c6c:	da001717 	ldw	r8,92(sp)
    3c70:	0081800e 	bge	zero,r2,4274 <_dtoa_r+0x11d4>
    3c74:	b93fffc3 	ldbu	r4,-1(r23)
    3c78:	b8bfffc4 	addi	r2,r23,-1
    3c7c:	1007883a 	mov	r3,r2
    3c80:	01800e44 	movi	r6,57
    3c84:	d9c00717 	ldw	r7,28(sp)
    3c88:	00000506 	br	3ca0 <_dtoa_r+0xc00>
    3c8c:	18ffffc4 	addi	r3,r3,-1
    3c90:	11c12326 	beq	r2,r7,4120 <_dtoa_r+0x1080>
    3c94:	19000003 	ldbu	r4,0(r3)
    3c98:	102f883a 	mov	r23,r2
    3c9c:	10bfffc4 	addi	r2,r2,-1
    3ca0:	21403fcc 	andi	r5,r4,255
    3ca4:	2940201c 	xori	r5,r5,128
    3ca8:	297fe004 	addi	r5,r5,-128
    3cac:	29bff726 	beq	r5,r6,3c8c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003c8c>
    3cb0:	21000044 	addi	r4,r4,1
    3cb4:	11000005 	stb	r4,0(r2)
    3cb8:	a80b883a 	mov	r5,r21
    3cbc:	e009883a 	mov	r4,fp
    3cc0:	00061cc0 	call	61cc <_Bfree>
    3cc4:	883ea026 	beq	r17,zero,3748 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003748>
    3cc8:	90000426 	beq	r18,zero,3cdc <_dtoa_r+0xc3c>
    3ccc:	94400326 	beq	r18,r17,3cdc <_dtoa_r+0xc3c>
    3cd0:	900b883a 	mov	r5,r18
    3cd4:	e009883a 	mov	r4,fp
    3cd8:	00061cc0 	call	61cc <_Bfree>
    3cdc:	880b883a 	mov	r5,r17
    3ce0:	e009883a 	mov	r4,fp
    3ce4:	00061cc0 	call	61cc <_Bfree>
    3ce8:	003e9706 	br	3748 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003748>
    3cec:	01800044 	movi	r6,1
    3cf0:	d9800e15 	stw	r6,56(sp)
    3cf4:	003d9606 	br	3350 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003350>
    3cf8:	d8800817 	ldw	r2,32(sp)
    3cfc:	d8c00517 	ldw	r3,20(sp)
    3d00:	d8000d15 	stw	zero,52(sp)
    3d04:	10c5c83a 	sub	r2,r2,r3
    3d08:	00c9c83a 	sub	r4,zero,r3
    3d0c:	d8800815 	stw	r2,32(sp)
    3d10:	d9000a15 	stw	r4,40(sp)
    3d14:	003d9706 	br	3374 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003374>
    3d18:	05adc83a 	sub	r22,zero,r22
    3d1c:	dd800815 	stw	r22,32(sp)
    3d20:	002d883a 	mov	r22,zero
    3d24:	003d8e06 	br	3360 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003360>
    3d28:	d9000517 	ldw	r4,20(sp)
    3d2c:	000d0740 	call	d074 <__floatsidf>
    3d30:	100d883a 	mov	r6,r2
    3d34:	180f883a 	mov	r7,r3
    3d38:	a009883a 	mov	r4,r20
    3d3c:	880b883a 	mov	r5,r17
    3d40:	000bd880 	call	bd88 <__eqdf2>
    3d44:	103d7126 	beq	r2,zero,330c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700330c>
    3d48:	d9c00517 	ldw	r7,20(sp)
    3d4c:	39ffffc4 	addi	r7,r7,-1
    3d50:	d9c00515 	stw	r7,20(sp)
    3d54:	003d6d06 	br	330c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700330c>
    3d58:	dd400a17 	ldw	r21,40(sp)
    3d5c:	dd000817 	ldw	r20,32(sp)
    3d60:	0023883a 	mov	r17,zero
    3d64:	003f4806 	br	3a88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a88>
    3d68:	10e3c83a 	sub	r17,r2,r3
    3d6c:	9448983a 	sll	r4,r18,r17
    3d70:	003d3206 	br	323c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700323c>
    3d74:	d8000e15 	stw	zero,56(sp)
    3d78:	003d7506 	br	3350 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003350>
    3d7c:	b005883a 	mov	r2,r22
    3d80:	003f4506 	br	3a98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a98>
    3d84:	dc000915 	stw	r16,36(sp)
    3d88:	d9800a17 	ldw	r6,40(sp)
    3d8c:	d9400917 	ldw	r5,36(sp)
    3d90:	e009883a 	mov	r4,fp
    3d94:	00067640 	call	6764 <__pow5mult>
    3d98:	1021883a 	mov	r16,r2
    3d9c:	003f5a06 	br	3b08 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003b08>
    3da0:	01c00044 	movi	r7,1
    3da4:	d9c00b15 	stw	r7,44(sp)
    3da8:	d8802217 	ldw	r2,136(sp)
    3dac:	0081280e 	bge	zero,r2,4250 <_dtoa_r+0x11b0>
    3db0:	100d883a 	mov	r6,r2
    3db4:	1021883a 	mov	r16,r2
    3db8:	d8800c15 	stw	r2,48(sp)
    3dbc:	d8800615 	stw	r2,24(sp)
    3dc0:	003d8806 	br	33e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70033e4>
    3dc4:	d8800617 	ldw	r2,24(sp)
    3dc8:	00be9b16 	blt	zero,r2,3838 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003838>
    3dcc:	10010f1e 	bne	r2,zero,420c <_dtoa_r+0x116c>
    3dd0:	880b883a 	mov	r5,r17
    3dd4:	000d883a 	mov	r6,zero
    3dd8:	01d00534 	movhi	r7,16404
    3ddc:	8009883a 	mov	r4,r16
    3de0:	000bfe00 	call	bfe0 <__muldf3>
    3de4:	900d883a 	mov	r6,r18
    3de8:	980f883a 	mov	r7,r19
    3dec:	1009883a 	mov	r4,r2
    3df0:	180b883a 	mov	r5,r3
    3df4:	000be100 	call	be10 <__gedf2>
    3df8:	002b883a 	mov	r21,zero
    3dfc:	0023883a 	mov	r17,zero
    3e00:	1000bf16 	blt	r2,zero,4100 <_dtoa_r+0x1060>
    3e04:	d9802217 	ldw	r6,136(sp)
    3e08:	ddc00717 	ldw	r23,28(sp)
    3e0c:	018c303a 	nor	r6,zero,r6
    3e10:	d9800515 	stw	r6,20(sp)
    3e14:	a80b883a 	mov	r5,r21
    3e18:	e009883a 	mov	r4,fp
    3e1c:	00061cc0 	call	61cc <_Bfree>
    3e20:	883e4926 	beq	r17,zero,3748 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003748>
    3e24:	003fad06 	br	3cdc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003cdc>
    3e28:	d9c01117 	ldw	r7,68(sp)
    3e2c:	3801bc26 	beq	r7,zero,4520 <_dtoa_r+0x1480>
    3e30:	10810cc4 	addi	r2,r2,1075
    3e34:	dd400a17 	ldw	r21,40(sp)
    3e38:	dd000817 	ldw	r20,32(sp)
    3e3c:	003f0a06 	br	3a68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a68>
    3e40:	00800704 	movi	r2,28
    3e44:	d9000817 	ldw	r4,32(sp)
    3e48:	a0a9883a 	add	r20,r20,r2
    3e4c:	b0ad883a 	add	r22,r22,r2
    3e50:	2089883a 	add	r4,r4,r2
    3e54:	d9000815 	stw	r4,32(sp)
    3e58:	003f5106 	br	3ba0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003ba0>
    3e5c:	d8c00317 	ldw	r3,12(sp)
    3e60:	b8c1fc0e 	bge	r23,r3,4654 <_dtoa_r+0x15b4>
    3e64:	0027883a 	mov	r19,zero
    3e68:	b805883a 	mov	r2,r23
    3e6c:	003f3e06 	br	3b68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003b68>
    3e70:	880b883a 	mov	r5,r17
    3e74:	e009883a 	mov	r4,fp
    3e78:	000f883a 	mov	r7,zero
    3e7c:	01800284 	movi	r6,10
    3e80:	00061f40 	call	61f4 <__multadd>
    3e84:	d9000c17 	ldw	r4,48(sp)
    3e88:	1023883a 	mov	r17,r2
    3e8c:	0102040e 	bge	zero,r4,46a0 <_dtoa_r+0x1600>
    3e90:	d9000615 	stw	r4,24(sp)
    3e94:	0500050e 	bge	zero,r20,3eac <_dtoa_r+0xe0c>
    3e98:	880b883a 	mov	r5,r17
    3e9c:	a00d883a 	mov	r6,r20
    3ea0:	e009883a 	mov	r4,fp
    3ea4:	00068a40 	call	68a4 <__lshift>
    3ea8:	1023883a 	mov	r17,r2
    3eac:	9801241e 	bne	r19,zero,4340 <_dtoa_r+0x12a0>
    3eb0:	8829883a 	mov	r20,r17
    3eb4:	d9000617 	ldw	r4,24(sp)
    3eb8:	dcc00717 	ldw	r19,28(sp)
    3ebc:	9480004c 	andi	r18,r18,1
    3ec0:	20bfffc4 	addi	r2,r4,-1
    3ec4:	9885883a 	add	r2,r19,r2
    3ec8:	d8800415 	stw	r2,16(sp)
    3ecc:	dc800615 	stw	r18,24(sp)
    3ed0:	a80b883a 	mov	r5,r21
    3ed4:	8009883a 	mov	r4,r16
    3ed8:	0002ea00 	call	2ea0 <quorem>
    3edc:	880b883a 	mov	r5,r17
    3ee0:	8009883a 	mov	r4,r16
    3ee4:	102f883a 	mov	r23,r2
    3ee8:	00069ec0 	call	69ec <__mcmp>
    3eec:	a80b883a 	mov	r5,r21
    3ef0:	a00d883a 	mov	r6,r20
    3ef4:	e009883a 	mov	r4,fp
    3ef8:	102d883a 	mov	r22,r2
    3efc:	0006a4c0 	call	6a4c <__mdiff>
    3f00:	1007883a 	mov	r3,r2
    3f04:	10800317 	ldw	r2,12(r2)
    3f08:	bc800c04 	addi	r18,r23,48
    3f0c:	180b883a 	mov	r5,r3
    3f10:	10004e1e 	bne	r2,zero,404c <_dtoa_r+0xfac>
    3f14:	8009883a 	mov	r4,r16
    3f18:	d8c01615 	stw	r3,88(sp)
    3f1c:	00069ec0 	call	69ec <__mcmp>
    3f20:	d8c01617 	ldw	r3,88(sp)
    3f24:	e009883a 	mov	r4,fp
    3f28:	d8801615 	stw	r2,88(sp)
    3f2c:	180b883a 	mov	r5,r3
    3f30:	00061cc0 	call	61cc <_Bfree>
    3f34:	d8801617 	ldw	r2,88(sp)
    3f38:	1000041e 	bne	r2,zero,3f4c <_dtoa_r+0xeac>
    3f3c:	d9800317 	ldw	r6,12(sp)
    3f40:	3000021e 	bne	r6,zero,3f4c <_dtoa_r+0xeac>
    3f44:	d8c00617 	ldw	r3,24(sp)
    3f48:	18003726 	beq	r3,zero,4028 <_dtoa_r+0xf88>
    3f4c:	b0002016 	blt	r22,zero,3fd0 <_dtoa_r+0xf30>
    3f50:	b000041e 	bne	r22,zero,3f64 <_dtoa_r+0xec4>
    3f54:	d9000317 	ldw	r4,12(sp)
    3f58:	2000021e 	bne	r4,zero,3f64 <_dtoa_r+0xec4>
    3f5c:	d8c00617 	ldw	r3,24(sp)
    3f60:	18001b26 	beq	r3,zero,3fd0 <_dtoa_r+0xf30>
    3f64:	00810716 	blt	zero,r2,4384 <_dtoa_r+0x12e4>
    3f68:	d8c00417 	ldw	r3,16(sp)
    3f6c:	9d800044 	addi	r22,r19,1
    3f70:	9c800005 	stb	r18,0(r19)
    3f74:	b02f883a 	mov	r23,r22
    3f78:	98c10626 	beq	r19,r3,4394 <_dtoa_r+0x12f4>
    3f7c:	800b883a 	mov	r5,r16
    3f80:	000f883a 	mov	r7,zero
    3f84:	01800284 	movi	r6,10
    3f88:	e009883a 	mov	r4,fp
    3f8c:	00061f40 	call	61f4 <__multadd>
    3f90:	1021883a 	mov	r16,r2
    3f94:	000f883a 	mov	r7,zero
    3f98:	01800284 	movi	r6,10
    3f9c:	880b883a 	mov	r5,r17
    3fa0:	e009883a 	mov	r4,fp
    3fa4:	8d002526 	beq	r17,r20,403c <_dtoa_r+0xf9c>
    3fa8:	00061f40 	call	61f4 <__multadd>
    3fac:	a00b883a 	mov	r5,r20
    3fb0:	000f883a 	mov	r7,zero
    3fb4:	01800284 	movi	r6,10
    3fb8:	e009883a 	mov	r4,fp
    3fbc:	1023883a 	mov	r17,r2
    3fc0:	00061f40 	call	61f4 <__multadd>
    3fc4:	1029883a 	mov	r20,r2
    3fc8:	b027883a 	mov	r19,r22
    3fcc:	003fc006 	br	3ed0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003ed0>
    3fd0:	9011883a 	mov	r8,r18
    3fd4:	00800e0e 	bge	zero,r2,4010 <_dtoa_r+0xf70>
    3fd8:	800b883a 	mov	r5,r16
    3fdc:	01800044 	movi	r6,1
    3fe0:	e009883a 	mov	r4,fp
    3fe4:	da001715 	stw	r8,92(sp)
    3fe8:	00068a40 	call	68a4 <__lshift>
    3fec:	a80b883a 	mov	r5,r21
    3ff0:	1009883a 	mov	r4,r2
    3ff4:	1021883a 	mov	r16,r2
    3ff8:	00069ec0 	call	69ec <__mcmp>
    3ffc:	da001717 	ldw	r8,92(sp)
    4000:	0081960e 	bge	zero,r2,465c <_dtoa_r+0x15bc>
    4004:	00800e44 	movi	r2,57
    4008:	40817026 	beq	r8,r2,45cc <_dtoa_r+0x152c>
    400c:	ba000c44 	addi	r8,r23,49
    4010:	8825883a 	mov	r18,r17
    4014:	9dc00044 	addi	r23,r19,1
    4018:	9a000005 	stb	r8,0(r19)
    401c:	a023883a 	mov	r17,r20
    4020:	dc000915 	stw	r16,36(sp)
    4024:	003f2406 	br	3cb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003cb8>
    4028:	00800e44 	movi	r2,57
    402c:	9011883a 	mov	r8,r18
    4030:	90816626 	beq	r18,r2,45cc <_dtoa_r+0x152c>
    4034:	05bff516 	blt	zero,r22,400c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700400c>
    4038:	003ff506 	br	4010 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004010>
    403c:	00061f40 	call	61f4 <__multadd>
    4040:	1023883a 	mov	r17,r2
    4044:	1029883a 	mov	r20,r2
    4048:	003fdf06 	br	3fc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003fc8>
    404c:	e009883a 	mov	r4,fp
    4050:	00061cc0 	call	61cc <_Bfree>
    4054:	00800044 	movi	r2,1
    4058:	003fbc06 	br	3f4c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003f4c>
    405c:	a80b883a 	mov	r5,r21
    4060:	8009883a 	mov	r4,r16
    4064:	00069ec0 	call	69ec <__mcmp>
    4068:	103edb0e 	bge	r2,zero,3bd8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003bd8>
    406c:	800b883a 	mov	r5,r16
    4070:	000f883a 	mov	r7,zero
    4074:	01800284 	movi	r6,10
    4078:	e009883a 	mov	r4,fp
    407c:	00061f40 	call	61f4 <__multadd>
    4080:	1021883a 	mov	r16,r2
    4084:	d8800517 	ldw	r2,20(sp)
    4088:	d8c00b17 	ldw	r3,44(sp)
    408c:	10bfffc4 	addi	r2,r2,-1
    4090:	d8800515 	stw	r2,20(sp)
    4094:	183f761e 	bne	r3,zero,3e70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e70>
    4098:	d9000c17 	ldw	r4,48(sp)
    409c:	0101730e 	bge	zero,r4,466c <_dtoa_r+0x15cc>
    40a0:	d9000615 	stw	r4,24(sp)
    40a4:	003ed006 	br	3be8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003be8>
    40a8:	00800084 	movi	r2,2
    40ac:	3081861e 	bne	r6,r2,46c8 <_dtoa_r+0x1628>
    40b0:	d8000b15 	stw	zero,44(sp)
    40b4:	003f3c06 	br	3da8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003da8>
    40b8:	dc000917 	ldw	r16,36(sp)
    40bc:	003e9206 	br	3b08 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003b08>
    40c0:	d9c00317 	ldw	r7,12(sp)
    40c4:	00800084 	movi	r2,2
    40c8:	11fec50e 	bge	r2,r7,3be0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003be0>
    40cc:	d9000617 	ldw	r4,24(sp)
    40d0:	20013c1e 	bne	r4,zero,45c4 <_dtoa_r+0x1524>
    40d4:	a80b883a 	mov	r5,r21
    40d8:	000f883a 	mov	r7,zero
    40dc:	01800144 	movi	r6,5
    40e0:	e009883a 	mov	r4,fp
    40e4:	00061f40 	call	61f4 <__multadd>
    40e8:	100b883a 	mov	r5,r2
    40ec:	8009883a 	mov	r4,r16
    40f0:	102b883a 	mov	r21,r2
    40f4:	00069ec0 	call	69ec <__mcmp>
    40f8:	dc000915 	stw	r16,36(sp)
    40fc:	00bf410e 	bge	zero,r2,3e04 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e04>
    4100:	d9c00717 	ldw	r7,28(sp)
    4104:	00800c44 	movi	r2,49
    4108:	38800005 	stb	r2,0(r7)
    410c:	d8800517 	ldw	r2,20(sp)
    4110:	3dc00044 	addi	r23,r7,1
    4114:	10800044 	addi	r2,r2,1
    4118:	d8800515 	stw	r2,20(sp)
    411c:	003f3d06 	br	3e14 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e14>
    4120:	d9800517 	ldw	r6,20(sp)
    4124:	d9c00717 	ldw	r7,28(sp)
    4128:	00800c44 	movi	r2,49
    412c:	31800044 	addi	r6,r6,1
    4130:	d9800515 	stw	r6,20(sp)
    4134:	38800005 	stb	r2,0(r7)
    4138:	003edf06 	br	3cb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003cb8>
    413c:	d8000b15 	stw	zero,44(sp)
    4140:	003c9f06 	br	33c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70033c0>
    4144:	903e7e1e 	bne	r18,zero,3b40 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003b40>
    4148:	00800434 	movhi	r2,16
    414c:	10bfffc4 	addi	r2,r2,-1
    4150:	9884703a 	and	r2,r19,r2
    4154:	1000ea1e 	bne	r2,zero,4500 <_dtoa_r+0x1460>
    4158:	9cdffc2c 	andhi	r19,r19,32752
    415c:	9800e826 	beq	r19,zero,4500 <_dtoa_r+0x1460>
    4160:	d9c00817 	ldw	r7,32(sp)
    4164:	b5800044 	addi	r22,r22,1
    4168:	04c00044 	movi	r19,1
    416c:	39c00044 	addi	r7,r7,1
    4170:	d9c00815 	stw	r7,32(sp)
    4174:	d8800d17 	ldw	r2,52(sp)
    4178:	103e721e 	bne	r2,zero,3b44 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003b44>
    417c:	00800044 	movi	r2,1
    4180:	003e7906 	br	3b68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003b68>
    4184:	8009883a 	mov	r4,r16
    4188:	000d0740 	call	d074 <__floatsidf>
    418c:	d9800f17 	ldw	r6,60(sp)
    4190:	d9c01017 	ldw	r7,64(sp)
    4194:	1009883a 	mov	r4,r2
    4198:	180b883a 	mov	r5,r3
    419c:	000bfe00 	call	bfe0 <__muldf3>
    41a0:	000d883a 	mov	r6,zero
    41a4:	01d00734 	movhi	r7,16412
    41a8:	1009883a 	mov	r4,r2
    41ac:	180b883a 	mov	r5,r3
    41b0:	000abf40 	call	abf4 <__adddf3>
    41b4:	047f3034 	movhi	r17,64704
    41b8:	1021883a 	mov	r16,r2
    41bc:	1c63883a 	add	r17,r3,r17
    41c0:	d9000f17 	ldw	r4,60(sp)
    41c4:	d9401017 	ldw	r5,64(sp)
    41c8:	000d883a 	mov	r6,zero
    41cc:	01d00534 	movhi	r7,16404
    41d0:	000c6f80 	call	c6f8 <__subdf3>
    41d4:	800d883a 	mov	r6,r16
    41d8:	880f883a 	mov	r7,r17
    41dc:	1009883a 	mov	r4,r2
    41e0:	180b883a 	mov	r5,r3
    41e4:	102b883a 	mov	r21,r2
    41e8:	1829883a 	mov	r20,r3
    41ec:	000be100 	call	be10 <__gedf2>
    41f0:	00806c16 	blt	zero,r2,43a4 <_dtoa_r+0x1304>
    41f4:	89e0003c 	xorhi	r7,r17,32768
    41f8:	800d883a 	mov	r6,r16
    41fc:	a809883a 	mov	r4,r21
    4200:	a00b883a 	mov	r5,r20
    4204:	000beec0 	call	beec <__ledf2>
    4208:	103d7e0e 	bge	r2,zero,3804 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003804>
    420c:	002b883a 	mov	r21,zero
    4210:	0023883a 	mov	r17,zero
    4214:	003efb06 	br	3e04 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e04>
    4218:	d8800717 	ldw	r2,28(sp)
    421c:	003bd006 	br	3160 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003160>
    4220:	d9000a17 	ldw	r4,40(sp)
    4224:	d9800d17 	ldw	r6,52(sp)
    4228:	dd400a15 	stw	r21,40(sp)
    422c:	a905c83a 	sub	r2,r21,r4
    4230:	308d883a 	add	r6,r6,r2
    4234:	d9800d15 	stw	r6,52(sp)
    4238:	002b883a 	mov	r21,zero
    423c:	003e0606 	br	3a58 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a58>
    4240:	9023883a 	mov	r17,r18
    4244:	9829883a 	mov	r20,r19
    4248:	04000084 	movi	r16,2
    424c:	003c9206 	br	3498 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003498>
    4250:	04000044 	movi	r16,1
    4254:	dc000c15 	stw	r16,48(sp)
    4258:	dc000615 	stw	r16,24(sp)
    425c:	dc002215 	stw	r16,136(sp)
    4260:	e0001115 	stw	zero,68(fp)
    4264:	000b883a 	mov	r5,zero
    4268:	003c6906 	br	3410 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003410>
    426c:	3021883a 	mov	r16,r6
    4270:	003ffb06 	br	4260 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004260>
    4274:	1000021e 	bne	r2,zero,4280 <_dtoa_r+0x11e0>
    4278:	4200004c 	andi	r8,r8,1
    427c:	403e7d1e 	bne	r8,zero,3c74 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003c74>
    4280:	01000c04 	movi	r4,48
    4284:	00000106 	br	428c <_dtoa_r+0x11ec>
    4288:	102f883a 	mov	r23,r2
    428c:	b8bfffc4 	addi	r2,r23,-1
    4290:	10c00007 	ldb	r3,0(r2)
    4294:	193ffc26 	beq	r3,r4,4288 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004288>
    4298:	003e8706 	br	3cb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003cb8>
    429c:	d8800517 	ldw	r2,20(sp)
    42a0:	00a3c83a 	sub	r17,zero,r2
    42a4:	8800a426 	beq	r17,zero,4538 <_dtoa_r+0x1498>
    42a8:	888003cc 	andi	r2,r17,15
    42ac:	100490fa 	slli	r2,r2,3
    42b0:	00c00074 	movhi	r3,1
    42b4:	18c60804 	addi	r3,r3,6176
    42b8:	1885883a 	add	r2,r3,r2
    42bc:	11800017 	ldw	r6,0(r2)
    42c0:	11c00117 	ldw	r7,4(r2)
    42c4:	9009883a 	mov	r4,r18
    42c8:	980b883a 	mov	r5,r19
    42cc:	8823d13a 	srai	r17,r17,4
    42d0:	000bfe00 	call	bfe0 <__muldf3>
    42d4:	d8800f15 	stw	r2,60(sp)
    42d8:	d8c01015 	stw	r3,64(sp)
    42dc:	8800e826 	beq	r17,zero,4680 <_dtoa_r+0x15e0>
    42e0:	05000074 	movhi	r20,1
    42e4:	a505fe04 	addi	r20,r20,6136
    42e8:	04000084 	movi	r16,2
    42ec:	8980004c 	andi	r6,r17,1
    42f0:	1009883a 	mov	r4,r2
    42f4:	8823d07a 	srai	r17,r17,1
    42f8:	180b883a 	mov	r5,r3
    42fc:	30000426 	beq	r6,zero,4310 <_dtoa_r+0x1270>
    4300:	a1800017 	ldw	r6,0(r20)
    4304:	a1c00117 	ldw	r7,4(r20)
    4308:	84000044 	addi	r16,r16,1
    430c:	000bfe00 	call	bfe0 <__muldf3>
    4310:	a5000204 	addi	r20,r20,8
    4314:	883ff51e 	bne	r17,zero,42ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70042ec>
    4318:	d8800f15 	stw	r2,60(sp)
    431c:	d8c01015 	stw	r3,64(sp)
    4320:	003c7606 	br	34fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70034fc>
    4324:	00c00c04 	movi	r3,48
    4328:	10c00005 	stb	r3,0(r2)
    432c:	d8c00517 	ldw	r3,20(sp)
    4330:	bd3fffc3 	ldbu	r20,-1(r23)
    4334:	18c00044 	addi	r3,r3,1
    4338:	d8c00515 	stw	r3,20(sp)
    433c:	003db906 	br	3a24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a24>
    4340:	89400117 	ldw	r5,4(r17)
    4344:	e009883a 	mov	r4,fp
    4348:	00061240 	call	6124 <_Balloc>
    434c:	89800417 	ldw	r6,16(r17)
    4350:	89400304 	addi	r5,r17,12
    4354:	11000304 	addi	r4,r2,12
    4358:	31800084 	addi	r6,r6,2
    435c:	318d883a 	add	r6,r6,r6
    4360:	318d883a 	add	r6,r6,r6
    4364:	1027883a 	mov	r19,r2
    4368:	0005eb40 	call	5eb4 <memcpy>
    436c:	01800044 	movi	r6,1
    4370:	980b883a 	mov	r5,r19
    4374:	e009883a 	mov	r4,fp
    4378:	00068a40 	call	68a4 <__lshift>
    437c:	1029883a 	mov	r20,r2
    4380:	003ecc06 	br	3eb4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003eb4>
    4384:	00800e44 	movi	r2,57
    4388:	90809026 	beq	r18,r2,45cc <_dtoa_r+0x152c>
    438c:	92000044 	addi	r8,r18,1
    4390:	003f1f06 	br	4010 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004010>
    4394:	9011883a 	mov	r8,r18
    4398:	8825883a 	mov	r18,r17
    439c:	a023883a 	mov	r17,r20
    43a0:	003e2906 	br	3c48 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003c48>
    43a4:	002b883a 	mov	r21,zero
    43a8:	0023883a 	mov	r17,zero
    43ac:	003f5406 	br	4100 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004100>
    43b0:	61bfffc4 	addi	r6,r12,-1
    43b4:	300490fa 	slli	r2,r6,3
    43b8:	00c00074 	movhi	r3,1
    43bc:	18c60804 	addi	r3,r3,6176
    43c0:	1885883a 	add	r2,r3,r2
    43c4:	11000017 	ldw	r4,0(r2)
    43c8:	11400117 	ldw	r5,4(r2)
    43cc:	d8800717 	ldw	r2,28(sp)
    43d0:	880f883a 	mov	r7,r17
    43d4:	d9801215 	stw	r6,72(sp)
    43d8:	800d883a 	mov	r6,r16
    43dc:	db001615 	stw	r12,88(sp)
    43e0:	15c00044 	addi	r23,r2,1
    43e4:	000bfe00 	call	bfe0 <__muldf3>
    43e8:	d9401017 	ldw	r5,64(sp)
    43ec:	d9000f17 	ldw	r4,60(sp)
    43f0:	d8c01515 	stw	r3,84(sp)
    43f4:	d8801415 	stw	r2,80(sp)
    43f8:	000cff40 	call	cff4 <__fixdfsi>
    43fc:	1009883a 	mov	r4,r2
    4400:	1021883a 	mov	r16,r2
    4404:	000d0740 	call	d074 <__floatsidf>
    4408:	d9000f17 	ldw	r4,60(sp)
    440c:	d9401017 	ldw	r5,64(sp)
    4410:	100d883a 	mov	r6,r2
    4414:	180f883a 	mov	r7,r3
    4418:	000c6f80 	call	c6f8 <__subdf3>
    441c:	1829883a 	mov	r20,r3
    4420:	d8c00717 	ldw	r3,28(sp)
    4424:	84000c04 	addi	r16,r16,48
    4428:	1023883a 	mov	r17,r2
    442c:	1c000005 	stb	r16,0(r3)
    4430:	db001617 	ldw	r12,88(sp)
    4434:	00800044 	movi	r2,1
    4438:	60802226 	beq	r12,r2,44c4 <_dtoa_r+0x1424>
    443c:	d9c00717 	ldw	r7,28(sp)
    4440:	8805883a 	mov	r2,r17
    4444:	b82b883a 	mov	r21,r23
    4448:	3b19883a 	add	r12,r7,r12
    444c:	6023883a 	mov	r17,r12
    4450:	a007883a 	mov	r3,r20
    4454:	dc800f15 	stw	r18,60(sp)
    4458:	000d883a 	mov	r6,zero
    445c:	01d00934 	movhi	r7,16420
    4460:	1009883a 	mov	r4,r2
    4464:	180b883a 	mov	r5,r3
    4468:	000bfe00 	call	bfe0 <__muldf3>
    446c:	180b883a 	mov	r5,r3
    4470:	1009883a 	mov	r4,r2
    4474:	1829883a 	mov	r20,r3
    4478:	1025883a 	mov	r18,r2
    447c:	000cff40 	call	cff4 <__fixdfsi>
    4480:	1009883a 	mov	r4,r2
    4484:	1021883a 	mov	r16,r2
    4488:	000d0740 	call	d074 <__floatsidf>
    448c:	100d883a 	mov	r6,r2
    4490:	180f883a 	mov	r7,r3
    4494:	9009883a 	mov	r4,r18
    4498:	a00b883a 	mov	r5,r20
    449c:	84000c04 	addi	r16,r16,48
    44a0:	000c6f80 	call	c6f8 <__subdf3>
    44a4:	ad400044 	addi	r21,r21,1
    44a8:	ac3fffc5 	stb	r16,-1(r21)
    44ac:	ac7fea1e 	bne	r21,r17,4458 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004458>
    44b0:	1023883a 	mov	r17,r2
    44b4:	d8801217 	ldw	r2,72(sp)
    44b8:	dc800f17 	ldw	r18,60(sp)
    44bc:	1829883a 	mov	r20,r3
    44c0:	b8af883a 	add	r23,r23,r2
    44c4:	d9001417 	ldw	r4,80(sp)
    44c8:	d9401517 	ldw	r5,84(sp)
    44cc:	000d883a 	mov	r6,zero
    44d0:	01cff834 	movhi	r7,16352
    44d4:	000abf40 	call	abf4 <__adddf3>
    44d8:	880d883a 	mov	r6,r17
    44dc:	a00f883a 	mov	r7,r20
    44e0:	1009883a 	mov	r4,r2
    44e4:	180b883a 	mov	r5,r3
    44e8:	000beec0 	call	beec <__ledf2>
    44ec:	10003e0e 	bge	r2,zero,45e8 <_dtoa_r+0x1548>
    44f0:	d9001317 	ldw	r4,76(sp)
    44f4:	bd3fffc3 	ldbu	r20,-1(r23)
    44f8:	d9000515 	stw	r4,20(sp)
    44fc:	003d3b06 	br	39ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70039ec>
    4500:	0027883a 	mov	r19,zero
    4504:	003f1b06 	br	4174 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004174>
    4508:	d8800817 	ldw	r2,32(sp)
    450c:	11e9c83a 	sub	r20,r2,r7
    4510:	0005883a 	mov	r2,zero
    4514:	003d5406 	br	3a68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a68>
    4518:	00800044 	movi	r2,1
    451c:	003dc706 	br	3c3c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003c3c>
    4520:	d8c00217 	ldw	r3,8(sp)
    4524:	00800d84 	movi	r2,54
    4528:	dd400a17 	ldw	r21,40(sp)
    452c:	10c5c83a 	sub	r2,r2,r3
    4530:	dd000817 	ldw	r20,32(sp)
    4534:	003d4c06 	br	3a68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003a68>
    4538:	dc800f15 	stw	r18,60(sp)
    453c:	dcc01015 	stw	r19,64(sp)
    4540:	04000084 	movi	r16,2
    4544:	003bed06 	br	34fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70034fc>
    4548:	d9000617 	ldw	r4,24(sp)
    454c:	203f0d26 	beq	r4,zero,4184 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004184>
    4550:	d9800c17 	ldw	r6,48(sp)
    4554:	01bcab0e 	bge	zero,r6,3804 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003804>
    4558:	d9401017 	ldw	r5,64(sp)
    455c:	d9000f17 	ldw	r4,60(sp)
    4560:	000d883a 	mov	r6,zero
    4564:	01d00934 	movhi	r7,16420
    4568:	000bfe00 	call	bfe0 <__muldf3>
    456c:	81000044 	addi	r4,r16,1
    4570:	d8800f15 	stw	r2,60(sp)
    4574:	d8c01015 	stw	r3,64(sp)
    4578:	000d0740 	call	d074 <__floatsidf>
    457c:	d9800f17 	ldw	r6,60(sp)
    4580:	d9c01017 	ldw	r7,64(sp)
    4584:	1009883a 	mov	r4,r2
    4588:	180b883a 	mov	r5,r3
    458c:	000bfe00 	call	bfe0 <__muldf3>
    4590:	01d00734 	movhi	r7,16412
    4594:	000d883a 	mov	r6,zero
    4598:	1009883a 	mov	r4,r2
    459c:	180b883a 	mov	r5,r3
    45a0:	000abf40 	call	abf4 <__adddf3>
    45a4:	d9c00517 	ldw	r7,20(sp)
    45a8:	047f3034 	movhi	r17,64704
    45ac:	1021883a 	mov	r16,r2
    45b0:	39ffffc4 	addi	r7,r7,-1
    45b4:	d9c01315 	stw	r7,76(sp)
    45b8:	1c63883a 	add	r17,r3,r17
    45bc:	db000c17 	ldw	r12,48(sp)
    45c0:	003bea06 	br	356c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700356c>
    45c4:	dc000915 	stw	r16,36(sp)
    45c8:	003e0e06 	br	3e04 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e04>
    45cc:	01000e44 	movi	r4,57
    45d0:	8825883a 	mov	r18,r17
    45d4:	9dc00044 	addi	r23,r19,1
    45d8:	99000005 	stb	r4,0(r19)
    45dc:	a023883a 	mov	r17,r20
    45e0:	dc000915 	stw	r16,36(sp)
    45e4:	003da406 	br	3c78 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003c78>
    45e8:	d9801417 	ldw	r6,80(sp)
    45ec:	d9c01517 	ldw	r7,84(sp)
    45f0:	0009883a 	mov	r4,zero
    45f4:	014ff834 	movhi	r5,16352
    45f8:	000c6f80 	call	c6f8 <__subdf3>
    45fc:	880d883a 	mov	r6,r17
    4600:	a00f883a 	mov	r7,r20
    4604:	1009883a 	mov	r4,r2
    4608:	180b883a 	mov	r5,r3
    460c:	000be100 	call	be10 <__gedf2>
    4610:	00bc7c0e 	bge	zero,r2,3804 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003804>
    4614:	01000c04 	movi	r4,48
    4618:	00000106 	br	4620 <_dtoa_r+0x1580>
    461c:	102f883a 	mov	r23,r2
    4620:	b8bfffc4 	addi	r2,r23,-1
    4624:	10c00007 	ldb	r3,0(r2)
    4628:	193ffc26 	beq	r3,r4,461c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700461c>
    462c:	d9801317 	ldw	r6,76(sp)
    4630:	d9800515 	stw	r6,20(sp)
    4634:	003c4406 	br	3748 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003748>
    4638:	d9801317 	ldw	r6,76(sp)
    463c:	d9800515 	stw	r6,20(sp)
    4640:	003cea06 	br	39ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70039ec>
    4644:	dd800f17 	ldw	r22,60(sp)
    4648:	dcc01017 	ldw	r19,64(sp)
    464c:	dc801217 	ldw	r18,72(sp)
    4650:	003c6c06 	br	3804 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003804>
    4654:	903e031e 	bne	r18,zero,3e64 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e64>
    4658:	003ebb06 	br	4148 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004148>
    465c:	103e6c1e 	bne	r2,zero,4010 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004010>
    4660:	4080004c 	andi	r2,r8,1
    4664:	103e6a26 	beq	r2,zero,4010 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004010>
    4668:	003e6606 	br	4004 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004004>
    466c:	d8c00317 	ldw	r3,12(sp)
    4670:	00800084 	movi	r2,2
    4674:	10c02916 	blt	r2,r3,471c <_dtoa_r+0x167c>
    4678:	d9000c17 	ldw	r4,48(sp)
    467c:	003e8806 	br	40a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70040a0>
    4680:	04000084 	movi	r16,2
    4684:	003b9d06 	br	34fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70034fc>
    4688:	d9001317 	ldw	r4,76(sp)
    468c:	d9000515 	stw	r4,20(sp)
    4690:	003cd606 	br	39ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70039ec>
    4694:	d8801317 	ldw	r2,76(sp)
    4698:	d8800515 	stw	r2,20(sp)
    469c:	003c2a06 	br	3748 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003748>
    46a0:	d9800317 	ldw	r6,12(sp)
    46a4:	00800084 	movi	r2,2
    46a8:	11801516 	blt	r2,r6,4700 <_dtoa_r+0x1660>
    46ac:	d9c00c17 	ldw	r7,48(sp)
    46b0:	d9c00615 	stw	r7,24(sp)
    46b4:	003df706 	br	3e94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e94>
    46b8:	193d3926 	beq	r3,r4,3ba0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003ba0>
    46bc:	00c00f04 	movi	r3,60
    46c0:	1885c83a 	sub	r2,r3,r2
    46c4:	003ddf06 	br	3e44 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003e44>
    46c8:	e009883a 	mov	r4,fp
    46cc:	e0001115 	stw	zero,68(fp)
    46d0:	000b883a 	mov	r5,zero
    46d4:	00061240 	call	6124 <_Balloc>
    46d8:	d8800715 	stw	r2,28(sp)
    46dc:	d8c00717 	ldw	r3,28(sp)
    46e0:	00bfffc4 	movi	r2,-1
    46e4:	01000044 	movi	r4,1
    46e8:	d8800c15 	stw	r2,48(sp)
    46ec:	e0c01015 	stw	r3,64(fp)
    46f0:	d9000b15 	stw	r4,44(sp)
    46f4:	d8800615 	stw	r2,24(sp)
    46f8:	d8002215 	stw	zero,136(sp)
    46fc:	003c4106 	br	3804 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003804>
    4700:	d8c00c17 	ldw	r3,48(sp)
    4704:	d8c00615 	stw	r3,24(sp)
    4708:	003e7006 	br	40cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70040cc>
    470c:	04400044 	movi	r17,1
    4710:	003b2006 	br	3394 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003394>
    4714:	000b883a 	mov	r5,zero
    4718:	003b3d06 	br	3410 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7003410>
    471c:	d8800c17 	ldw	r2,48(sp)
    4720:	d8800615 	stw	r2,24(sp)
    4724:	003e6906 	br	40cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70040cc>

00004728 <__sflush_r>:
    4728:	2880030b 	ldhu	r2,12(r5)
    472c:	defffb04 	addi	sp,sp,-20
    4730:	dcc00315 	stw	r19,12(sp)
    4734:	dc400115 	stw	r17,4(sp)
    4738:	dfc00415 	stw	ra,16(sp)
    473c:	dc800215 	stw	r18,8(sp)
    4740:	dc000015 	stw	r16,0(sp)
    4744:	10c0020c 	andi	r3,r2,8
    4748:	2823883a 	mov	r17,r5
    474c:	2027883a 	mov	r19,r4
    4750:	1800311e 	bne	r3,zero,4818 <__sflush_r+0xf0>
    4754:	28c00117 	ldw	r3,4(r5)
    4758:	10820014 	ori	r2,r2,2048
    475c:	2880030d 	sth	r2,12(r5)
    4760:	00c04b0e 	bge	zero,r3,4890 <__sflush_r+0x168>
    4764:	8a000a17 	ldw	r8,40(r17)
    4768:	40002326 	beq	r8,zero,47f8 <__sflush_r+0xd0>
    476c:	9c000017 	ldw	r16,0(r19)
    4770:	10c4000c 	andi	r3,r2,4096
    4774:	98000015 	stw	zero,0(r19)
    4778:	18004826 	beq	r3,zero,489c <__sflush_r+0x174>
    477c:	89801417 	ldw	r6,80(r17)
    4780:	10c0010c 	andi	r3,r2,4
    4784:	18000626 	beq	r3,zero,47a0 <__sflush_r+0x78>
    4788:	88c00117 	ldw	r3,4(r17)
    478c:	88800c17 	ldw	r2,48(r17)
    4790:	30cdc83a 	sub	r6,r6,r3
    4794:	10000226 	beq	r2,zero,47a0 <__sflush_r+0x78>
    4798:	88800f17 	ldw	r2,60(r17)
    479c:	308dc83a 	sub	r6,r6,r2
    47a0:	89400717 	ldw	r5,28(r17)
    47a4:	000f883a 	mov	r7,zero
    47a8:	9809883a 	mov	r4,r19
    47ac:	403ee83a 	callr	r8
    47b0:	00ffffc4 	movi	r3,-1
    47b4:	10c04426 	beq	r2,r3,48c8 <__sflush_r+0x1a0>
    47b8:	88c0030b 	ldhu	r3,12(r17)
    47bc:	89000417 	ldw	r4,16(r17)
    47c0:	88000115 	stw	zero,4(r17)
    47c4:	197dffcc 	andi	r5,r3,63487
    47c8:	8940030d 	sth	r5,12(r17)
    47cc:	89000015 	stw	r4,0(r17)
    47d0:	18c4000c 	andi	r3,r3,4096
    47d4:	18002c1e 	bne	r3,zero,4888 <__sflush_r+0x160>
    47d8:	89400c17 	ldw	r5,48(r17)
    47dc:	9c000015 	stw	r16,0(r19)
    47e0:	28000526 	beq	r5,zero,47f8 <__sflush_r+0xd0>
    47e4:	88801004 	addi	r2,r17,64
    47e8:	28800226 	beq	r5,r2,47f4 <__sflush_r+0xcc>
    47ec:	9809883a 	mov	r4,r19
    47f0:	0004e940 	call	4e94 <_free_r>
    47f4:	88000c15 	stw	zero,48(r17)
    47f8:	0005883a 	mov	r2,zero
    47fc:	dfc00417 	ldw	ra,16(sp)
    4800:	dcc00317 	ldw	r19,12(sp)
    4804:	dc800217 	ldw	r18,8(sp)
    4808:	dc400117 	ldw	r17,4(sp)
    480c:	dc000017 	ldw	r16,0(sp)
    4810:	dec00504 	addi	sp,sp,20
    4814:	f800283a 	ret
    4818:	2c800417 	ldw	r18,16(r5)
    481c:	903ff626 	beq	r18,zero,47f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70047f8>
    4820:	2c000017 	ldw	r16,0(r5)
    4824:	108000cc 	andi	r2,r2,3
    4828:	2c800015 	stw	r18,0(r5)
    482c:	84a1c83a 	sub	r16,r16,r18
    4830:	1000131e 	bne	r2,zero,4880 <__sflush_r+0x158>
    4834:	28800517 	ldw	r2,20(r5)
    4838:	88800215 	stw	r2,8(r17)
    483c:	04000316 	blt	zero,r16,484c <__sflush_r+0x124>
    4840:	003fed06 	br	47f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70047f8>
    4844:	90a5883a 	add	r18,r18,r2
    4848:	043feb0e 	bge	zero,r16,47f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70047f8>
    484c:	88800917 	ldw	r2,36(r17)
    4850:	89400717 	ldw	r5,28(r17)
    4854:	800f883a 	mov	r7,r16
    4858:	900d883a 	mov	r6,r18
    485c:	9809883a 	mov	r4,r19
    4860:	103ee83a 	callr	r2
    4864:	80a1c83a 	sub	r16,r16,r2
    4868:	00bff616 	blt	zero,r2,4844 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004844>
    486c:	88c0030b 	ldhu	r3,12(r17)
    4870:	00bfffc4 	movi	r2,-1
    4874:	18c01014 	ori	r3,r3,64
    4878:	88c0030d 	sth	r3,12(r17)
    487c:	003fdf06 	br	47fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70047fc>
    4880:	0005883a 	mov	r2,zero
    4884:	003fec06 	br	4838 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004838>
    4888:	88801415 	stw	r2,80(r17)
    488c:	003fd206 	br	47d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70047d8>
    4890:	28c00f17 	ldw	r3,60(r5)
    4894:	00ffb316 	blt	zero,r3,4764 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004764>
    4898:	003fd706 	br	47f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70047f8>
    489c:	89400717 	ldw	r5,28(r17)
    48a0:	000d883a 	mov	r6,zero
    48a4:	01c00044 	movi	r7,1
    48a8:	9809883a 	mov	r4,r19
    48ac:	403ee83a 	callr	r8
    48b0:	100d883a 	mov	r6,r2
    48b4:	00bfffc4 	movi	r2,-1
    48b8:	30801426 	beq	r6,r2,490c <__sflush_r+0x1e4>
    48bc:	8880030b 	ldhu	r2,12(r17)
    48c0:	8a000a17 	ldw	r8,40(r17)
    48c4:	003fae06 	br	4780 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004780>
    48c8:	98c00017 	ldw	r3,0(r19)
    48cc:	183fba26 	beq	r3,zero,47b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70047b8>
    48d0:	01000744 	movi	r4,29
    48d4:	19000626 	beq	r3,r4,48f0 <__sflush_r+0x1c8>
    48d8:	01000584 	movi	r4,22
    48dc:	19000426 	beq	r3,r4,48f0 <__sflush_r+0x1c8>
    48e0:	88c0030b 	ldhu	r3,12(r17)
    48e4:	18c01014 	ori	r3,r3,64
    48e8:	88c0030d 	sth	r3,12(r17)
    48ec:	003fc306 	br	47fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70047fc>
    48f0:	8880030b 	ldhu	r2,12(r17)
    48f4:	88c00417 	ldw	r3,16(r17)
    48f8:	88000115 	stw	zero,4(r17)
    48fc:	10bdffcc 	andi	r2,r2,63487
    4900:	8880030d 	sth	r2,12(r17)
    4904:	88c00015 	stw	r3,0(r17)
    4908:	003fb306 	br	47d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70047d8>
    490c:	98800017 	ldw	r2,0(r19)
    4910:	103fea26 	beq	r2,zero,48bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70048bc>
    4914:	00c00744 	movi	r3,29
    4918:	10c00226 	beq	r2,r3,4924 <__sflush_r+0x1fc>
    491c:	00c00584 	movi	r3,22
    4920:	10c0031e 	bne	r2,r3,4930 <__sflush_r+0x208>
    4924:	9c000015 	stw	r16,0(r19)
    4928:	0005883a 	mov	r2,zero
    492c:	003fb306 	br	47fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70047fc>
    4930:	88c0030b 	ldhu	r3,12(r17)
    4934:	3005883a 	mov	r2,r6
    4938:	18c01014 	ori	r3,r3,64
    493c:	88c0030d 	sth	r3,12(r17)
    4940:	003fae06 	br	47fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70047fc>

00004944 <_fflush_r>:
    4944:	defffd04 	addi	sp,sp,-12
    4948:	dc000115 	stw	r16,4(sp)
    494c:	dfc00215 	stw	ra,8(sp)
    4950:	2021883a 	mov	r16,r4
    4954:	20000226 	beq	r4,zero,4960 <_fflush_r+0x1c>
    4958:	20800e17 	ldw	r2,56(r4)
    495c:	10000c26 	beq	r2,zero,4990 <_fflush_r+0x4c>
    4960:	2880030f 	ldh	r2,12(r5)
    4964:	1000051e 	bne	r2,zero,497c <_fflush_r+0x38>
    4968:	0005883a 	mov	r2,zero
    496c:	dfc00217 	ldw	ra,8(sp)
    4970:	dc000117 	ldw	r16,4(sp)
    4974:	dec00304 	addi	sp,sp,12
    4978:	f800283a 	ret
    497c:	8009883a 	mov	r4,r16
    4980:	dfc00217 	ldw	ra,8(sp)
    4984:	dc000117 	ldw	r16,4(sp)
    4988:	dec00304 	addi	sp,sp,12
    498c:	00047281 	jmpi	4728 <__sflush_r>
    4990:	d9400015 	stw	r5,0(sp)
    4994:	0004d200 	call	4d20 <__sinit>
    4998:	d9400017 	ldw	r5,0(sp)
    499c:	003ff006 	br	4960 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004960>

000049a0 <fflush>:
    49a0:	20000526 	beq	r4,zero,49b8 <fflush+0x18>
    49a4:	00800074 	movhi	r2,1
    49a8:	108e1004 	addi	r2,r2,14400
    49ac:	200b883a 	mov	r5,r4
    49b0:	11000017 	ldw	r4,0(r2)
    49b4:	00049441 	jmpi	4944 <_fflush_r>
    49b8:	00800074 	movhi	r2,1
    49bc:	108e0f04 	addi	r2,r2,14396
    49c0:	11000017 	ldw	r4,0(r2)
    49c4:	01400034 	movhi	r5,0
    49c8:	29525104 	addi	r5,r5,18756
    49cc:	00052681 	jmpi	5268 <_fwalk_reent>

000049d0 <__fp_unlock>:
    49d0:	0005883a 	mov	r2,zero
    49d4:	f800283a 	ret

000049d8 <_cleanup_r>:
    49d8:	01400074 	movhi	r5,1
    49dc:	29631604 	addi	r5,r5,-29608
    49e0:	00052681 	jmpi	5268 <_fwalk_reent>

000049e4 <__sinit.part.1>:
    49e4:	defff704 	addi	sp,sp,-36
    49e8:	00c00034 	movhi	r3,0
    49ec:	dfc00815 	stw	ra,32(sp)
    49f0:	ddc00715 	stw	r23,28(sp)
    49f4:	dd800615 	stw	r22,24(sp)
    49f8:	dd400515 	stw	r21,20(sp)
    49fc:	dd000415 	stw	r20,16(sp)
    4a00:	dcc00315 	stw	r19,12(sp)
    4a04:	dc800215 	stw	r18,8(sp)
    4a08:	dc400115 	stw	r17,4(sp)
    4a0c:	dc000015 	stw	r16,0(sp)
    4a10:	18d27604 	addi	r3,r3,18904
    4a14:	24000117 	ldw	r16,4(r4)
    4a18:	20c00f15 	stw	r3,60(r4)
    4a1c:	2080bb04 	addi	r2,r4,748
    4a20:	00c000c4 	movi	r3,3
    4a24:	20c0b915 	stw	r3,740(r4)
    4a28:	2080ba15 	stw	r2,744(r4)
    4a2c:	2000b815 	stw	zero,736(r4)
    4a30:	05c00204 	movi	r23,8
    4a34:	00800104 	movi	r2,4
    4a38:	2025883a 	mov	r18,r4
    4a3c:	b80d883a 	mov	r6,r23
    4a40:	81001704 	addi	r4,r16,92
    4a44:	000b883a 	mov	r5,zero
    4a48:	80000015 	stw	zero,0(r16)
    4a4c:	80000115 	stw	zero,4(r16)
    4a50:	80000215 	stw	zero,8(r16)
    4a54:	8080030d 	sth	r2,12(r16)
    4a58:	80001915 	stw	zero,100(r16)
    4a5c:	8000038d 	sth	zero,14(r16)
    4a60:	80000415 	stw	zero,16(r16)
    4a64:	80000515 	stw	zero,20(r16)
    4a68:	80000615 	stw	zero,24(r16)
    4a6c:	0005ffc0 	call	5ffc <memset>
    4a70:	05800034 	movhi	r22,0
    4a74:	94400217 	ldw	r17,8(r18)
    4a78:	05400034 	movhi	r21,0
    4a7c:	05000034 	movhi	r20,0
    4a80:	04c00034 	movhi	r19,0
    4a84:	b59c7a04 	addi	r22,r22,29160
    4a88:	ad5c9104 	addi	r21,r21,29252
    4a8c:	a51cb004 	addi	r20,r20,29376
    4a90:	9cdcc704 	addi	r19,r19,29468
    4a94:	85800815 	stw	r22,32(r16)
    4a98:	85400915 	stw	r21,36(r16)
    4a9c:	85000a15 	stw	r20,40(r16)
    4aa0:	84c00b15 	stw	r19,44(r16)
    4aa4:	84000715 	stw	r16,28(r16)
    4aa8:	00800284 	movi	r2,10
    4aac:	8880030d 	sth	r2,12(r17)
    4ab0:	00800044 	movi	r2,1
    4ab4:	b80d883a 	mov	r6,r23
    4ab8:	89001704 	addi	r4,r17,92
    4abc:	000b883a 	mov	r5,zero
    4ac0:	88000015 	stw	zero,0(r17)
    4ac4:	88000115 	stw	zero,4(r17)
    4ac8:	88000215 	stw	zero,8(r17)
    4acc:	88001915 	stw	zero,100(r17)
    4ad0:	8880038d 	sth	r2,14(r17)
    4ad4:	88000415 	stw	zero,16(r17)
    4ad8:	88000515 	stw	zero,20(r17)
    4adc:	88000615 	stw	zero,24(r17)
    4ae0:	0005ffc0 	call	5ffc <memset>
    4ae4:	94000317 	ldw	r16,12(r18)
    4ae8:	00800484 	movi	r2,18
    4aec:	8c400715 	stw	r17,28(r17)
    4af0:	8d800815 	stw	r22,32(r17)
    4af4:	8d400915 	stw	r21,36(r17)
    4af8:	8d000a15 	stw	r20,40(r17)
    4afc:	8cc00b15 	stw	r19,44(r17)
    4b00:	8080030d 	sth	r2,12(r16)
    4b04:	00800084 	movi	r2,2
    4b08:	80000015 	stw	zero,0(r16)
    4b0c:	80000115 	stw	zero,4(r16)
    4b10:	80000215 	stw	zero,8(r16)
    4b14:	80001915 	stw	zero,100(r16)
    4b18:	8080038d 	sth	r2,14(r16)
    4b1c:	80000415 	stw	zero,16(r16)
    4b20:	80000515 	stw	zero,20(r16)
    4b24:	80000615 	stw	zero,24(r16)
    4b28:	b80d883a 	mov	r6,r23
    4b2c:	000b883a 	mov	r5,zero
    4b30:	81001704 	addi	r4,r16,92
    4b34:	0005ffc0 	call	5ffc <memset>
    4b38:	00800044 	movi	r2,1
    4b3c:	84000715 	stw	r16,28(r16)
    4b40:	85800815 	stw	r22,32(r16)
    4b44:	85400915 	stw	r21,36(r16)
    4b48:	85000a15 	stw	r20,40(r16)
    4b4c:	84c00b15 	stw	r19,44(r16)
    4b50:	90800e15 	stw	r2,56(r18)
    4b54:	dfc00817 	ldw	ra,32(sp)
    4b58:	ddc00717 	ldw	r23,28(sp)
    4b5c:	dd800617 	ldw	r22,24(sp)
    4b60:	dd400517 	ldw	r21,20(sp)
    4b64:	dd000417 	ldw	r20,16(sp)
    4b68:	dcc00317 	ldw	r19,12(sp)
    4b6c:	dc800217 	ldw	r18,8(sp)
    4b70:	dc400117 	ldw	r17,4(sp)
    4b74:	dc000017 	ldw	r16,0(sp)
    4b78:	dec00904 	addi	sp,sp,36
    4b7c:	f800283a 	ret

00004b80 <__fp_lock>:
    4b80:	0005883a 	mov	r2,zero
    4b84:	f800283a 	ret

00004b88 <__sfmoreglue>:
    4b88:	defffc04 	addi	sp,sp,-16
    4b8c:	dc400115 	stw	r17,4(sp)
    4b90:	2c7fffc4 	addi	r17,r5,-1
    4b94:	8c401a24 	muli	r17,r17,104
    4b98:	dc800215 	stw	r18,8(sp)
    4b9c:	2825883a 	mov	r18,r5
    4ba0:	89401d04 	addi	r5,r17,116
    4ba4:	dc000015 	stw	r16,0(sp)
    4ba8:	dfc00315 	stw	ra,12(sp)
    4bac:	00055c40 	call	55c4 <_malloc_r>
    4bb0:	1021883a 	mov	r16,r2
    4bb4:	10000726 	beq	r2,zero,4bd4 <__sfmoreglue+0x4c>
    4bb8:	11000304 	addi	r4,r2,12
    4bbc:	10000015 	stw	zero,0(r2)
    4bc0:	14800115 	stw	r18,4(r2)
    4bc4:	11000215 	stw	r4,8(r2)
    4bc8:	89801a04 	addi	r6,r17,104
    4bcc:	000b883a 	mov	r5,zero
    4bd0:	0005ffc0 	call	5ffc <memset>
    4bd4:	8005883a 	mov	r2,r16
    4bd8:	dfc00317 	ldw	ra,12(sp)
    4bdc:	dc800217 	ldw	r18,8(sp)
    4be0:	dc400117 	ldw	r17,4(sp)
    4be4:	dc000017 	ldw	r16,0(sp)
    4be8:	dec00404 	addi	sp,sp,16
    4bec:	f800283a 	ret

00004bf0 <__sfp>:
    4bf0:	defffb04 	addi	sp,sp,-20
    4bf4:	dc000015 	stw	r16,0(sp)
    4bf8:	04000074 	movhi	r16,1
    4bfc:	840e0f04 	addi	r16,r16,14396
    4c00:	dcc00315 	stw	r19,12(sp)
    4c04:	2027883a 	mov	r19,r4
    4c08:	81000017 	ldw	r4,0(r16)
    4c0c:	dfc00415 	stw	ra,16(sp)
    4c10:	dc800215 	stw	r18,8(sp)
    4c14:	20800e17 	ldw	r2,56(r4)
    4c18:	dc400115 	stw	r17,4(sp)
    4c1c:	1000021e 	bne	r2,zero,4c28 <__sfp+0x38>
    4c20:	00049e40 	call	49e4 <__sinit.part.1>
    4c24:	81000017 	ldw	r4,0(r16)
    4c28:	2480b804 	addi	r18,r4,736
    4c2c:	047fffc4 	movi	r17,-1
    4c30:	91000117 	ldw	r4,4(r18)
    4c34:	94000217 	ldw	r16,8(r18)
    4c38:	213fffc4 	addi	r4,r4,-1
    4c3c:	20000a16 	blt	r4,zero,4c68 <__sfp+0x78>
    4c40:	8080030f 	ldh	r2,12(r16)
    4c44:	10000c26 	beq	r2,zero,4c78 <__sfp+0x88>
    4c48:	80c01d04 	addi	r3,r16,116
    4c4c:	00000206 	br	4c58 <__sfp+0x68>
    4c50:	18bfe60f 	ldh	r2,-104(r3)
    4c54:	10000826 	beq	r2,zero,4c78 <__sfp+0x88>
    4c58:	213fffc4 	addi	r4,r4,-1
    4c5c:	1c3ffd04 	addi	r16,r3,-12
    4c60:	18c01a04 	addi	r3,r3,104
    4c64:	247ffa1e 	bne	r4,r17,4c50 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004c50>
    4c68:	90800017 	ldw	r2,0(r18)
    4c6c:	10001d26 	beq	r2,zero,4ce4 <__sfp+0xf4>
    4c70:	1025883a 	mov	r18,r2
    4c74:	003fee06 	br	4c30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004c30>
    4c78:	00bfffc4 	movi	r2,-1
    4c7c:	8080038d 	sth	r2,14(r16)
    4c80:	00800044 	movi	r2,1
    4c84:	8080030d 	sth	r2,12(r16)
    4c88:	80001915 	stw	zero,100(r16)
    4c8c:	80000015 	stw	zero,0(r16)
    4c90:	80000215 	stw	zero,8(r16)
    4c94:	80000115 	stw	zero,4(r16)
    4c98:	80000415 	stw	zero,16(r16)
    4c9c:	80000515 	stw	zero,20(r16)
    4ca0:	80000615 	stw	zero,24(r16)
    4ca4:	01800204 	movi	r6,8
    4ca8:	000b883a 	mov	r5,zero
    4cac:	81001704 	addi	r4,r16,92
    4cb0:	0005ffc0 	call	5ffc <memset>
    4cb4:	8005883a 	mov	r2,r16
    4cb8:	80000c15 	stw	zero,48(r16)
    4cbc:	80000d15 	stw	zero,52(r16)
    4cc0:	80001115 	stw	zero,68(r16)
    4cc4:	80001215 	stw	zero,72(r16)
    4cc8:	dfc00417 	ldw	ra,16(sp)
    4ccc:	dcc00317 	ldw	r19,12(sp)
    4cd0:	dc800217 	ldw	r18,8(sp)
    4cd4:	dc400117 	ldw	r17,4(sp)
    4cd8:	dc000017 	ldw	r16,0(sp)
    4cdc:	dec00504 	addi	sp,sp,20
    4ce0:	f800283a 	ret
    4ce4:	01400104 	movi	r5,4
    4ce8:	9809883a 	mov	r4,r19
    4cec:	0004b880 	call	4b88 <__sfmoreglue>
    4cf0:	90800015 	stw	r2,0(r18)
    4cf4:	103fde1e 	bne	r2,zero,4c70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004c70>
    4cf8:	00800304 	movi	r2,12
    4cfc:	98800015 	stw	r2,0(r19)
    4d00:	0005883a 	mov	r2,zero
    4d04:	003ff006 	br	4cc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004cc8>

00004d08 <_cleanup>:
    4d08:	00800074 	movhi	r2,1
    4d0c:	108e0f04 	addi	r2,r2,14396
    4d10:	11000017 	ldw	r4,0(r2)
    4d14:	01400074 	movhi	r5,1
    4d18:	29631604 	addi	r5,r5,-29608
    4d1c:	00052681 	jmpi	5268 <_fwalk_reent>

00004d20 <__sinit>:
    4d20:	20800e17 	ldw	r2,56(r4)
    4d24:	10000126 	beq	r2,zero,4d2c <__sinit+0xc>
    4d28:	f800283a 	ret
    4d2c:	00049e41 	jmpi	49e4 <__sinit.part.1>

00004d30 <__sfp_lock_acquire>:
    4d30:	f800283a 	ret

00004d34 <__sfp_lock_release>:
    4d34:	f800283a 	ret

00004d38 <__sinit_lock_acquire>:
    4d38:	f800283a 	ret

00004d3c <__sinit_lock_release>:
    4d3c:	f800283a 	ret

00004d40 <__fp_lock_all>:
    4d40:	00800074 	movhi	r2,1
    4d44:	108e1004 	addi	r2,r2,14400
    4d48:	11000017 	ldw	r4,0(r2)
    4d4c:	01400034 	movhi	r5,0
    4d50:	2952e004 	addi	r5,r5,19328
    4d54:	00051a41 	jmpi	51a4 <_fwalk>

00004d58 <__fp_unlock_all>:
    4d58:	00800074 	movhi	r2,1
    4d5c:	108e1004 	addi	r2,r2,14400
    4d60:	11000017 	ldw	r4,0(r2)
    4d64:	01400034 	movhi	r5,0
    4d68:	29527404 	addi	r5,r5,18896
    4d6c:	00051a41 	jmpi	51a4 <_fwalk>

00004d70 <_malloc_trim_r>:
    4d70:	defffb04 	addi	sp,sp,-20
    4d74:	dcc00315 	stw	r19,12(sp)
    4d78:	04c00074 	movhi	r19,1
    4d7c:	dc800215 	stw	r18,8(sp)
    4d80:	dc400115 	stw	r17,4(sp)
    4d84:	dc000015 	stw	r16,0(sp)
    4d88:	dfc00415 	stw	ra,16(sp)
    4d8c:	2821883a 	mov	r16,r5
    4d90:	9cc7c704 	addi	r19,r19,7964
    4d94:	2025883a 	mov	r18,r4
    4d98:	000d9480 	call	d948 <__malloc_lock>
    4d9c:	98800217 	ldw	r2,8(r19)
    4da0:	14400117 	ldw	r17,4(r2)
    4da4:	00bfff04 	movi	r2,-4
    4da8:	88a2703a 	and	r17,r17,r2
    4dac:	8c21c83a 	sub	r16,r17,r16
    4db0:	8403fbc4 	addi	r16,r16,4079
    4db4:	8020d33a 	srli	r16,r16,12
    4db8:	0083ffc4 	movi	r2,4095
    4dbc:	843fffc4 	addi	r16,r16,-1
    4dc0:	8020933a 	slli	r16,r16,12
    4dc4:	1400060e 	bge	r2,r16,4de0 <_malloc_trim_r+0x70>
    4dc8:	000b883a 	mov	r5,zero
    4dcc:	9009883a 	mov	r4,r18
    4dd0:	00071940 	call	7194 <_sbrk_r>
    4dd4:	98c00217 	ldw	r3,8(r19)
    4dd8:	1c47883a 	add	r3,r3,r17
    4ddc:	10c00a26 	beq	r2,r3,4e08 <_malloc_trim_r+0x98>
    4de0:	9009883a 	mov	r4,r18
    4de4:	000d96c0 	call	d96c <__malloc_unlock>
    4de8:	0005883a 	mov	r2,zero
    4dec:	dfc00417 	ldw	ra,16(sp)
    4df0:	dcc00317 	ldw	r19,12(sp)
    4df4:	dc800217 	ldw	r18,8(sp)
    4df8:	dc400117 	ldw	r17,4(sp)
    4dfc:	dc000017 	ldw	r16,0(sp)
    4e00:	dec00504 	addi	sp,sp,20
    4e04:	f800283a 	ret
    4e08:	040bc83a 	sub	r5,zero,r16
    4e0c:	9009883a 	mov	r4,r18
    4e10:	00071940 	call	7194 <_sbrk_r>
    4e14:	00ffffc4 	movi	r3,-1
    4e18:	10c00d26 	beq	r2,r3,4e50 <_malloc_trim_r+0xe0>
    4e1c:	00c00074 	movhi	r3,1
    4e20:	18d5b404 	addi	r3,r3,22224
    4e24:	18800017 	ldw	r2,0(r3)
    4e28:	99000217 	ldw	r4,8(r19)
    4e2c:	8c23c83a 	sub	r17,r17,r16
    4e30:	8c400054 	ori	r17,r17,1
    4e34:	1421c83a 	sub	r16,r2,r16
    4e38:	24400115 	stw	r17,4(r4)
    4e3c:	9009883a 	mov	r4,r18
    4e40:	1c000015 	stw	r16,0(r3)
    4e44:	000d96c0 	call	d96c <__malloc_unlock>
    4e48:	00800044 	movi	r2,1
    4e4c:	003fe706 	br	4dec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004dec>
    4e50:	000b883a 	mov	r5,zero
    4e54:	9009883a 	mov	r4,r18
    4e58:	00071940 	call	7194 <_sbrk_r>
    4e5c:	99000217 	ldw	r4,8(r19)
    4e60:	014003c4 	movi	r5,15
    4e64:	1107c83a 	sub	r3,r2,r4
    4e68:	28ffdd0e 	bge	r5,r3,4de0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004de0>
    4e6c:	01400074 	movhi	r5,1
    4e70:	294e1204 	addi	r5,r5,14408
    4e74:	29400017 	ldw	r5,0(r5)
    4e78:	18c00054 	ori	r3,r3,1
    4e7c:	20c00115 	stw	r3,4(r4)
    4e80:	00c00074 	movhi	r3,1
    4e84:	1145c83a 	sub	r2,r2,r5
    4e88:	18d5b404 	addi	r3,r3,22224
    4e8c:	18800015 	stw	r2,0(r3)
    4e90:	003fd306 	br	4de0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004de0>

00004e94 <_free_r>:
    4e94:	28004126 	beq	r5,zero,4f9c <_free_r+0x108>
    4e98:	defffd04 	addi	sp,sp,-12
    4e9c:	dc400115 	stw	r17,4(sp)
    4ea0:	dc000015 	stw	r16,0(sp)
    4ea4:	2023883a 	mov	r17,r4
    4ea8:	2821883a 	mov	r16,r5
    4eac:	dfc00215 	stw	ra,8(sp)
    4eb0:	000d9480 	call	d948 <__malloc_lock>
    4eb4:	81ffff17 	ldw	r7,-4(r16)
    4eb8:	00bfff84 	movi	r2,-2
    4ebc:	01000074 	movhi	r4,1
    4ec0:	81bffe04 	addi	r6,r16,-8
    4ec4:	3884703a 	and	r2,r7,r2
    4ec8:	2107c704 	addi	r4,r4,7964
    4ecc:	308b883a 	add	r5,r6,r2
    4ed0:	2a400117 	ldw	r9,4(r5)
    4ed4:	22000217 	ldw	r8,8(r4)
    4ed8:	00ffff04 	movi	r3,-4
    4edc:	48c6703a 	and	r3,r9,r3
    4ee0:	2a005726 	beq	r5,r8,5040 <_free_r+0x1ac>
    4ee4:	28c00115 	stw	r3,4(r5)
    4ee8:	39c0004c 	andi	r7,r7,1
    4eec:	3800091e 	bne	r7,zero,4f14 <_free_r+0x80>
    4ef0:	823ffe17 	ldw	r8,-8(r16)
    4ef4:	22400204 	addi	r9,r4,8
    4ef8:	320dc83a 	sub	r6,r6,r8
    4efc:	31c00217 	ldw	r7,8(r6)
    4f00:	1205883a 	add	r2,r2,r8
    4f04:	3a406526 	beq	r7,r9,509c <_free_r+0x208>
    4f08:	32000317 	ldw	r8,12(r6)
    4f0c:	3a000315 	stw	r8,12(r7)
    4f10:	41c00215 	stw	r7,8(r8)
    4f14:	28cf883a 	add	r7,r5,r3
    4f18:	39c00117 	ldw	r7,4(r7)
    4f1c:	39c0004c 	andi	r7,r7,1
    4f20:	38003a26 	beq	r7,zero,500c <_free_r+0x178>
    4f24:	10c00054 	ori	r3,r2,1
    4f28:	30c00115 	stw	r3,4(r6)
    4f2c:	3087883a 	add	r3,r6,r2
    4f30:	18800015 	stw	r2,0(r3)
    4f34:	00c07fc4 	movi	r3,511
    4f38:	18801936 	bltu	r3,r2,4fa0 <_free_r+0x10c>
    4f3c:	1004d0fa 	srli	r2,r2,3
    4f40:	01c00044 	movi	r7,1
    4f44:	21400117 	ldw	r5,4(r4)
    4f48:	10c00044 	addi	r3,r2,1
    4f4c:	18c7883a 	add	r3,r3,r3
    4f50:	1005d0ba 	srai	r2,r2,2
    4f54:	18c7883a 	add	r3,r3,r3
    4f58:	18c7883a 	add	r3,r3,r3
    4f5c:	1907883a 	add	r3,r3,r4
    4f60:	3884983a 	sll	r2,r7,r2
    4f64:	19c00017 	ldw	r7,0(r3)
    4f68:	1a3ffe04 	addi	r8,r3,-8
    4f6c:	1144b03a 	or	r2,r2,r5
    4f70:	32000315 	stw	r8,12(r6)
    4f74:	31c00215 	stw	r7,8(r6)
    4f78:	20800115 	stw	r2,4(r4)
    4f7c:	19800015 	stw	r6,0(r3)
    4f80:	39800315 	stw	r6,12(r7)
    4f84:	8809883a 	mov	r4,r17
    4f88:	dfc00217 	ldw	ra,8(sp)
    4f8c:	dc400117 	ldw	r17,4(sp)
    4f90:	dc000017 	ldw	r16,0(sp)
    4f94:	dec00304 	addi	sp,sp,12
    4f98:	000d96c1 	jmpi	d96c <__malloc_unlock>
    4f9c:	f800283a 	ret
    4fa0:	100ad27a 	srli	r5,r2,9
    4fa4:	00c00104 	movi	r3,4
    4fa8:	19404a36 	bltu	r3,r5,50d4 <_free_r+0x240>
    4fac:	100ad1ba 	srli	r5,r2,6
    4fb0:	28c00e44 	addi	r3,r5,57
    4fb4:	18c7883a 	add	r3,r3,r3
    4fb8:	29400e04 	addi	r5,r5,56
    4fbc:	18c7883a 	add	r3,r3,r3
    4fc0:	18c7883a 	add	r3,r3,r3
    4fc4:	1909883a 	add	r4,r3,r4
    4fc8:	20c00017 	ldw	r3,0(r4)
    4fcc:	01c00074 	movhi	r7,1
    4fd0:	213ffe04 	addi	r4,r4,-8
    4fd4:	39c7c704 	addi	r7,r7,7964
    4fd8:	20c04426 	beq	r4,r3,50ec <_free_r+0x258>
    4fdc:	01ffff04 	movi	r7,-4
    4fe0:	19400117 	ldw	r5,4(r3)
    4fe4:	29ca703a 	and	r5,r5,r7
    4fe8:	1140022e 	bgeu	r2,r5,4ff4 <_free_r+0x160>
    4fec:	18c00217 	ldw	r3,8(r3)
    4ff0:	20fffb1e 	bne	r4,r3,4fe0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004fe0>
    4ff4:	19000317 	ldw	r4,12(r3)
    4ff8:	31000315 	stw	r4,12(r6)
    4ffc:	30c00215 	stw	r3,8(r6)
    5000:	21800215 	stw	r6,8(r4)
    5004:	19800315 	stw	r6,12(r3)
    5008:	003fde06 	br	4f84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004f84>
    500c:	29c00217 	ldw	r7,8(r5)
    5010:	10c5883a 	add	r2,r2,r3
    5014:	00c00074 	movhi	r3,1
    5018:	18c7c904 	addi	r3,r3,7972
    501c:	38c03b26 	beq	r7,r3,510c <_free_r+0x278>
    5020:	2a000317 	ldw	r8,12(r5)
    5024:	11400054 	ori	r5,r2,1
    5028:	3087883a 	add	r3,r6,r2
    502c:	3a000315 	stw	r8,12(r7)
    5030:	41c00215 	stw	r7,8(r8)
    5034:	31400115 	stw	r5,4(r6)
    5038:	18800015 	stw	r2,0(r3)
    503c:	003fbd06 	br	4f34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004f34>
    5040:	39c0004c 	andi	r7,r7,1
    5044:	10c5883a 	add	r2,r2,r3
    5048:	3800071e 	bne	r7,zero,5068 <_free_r+0x1d4>
    504c:	81fffe17 	ldw	r7,-8(r16)
    5050:	31cdc83a 	sub	r6,r6,r7
    5054:	30c00317 	ldw	r3,12(r6)
    5058:	31400217 	ldw	r5,8(r6)
    505c:	11c5883a 	add	r2,r2,r7
    5060:	28c00315 	stw	r3,12(r5)
    5064:	19400215 	stw	r5,8(r3)
    5068:	10c00054 	ori	r3,r2,1
    506c:	30c00115 	stw	r3,4(r6)
    5070:	00c00074 	movhi	r3,1
    5074:	18ce1304 	addi	r3,r3,14412
    5078:	18c00017 	ldw	r3,0(r3)
    507c:	21800215 	stw	r6,8(r4)
    5080:	10ffc036 	bltu	r2,r3,4f84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004f84>
    5084:	00800074 	movhi	r2,1
    5088:	1095a704 	addi	r2,r2,22172
    508c:	11400017 	ldw	r5,0(r2)
    5090:	8809883a 	mov	r4,r17
    5094:	0004d700 	call	4d70 <_malloc_trim_r>
    5098:	003fba06 	br	4f84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004f84>
    509c:	28c9883a 	add	r4,r5,r3
    50a0:	21000117 	ldw	r4,4(r4)
    50a4:	2100004c 	andi	r4,r4,1
    50a8:	2000391e 	bne	r4,zero,5190 <_free_r+0x2fc>
    50ac:	29c00217 	ldw	r7,8(r5)
    50b0:	29000317 	ldw	r4,12(r5)
    50b4:	1885883a 	add	r2,r3,r2
    50b8:	10c00054 	ori	r3,r2,1
    50bc:	39000315 	stw	r4,12(r7)
    50c0:	21c00215 	stw	r7,8(r4)
    50c4:	30c00115 	stw	r3,4(r6)
    50c8:	308d883a 	add	r6,r6,r2
    50cc:	30800015 	stw	r2,0(r6)
    50d0:	003fac06 	br	4f84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004f84>
    50d4:	00c00504 	movi	r3,20
    50d8:	19401536 	bltu	r3,r5,5130 <_free_r+0x29c>
    50dc:	28c01704 	addi	r3,r5,92
    50e0:	18c7883a 	add	r3,r3,r3
    50e4:	294016c4 	addi	r5,r5,91
    50e8:	003fb406 	br	4fbc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004fbc>
    50ec:	280bd0ba 	srai	r5,r5,2
    50f0:	00c00044 	movi	r3,1
    50f4:	38800117 	ldw	r2,4(r7)
    50f8:	194a983a 	sll	r5,r3,r5
    50fc:	2007883a 	mov	r3,r4
    5100:	2884b03a 	or	r2,r5,r2
    5104:	38800115 	stw	r2,4(r7)
    5108:	003fbb06 	br	4ff8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004ff8>
    510c:	21800515 	stw	r6,20(r4)
    5110:	21800415 	stw	r6,16(r4)
    5114:	10c00054 	ori	r3,r2,1
    5118:	31c00315 	stw	r7,12(r6)
    511c:	31c00215 	stw	r7,8(r6)
    5120:	30c00115 	stw	r3,4(r6)
    5124:	308d883a 	add	r6,r6,r2
    5128:	30800015 	stw	r2,0(r6)
    512c:	003f9506 	br	4f84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004f84>
    5130:	00c01504 	movi	r3,84
    5134:	19400536 	bltu	r3,r5,514c <_free_r+0x2b8>
    5138:	100ad33a 	srli	r5,r2,12
    513c:	28c01bc4 	addi	r3,r5,111
    5140:	18c7883a 	add	r3,r3,r3
    5144:	29401b84 	addi	r5,r5,110
    5148:	003f9c06 	br	4fbc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004fbc>
    514c:	00c05504 	movi	r3,340
    5150:	19400536 	bltu	r3,r5,5168 <_free_r+0x2d4>
    5154:	100ad3fa 	srli	r5,r2,15
    5158:	28c01e04 	addi	r3,r5,120
    515c:	18c7883a 	add	r3,r3,r3
    5160:	29401dc4 	addi	r5,r5,119
    5164:	003f9506 	br	4fbc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004fbc>
    5168:	00c15504 	movi	r3,1364
    516c:	19400536 	bltu	r3,r5,5184 <_free_r+0x2f0>
    5170:	100ad4ba 	srli	r5,r2,18
    5174:	28c01f44 	addi	r3,r5,125
    5178:	18c7883a 	add	r3,r3,r3
    517c:	29401f04 	addi	r5,r5,124
    5180:	003f8e06 	br	4fbc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004fbc>
    5184:	00c03f84 	movi	r3,254
    5188:	01401f84 	movi	r5,126
    518c:	003f8b06 	br	4fbc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004fbc>
    5190:	10c00054 	ori	r3,r2,1
    5194:	30c00115 	stw	r3,4(r6)
    5198:	308d883a 	add	r6,r6,r2
    519c:	30800015 	stw	r2,0(r6)
    51a0:	003f7806 	br	4f84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7004f84>

000051a4 <_fwalk>:
    51a4:	defff704 	addi	sp,sp,-36
    51a8:	dd000415 	stw	r20,16(sp)
    51ac:	dfc00815 	stw	ra,32(sp)
    51b0:	ddc00715 	stw	r23,28(sp)
    51b4:	dd800615 	stw	r22,24(sp)
    51b8:	dd400515 	stw	r21,20(sp)
    51bc:	dcc00315 	stw	r19,12(sp)
    51c0:	dc800215 	stw	r18,8(sp)
    51c4:	dc400115 	stw	r17,4(sp)
    51c8:	dc000015 	stw	r16,0(sp)
    51cc:	2500b804 	addi	r20,r4,736
    51d0:	a0002326 	beq	r20,zero,5260 <_fwalk+0xbc>
    51d4:	282b883a 	mov	r21,r5
    51d8:	002f883a 	mov	r23,zero
    51dc:	05800044 	movi	r22,1
    51e0:	04ffffc4 	movi	r19,-1
    51e4:	a4400117 	ldw	r17,4(r20)
    51e8:	a4800217 	ldw	r18,8(r20)
    51ec:	8c7fffc4 	addi	r17,r17,-1
    51f0:	88000d16 	blt	r17,zero,5228 <_fwalk+0x84>
    51f4:	94000304 	addi	r16,r18,12
    51f8:	94800384 	addi	r18,r18,14
    51fc:	8080000b 	ldhu	r2,0(r16)
    5200:	8c7fffc4 	addi	r17,r17,-1
    5204:	813ffd04 	addi	r4,r16,-12
    5208:	b080042e 	bgeu	r22,r2,521c <_fwalk+0x78>
    520c:	9080000f 	ldh	r2,0(r18)
    5210:	14c00226 	beq	r2,r19,521c <_fwalk+0x78>
    5214:	a83ee83a 	callr	r21
    5218:	b8aeb03a 	or	r23,r23,r2
    521c:	84001a04 	addi	r16,r16,104
    5220:	94801a04 	addi	r18,r18,104
    5224:	8cfff51e 	bne	r17,r19,51fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70051fc>
    5228:	a5000017 	ldw	r20,0(r20)
    522c:	a03fed1e 	bne	r20,zero,51e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70051e4>
    5230:	b805883a 	mov	r2,r23
    5234:	dfc00817 	ldw	ra,32(sp)
    5238:	ddc00717 	ldw	r23,28(sp)
    523c:	dd800617 	ldw	r22,24(sp)
    5240:	dd400517 	ldw	r21,20(sp)
    5244:	dd000417 	ldw	r20,16(sp)
    5248:	dcc00317 	ldw	r19,12(sp)
    524c:	dc800217 	ldw	r18,8(sp)
    5250:	dc400117 	ldw	r17,4(sp)
    5254:	dc000017 	ldw	r16,0(sp)
    5258:	dec00904 	addi	sp,sp,36
    525c:	f800283a 	ret
    5260:	002f883a 	mov	r23,zero
    5264:	003ff206 	br	5230 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005230>

00005268 <_fwalk_reent>:
    5268:	defff704 	addi	sp,sp,-36
    526c:	dd000415 	stw	r20,16(sp)
    5270:	dfc00815 	stw	ra,32(sp)
    5274:	ddc00715 	stw	r23,28(sp)
    5278:	dd800615 	stw	r22,24(sp)
    527c:	dd400515 	stw	r21,20(sp)
    5280:	dcc00315 	stw	r19,12(sp)
    5284:	dc800215 	stw	r18,8(sp)
    5288:	dc400115 	stw	r17,4(sp)
    528c:	dc000015 	stw	r16,0(sp)
    5290:	2500b804 	addi	r20,r4,736
    5294:	a0002326 	beq	r20,zero,5324 <_fwalk_reent+0xbc>
    5298:	282b883a 	mov	r21,r5
    529c:	2027883a 	mov	r19,r4
    52a0:	002f883a 	mov	r23,zero
    52a4:	05800044 	movi	r22,1
    52a8:	04bfffc4 	movi	r18,-1
    52ac:	a4400117 	ldw	r17,4(r20)
    52b0:	a4000217 	ldw	r16,8(r20)
    52b4:	8c7fffc4 	addi	r17,r17,-1
    52b8:	88000c16 	blt	r17,zero,52ec <_fwalk_reent+0x84>
    52bc:	84000304 	addi	r16,r16,12
    52c0:	8080000b 	ldhu	r2,0(r16)
    52c4:	8c7fffc4 	addi	r17,r17,-1
    52c8:	817ffd04 	addi	r5,r16,-12
    52cc:	b080052e 	bgeu	r22,r2,52e4 <_fwalk_reent+0x7c>
    52d0:	8080008f 	ldh	r2,2(r16)
    52d4:	9809883a 	mov	r4,r19
    52d8:	14800226 	beq	r2,r18,52e4 <_fwalk_reent+0x7c>
    52dc:	a83ee83a 	callr	r21
    52e0:	b8aeb03a 	or	r23,r23,r2
    52e4:	84001a04 	addi	r16,r16,104
    52e8:	8cbff51e 	bne	r17,r18,52c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70052c0>
    52ec:	a5000017 	ldw	r20,0(r20)
    52f0:	a03fee1e 	bne	r20,zero,52ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70052ac>
    52f4:	b805883a 	mov	r2,r23
    52f8:	dfc00817 	ldw	ra,32(sp)
    52fc:	ddc00717 	ldw	r23,28(sp)
    5300:	dd800617 	ldw	r22,24(sp)
    5304:	dd400517 	ldw	r21,20(sp)
    5308:	dd000417 	ldw	r20,16(sp)
    530c:	dcc00317 	ldw	r19,12(sp)
    5310:	dc800217 	ldw	r18,8(sp)
    5314:	dc400117 	ldw	r17,4(sp)
    5318:	dc000017 	ldw	r16,0(sp)
    531c:	dec00904 	addi	sp,sp,36
    5320:	f800283a 	ret
    5324:	002f883a 	mov	r23,zero
    5328:	003ff206 	br	52f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70052f4>

0000532c <_setlocale_r>:
    532c:	30001b26 	beq	r6,zero,539c <_setlocale_r+0x70>
    5330:	01400074 	movhi	r5,1
    5334:	defffe04 	addi	sp,sp,-8
    5338:	2945ee04 	addi	r5,r5,6072
    533c:	3009883a 	mov	r4,r6
    5340:	dc000015 	stw	r16,0(sp)
    5344:	dfc00115 	stw	ra,4(sp)
    5348:	3021883a 	mov	r16,r6
    534c:	00073240 	call	7324 <strcmp>
    5350:	1000061e 	bne	r2,zero,536c <_setlocale_r+0x40>
    5354:	00800074 	movhi	r2,1
    5358:	1085ed04 	addi	r2,r2,6068
    535c:	dfc00117 	ldw	ra,4(sp)
    5360:	dc000017 	ldw	r16,0(sp)
    5364:	dec00204 	addi	sp,sp,8
    5368:	f800283a 	ret
    536c:	01400074 	movhi	r5,1
    5370:	2945ed04 	addi	r5,r5,6068
    5374:	8009883a 	mov	r4,r16
    5378:	00073240 	call	7324 <strcmp>
    537c:	103ff526 	beq	r2,zero,5354 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005354>
    5380:	01400074 	movhi	r5,1
    5384:	2945d804 	addi	r5,r5,5984
    5388:	8009883a 	mov	r4,r16
    538c:	00073240 	call	7324 <strcmp>
    5390:	103ff026 	beq	r2,zero,5354 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005354>
    5394:	0005883a 	mov	r2,zero
    5398:	003ff006 	br	535c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700535c>
    539c:	00800074 	movhi	r2,1
    53a0:	1085ed04 	addi	r2,r2,6068
    53a4:	f800283a 	ret

000053a8 <__locale_charset>:
    53a8:	00800074 	movhi	r2,1
    53ac:	1087b104 	addi	r2,r2,7876
    53b0:	f800283a 	ret

000053b4 <__locale_mb_cur_max>:
    53b4:	00800074 	movhi	r2,1
    53b8:	108e1104 	addi	r2,r2,14404
    53bc:	10800017 	ldw	r2,0(r2)
    53c0:	f800283a 	ret

000053c4 <__locale_msgcharset>:
    53c4:	00800074 	movhi	r2,1
    53c8:	1087a904 	addi	r2,r2,7844
    53cc:	f800283a 	ret

000053d0 <__locale_cjk_lang>:
    53d0:	0005883a 	mov	r2,zero
    53d4:	f800283a 	ret

000053d8 <_localeconv_r>:
    53d8:	00800074 	movhi	r2,1
    53dc:	1087b904 	addi	r2,r2,7908
    53e0:	f800283a 	ret

000053e4 <setlocale>:
    53e4:	00800074 	movhi	r2,1
    53e8:	108e1004 	addi	r2,r2,14400
    53ec:	280d883a 	mov	r6,r5
    53f0:	200b883a 	mov	r5,r4
    53f4:	11000017 	ldw	r4,0(r2)
    53f8:	000532c1 	jmpi	532c <_setlocale_r>

000053fc <localeconv>:
    53fc:	00800074 	movhi	r2,1
    5400:	1087b904 	addi	r2,r2,7908
    5404:	f800283a 	ret

00005408 <__smakebuf_r>:
    5408:	2880030b 	ldhu	r2,12(r5)
    540c:	10c0008c 	andi	r3,r2,2
    5410:	1800411e 	bne	r3,zero,5518 <__smakebuf_r+0x110>
    5414:	deffec04 	addi	sp,sp,-80
    5418:	dc000f15 	stw	r16,60(sp)
    541c:	2821883a 	mov	r16,r5
    5420:	2940038f 	ldh	r5,14(r5)
    5424:	dc401015 	stw	r17,64(sp)
    5428:	dfc01315 	stw	ra,76(sp)
    542c:	dcc01215 	stw	r19,72(sp)
    5430:	dc801115 	stw	r18,68(sp)
    5434:	2023883a 	mov	r17,r4
    5438:	28001c16 	blt	r5,zero,54ac <__smakebuf_r+0xa4>
    543c:	d80d883a 	mov	r6,sp
    5440:	0008f640 	call	8f64 <_fstat_r>
    5444:	10001816 	blt	r2,zero,54a8 <__smakebuf_r+0xa0>
    5448:	d8800117 	ldw	r2,4(sp)
    544c:	00e00014 	movui	r3,32768
    5450:	10bc000c 	andi	r2,r2,61440
    5454:	14c80020 	cmpeqi	r19,r2,8192
    5458:	10c03726 	beq	r2,r3,5538 <__smakebuf_r+0x130>
    545c:	80c0030b 	ldhu	r3,12(r16)
    5460:	18c20014 	ori	r3,r3,2048
    5464:	80c0030d 	sth	r3,12(r16)
    5468:	00c80004 	movi	r3,8192
    546c:	10c0521e 	bne	r2,r3,55b8 <__smakebuf_r+0x1b0>
    5470:	8140038f 	ldh	r5,14(r16)
    5474:	8809883a 	mov	r4,r17
    5478:	000947c0 	call	947c <_isatty_r>
    547c:	10004c26 	beq	r2,zero,55b0 <__smakebuf_r+0x1a8>
    5480:	8080030b 	ldhu	r2,12(r16)
    5484:	80c010c4 	addi	r3,r16,67
    5488:	80c00015 	stw	r3,0(r16)
    548c:	10800054 	ori	r2,r2,1
    5490:	8080030d 	sth	r2,12(r16)
    5494:	00800044 	movi	r2,1
    5498:	80c00415 	stw	r3,16(r16)
    549c:	80800515 	stw	r2,20(r16)
    54a0:	04810004 	movi	r18,1024
    54a4:	00000706 	br	54c4 <__smakebuf_r+0xbc>
    54a8:	8080030b 	ldhu	r2,12(r16)
    54ac:	10c0200c 	andi	r3,r2,128
    54b0:	18001f1e 	bne	r3,zero,5530 <__smakebuf_r+0x128>
    54b4:	04810004 	movi	r18,1024
    54b8:	10820014 	ori	r2,r2,2048
    54bc:	8080030d 	sth	r2,12(r16)
    54c0:	0027883a 	mov	r19,zero
    54c4:	900b883a 	mov	r5,r18
    54c8:	8809883a 	mov	r4,r17
    54cc:	00055c40 	call	55c4 <_malloc_r>
    54d0:	10002c26 	beq	r2,zero,5584 <__smakebuf_r+0x17c>
    54d4:	80c0030b 	ldhu	r3,12(r16)
    54d8:	01000034 	movhi	r4,0
    54dc:	21127604 	addi	r4,r4,18904
    54e0:	89000f15 	stw	r4,60(r17)
    54e4:	18c02014 	ori	r3,r3,128
    54e8:	80c0030d 	sth	r3,12(r16)
    54ec:	80800015 	stw	r2,0(r16)
    54f0:	80800415 	stw	r2,16(r16)
    54f4:	84800515 	stw	r18,20(r16)
    54f8:	98001a1e 	bne	r19,zero,5564 <__smakebuf_r+0x15c>
    54fc:	dfc01317 	ldw	ra,76(sp)
    5500:	dcc01217 	ldw	r19,72(sp)
    5504:	dc801117 	ldw	r18,68(sp)
    5508:	dc401017 	ldw	r17,64(sp)
    550c:	dc000f17 	ldw	r16,60(sp)
    5510:	dec01404 	addi	sp,sp,80
    5514:	f800283a 	ret
    5518:	288010c4 	addi	r2,r5,67
    551c:	28800015 	stw	r2,0(r5)
    5520:	28800415 	stw	r2,16(r5)
    5524:	00800044 	movi	r2,1
    5528:	28800515 	stw	r2,20(r5)
    552c:	f800283a 	ret
    5530:	04801004 	movi	r18,64
    5534:	003fe006 	br	54b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70054b8>
    5538:	81000a17 	ldw	r4,40(r16)
    553c:	00c00034 	movhi	r3,0
    5540:	18dcb004 	addi	r3,r3,29376
    5544:	20ffc51e 	bne	r4,r3,545c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700545c>
    5548:	8080030b 	ldhu	r2,12(r16)
    554c:	04810004 	movi	r18,1024
    5550:	84801315 	stw	r18,76(r16)
    5554:	1484b03a 	or	r2,r2,r18
    5558:	8080030d 	sth	r2,12(r16)
    555c:	0027883a 	mov	r19,zero
    5560:	003fd806 	br	54c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70054c4>
    5564:	8140038f 	ldh	r5,14(r16)
    5568:	8809883a 	mov	r4,r17
    556c:	000947c0 	call	947c <_isatty_r>
    5570:	103fe226 	beq	r2,zero,54fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70054fc>
    5574:	8080030b 	ldhu	r2,12(r16)
    5578:	10800054 	ori	r2,r2,1
    557c:	8080030d 	sth	r2,12(r16)
    5580:	003fde06 	br	54fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70054fc>
    5584:	8080030b 	ldhu	r2,12(r16)
    5588:	10c0800c 	andi	r3,r2,512
    558c:	183fdb1e 	bne	r3,zero,54fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70054fc>
    5590:	10800094 	ori	r2,r2,2
    5594:	80c010c4 	addi	r3,r16,67
    5598:	8080030d 	sth	r2,12(r16)
    559c:	00800044 	movi	r2,1
    55a0:	80c00015 	stw	r3,0(r16)
    55a4:	80c00415 	stw	r3,16(r16)
    55a8:	80800515 	stw	r2,20(r16)
    55ac:	003fd306 	br	54fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70054fc>
    55b0:	04810004 	movi	r18,1024
    55b4:	003fc306 	br	54c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70054c4>
    55b8:	0027883a 	mov	r19,zero
    55bc:	04810004 	movi	r18,1024
    55c0:	003fc006 	br	54c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70054c4>

000055c4 <_malloc_r>:
    55c4:	defff504 	addi	sp,sp,-44
    55c8:	dc800315 	stw	r18,12(sp)
    55cc:	dfc00a15 	stw	ra,40(sp)
    55d0:	df000915 	stw	fp,36(sp)
    55d4:	ddc00815 	stw	r23,32(sp)
    55d8:	dd800715 	stw	r22,28(sp)
    55dc:	dd400615 	stw	r21,24(sp)
    55e0:	dd000515 	stw	r20,20(sp)
    55e4:	dcc00415 	stw	r19,16(sp)
    55e8:	dc400215 	stw	r17,8(sp)
    55ec:	dc000115 	stw	r16,4(sp)
    55f0:	288002c4 	addi	r2,r5,11
    55f4:	00c00584 	movi	r3,22
    55f8:	2025883a 	mov	r18,r4
    55fc:	18807f2e 	bgeu	r3,r2,57fc <_malloc_r+0x238>
    5600:	047ffe04 	movi	r17,-8
    5604:	1462703a 	and	r17,r2,r17
    5608:	8800a316 	blt	r17,zero,5898 <_malloc_r+0x2d4>
    560c:	8940a236 	bltu	r17,r5,5898 <_malloc_r+0x2d4>
    5610:	000d9480 	call	d948 <__malloc_lock>
    5614:	00807dc4 	movi	r2,503
    5618:	1441e92e 	bgeu	r2,r17,5dc0 <_malloc_r+0x7fc>
    561c:	8804d27a 	srli	r2,r17,9
    5620:	1000a126 	beq	r2,zero,58a8 <_malloc_r+0x2e4>
    5624:	00c00104 	movi	r3,4
    5628:	18811e36 	bltu	r3,r2,5aa4 <_malloc_r+0x4e0>
    562c:	8804d1ba 	srli	r2,r17,6
    5630:	12000e44 	addi	r8,r2,57
    5634:	11c00e04 	addi	r7,r2,56
    5638:	4209883a 	add	r4,r8,r8
    563c:	04c00074 	movhi	r19,1
    5640:	2109883a 	add	r4,r4,r4
    5644:	9cc7c704 	addi	r19,r19,7964
    5648:	2109883a 	add	r4,r4,r4
    564c:	9909883a 	add	r4,r19,r4
    5650:	24000117 	ldw	r16,4(r4)
    5654:	213ffe04 	addi	r4,r4,-8
    5658:	24009726 	beq	r4,r16,58b8 <_malloc_r+0x2f4>
    565c:	80800117 	ldw	r2,4(r16)
    5660:	01bfff04 	movi	r6,-4
    5664:	014003c4 	movi	r5,15
    5668:	1184703a 	and	r2,r2,r6
    566c:	1447c83a 	sub	r3,r2,r17
    5670:	28c00716 	blt	r5,r3,5690 <_malloc_r+0xcc>
    5674:	1800920e 	bge	r3,zero,58c0 <_malloc_r+0x2fc>
    5678:	84000317 	ldw	r16,12(r16)
    567c:	24008e26 	beq	r4,r16,58b8 <_malloc_r+0x2f4>
    5680:	80800117 	ldw	r2,4(r16)
    5684:	1184703a 	and	r2,r2,r6
    5688:	1447c83a 	sub	r3,r2,r17
    568c:	28fff90e 	bge	r5,r3,5674 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005674>
    5690:	3809883a 	mov	r4,r7
    5694:	01800074 	movhi	r6,1
    5698:	9c000417 	ldw	r16,16(r19)
    569c:	3187c704 	addi	r6,r6,7964
    56a0:	32000204 	addi	r8,r6,8
    56a4:	82013426 	beq	r16,r8,5b78 <_malloc_r+0x5b4>
    56a8:	80c00117 	ldw	r3,4(r16)
    56ac:	00bfff04 	movi	r2,-4
    56b0:	188e703a 	and	r7,r3,r2
    56b4:	3c45c83a 	sub	r2,r7,r17
    56b8:	00c003c4 	movi	r3,15
    56bc:	18811f16 	blt	r3,r2,5b3c <_malloc_r+0x578>
    56c0:	32000515 	stw	r8,20(r6)
    56c4:	32000415 	stw	r8,16(r6)
    56c8:	10007f0e 	bge	r2,zero,58c8 <_malloc_r+0x304>
    56cc:	00807fc4 	movi	r2,511
    56d0:	11c0fd36 	bltu	r2,r7,5ac8 <_malloc_r+0x504>
    56d4:	3806d0fa 	srli	r3,r7,3
    56d8:	01c00044 	movi	r7,1
    56dc:	30800117 	ldw	r2,4(r6)
    56e0:	19400044 	addi	r5,r3,1
    56e4:	294b883a 	add	r5,r5,r5
    56e8:	1807d0ba 	srai	r3,r3,2
    56ec:	294b883a 	add	r5,r5,r5
    56f0:	294b883a 	add	r5,r5,r5
    56f4:	298b883a 	add	r5,r5,r6
    56f8:	38c6983a 	sll	r3,r7,r3
    56fc:	29c00017 	ldw	r7,0(r5)
    5700:	2a7ffe04 	addi	r9,r5,-8
    5704:	1886b03a 	or	r3,r3,r2
    5708:	82400315 	stw	r9,12(r16)
    570c:	81c00215 	stw	r7,8(r16)
    5710:	30c00115 	stw	r3,4(r6)
    5714:	2c000015 	stw	r16,0(r5)
    5718:	3c000315 	stw	r16,12(r7)
    571c:	2005d0ba 	srai	r2,r4,2
    5720:	01400044 	movi	r5,1
    5724:	288a983a 	sll	r5,r5,r2
    5728:	19406f36 	bltu	r3,r5,58e8 <_malloc_r+0x324>
    572c:	28c4703a 	and	r2,r5,r3
    5730:	10000a1e 	bne	r2,zero,575c <_malloc_r+0x198>
    5734:	00bfff04 	movi	r2,-4
    5738:	294b883a 	add	r5,r5,r5
    573c:	2088703a 	and	r4,r4,r2
    5740:	28c4703a 	and	r2,r5,r3
    5744:	21000104 	addi	r4,r4,4
    5748:	1000041e 	bne	r2,zero,575c <_malloc_r+0x198>
    574c:	294b883a 	add	r5,r5,r5
    5750:	28c4703a 	and	r2,r5,r3
    5754:	21000104 	addi	r4,r4,4
    5758:	103ffc26 	beq	r2,zero,574c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700574c>
    575c:	02bfff04 	movi	r10,-4
    5760:	024003c4 	movi	r9,15
    5764:	21800044 	addi	r6,r4,1
    5768:	318d883a 	add	r6,r6,r6
    576c:	318d883a 	add	r6,r6,r6
    5770:	318d883a 	add	r6,r6,r6
    5774:	998d883a 	add	r6,r19,r6
    5778:	333ffe04 	addi	r12,r6,-8
    577c:	2017883a 	mov	r11,r4
    5780:	31800104 	addi	r6,r6,4
    5784:	34000017 	ldw	r16,0(r6)
    5788:	31fffd04 	addi	r7,r6,-12
    578c:	81c0041e 	bne	r16,r7,57a0 <_malloc_r+0x1dc>
    5790:	0000fb06 	br	5b80 <_malloc_r+0x5bc>
    5794:	1801030e 	bge	r3,zero,5ba4 <_malloc_r+0x5e0>
    5798:	84000317 	ldw	r16,12(r16)
    579c:	81c0f826 	beq	r16,r7,5b80 <_malloc_r+0x5bc>
    57a0:	80800117 	ldw	r2,4(r16)
    57a4:	1284703a 	and	r2,r2,r10
    57a8:	1447c83a 	sub	r3,r2,r17
    57ac:	48fff90e 	bge	r9,r3,5794 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005794>
    57b0:	80800317 	ldw	r2,12(r16)
    57b4:	81000217 	ldw	r4,8(r16)
    57b8:	89400054 	ori	r5,r17,1
    57bc:	81400115 	stw	r5,4(r16)
    57c0:	20800315 	stw	r2,12(r4)
    57c4:	11000215 	stw	r4,8(r2)
    57c8:	8463883a 	add	r17,r16,r17
    57cc:	9c400515 	stw	r17,20(r19)
    57d0:	9c400415 	stw	r17,16(r19)
    57d4:	18800054 	ori	r2,r3,1
    57d8:	88800115 	stw	r2,4(r17)
    57dc:	8a000315 	stw	r8,12(r17)
    57e0:	8a000215 	stw	r8,8(r17)
    57e4:	88e3883a 	add	r17,r17,r3
    57e8:	88c00015 	stw	r3,0(r17)
    57ec:	9009883a 	mov	r4,r18
    57f0:	000d96c0 	call	d96c <__malloc_unlock>
    57f4:	80800204 	addi	r2,r16,8
    57f8:	00001b06 	br	5868 <_malloc_r+0x2a4>
    57fc:	04400404 	movi	r17,16
    5800:	89402536 	bltu	r17,r5,5898 <_malloc_r+0x2d4>
    5804:	000d9480 	call	d948 <__malloc_lock>
    5808:	00800184 	movi	r2,6
    580c:	01000084 	movi	r4,2
    5810:	04c00074 	movhi	r19,1
    5814:	1085883a 	add	r2,r2,r2
    5818:	9cc7c704 	addi	r19,r19,7964
    581c:	1085883a 	add	r2,r2,r2
    5820:	9885883a 	add	r2,r19,r2
    5824:	14000117 	ldw	r16,4(r2)
    5828:	10fffe04 	addi	r3,r2,-8
    582c:	80c0d926 	beq	r16,r3,5b94 <_malloc_r+0x5d0>
    5830:	80c00117 	ldw	r3,4(r16)
    5834:	81000317 	ldw	r4,12(r16)
    5838:	00bfff04 	movi	r2,-4
    583c:	1884703a 	and	r2,r3,r2
    5840:	81400217 	ldw	r5,8(r16)
    5844:	8085883a 	add	r2,r16,r2
    5848:	10c00117 	ldw	r3,4(r2)
    584c:	29000315 	stw	r4,12(r5)
    5850:	21400215 	stw	r5,8(r4)
    5854:	18c00054 	ori	r3,r3,1
    5858:	10c00115 	stw	r3,4(r2)
    585c:	9009883a 	mov	r4,r18
    5860:	000d96c0 	call	d96c <__malloc_unlock>
    5864:	80800204 	addi	r2,r16,8
    5868:	dfc00a17 	ldw	ra,40(sp)
    586c:	df000917 	ldw	fp,36(sp)
    5870:	ddc00817 	ldw	r23,32(sp)
    5874:	dd800717 	ldw	r22,28(sp)
    5878:	dd400617 	ldw	r21,24(sp)
    587c:	dd000517 	ldw	r20,20(sp)
    5880:	dcc00417 	ldw	r19,16(sp)
    5884:	dc800317 	ldw	r18,12(sp)
    5888:	dc400217 	ldw	r17,8(sp)
    588c:	dc000117 	ldw	r16,4(sp)
    5890:	dec00b04 	addi	sp,sp,44
    5894:	f800283a 	ret
    5898:	00800304 	movi	r2,12
    589c:	90800015 	stw	r2,0(r18)
    58a0:	0005883a 	mov	r2,zero
    58a4:	003ff006 	br	5868 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005868>
    58a8:	01002004 	movi	r4,128
    58ac:	02001004 	movi	r8,64
    58b0:	01c00fc4 	movi	r7,63
    58b4:	003f6106 	br	563c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700563c>
    58b8:	4009883a 	mov	r4,r8
    58bc:	003f7506 	br	5694 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005694>
    58c0:	81000317 	ldw	r4,12(r16)
    58c4:	003fde06 	br	5840 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005840>
    58c8:	81c5883a 	add	r2,r16,r7
    58cc:	11400117 	ldw	r5,4(r2)
    58d0:	9009883a 	mov	r4,r18
    58d4:	29400054 	ori	r5,r5,1
    58d8:	11400115 	stw	r5,4(r2)
    58dc:	000d96c0 	call	d96c <__malloc_unlock>
    58e0:	80800204 	addi	r2,r16,8
    58e4:	003fe006 	br	5868 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005868>
    58e8:	9c000217 	ldw	r16,8(r19)
    58ec:	00bfff04 	movi	r2,-4
    58f0:	85800117 	ldw	r22,4(r16)
    58f4:	b0ac703a 	and	r22,r22,r2
    58f8:	b4400336 	bltu	r22,r17,5908 <_malloc_r+0x344>
    58fc:	b445c83a 	sub	r2,r22,r17
    5900:	00c003c4 	movi	r3,15
    5904:	18805d16 	blt	r3,r2,5a7c <_malloc_r+0x4b8>
    5908:	05c00074 	movhi	r23,1
    590c:	00800074 	movhi	r2,1
    5910:	1095a704 	addi	r2,r2,22172
    5914:	bdce1204 	addi	r23,r23,14408
    5918:	15400017 	ldw	r21,0(r2)
    591c:	b8c00017 	ldw	r3,0(r23)
    5920:	00bfffc4 	movi	r2,-1
    5924:	858d883a 	add	r6,r16,r22
    5928:	8d6b883a 	add	r21,r17,r21
    592c:	1880ea26 	beq	r3,r2,5cd8 <_malloc_r+0x714>
    5930:	ad4403c4 	addi	r21,r21,4111
    5934:	00bc0004 	movi	r2,-4096
    5938:	a8aa703a 	and	r21,r21,r2
    593c:	a80b883a 	mov	r5,r21
    5940:	9009883a 	mov	r4,r18
    5944:	d9800015 	stw	r6,0(sp)
    5948:	00071940 	call	7194 <_sbrk_r>
    594c:	1029883a 	mov	r20,r2
    5950:	00bfffc4 	movi	r2,-1
    5954:	d9800017 	ldw	r6,0(sp)
    5958:	a080e826 	beq	r20,r2,5cfc <_malloc_r+0x738>
    595c:	a180a636 	bltu	r20,r6,5bf8 <_malloc_r+0x634>
    5960:	07000074 	movhi	fp,1
    5964:	e715b404 	addi	fp,fp,22224
    5968:	e0800017 	ldw	r2,0(fp)
    596c:	a887883a 	add	r3,r21,r2
    5970:	e0c00015 	stw	r3,0(fp)
    5974:	3500e626 	beq	r6,r20,5d10 <_malloc_r+0x74c>
    5978:	b9000017 	ldw	r4,0(r23)
    597c:	00bfffc4 	movi	r2,-1
    5980:	2080ee26 	beq	r4,r2,5d3c <_malloc_r+0x778>
    5984:	a185c83a 	sub	r2,r20,r6
    5988:	10c5883a 	add	r2,r2,r3
    598c:	e0800015 	stw	r2,0(fp)
    5990:	a0c001cc 	andi	r3,r20,7
    5994:	1800bc26 	beq	r3,zero,5c88 <_malloc_r+0x6c4>
    5998:	a0e9c83a 	sub	r20,r20,r3
    599c:	00840204 	movi	r2,4104
    59a0:	a5000204 	addi	r20,r20,8
    59a4:	10c7c83a 	sub	r3,r2,r3
    59a8:	a545883a 	add	r2,r20,r21
    59ac:	1083ffcc 	andi	r2,r2,4095
    59b0:	18abc83a 	sub	r21,r3,r2
    59b4:	a80b883a 	mov	r5,r21
    59b8:	9009883a 	mov	r4,r18
    59bc:	00071940 	call	7194 <_sbrk_r>
    59c0:	00ffffc4 	movi	r3,-1
    59c4:	10c0e126 	beq	r2,r3,5d4c <_malloc_r+0x788>
    59c8:	1505c83a 	sub	r2,r2,r20
    59cc:	1545883a 	add	r2,r2,r21
    59d0:	10800054 	ori	r2,r2,1
    59d4:	e0c00017 	ldw	r3,0(fp)
    59d8:	9d000215 	stw	r20,8(r19)
    59dc:	a0800115 	stw	r2,4(r20)
    59e0:	a8c7883a 	add	r3,r21,r3
    59e4:	e0c00015 	stw	r3,0(fp)
    59e8:	84c00e26 	beq	r16,r19,5a24 <_malloc_r+0x460>
    59ec:	018003c4 	movi	r6,15
    59f0:	3580a72e 	bgeu	r6,r22,5c90 <_malloc_r+0x6cc>
    59f4:	81400117 	ldw	r5,4(r16)
    59f8:	013ffe04 	movi	r4,-8
    59fc:	b0bffd04 	addi	r2,r22,-12
    5a00:	1104703a 	and	r2,r2,r4
    5a04:	2900004c 	andi	r4,r5,1
    5a08:	2088b03a 	or	r4,r4,r2
    5a0c:	81000115 	stw	r4,4(r16)
    5a10:	01400144 	movi	r5,5
    5a14:	8089883a 	add	r4,r16,r2
    5a18:	21400115 	stw	r5,4(r4)
    5a1c:	21400215 	stw	r5,8(r4)
    5a20:	3080cd36 	bltu	r6,r2,5d58 <_malloc_r+0x794>
    5a24:	00800074 	movhi	r2,1
    5a28:	1095a604 	addi	r2,r2,22168
    5a2c:	11000017 	ldw	r4,0(r2)
    5a30:	20c0012e 	bgeu	r4,r3,5a38 <_malloc_r+0x474>
    5a34:	10c00015 	stw	r3,0(r2)
    5a38:	00800074 	movhi	r2,1
    5a3c:	1095a504 	addi	r2,r2,22164
    5a40:	11000017 	ldw	r4,0(r2)
    5a44:	9c000217 	ldw	r16,8(r19)
    5a48:	20c0012e 	bgeu	r4,r3,5a50 <_malloc_r+0x48c>
    5a4c:	10c00015 	stw	r3,0(r2)
    5a50:	80c00117 	ldw	r3,4(r16)
    5a54:	00bfff04 	movi	r2,-4
    5a58:	1886703a 	and	r3,r3,r2
    5a5c:	1c45c83a 	sub	r2,r3,r17
    5a60:	1c400236 	bltu	r3,r17,5a6c <_malloc_r+0x4a8>
    5a64:	00c003c4 	movi	r3,15
    5a68:	18800416 	blt	r3,r2,5a7c <_malloc_r+0x4b8>
    5a6c:	9009883a 	mov	r4,r18
    5a70:	000d96c0 	call	d96c <__malloc_unlock>
    5a74:	0005883a 	mov	r2,zero
    5a78:	003f7b06 	br	5868 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005868>
    5a7c:	88c00054 	ori	r3,r17,1
    5a80:	80c00115 	stw	r3,4(r16)
    5a84:	8463883a 	add	r17,r16,r17
    5a88:	10800054 	ori	r2,r2,1
    5a8c:	9c400215 	stw	r17,8(r19)
    5a90:	88800115 	stw	r2,4(r17)
    5a94:	9009883a 	mov	r4,r18
    5a98:	000d96c0 	call	d96c <__malloc_unlock>
    5a9c:	80800204 	addi	r2,r16,8
    5aa0:	003f7106 	br	5868 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005868>
    5aa4:	00c00504 	movi	r3,20
    5aa8:	18804a2e 	bgeu	r3,r2,5bd4 <_malloc_r+0x610>
    5aac:	00c01504 	movi	r3,84
    5ab0:	18806e36 	bltu	r3,r2,5c6c <_malloc_r+0x6a8>
    5ab4:	8804d33a 	srli	r2,r17,12
    5ab8:	12001bc4 	addi	r8,r2,111
    5abc:	11c01b84 	addi	r7,r2,110
    5ac0:	4209883a 	add	r4,r8,r8
    5ac4:	003edd06 	br	563c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700563c>
    5ac8:	3804d27a 	srli	r2,r7,9
    5acc:	00c00104 	movi	r3,4
    5ad0:	1880442e 	bgeu	r3,r2,5be4 <_malloc_r+0x620>
    5ad4:	00c00504 	movi	r3,20
    5ad8:	18808136 	bltu	r3,r2,5ce0 <_malloc_r+0x71c>
    5adc:	11401704 	addi	r5,r2,92
    5ae0:	10c016c4 	addi	r3,r2,91
    5ae4:	294b883a 	add	r5,r5,r5
    5ae8:	294b883a 	add	r5,r5,r5
    5aec:	294b883a 	add	r5,r5,r5
    5af0:	994b883a 	add	r5,r19,r5
    5af4:	28800017 	ldw	r2,0(r5)
    5af8:	01800074 	movhi	r6,1
    5afc:	297ffe04 	addi	r5,r5,-8
    5b00:	3187c704 	addi	r6,r6,7964
    5b04:	28806526 	beq	r5,r2,5c9c <_malloc_r+0x6d8>
    5b08:	01bfff04 	movi	r6,-4
    5b0c:	10c00117 	ldw	r3,4(r2)
    5b10:	1986703a 	and	r3,r3,r6
    5b14:	38c0022e 	bgeu	r7,r3,5b20 <_malloc_r+0x55c>
    5b18:	10800217 	ldw	r2,8(r2)
    5b1c:	28bffb1e 	bne	r5,r2,5b0c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005b0c>
    5b20:	11400317 	ldw	r5,12(r2)
    5b24:	98c00117 	ldw	r3,4(r19)
    5b28:	81400315 	stw	r5,12(r16)
    5b2c:	80800215 	stw	r2,8(r16)
    5b30:	2c000215 	stw	r16,8(r5)
    5b34:	14000315 	stw	r16,12(r2)
    5b38:	003ef806 	br	571c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700571c>
    5b3c:	88c00054 	ori	r3,r17,1
    5b40:	80c00115 	stw	r3,4(r16)
    5b44:	8463883a 	add	r17,r16,r17
    5b48:	34400515 	stw	r17,20(r6)
    5b4c:	34400415 	stw	r17,16(r6)
    5b50:	10c00054 	ori	r3,r2,1
    5b54:	8a000315 	stw	r8,12(r17)
    5b58:	8a000215 	stw	r8,8(r17)
    5b5c:	88c00115 	stw	r3,4(r17)
    5b60:	88a3883a 	add	r17,r17,r2
    5b64:	88800015 	stw	r2,0(r17)
    5b68:	9009883a 	mov	r4,r18
    5b6c:	000d96c0 	call	d96c <__malloc_unlock>
    5b70:	80800204 	addi	r2,r16,8
    5b74:	003f3c06 	br	5868 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005868>
    5b78:	30c00117 	ldw	r3,4(r6)
    5b7c:	003ee706 	br	571c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700571c>
    5b80:	5ac00044 	addi	r11,r11,1
    5b84:	588000cc 	andi	r2,r11,3
    5b88:	31800204 	addi	r6,r6,8
    5b8c:	103efd1e 	bne	r2,zero,5784 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005784>
    5b90:	00002406 	br	5c24 <_malloc_r+0x660>
    5b94:	14000317 	ldw	r16,12(r2)
    5b98:	143f251e 	bne	r2,r16,5830 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005830>
    5b9c:	21000084 	addi	r4,r4,2
    5ba0:	003ebc06 	br	5694 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005694>
    5ba4:	8085883a 	add	r2,r16,r2
    5ba8:	10c00117 	ldw	r3,4(r2)
    5bac:	81000317 	ldw	r4,12(r16)
    5bb0:	81400217 	ldw	r5,8(r16)
    5bb4:	18c00054 	ori	r3,r3,1
    5bb8:	10c00115 	stw	r3,4(r2)
    5bbc:	29000315 	stw	r4,12(r5)
    5bc0:	21400215 	stw	r5,8(r4)
    5bc4:	9009883a 	mov	r4,r18
    5bc8:	000d96c0 	call	d96c <__malloc_unlock>
    5bcc:	80800204 	addi	r2,r16,8
    5bd0:	003f2506 	br	5868 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005868>
    5bd4:	12001704 	addi	r8,r2,92
    5bd8:	11c016c4 	addi	r7,r2,91
    5bdc:	4209883a 	add	r4,r8,r8
    5be0:	003e9606 	br	563c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700563c>
    5be4:	3804d1ba 	srli	r2,r7,6
    5be8:	11400e44 	addi	r5,r2,57
    5bec:	10c00e04 	addi	r3,r2,56
    5bf0:	294b883a 	add	r5,r5,r5
    5bf4:	003fbc06 	br	5ae8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005ae8>
    5bf8:	84ff5926 	beq	r16,r19,5960 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005960>
    5bfc:	00800074 	movhi	r2,1
    5c00:	1087c704 	addi	r2,r2,7964
    5c04:	14000217 	ldw	r16,8(r2)
    5c08:	00bfff04 	movi	r2,-4
    5c0c:	80c00117 	ldw	r3,4(r16)
    5c10:	1886703a 	and	r3,r3,r2
    5c14:	003f9106 	br	5a5c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005a5c>
    5c18:	60800217 	ldw	r2,8(r12)
    5c1c:	213fffc4 	addi	r4,r4,-1
    5c20:	1300651e 	bne	r2,r12,5db8 <_malloc_r+0x7f4>
    5c24:	208000cc 	andi	r2,r4,3
    5c28:	633ffe04 	addi	r12,r12,-8
    5c2c:	103ffa1e 	bne	r2,zero,5c18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005c18>
    5c30:	98800117 	ldw	r2,4(r19)
    5c34:	0146303a 	nor	r3,zero,r5
    5c38:	1884703a 	and	r2,r3,r2
    5c3c:	98800115 	stw	r2,4(r19)
    5c40:	294b883a 	add	r5,r5,r5
    5c44:	117f2836 	bltu	r2,r5,58e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70058e8>
    5c48:	283f2726 	beq	r5,zero,58e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70058e8>
    5c4c:	2886703a 	and	r3,r5,r2
    5c50:	5809883a 	mov	r4,r11
    5c54:	183ec31e 	bne	r3,zero,5764 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005764>
    5c58:	294b883a 	add	r5,r5,r5
    5c5c:	2886703a 	and	r3,r5,r2
    5c60:	21000104 	addi	r4,r4,4
    5c64:	183ffc26 	beq	r3,zero,5c58 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005c58>
    5c68:	003ebe06 	br	5764 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005764>
    5c6c:	00c05504 	movi	r3,340
    5c70:	18801236 	bltu	r3,r2,5cbc <_malloc_r+0x6f8>
    5c74:	8804d3fa 	srli	r2,r17,15
    5c78:	12001e04 	addi	r8,r2,120
    5c7c:	11c01dc4 	addi	r7,r2,119
    5c80:	4209883a 	add	r4,r8,r8
    5c84:	003e6d06 	br	563c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700563c>
    5c88:	00c40004 	movi	r3,4096
    5c8c:	003f4606 	br	59a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70059a8>
    5c90:	00800044 	movi	r2,1
    5c94:	a0800115 	stw	r2,4(r20)
    5c98:	003f7406 	br	5a6c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005a6c>
    5c9c:	1805d0ba 	srai	r2,r3,2
    5ca0:	01c00044 	movi	r7,1
    5ca4:	30c00117 	ldw	r3,4(r6)
    5ca8:	388e983a 	sll	r7,r7,r2
    5cac:	2805883a 	mov	r2,r5
    5cb0:	38c6b03a 	or	r3,r7,r3
    5cb4:	30c00115 	stw	r3,4(r6)
    5cb8:	003f9b06 	br	5b28 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005b28>
    5cbc:	00c15504 	movi	r3,1364
    5cc0:	18801a36 	bltu	r3,r2,5d2c <_malloc_r+0x768>
    5cc4:	8804d4ba 	srli	r2,r17,18
    5cc8:	12001f44 	addi	r8,r2,125
    5ccc:	11c01f04 	addi	r7,r2,124
    5cd0:	4209883a 	add	r4,r8,r8
    5cd4:	003e5906 	br	563c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700563c>
    5cd8:	ad400404 	addi	r21,r21,16
    5cdc:	003f1706 	br	593c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700593c>
    5ce0:	00c01504 	movi	r3,84
    5ce4:	18802336 	bltu	r3,r2,5d74 <_malloc_r+0x7b0>
    5ce8:	3804d33a 	srli	r2,r7,12
    5cec:	11401bc4 	addi	r5,r2,111
    5cf0:	10c01b84 	addi	r3,r2,110
    5cf4:	294b883a 	add	r5,r5,r5
    5cf8:	003f7b06 	br	5ae8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005ae8>
    5cfc:	9c000217 	ldw	r16,8(r19)
    5d00:	00bfff04 	movi	r2,-4
    5d04:	80c00117 	ldw	r3,4(r16)
    5d08:	1886703a 	and	r3,r3,r2
    5d0c:	003f5306 	br	5a5c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005a5c>
    5d10:	3083ffcc 	andi	r2,r6,4095
    5d14:	103f181e 	bne	r2,zero,5978 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005978>
    5d18:	99000217 	ldw	r4,8(r19)
    5d1c:	b545883a 	add	r2,r22,r21
    5d20:	10800054 	ori	r2,r2,1
    5d24:	20800115 	stw	r2,4(r4)
    5d28:	003f3e06 	br	5a24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005a24>
    5d2c:	01003f84 	movi	r4,254
    5d30:	02001fc4 	movi	r8,127
    5d34:	01c01f84 	movi	r7,126
    5d38:	003e4006 	br	563c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700563c>
    5d3c:	00800074 	movhi	r2,1
    5d40:	108e1204 	addi	r2,r2,14408
    5d44:	15000015 	stw	r20,0(r2)
    5d48:	003f1106 	br	5990 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005990>
    5d4c:	00800044 	movi	r2,1
    5d50:	002b883a 	mov	r21,zero
    5d54:	003f1f06 	br	59d4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70059d4>
    5d58:	81400204 	addi	r5,r16,8
    5d5c:	9009883a 	mov	r4,r18
    5d60:	0004e940 	call	4e94 <_free_r>
    5d64:	00800074 	movhi	r2,1
    5d68:	1095b404 	addi	r2,r2,22224
    5d6c:	10c00017 	ldw	r3,0(r2)
    5d70:	003f2c06 	br	5a24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005a24>
    5d74:	00c05504 	movi	r3,340
    5d78:	18800536 	bltu	r3,r2,5d90 <_malloc_r+0x7cc>
    5d7c:	3804d3fa 	srli	r2,r7,15
    5d80:	11401e04 	addi	r5,r2,120
    5d84:	10c01dc4 	addi	r3,r2,119
    5d88:	294b883a 	add	r5,r5,r5
    5d8c:	003f5606 	br	5ae8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005ae8>
    5d90:	00c15504 	movi	r3,1364
    5d94:	18800536 	bltu	r3,r2,5dac <_malloc_r+0x7e8>
    5d98:	3804d4ba 	srli	r2,r7,18
    5d9c:	11401f44 	addi	r5,r2,125
    5da0:	10c01f04 	addi	r3,r2,124
    5da4:	294b883a 	add	r5,r5,r5
    5da8:	003f4f06 	br	5ae8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005ae8>
    5dac:	01403f84 	movi	r5,254
    5db0:	00c01f84 	movi	r3,126
    5db4:	003f4c06 	br	5ae8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005ae8>
    5db8:	98800117 	ldw	r2,4(r19)
    5dbc:	003fa006 	br	5c40 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005c40>
    5dc0:	8808d0fa 	srli	r4,r17,3
    5dc4:	20800044 	addi	r2,r4,1
    5dc8:	1085883a 	add	r2,r2,r2
    5dcc:	003e9006 	br	5810 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005810>

00005dd0 <memchr>:
    5dd0:	208000cc 	andi	r2,r4,3
    5dd4:	280f883a 	mov	r7,r5
    5dd8:	10003426 	beq	r2,zero,5eac <memchr+0xdc>
    5ddc:	30bfffc4 	addi	r2,r6,-1
    5de0:	30001a26 	beq	r6,zero,5e4c <memchr+0x7c>
    5de4:	20c00003 	ldbu	r3,0(r4)
    5de8:	29803fcc 	andi	r6,r5,255
    5dec:	30c0051e 	bne	r6,r3,5e04 <memchr+0x34>
    5df0:	00001806 	br	5e54 <memchr+0x84>
    5df4:	10001526 	beq	r2,zero,5e4c <memchr+0x7c>
    5df8:	20c00003 	ldbu	r3,0(r4)
    5dfc:	10bfffc4 	addi	r2,r2,-1
    5e00:	30c01426 	beq	r6,r3,5e54 <memchr+0x84>
    5e04:	21000044 	addi	r4,r4,1
    5e08:	20c000cc 	andi	r3,r4,3
    5e0c:	183ff91e 	bne	r3,zero,5df4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005df4>
    5e10:	020000c4 	movi	r8,3
    5e14:	40801136 	bltu	r8,r2,5e5c <memchr+0x8c>
    5e18:	10000c26 	beq	r2,zero,5e4c <memchr+0x7c>
    5e1c:	20c00003 	ldbu	r3,0(r4)
    5e20:	29403fcc 	andi	r5,r5,255
    5e24:	28c00b26 	beq	r5,r3,5e54 <memchr+0x84>
    5e28:	20c00044 	addi	r3,r4,1
    5e2c:	39803fcc 	andi	r6,r7,255
    5e30:	2089883a 	add	r4,r4,r2
    5e34:	00000306 	br	5e44 <memchr+0x74>
    5e38:	18c00044 	addi	r3,r3,1
    5e3c:	197fffc3 	ldbu	r5,-1(r3)
    5e40:	31400526 	beq	r6,r5,5e58 <memchr+0x88>
    5e44:	1805883a 	mov	r2,r3
    5e48:	20fffb1e 	bne	r4,r3,5e38 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005e38>
    5e4c:	0005883a 	mov	r2,zero
    5e50:	f800283a 	ret
    5e54:	2005883a 	mov	r2,r4
    5e58:	f800283a 	ret
    5e5c:	28c03fcc 	andi	r3,r5,255
    5e60:	1812923a 	slli	r9,r3,8
    5e64:	02ffbff4 	movhi	r11,65279
    5e68:	02a02074 	movhi	r10,32897
    5e6c:	48d2b03a 	or	r9,r9,r3
    5e70:	4806943a 	slli	r3,r9,16
    5e74:	5affbfc4 	addi	r11,r11,-257
    5e78:	52a02004 	addi	r10,r10,-32640
    5e7c:	48d2b03a 	or	r9,r9,r3
    5e80:	20c00017 	ldw	r3,0(r4)
    5e84:	48c6f03a 	xor	r3,r9,r3
    5e88:	1acd883a 	add	r6,r3,r11
    5e8c:	00c6303a 	nor	r3,zero,r3
    5e90:	30c6703a 	and	r3,r6,r3
    5e94:	1a86703a 	and	r3,r3,r10
    5e98:	183fe01e 	bne	r3,zero,5e1c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005e1c>
    5e9c:	10bfff04 	addi	r2,r2,-4
    5ea0:	21000104 	addi	r4,r4,4
    5ea4:	40bff636 	bltu	r8,r2,5e80 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005e80>
    5ea8:	003fdb06 	br	5e18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005e18>
    5eac:	3005883a 	mov	r2,r6
    5eb0:	003fd706 	br	5e10 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005e10>

00005eb4 <memcpy>:
    5eb4:	defffd04 	addi	sp,sp,-12
    5eb8:	dfc00215 	stw	ra,8(sp)
    5ebc:	dc400115 	stw	r17,4(sp)
    5ec0:	dc000015 	stw	r16,0(sp)
    5ec4:	00c003c4 	movi	r3,15
    5ec8:	2005883a 	mov	r2,r4
    5ecc:	1980452e 	bgeu	r3,r6,5fe4 <memcpy+0x130>
    5ed0:	2906b03a 	or	r3,r5,r4
    5ed4:	18c000cc 	andi	r3,r3,3
    5ed8:	1800441e 	bne	r3,zero,5fec <memcpy+0x138>
    5edc:	347ffc04 	addi	r17,r6,-16
    5ee0:	8822d13a 	srli	r17,r17,4
    5ee4:	28c00104 	addi	r3,r5,4
    5ee8:	23400104 	addi	r13,r4,4
    5eec:	8820913a 	slli	r16,r17,4
    5ef0:	2b000204 	addi	r12,r5,8
    5ef4:	22c00204 	addi	r11,r4,8
    5ef8:	84000504 	addi	r16,r16,20
    5efc:	2a800304 	addi	r10,r5,12
    5f00:	22400304 	addi	r9,r4,12
    5f04:	2c21883a 	add	r16,r5,r16
    5f08:	2811883a 	mov	r8,r5
    5f0c:	200f883a 	mov	r7,r4
    5f10:	41000017 	ldw	r4,0(r8)
    5f14:	1fc00017 	ldw	ra,0(r3)
    5f18:	63c00017 	ldw	r15,0(r12)
    5f1c:	39000015 	stw	r4,0(r7)
    5f20:	53800017 	ldw	r14,0(r10)
    5f24:	6fc00015 	stw	ra,0(r13)
    5f28:	5bc00015 	stw	r15,0(r11)
    5f2c:	4b800015 	stw	r14,0(r9)
    5f30:	18c00404 	addi	r3,r3,16
    5f34:	39c00404 	addi	r7,r7,16
    5f38:	42000404 	addi	r8,r8,16
    5f3c:	6b400404 	addi	r13,r13,16
    5f40:	63000404 	addi	r12,r12,16
    5f44:	5ac00404 	addi	r11,r11,16
    5f48:	52800404 	addi	r10,r10,16
    5f4c:	4a400404 	addi	r9,r9,16
    5f50:	1c3fef1e 	bne	r3,r16,5f10 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005f10>
    5f54:	89c00044 	addi	r7,r17,1
    5f58:	380e913a 	slli	r7,r7,4
    5f5c:	310003cc 	andi	r4,r6,15
    5f60:	02c000c4 	movi	r11,3
    5f64:	11c7883a 	add	r3,r2,r7
    5f68:	29cb883a 	add	r5,r5,r7
    5f6c:	5900212e 	bgeu	r11,r4,5ff4 <memcpy+0x140>
    5f70:	1813883a 	mov	r9,r3
    5f74:	2811883a 	mov	r8,r5
    5f78:	200f883a 	mov	r7,r4
    5f7c:	42800017 	ldw	r10,0(r8)
    5f80:	4a400104 	addi	r9,r9,4
    5f84:	39ffff04 	addi	r7,r7,-4
    5f88:	4abfff15 	stw	r10,-4(r9)
    5f8c:	42000104 	addi	r8,r8,4
    5f90:	59fffa36 	bltu	r11,r7,5f7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005f7c>
    5f94:	213fff04 	addi	r4,r4,-4
    5f98:	2008d0ba 	srli	r4,r4,2
    5f9c:	318000cc 	andi	r6,r6,3
    5fa0:	21000044 	addi	r4,r4,1
    5fa4:	2109883a 	add	r4,r4,r4
    5fa8:	2109883a 	add	r4,r4,r4
    5fac:	1907883a 	add	r3,r3,r4
    5fb0:	290b883a 	add	r5,r5,r4
    5fb4:	30000626 	beq	r6,zero,5fd0 <memcpy+0x11c>
    5fb8:	198d883a 	add	r6,r3,r6
    5fbc:	29c00003 	ldbu	r7,0(r5)
    5fc0:	18c00044 	addi	r3,r3,1
    5fc4:	29400044 	addi	r5,r5,1
    5fc8:	19ffffc5 	stb	r7,-1(r3)
    5fcc:	19bffb1e 	bne	r3,r6,5fbc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005fbc>
    5fd0:	dfc00217 	ldw	ra,8(sp)
    5fd4:	dc400117 	ldw	r17,4(sp)
    5fd8:	dc000017 	ldw	r16,0(sp)
    5fdc:	dec00304 	addi	sp,sp,12
    5fe0:	f800283a 	ret
    5fe4:	2007883a 	mov	r3,r4
    5fe8:	003ff206 	br	5fb4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005fb4>
    5fec:	2007883a 	mov	r3,r4
    5ff0:	003ff106 	br	5fb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005fb8>
    5ff4:	200d883a 	mov	r6,r4
    5ff8:	003fee06 	br	5fb4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7005fb4>

00005ffc <memset>:
    5ffc:	20c000cc 	andi	r3,r4,3
    6000:	2005883a 	mov	r2,r4
    6004:	18004426 	beq	r3,zero,6118 <memset+0x11c>
    6008:	31ffffc4 	addi	r7,r6,-1
    600c:	30004026 	beq	r6,zero,6110 <memset+0x114>
    6010:	2813883a 	mov	r9,r5
    6014:	200d883a 	mov	r6,r4
    6018:	2007883a 	mov	r3,r4
    601c:	00000406 	br	6030 <memset+0x34>
    6020:	3a3fffc4 	addi	r8,r7,-1
    6024:	31800044 	addi	r6,r6,1
    6028:	38003926 	beq	r7,zero,6110 <memset+0x114>
    602c:	400f883a 	mov	r7,r8
    6030:	18c00044 	addi	r3,r3,1
    6034:	32400005 	stb	r9,0(r6)
    6038:	1a0000cc 	andi	r8,r3,3
    603c:	403ff81e 	bne	r8,zero,6020 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006020>
    6040:	010000c4 	movi	r4,3
    6044:	21c02d2e 	bgeu	r4,r7,60fc <memset+0x100>
    6048:	29003fcc 	andi	r4,r5,255
    604c:	200c923a 	slli	r6,r4,8
    6050:	3108b03a 	or	r4,r6,r4
    6054:	200c943a 	slli	r6,r4,16
    6058:	218cb03a 	or	r6,r4,r6
    605c:	010003c4 	movi	r4,15
    6060:	21c0182e 	bgeu	r4,r7,60c4 <memset+0xc8>
    6064:	3b3ffc04 	addi	r12,r7,-16
    6068:	6018d13a 	srli	r12,r12,4
    606c:	1a000104 	addi	r8,r3,4
    6070:	1ac00204 	addi	r11,r3,8
    6074:	6008913a 	slli	r4,r12,4
    6078:	1a800304 	addi	r10,r3,12
    607c:	1813883a 	mov	r9,r3
    6080:	21000504 	addi	r4,r4,20
    6084:	1909883a 	add	r4,r3,r4
    6088:	49800015 	stw	r6,0(r9)
    608c:	41800015 	stw	r6,0(r8)
    6090:	59800015 	stw	r6,0(r11)
    6094:	51800015 	stw	r6,0(r10)
    6098:	42000404 	addi	r8,r8,16
    609c:	4a400404 	addi	r9,r9,16
    60a0:	5ac00404 	addi	r11,r11,16
    60a4:	52800404 	addi	r10,r10,16
    60a8:	413ff71e 	bne	r8,r4,6088 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006088>
    60ac:	63000044 	addi	r12,r12,1
    60b0:	6018913a 	slli	r12,r12,4
    60b4:	39c003cc 	andi	r7,r7,15
    60b8:	010000c4 	movi	r4,3
    60bc:	1b07883a 	add	r3,r3,r12
    60c0:	21c00e2e 	bgeu	r4,r7,60fc <memset+0x100>
    60c4:	1813883a 	mov	r9,r3
    60c8:	3811883a 	mov	r8,r7
    60cc:	010000c4 	movi	r4,3
    60d0:	49800015 	stw	r6,0(r9)
    60d4:	423fff04 	addi	r8,r8,-4
    60d8:	4a400104 	addi	r9,r9,4
    60dc:	223ffc36 	bltu	r4,r8,60d0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70060d0>
    60e0:	393fff04 	addi	r4,r7,-4
    60e4:	2008d0ba 	srli	r4,r4,2
    60e8:	39c000cc 	andi	r7,r7,3
    60ec:	21000044 	addi	r4,r4,1
    60f0:	2109883a 	add	r4,r4,r4
    60f4:	2109883a 	add	r4,r4,r4
    60f8:	1907883a 	add	r3,r3,r4
    60fc:	38000526 	beq	r7,zero,6114 <memset+0x118>
    6100:	19cf883a 	add	r7,r3,r7
    6104:	19400005 	stb	r5,0(r3)
    6108:	18c00044 	addi	r3,r3,1
    610c:	38fffd1e 	bne	r7,r3,6104 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006104>
    6110:	f800283a 	ret
    6114:	f800283a 	ret
    6118:	2007883a 	mov	r3,r4
    611c:	300f883a 	mov	r7,r6
    6120:	003fc706 	br	6040 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006040>

00006124 <_Balloc>:
    6124:	20801317 	ldw	r2,76(r4)
    6128:	defffc04 	addi	sp,sp,-16
    612c:	dc400115 	stw	r17,4(sp)
    6130:	dc000015 	stw	r16,0(sp)
    6134:	dfc00315 	stw	ra,12(sp)
    6138:	dc800215 	stw	r18,8(sp)
    613c:	2023883a 	mov	r17,r4
    6140:	2821883a 	mov	r16,r5
    6144:	10000f26 	beq	r2,zero,6184 <_Balloc+0x60>
    6148:	8407883a 	add	r3,r16,r16
    614c:	18c7883a 	add	r3,r3,r3
    6150:	10c7883a 	add	r3,r2,r3
    6154:	18800017 	ldw	r2,0(r3)
    6158:	10001126 	beq	r2,zero,61a0 <_Balloc+0x7c>
    615c:	11000017 	ldw	r4,0(r2)
    6160:	19000015 	stw	r4,0(r3)
    6164:	10000415 	stw	zero,16(r2)
    6168:	10000315 	stw	zero,12(r2)
    616c:	dfc00317 	ldw	ra,12(sp)
    6170:	dc800217 	ldw	r18,8(sp)
    6174:	dc400117 	ldw	r17,4(sp)
    6178:	dc000017 	ldw	r16,0(sp)
    617c:	dec00404 	addi	sp,sp,16
    6180:	f800283a 	ret
    6184:	01800844 	movi	r6,33
    6188:	01400104 	movi	r5,4
    618c:	0008b940 	call	8b94 <_calloc_r>
    6190:	88801315 	stw	r2,76(r17)
    6194:	103fec1e 	bne	r2,zero,6148 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006148>
    6198:	0005883a 	mov	r2,zero
    619c:	003ff306 	br	616c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700616c>
    61a0:	01400044 	movi	r5,1
    61a4:	2c24983a 	sll	r18,r5,r16
    61a8:	8809883a 	mov	r4,r17
    61ac:	91800144 	addi	r6,r18,5
    61b0:	318d883a 	add	r6,r6,r6
    61b4:	318d883a 	add	r6,r6,r6
    61b8:	0008b940 	call	8b94 <_calloc_r>
    61bc:	103ff626 	beq	r2,zero,6198 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006198>
    61c0:	14000115 	stw	r16,4(r2)
    61c4:	14800215 	stw	r18,8(r2)
    61c8:	003fe606 	br	6164 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006164>

000061cc <_Bfree>:
    61cc:	28000826 	beq	r5,zero,61f0 <_Bfree+0x24>
    61d0:	28c00117 	ldw	r3,4(r5)
    61d4:	20801317 	ldw	r2,76(r4)
    61d8:	18c7883a 	add	r3,r3,r3
    61dc:	18c7883a 	add	r3,r3,r3
    61e0:	10c5883a 	add	r2,r2,r3
    61e4:	10c00017 	ldw	r3,0(r2)
    61e8:	28c00015 	stw	r3,0(r5)
    61ec:	11400015 	stw	r5,0(r2)
    61f0:	f800283a 	ret

000061f4 <__multadd>:
    61f4:	defffa04 	addi	sp,sp,-24
    61f8:	dc800315 	stw	r18,12(sp)
    61fc:	dc400215 	stw	r17,8(sp)
    6200:	dc000115 	stw	r16,4(sp)
    6204:	2823883a 	mov	r17,r5
    6208:	2c000417 	ldw	r16,16(r5)
    620c:	dfc00515 	stw	ra,20(sp)
    6210:	dcc00415 	stw	r19,16(sp)
    6214:	2025883a 	mov	r18,r4
    6218:	29400504 	addi	r5,r5,20
    621c:	0011883a 	mov	r8,zero
    6220:	28c00017 	ldw	r3,0(r5)
    6224:	29400104 	addi	r5,r5,4
    6228:	42000044 	addi	r8,r8,1
    622c:	18bfffcc 	andi	r2,r3,65535
    6230:	1185383a 	mul	r2,r2,r6
    6234:	1806d43a 	srli	r3,r3,16
    6238:	11cf883a 	add	r7,r2,r7
    623c:	3808d43a 	srli	r4,r7,16
    6240:	1987383a 	mul	r3,r3,r6
    6244:	38bfffcc 	andi	r2,r7,65535
    6248:	1907883a 	add	r3,r3,r4
    624c:	1808943a 	slli	r4,r3,16
    6250:	180ed43a 	srli	r7,r3,16
    6254:	2085883a 	add	r2,r4,r2
    6258:	28bfff15 	stw	r2,-4(r5)
    625c:	443ff016 	blt	r8,r16,6220 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006220>
    6260:	38000926 	beq	r7,zero,6288 <__multadd+0x94>
    6264:	88800217 	ldw	r2,8(r17)
    6268:	80800f0e 	bge	r16,r2,62a8 <__multadd+0xb4>
    626c:	80800144 	addi	r2,r16,5
    6270:	1085883a 	add	r2,r2,r2
    6274:	1085883a 	add	r2,r2,r2
    6278:	8885883a 	add	r2,r17,r2
    627c:	11c00015 	stw	r7,0(r2)
    6280:	84000044 	addi	r16,r16,1
    6284:	8c000415 	stw	r16,16(r17)
    6288:	8805883a 	mov	r2,r17
    628c:	dfc00517 	ldw	ra,20(sp)
    6290:	dcc00417 	ldw	r19,16(sp)
    6294:	dc800317 	ldw	r18,12(sp)
    6298:	dc400217 	ldw	r17,8(sp)
    629c:	dc000117 	ldw	r16,4(sp)
    62a0:	dec00604 	addi	sp,sp,24
    62a4:	f800283a 	ret
    62a8:	89400117 	ldw	r5,4(r17)
    62ac:	9009883a 	mov	r4,r18
    62b0:	d9c00015 	stw	r7,0(sp)
    62b4:	29400044 	addi	r5,r5,1
    62b8:	00061240 	call	6124 <_Balloc>
    62bc:	89800417 	ldw	r6,16(r17)
    62c0:	89400304 	addi	r5,r17,12
    62c4:	11000304 	addi	r4,r2,12
    62c8:	31800084 	addi	r6,r6,2
    62cc:	318d883a 	add	r6,r6,r6
    62d0:	318d883a 	add	r6,r6,r6
    62d4:	1027883a 	mov	r19,r2
    62d8:	0005eb40 	call	5eb4 <memcpy>
    62dc:	d9c00017 	ldw	r7,0(sp)
    62e0:	88000a26 	beq	r17,zero,630c <__multadd+0x118>
    62e4:	88c00117 	ldw	r3,4(r17)
    62e8:	90801317 	ldw	r2,76(r18)
    62ec:	18c7883a 	add	r3,r3,r3
    62f0:	18c7883a 	add	r3,r3,r3
    62f4:	10c5883a 	add	r2,r2,r3
    62f8:	10c00017 	ldw	r3,0(r2)
    62fc:	88c00015 	stw	r3,0(r17)
    6300:	14400015 	stw	r17,0(r2)
    6304:	9823883a 	mov	r17,r19
    6308:	003fd806 	br	626c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700626c>
    630c:	9823883a 	mov	r17,r19
    6310:	003fd606 	br	626c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700626c>

00006314 <__s2b>:
    6314:	defff904 	addi	sp,sp,-28
    6318:	dc400115 	stw	r17,4(sp)
    631c:	dc000015 	stw	r16,0(sp)
    6320:	2023883a 	mov	r17,r4
    6324:	2821883a 	mov	r16,r5
    6328:	39000204 	addi	r4,r7,8
    632c:	01400244 	movi	r5,9
    6330:	dcc00315 	stw	r19,12(sp)
    6334:	dc800215 	stw	r18,8(sp)
    6338:	dfc00615 	stw	ra,24(sp)
    633c:	dd400515 	stw	r21,20(sp)
    6340:	dd000415 	stw	r20,16(sp)
    6344:	3825883a 	mov	r18,r7
    6348:	3027883a 	mov	r19,r6
    634c:	000aa400 	call	aa40 <__divsi3>
    6350:	00c00044 	movi	r3,1
    6354:	000b883a 	mov	r5,zero
    6358:	1880030e 	bge	r3,r2,6368 <__s2b+0x54>
    635c:	18c7883a 	add	r3,r3,r3
    6360:	29400044 	addi	r5,r5,1
    6364:	18bffd16 	blt	r3,r2,635c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700635c>
    6368:	8809883a 	mov	r4,r17
    636c:	00061240 	call	6124 <_Balloc>
    6370:	d8c00717 	ldw	r3,28(sp)
    6374:	10c00515 	stw	r3,20(r2)
    6378:	00c00044 	movi	r3,1
    637c:	10c00415 	stw	r3,16(r2)
    6380:	00c00244 	movi	r3,9
    6384:	1cc0210e 	bge	r3,r19,640c <__s2b+0xf8>
    6388:	80eb883a 	add	r21,r16,r3
    638c:	a829883a 	mov	r20,r21
    6390:	84e1883a 	add	r16,r16,r19
    6394:	a1c00007 	ldb	r7,0(r20)
    6398:	01800284 	movi	r6,10
    639c:	a5000044 	addi	r20,r20,1
    63a0:	100b883a 	mov	r5,r2
    63a4:	39fff404 	addi	r7,r7,-48
    63a8:	8809883a 	mov	r4,r17
    63ac:	00061f40 	call	61f4 <__multadd>
    63b0:	a43ff81e 	bne	r20,r16,6394 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006394>
    63b4:	ace1883a 	add	r16,r21,r19
    63b8:	843ffe04 	addi	r16,r16,-8
    63bc:	9c800a0e 	bge	r19,r18,63e8 <__s2b+0xd4>
    63c0:	94e5c83a 	sub	r18,r18,r19
    63c4:	84a5883a 	add	r18,r16,r18
    63c8:	81c00007 	ldb	r7,0(r16)
    63cc:	01800284 	movi	r6,10
    63d0:	84000044 	addi	r16,r16,1
    63d4:	100b883a 	mov	r5,r2
    63d8:	39fff404 	addi	r7,r7,-48
    63dc:	8809883a 	mov	r4,r17
    63e0:	00061f40 	call	61f4 <__multadd>
    63e4:	84bff81e 	bne	r16,r18,63c8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70063c8>
    63e8:	dfc00617 	ldw	ra,24(sp)
    63ec:	dd400517 	ldw	r21,20(sp)
    63f0:	dd000417 	ldw	r20,16(sp)
    63f4:	dcc00317 	ldw	r19,12(sp)
    63f8:	dc800217 	ldw	r18,8(sp)
    63fc:	dc400117 	ldw	r17,4(sp)
    6400:	dc000017 	ldw	r16,0(sp)
    6404:	dec00704 	addi	sp,sp,28
    6408:	f800283a 	ret
    640c:	84000284 	addi	r16,r16,10
    6410:	1827883a 	mov	r19,r3
    6414:	003fe906 	br	63bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70063bc>

00006418 <__hi0bits>:
    6418:	20bfffec 	andhi	r2,r4,65535
    641c:	1000141e 	bne	r2,zero,6470 <__hi0bits+0x58>
    6420:	2008943a 	slli	r4,r4,16
    6424:	00800404 	movi	r2,16
    6428:	20ffc02c 	andhi	r3,r4,65280
    642c:	1800021e 	bne	r3,zero,6438 <__hi0bits+0x20>
    6430:	2008923a 	slli	r4,r4,8
    6434:	10800204 	addi	r2,r2,8
    6438:	20fc002c 	andhi	r3,r4,61440
    643c:	1800021e 	bne	r3,zero,6448 <__hi0bits+0x30>
    6440:	2008913a 	slli	r4,r4,4
    6444:	10800104 	addi	r2,r2,4
    6448:	20f0002c 	andhi	r3,r4,49152
    644c:	1800031e 	bne	r3,zero,645c <__hi0bits+0x44>
    6450:	2109883a 	add	r4,r4,r4
    6454:	10800084 	addi	r2,r2,2
    6458:	2109883a 	add	r4,r4,r4
    645c:	20000316 	blt	r4,zero,646c <__hi0bits+0x54>
    6460:	2110002c 	andhi	r4,r4,16384
    6464:	2000041e 	bne	r4,zero,6478 <__hi0bits+0x60>
    6468:	00800804 	movi	r2,32
    646c:	f800283a 	ret
    6470:	0005883a 	mov	r2,zero
    6474:	003fec06 	br	6428 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006428>
    6478:	10800044 	addi	r2,r2,1
    647c:	f800283a 	ret

00006480 <__lo0bits>:
    6480:	20c00017 	ldw	r3,0(r4)
    6484:	188001cc 	andi	r2,r3,7
    6488:	10000826 	beq	r2,zero,64ac <__lo0bits+0x2c>
    648c:	1880004c 	andi	r2,r3,1
    6490:	1000211e 	bne	r2,zero,6518 <__lo0bits+0x98>
    6494:	1880008c 	andi	r2,r3,2
    6498:	1000211e 	bne	r2,zero,6520 <__lo0bits+0xa0>
    649c:	1806d0ba 	srli	r3,r3,2
    64a0:	00800084 	movi	r2,2
    64a4:	20c00015 	stw	r3,0(r4)
    64a8:	f800283a 	ret
    64ac:	18bfffcc 	andi	r2,r3,65535
    64b0:	10001326 	beq	r2,zero,6500 <__lo0bits+0x80>
    64b4:	0005883a 	mov	r2,zero
    64b8:	19403fcc 	andi	r5,r3,255
    64bc:	2800021e 	bne	r5,zero,64c8 <__lo0bits+0x48>
    64c0:	1806d23a 	srli	r3,r3,8
    64c4:	10800204 	addi	r2,r2,8
    64c8:	194003cc 	andi	r5,r3,15
    64cc:	2800021e 	bne	r5,zero,64d8 <__lo0bits+0x58>
    64d0:	1806d13a 	srli	r3,r3,4
    64d4:	10800104 	addi	r2,r2,4
    64d8:	194000cc 	andi	r5,r3,3
    64dc:	2800021e 	bne	r5,zero,64e8 <__lo0bits+0x68>
    64e0:	1806d0ba 	srli	r3,r3,2
    64e4:	10800084 	addi	r2,r2,2
    64e8:	1940004c 	andi	r5,r3,1
    64ec:	2800081e 	bne	r5,zero,6510 <__lo0bits+0x90>
    64f0:	1806d07a 	srli	r3,r3,1
    64f4:	1800051e 	bne	r3,zero,650c <__lo0bits+0x8c>
    64f8:	00800804 	movi	r2,32
    64fc:	f800283a 	ret
    6500:	1806d43a 	srli	r3,r3,16
    6504:	00800404 	movi	r2,16
    6508:	003feb06 	br	64b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70064b8>
    650c:	10800044 	addi	r2,r2,1
    6510:	20c00015 	stw	r3,0(r4)
    6514:	f800283a 	ret
    6518:	0005883a 	mov	r2,zero
    651c:	f800283a 	ret
    6520:	1806d07a 	srli	r3,r3,1
    6524:	00800044 	movi	r2,1
    6528:	20c00015 	stw	r3,0(r4)
    652c:	f800283a 	ret

00006530 <__i2b>:
    6530:	defffd04 	addi	sp,sp,-12
    6534:	dc000015 	stw	r16,0(sp)
    6538:	04000044 	movi	r16,1
    653c:	dc400115 	stw	r17,4(sp)
    6540:	2823883a 	mov	r17,r5
    6544:	800b883a 	mov	r5,r16
    6548:	dfc00215 	stw	ra,8(sp)
    654c:	00061240 	call	6124 <_Balloc>
    6550:	14400515 	stw	r17,20(r2)
    6554:	14000415 	stw	r16,16(r2)
    6558:	dfc00217 	ldw	ra,8(sp)
    655c:	dc400117 	ldw	r17,4(sp)
    6560:	dc000017 	ldw	r16,0(sp)
    6564:	dec00304 	addi	sp,sp,12
    6568:	f800283a 	ret

0000656c <__multiply>:
    656c:	defffa04 	addi	sp,sp,-24
    6570:	dcc00315 	stw	r19,12(sp)
    6574:	dc800215 	stw	r18,8(sp)
    6578:	34c00417 	ldw	r19,16(r6)
    657c:	2c800417 	ldw	r18,16(r5)
    6580:	dd000415 	stw	r20,16(sp)
    6584:	dc400115 	stw	r17,4(sp)
    6588:	dfc00515 	stw	ra,20(sp)
    658c:	dc000015 	stw	r16,0(sp)
    6590:	2829883a 	mov	r20,r5
    6594:	3023883a 	mov	r17,r6
    6598:	94c0050e 	bge	r18,r19,65b0 <__multiply+0x44>
    659c:	9007883a 	mov	r3,r18
    65a0:	3029883a 	mov	r20,r6
    65a4:	9825883a 	mov	r18,r19
    65a8:	2823883a 	mov	r17,r5
    65ac:	1827883a 	mov	r19,r3
    65b0:	a0800217 	ldw	r2,8(r20)
    65b4:	94e1883a 	add	r16,r18,r19
    65b8:	a1400117 	ldw	r5,4(r20)
    65bc:	1400010e 	bge	r2,r16,65c4 <__multiply+0x58>
    65c0:	29400044 	addi	r5,r5,1
    65c4:	00061240 	call	6124 <_Balloc>
    65c8:	8415883a 	add	r10,r16,r16
    65cc:	12c00504 	addi	r11,r2,20
    65d0:	5295883a 	add	r10,r10,r10
    65d4:	5a95883a 	add	r10,r11,r10
    65d8:	5807883a 	mov	r3,r11
    65dc:	5a80032e 	bgeu	r11,r10,65ec <__multiply+0x80>
    65e0:	18000015 	stw	zero,0(r3)
    65e4:	18c00104 	addi	r3,r3,4
    65e8:	1abffd36 	bltu	r3,r10,65e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70065e0>
    65ec:	9ce7883a 	add	r19,r19,r19
    65f0:	94a5883a 	add	r18,r18,r18
    65f4:	89800504 	addi	r6,r17,20
    65f8:	9ce7883a 	add	r19,r19,r19
    65fc:	a3400504 	addi	r13,r20,20
    6600:	94a5883a 	add	r18,r18,r18
    6604:	34d9883a 	add	r12,r6,r19
    6608:	6c93883a 	add	r9,r13,r18
    660c:	3300422e 	bgeu	r6,r12,6718 <__multiply+0x1ac>
    6610:	37c00017 	ldw	ra,0(r6)
    6614:	fbffffcc 	andi	r15,ra,65535
    6618:	78001b26 	beq	r15,zero,6688 <__multiply+0x11c>
    661c:	5811883a 	mov	r8,r11
    6620:	681d883a 	mov	r14,r13
    6624:	000f883a 	mov	r7,zero
    6628:	71000017 	ldw	r4,0(r14)
    662c:	40c00017 	ldw	r3,0(r8)
    6630:	73800104 	addi	r14,r14,4
    6634:	217fffcc 	andi	r5,r4,65535
    6638:	2bcb383a 	mul	r5,r5,r15
    663c:	2008d43a 	srli	r4,r4,16
    6640:	1c7fffcc 	andi	r17,r3,65535
    6644:	2c4b883a 	add	r5,r5,r17
    6648:	29cb883a 	add	r5,r5,r7
    664c:	23c9383a 	mul	r4,r4,r15
    6650:	1806d43a 	srli	r3,r3,16
    6654:	280ed43a 	srli	r7,r5,16
    6658:	297fffcc 	andi	r5,r5,65535
    665c:	20c7883a 	add	r3,r4,r3
    6660:	19c7883a 	add	r3,r3,r7
    6664:	1808943a 	slli	r4,r3,16
    6668:	4023883a 	mov	r17,r8
    666c:	180ed43a 	srli	r7,r3,16
    6670:	214ab03a 	or	r5,r4,r5
    6674:	41400015 	stw	r5,0(r8)
    6678:	42000104 	addi	r8,r8,4
    667c:	727fea36 	bltu	r14,r9,6628 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006628>
    6680:	89c00115 	stw	r7,4(r17)
    6684:	37c00017 	ldw	ra,0(r6)
    6688:	f83ed43a 	srli	ra,ra,16
    668c:	f8001f26 	beq	ra,zero,670c <__multiply+0x1a0>
    6690:	58c00017 	ldw	r3,0(r11)
    6694:	681d883a 	mov	r14,r13
    6698:	581f883a 	mov	r15,r11
    669c:	1811883a 	mov	r8,r3
    66a0:	5825883a 	mov	r18,r11
    66a4:	000f883a 	mov	r7,zero
    66a8:	00000106 	br	66b0 <__multiply+0x144>
    66ac:	8825883a 	mov	r18,r17
    66b0:	7140000b 	ldhu	r5,0(r14)
    66b4:	4010d43a 	srli	r8,r8,16
    66b8:	193fffcc 	andi	r4,r3,65535
    66bc:	2fcb383a 	mul	r5,r5,ra
    66c0:	7bc00104 	addi	r15,r15,4
    66c4:	73800104 	addi	r14,r14,4
    66c8:	2a0b883a 	add	r5,r5,r8
    66cc:	29cb883a 	add	r5,r5,r7
    66d0:	2806943a 	slli	r3,r5,16
    66d4:	94400104 	addi	r17,r18,4
    66d8:	280ad43a 	srli	r5,r5,16
    66dc:	1908b03a 	or	r4,r3,r4
    66e0:	793fff15 	stw	r4,-4(r15)
    66e4:	70ffff17 	ldw	r3,-4(r14)
    66e8:	8a000017 	ldw	r8,0(r17)
    66ec:	1806d43a 	srli	r3,r3,16
    66f0:	413fffcc 	andi	r4,r8,65535
    66f4:	1fc7383a 	mul	r3,r3,ra
    66f8:	1907883a 	add	r3,r3,r4
    66fc:	1947883a 	add	r3,r3,r5
    6700:	180ed43a 	srli	r7,r3,16
    6704:	727fe936 	bltu	r14,r9,66ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70066ac>
    6708:	90c00115 	stw	r3,4(r18)
    670c:	31800104 	addi	r6,r6,4
    6710:	5ac00104 	addi	r11,r11,4
    6714:	333fbe36 	bltu	r6,r12,6610 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006610>
    6718:	0400090e 	bge	zero,r16,6740 <__multiply+0x1d4>
    671c:	50ffff17 	ldw	r3,-4(r10)
    6720:	52bfff04 	addi	r10,r10,-4
    6724:	18000326 	beq	r3,zero,6734 <__multiply+0x1c8>
    6728:	00000506 	br	6740 <__multiply+0x1d4>
    672c:	50c00017 	ldw	r3,0(r10)
    6730:	1800031e 	bne	r3,zero,6740 <__multiply+0x1d4>
    6734:	843fffc4 	addi	r16,r16,-1
    6738:	52bfff04 	addi	r10,r10,-4
    673c:	803ffb1e 	bne	r16,zero,672c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700672c>
    6740:	14000415 	stw	r16,16(r2)
    6744:	dfc00517 	ldw	ra,20(sp)
    6748:	dd000417 	ldw	r20,16(sp)
    674c:	dcc00317 	ldw	r19,12(sp)
    6750:	dc800217 	ldw	r18,8(sp)
    6754:	dc400117 	ldw	r17,4(sp)
    6758:	dc000017 	ldw	r16,0(sp)
    675c:	dec00604 	addi	sp,sp,24
    6760:	f800283a 	ret

00006764 <__pow5mult>:
    6764:	defffa04 	addi	sp,sp,-24
    6768:	dcc00315 	stw	r19,12(sp)
    676c:	dc000015 	stw	r16,0(sp)
    6770:	dfc00515 	stw	ra,20(sp)
    6774:	dd000415 	stw	r20,16(sp)
    6778:	dc800215 	stw	r18,8(sp)
    677c:	dc400115 	stw	r17,4(sp)
    6780:	308000cc 	andi	r2,r6,3
    6784:	3021883a 	mov	r16,r6
    6788:	2027883a 	mov	r19,r4
    678c:	10002f1e 	bne	r2,zero,684c <__pow5mult+0xe8>
    6790:	2825883a 	mov	r18,r5
    6794:	8021d0ba 	srai	r16,r16,2
    6798:	80001a26 	beq	r16,zero,6804 <__pow5mult+0xa0>
    679c:	9c401217 	ldw	r17,72(r19)
    67a0:	8800061e 	bne	r17,zero,67bc <__pow5mult+0x58>
    67a4:	00003406 	br	6878 <__pow5mult+0x114>
    67a8:	8021d07a 	srai	r16,r16,1
    67ac:	80001526 	beq	r16,zero,6804 <__pow5mult+0xa0>
    67b0:	88800017 	ldw	r2,0(r17)
    67b4:	10001c26 	beq	r2,zero,6828 <__pow5mult+0xc4>
    67b8:	1023883a 	mov	r17,r2
    67bc:	8080004c 	andi	r2,r16,1
    67c0:	103ff926 	beq	r2,zero,67a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70067a8>
    67c4:	880d883a 	mov	r6,r17
    67c8:	900b883a 	mov	r5,r18
    67cc:	9809883a 	mov	r4,r19
    67d0:	000656c0 	call	656c <__multiply>
    67d4:	90001b26 	beq	r18,zero,6844 <__pow5mult+0xe0>
    67d8:	91000117 	ldw	r4,4(r18)
    67dc:	98c01317 	ldw	r3,76(r19)
    67e0:	8021d07a 	srai	r16,r16,1
    67e4:	2109883a 	add	r4,r4,r4
    67e8:	2109883a 	add	r4,r4,r4
    67ec:	1907883a 	add	r3,r3,r4
    67f0:	19000017 	ldw	r4,0(r3)
    67f4:	91000015 	stw	r4,0(r18)
    67f8:	1c800015 	stw	r18,0(r3)
    67fc:	1025883a 	mov	r18,r2
    6800:	803feb1e 	bne	r16,zero,67b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70067b0>
    6804:	9005883a 	mov	r2,r18
    6808:	dfc00517 	ldw	ra,20(sp)
    680c:	dd000417 	ldw	r20,16(sp)
    6810:	dcc00317 	ldw	r19,12(sp)
    6814:	dc800217 	ldw	r18,8(sp)
    6818:	dc400117 	ldw	r17,4(sp)
    681c:	dc000017 	ldw	r16,0(sp)
    6820:	dec00604 	addi	sp,sp,24
    6824:	f800283a 	ret
    6828:	880d883a 	mov	r6,r17
    682c:	880b883a 	mov	r5,r17
    6830:	9809883a 	mov	r4,r19
    6834:	000656c0 	call	656c <__multiply>
    6838:	88800015 	stw	r2,0(r17)
    683c:	10000015 	stw	zero,0(r2)
    6840:	003fdd06 	br	67b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70067b8>
    6844:	1025883a 	mov	r18,r2
    6848:	003fd706 	br	67a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70067a8>
    684c:	10bfffc4 	addi	r2,r2,-1
    6850:	1085883a 	add	r2,r2,r2
    6854:	00c00074 	movhi	r3,1
    6858:	18c5f104 	addi	r3,r3,6084
    685c:	1085883a 	add	r2,r2,r2
    6860:	1885883a 	add	r2,r3,r2
    6864:	11800017 	ldw	r6,0(r2)
    6868:	000f883a 	mov	r7,zero
    686c:	00061f40 	call	61f4 <__multadd>
    6870:	1025883a 	mov	r18,r2
    6874:	003fc706 	br	6794 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006794>
    6878:	05000044 	movi	r20,1
    687c:	a00b883a 	mov	r5,r20
    6880:	9809883a 	mov	r4,r19
    6884:	00061240 	call	6124 <_Balloc>
    6888:	1023883a 	mov	r17,r2
    688c:	00809c44 	movi	r2,625
    6890:	88800515 	stw	r2,20(r17)
    6894:	8d000415 	stw	r20,16(r17)
    6898:	9c401215 	stw	r17,72(r19)
    689c:	88000015 	stw	zero,0(r17)
    68a0:	003fc606 	br	67bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70067bc>

000068a4 <__lshift>:
    68a4:	defff904 	addi	sp,sp,-28
    68a8:	dd400515 	stw	r21,20(sp)
    68ac:	dcc00315 	stw	r19,12(sp)
    68b0:	302bd17a 	srai	r21,r6,5
    68b4:	2cc00417 	ldw	r19,16(r5)
    68b8:	28800217 	ldw	r2,8(r5)
    68bc:	dd000415 	stw	r20,16(sp)
    68c0:	ace7883a 	add	r19,r21,r19
    68c4:	dc800215 	stw	r18,8(sp)
    68c8:	dc400115 	stw	r17,4(sp)
    68cc:	dc000015 	stw	r16,0(sp)
    68d0:	dfc00615 	stw	ra,24(sp)
    68d4:	9c000044 	addi	r16,r19,1
    68d8:	2823883a 	mov	r17,r5
    68dc:	3029883a 	mov	r20,r6
    68e0:	2025883a 	mov	r18,r4
    68e4:	29400117 	ldw	r5,4(r5)
    68e8:	1400030e 	bge	r2,r16,68f8 <__lshift+0x54>
    68ec:	1085883a 	add	r2,r2,r2
    68f0:	29400044 	addi	r5,r5,1
    68f4:	143ffd16 	blt	r2,r16,68ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70068ec>
    68f8:	9009883a 	mov	r4,r18
    68fc:	00061240 	call	6124 <_Balloc>
    6900:	10c00504 	addi	r3,r2,20
    6904:	0540070e 	bge	zero,r21,6924 <__lshift+0x80>
    6908:	ad6b883a 	add	r21,r21,r21
    690c:	ad6b883a 	add	r21,r21,r21
    6910:	1809883a 	mov	r4,r3
    6914:	1d47883a 	add	r3,r3,r21
    6918:	20000015 	stw	zero,0(r4)
    691c:	21000104 	addi	r4,r4,4
    6920:	193ffd1e 	bne	r3,r4,6918 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006918>
    6924:	8a000417 	ldw	r8,16(r17)
    6928:	89000504 	addi	r4,r17,20
    692c:	a18007cc 	andi	r6,r20,31
    6930:	4211883a 	add	r8,r8,r8
    6934:	4211883a 	add	r8,r8,r8
    6938:	2211883a 	add	r8,r4,r8
    693c:	30002326 	beq	r6,zero,69cc <__lshift+0x128>
    6940:	02400804 	movi	r9,32
    6944:	4993c83a 	sub	r9,r9,r6
    6948:	000b883a 	mov	r5,zero
    694c:	21c00017 	ldw	r7,0(r4)
    6950:	1815883a 	mov	r10,r3
    6954:	18c00104 	addi	r3,r3,4
    6958:	398e983a 	sll	r7,r7,r6
    695c:	21000104 	addi	r4,r4,4
    6960:	394ab03a 	or	r5,r7,r5
    6964:	197fff15 	stw	r5,-4(r3)
    6968:	217fff17 	ldw	r5,-4(r4)
    696c:	2a4ad83a 	srl	r5,r5,r9
    6970:	223ff636 	bltu	r4,r8,694c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700694c>
    6974:	51400115 	stw	r5,4(r10)
    6978:	28001a1e 	bne	r5,zero,69e4 <__lshift+0x140>
    697c:	843fffc4 	addi	r16,r16,-1
    6980:	14000415 	stw	r16,16(r2)
    6984:	88000826 	beq	r17,zero,69a8 <__lshift+0x104>
    6988:	89000117 	ldw	r4,4(r17)
    698c:	90c01317 	ldw	r3,76(r18)
    6990:	2109883a 	add	r4,r4,r4
    6994:	2109883a 	add	r4,r4,r4
    6998:	1907883a 	add	r3,r3,r4
    699c:	19000017 	ldw	r4,0(r3)
    69a0:	89000015 	stw	r4,0(r17)
    69a4:	1c400015 	stw	r17,0(r3)
    69a8:	dfc00617 	ldw	ra,24(sp)
    69ac:	dd400517 	ldw	r21,20(sp)
    69b0:	dd000417 	ldw	r20,16(sp)
    69b4:	dcc00317 	ldw	r19,12(sp)
    69b8:	dc800217 	ldw	r18,8(sp)
    69bc:	dc400117 	ldw	r17,4(sp)
    69c0:	dc000017 	ldw	r16,0(sp)
    69c4:	dec00704 	addi	sp,sp,28
    69c8:	f800283a 	ret
    69cc:	21400017 	ldw	r5,0(r4)
    69d0:	18c00104 	addi	r3,r3,4
    69d4:	21000104 	addi	r4,r4,4
    69d8:	197fff15 	stw	r5,-4(r3)
    69dc:	223ffb36 	bltu	r4,r8,69cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70069cc>
    69e0:	003fe606 	br	697c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700697c>
    69e4:	9c000084 	addi	r16,r19,2
    69e8:	003fe406 	br	697c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700697c>

000069ec <__mcmp>:
    69ec:	20800417 	ldw	r2,16(r4)
    69f0:	28c00417 	ldw	r3,16(r5)
    69f4:	10c5c83a 	sub	r2,r2,r3
    69f8:	1000111e 	bne	r2,zero,6a40 <__mcmp+0x54>
    69fc:	18c7883a 	add	r3,r3,r3
    6a00:	18c7883a 	add	r3,r3,r3
    6a04:	21000504 	addi	r4,r4,20
    6a08:	29400504 	addi	r5,r5,20
    6a0c:	20c5883a 	add	r2,r4,r3
    6a10:	28cb883a 	add	r5,r5,r3
    6a14:	00000106 	br	6a1c <__mcmp+0x30>
    6a18:	20800a2e 	bgeu	r4,r2,6a44 <__mcmp+0x58>
    6a1c:	10bfff04 	addi	r2,r2,-4
    6a20:	297fff04 	addi	r5,r5,-4
    6a24:	11800017 	ldw	r6,0(r2)
    6a28:	28c00017 	ldw	r3,0(r5)
    6a2c:	30fffa26 	beq	r6,r3,6a18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006a18>
    6a30:	30c00236 	bltu	r6,r3,6a3c <__mcmp+0x50>
    6a34:	00800044 	movi	r2,1
    6a38:	f800283a 	ret
    6a3c:	00bfffc4 	movi	r2,-1
    6a40:	f800283a 	ret
    6a44:	0005883a 	mov	r2,zero
    6a48:	f800283a 	ret

00006a4c <__mdiff>:
    6a4c:	28c00417 	ldw	r3,16(r5)
    6a50:	30800417 	ldw	r2,16(r6)
    6a54:	defffa04 	addi	sp,sp,-24
    6a58:	dcc00315 	stw	r19,12(sp)
    6a5c:	dc800215 	stw	r18,8(sp)
    6a60:	dfc00515 	stw	ra,20(sp)
    6a64:	dd000415 	stw	r20,16(sp)
    6a68:	dc400115 	stw	r17,4(sp)
    6a6c:	dc000015 	stw	r16,0(sp)
    6a70:	1887c83a 	sub	r3,r3,r2
    6a74:	2825883a 	mov	r18,r5
    6a78:	3027883a 	mov	r19,r6
    6a7c:	1800141e 	bne	r3,zero,6ad0 <__mdiff+0x84>
    6a80:	1085883a 	add	r2,r2,r2
    6a84:	1085883a 	add	r2,r2,r2
    6a88:	2a000504 	addi	r8,r5,20
    6a8c:	34000504 	addi	r16,r6,20
    6a90:	4087883a 	add	r3,r8,r2
    6a94:	8085883a 	add	r2,r16,r2
    6a98:	00000106 	br	6aa0 <__mdiff+0x54>
    6a9c:	40c0592e 	bgeu	r8,r3,6c04 <__mdiff+0x1b8>
    6aa0:	18ffff04 	addi	r3,r3,-4
    6aa4:	10bfff04 	addi	r2,r2,-4
    6aa8:	19c00017 	ldw	r7,0(r3)
    6aac:	11400017 	ldw	r5,0(r2)
    6ab0:	397ffa26 	beq	r7,r5,6a9c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006a9c>
    6ab4:	3940592e 	bgeu	r7,r5,6c1c <__mdiff+0x1d0>
    6ab8:	9005883a 	mov	r2,r18
    6abc:	4023883a 	mov	r17,r8
    6ac0:	9825883a 	mov	r18,r19
    6ac4:	05000044 	movi	r20,1
    6ac8:	1027883a 	mov	r19,r2
    6acc:	00000406 	br	6ae0 <__mdiff+0x94>
    6ad0:	18005616 	blt	r3,zero,6c2c <__mdiff+0x1e0>
    6ad4:	34400504 	addi	r17,r6,20
    6ad8:	2c000504 	addi	r16,r5,20
    6adc:	0029883a 	mov	r20,zero
    6ae0:	91400117 	ldw	r5,4(r18)
    6ae4:	00061240 	call	6124 <_Balloc>
    6ae8:	92400417 	ldw	r9,16(r18)
    6aec:	9b000417 	ldw	r12,16(r19)
    6af0:	12c00504 	addi	r11,r2,20
    6af4:	4a51883a 	add	r8,r9,r9
    6af8:	6319883a 	add	r12,r12,r12
    6afc:	4211883a 	add	r8,r8,r8
    6b00:	6319883a 	add	r12,r12,r12
    6b04:	15000315 	stw	r20,12(r2)
    6b08:	8211883a 	add	r8,r16,r8
    6b0c:	8b19883a 	add	r12,r17,r12
    6b10:	0007883a 	mov	r3,zero
    6b14:	81400017 	ldw	r5,0(r16)
    6b18:	89c00017 	ldw	r7,0(r17)
    6b1c:	59800104 	addi	r6,r11,4
    6b20:	293fffcc 	andi	r4,r5,65535
    6b24:	20c7883a 	add	r3,r4,r3
    6b28:	393fffcc 	andi	r4,r7,65535
    6b2c:	1909c83a 	sub	r4,r3,r4
    6b30:	280ad43a 	srli	r5,r5,16
    6b34:	380ed43a 	srli	r7,r7,16
    6b38:	2007d43a 	srai	r3,r4,16
    6b3c:	213fffcc 	andi	r4,r4,65535
    6b40:	29cbc83a 	sub	r5,r5,r7
    6b44:	28c7883a 	add	r3,r5,r3
    6b48:	180a943a 	slli	r5,r3,16
    6b4c:	8c400104 	addi	r17,r17,4
    6b50:	84000104 	addi	r16,r16,4
    6b54:	2908b03a 	or	r4,r5,r4
    6b58:	59000015 	stw	r4,0(r11)
    6b5c:	1807d43a 	srai	r3,r3,16
    6b60:	3015883a 	mov	r10,r6
    6b64:	3017883a 	mov	r11,r6
    6b68:	8b3fea36 	bltu	r17,r12,6b14 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006b14>
    6b6c:	8200162e 	bgeu	r16,r8,6bc8 <__mdiff+0x17c>
    6b70:	8017883a 	mov	r11,r16
    6b74:	59400017 	ldw	r5,0(r11)
    6b78:	31800104 	addi	r6,r6,4
    6b7c:	5ac00104 	addi	r11,r11,4
    6b80:	293fffcc 	andi	r4,r5,65535
    6b84:	20c7883a 	add	r3,r4,r3
    6b88:	280ed43a 	srli	r7,r5,16
    6b8c:	180bd43a 	srai	r5,r3,16
    6b90:	193fffcc 	andi	r4,r3,65535
    6b94:	3947883a 	add	r3,r7,r5
    6b98:	180a943a 	slli	r5,r3,16
    6b9c:	1807d43a 	srai	r3,r3,16
    6ba0:	2908b03a 	or	r4,r5,r4
    6ba4:	313fff15 	stw	r4,-4(r6)
    6ba8:	5a3ff236 	bltu	r11,r8,6b74 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006b74>
    6bac:	0406303a 	nor	r3,zero,r16
    6bb0:	1a07883a 	add	r3,r3,r8
    6bb4:	1806d0ba 	srli	r3,r3,2
    6bb8:	18c00044 	addi	r3,r3,1
    6bbc:	18c7883a 	add	r3,r3,r3
    6bc0:	18c7883a 	add	r3,r3,r3
    6bc4:	50d5883a 	add	r10,r10,r3
    6bc8:	50ffff04 	addi	r3,r10,-4
    6bcc:	2000041e 	bne	r4,zero,6be0 <__mdiff+0x194>
    6bd0:	18ffff04 	addi	r3,r3,-4
    6bd4:	19000017 	ldw	r4,0(r3)
    6bd8:	4a7fffc4 	addi	r9,r9,-1
    6bdc:	203ffc26 	beq	r4,zero,6bd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006bd0>
    6be0:	12400415 	stw	r9,16(r2)
    6be4:	dfc00517 	ldw	ra,20(sp)
    6be8:	dd000417 	ldw	r20,16(sp)
    6bec:	dcc00317 	ldw	r19,12(sp)
    6bf0:	dc800217 	ldw	r18,8(sp)
    6bf4:	dc400117 	ldw	r17,4(sp)
    6bf8:	dc000017 	ldw	r16,0(sp)
    6bfc:	dec00604 	addi	sp,sp,24
    6c00:	f800283a 	ret
    6c04:	000b883a 	mov	r5,zero
    6c08:	00061240 	call	6124 <_Balloc>
    6c0c:	00c00044 	movi	r3,1
    6c10:	10c00415 	stw	r3,16(r2)
    6c14:	10000515 	stw	zero,20(r2)
    6c18:	003ff206 	br	6be4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006be4>
    6c1c:	8023883a 	mov	r17,r16
    6c20:	0029883a 	mov	r20,zero
    6c24:	4021883a 	mov	r16,r8
    6c28:	003fad06 	br	6ae0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006ae0>
    6c2c:	9005883a 	mov	r2,r18
    6c30:	94400504 	addi	r17,r18,20
    6c34:	9c000504 	addi	r16,r19,20
    6c38:	9825883a 	mov	r18,r19
    6c3c:	05000044 	movi	r20,1
    6c40:	1027883a 	mov	r19,r2
    6c44:	003fa606 	br	6ae0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006ae0>

00006c48 <__ulp>:
    6c48:	295ffc2c 	andhi	r5,r5,32752
    6c4c:	00bf3034 	movhi	r2,64704
    6c50:	2887883a 	add	r3,r5,r2
    6c54:	00c0020e 	bge	zero,r3,6c60 <__ulp+0x18>
    6c58:	0005883a 	mov	r2,zero
    6c5c:	f800283a 	ret
    6c60:	00c7c83a 	sub	r3,zero,r3
    6c64:	1807d53a 	srai	r3,r3,20
    6c68:	008004c4 	movi	r2,19
    6c6c:	10c00b0e 	bge	r2,r3,6c9c <__ulp+0x54>
    6c70:	18bffb04 	addi	r2,r3,-20
    6c74:	01000784 	movi	r4,30
    6c78:	0007883a 	mov	r3,zero
    6c7c:	20800516 	blt	r4,r2,6c94 <__ulp+0x4c>
    6c80:	010007c4 	movi	r4,31
    6c84:	2089c83a 	sub	r4,r4,r2
    6c88:	00800044 	movi	r2,1
    6c8c:	1104983a 	sll	r2,r2,r4
    6c90:	f800283a 	ret
    6c94:	00800044 	movi	r2,1
    6c98:	f800283a 	ret
    6c9c:	01400234 	movhi	r5,8
    6ca0:	28c7d83a 	sra	r3,r5,r3
    6ca4:	0005883a 	mov	r2,zero
    6ca8:	f800283a 	ret

00006cac <__b2d>:
    6cac:	defffa04 	addi	sp,sp,-24
    6cb0:	dc000015 	stw	r16,0(sp)
    6cb4:	24000417 	ldw	r16,16(r4)
    6cb8:	dc400115 	stw	r17,4(sp)
    6cbc:	24400504 	addi	r17,r4,20
    6cc0:	8421883a 	add	r16,r16,r16
    6cc4:	8421883a 	add	r16,r16,r16
    6cc8:	8c21883a 	add	r16,r17,r16
    6ccc:	dc800215 	stw	r18,8(sp)
    6cd0:	84bfff17 	ldw	r18,-4(r16)
    6cd4:	dd000415 	stw	r20,16(sp)
    6cd8:	dcc00315 	stw	r19,12(sp)
    6cdc:	9009883a 	mov	r4,r18
    6ce0:	2829883a 	mov	r20,r5
    6ce4:	dfc00515 	stw	ra,20(sp)
    6ce8:	00064180 	call	6418 <__hi0bits>
    6cec:	00c00804 	movi	r3,32
    6cf0:	1889c83a 	sub	r4,r3,r2
    6cf4:	a1000015 	stw	r4,0(r20)
    6cf8:	01000284 	movi	r4,10
    6cfc:	84ffff04 	addi	r19,r16,-4
    6d00:	20801216 	blt	r4,r2,6d4c <__b2d+0xa0>
    6d04:	018002c4 	movi	r6,11
    6d08:	308dc83a 	sub	r6,r6,r2
    6d0c:	9186d83a 	srl	r3,r18,r6
    6d10:	18cffc34 	orhi	r3,r3,16368
    6d14:	8cc0212e 	bgeu	r17,r19,6d9c <__b2d+0xf0>
    6d18:	813ffe17 	ldw	r4,-8(r16)
    6d1c:	218cd83a 	srl	r6,r4,r6
    6d20:	10800544 	addi	r2,r2,21
    6d24:	9084983a 	sll	r2,r18,r2
    6d28:	1184b03a 	or	r2,r2,r6
    6d2c:	dfc00517 	ldw	ra,20(sp)
    6d30:	dd000417 	ldw	r20,16(sp)
    6d34:	dcc00317 	ldw	r19,12(sp)
    6d38:	dc800217 	ldw	r18,8(sp)
    6d3c:	dc400117 	ldw	r17,4(sp)
    6d40:	dc000017 	ldw	r16,0(sp)
    6d44:	dec00604 	addi	sp,sp,24
    6d48:	f800283a 	ret
    6d4c:	8cc00f2e 	bgeu	r17,r19,6d8c <__b2d+0xe0>
    6d50:	117ffd44 	addi	r5,r2,-11
    6d54:	80bffe17 	ldw	r2,-8(r16)
    6d58:	28000e26 	beq	r5,zero,6d94 <__b2d+0xe8>
    6d5c:	1949c83a 	sub	r4,r3,r5
    6d60:	9164983a 	sll	r18,r18,r5
    6d64:	1106d83a 	srl	r3,r2,r4
    6d68:	81bffe04 	addi	r6,r16,-8
    6d6c:	948ffc34 	orhi	r18,r18,16368
    6d70:	90c6b03a 	or	r3,r18,r3
    6d74:	89800e2e 	bgeu	r17,r6,6db0 <__b2d+0x104>
    6d78:	81bffd17 	ldw	r6,-12(r16)
    6d7c:	1144983a 	sll	r2,r2,r5
    6d80:	310ad83a 	srl	r5,r6,r4
    6d84:	2884b03a 	or	r2,r5,r2
    6d88:	003fe806 	br	6d2c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006d2c>
    6d8c:	10bffd44 	addi	r2,r2,-11
    6d90:	1000041e 	bne	r2,zero,6da4 <__b2d+0xf8>
    6d94:	90cffc34 	orhi	r3,r18,16368
    6d98:	003fe406 	br	6d2c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006d2c>
    6d9c:	000d883a 	mov	r6,zero
    6da0:	003fdf06 	br	6d20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006d20>
    6da4:	90a4983a 	sll	r18,r18,r2
    6da8:	0005883a 	mov	r2,zero
    6dac:	003ff906 	br	6d94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006d94>
    6db0:	1144983a 	sll	r2,r2,r5
    6db4:	003fdd06 	br	6d2c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006d2c>

00006db8 <__d2b>:
    6db8:	defff804 	addi	sp,sp,-32
    6dbc:	dc000215 	stw	r16,8(sp)
    6dc0:	3021883a 	mov	r16,r6
    6dc4:	dc400315 	stw	r17,12(sp)
    6dc8:	8022907a 	slli	r17,r16,1
    6dcc:	dd000615 	stw	r20,24(sp)
    6dd0:	2829883a 	mov	r20,r5
    6dd4:	01400044 	movi	r5,1
    6dd8:	dcc00515 	stw	r19,20(sp)
    6ddc:	dc800415 	stw	r18,16(sp)
    6de0:	dfc00715 	stw	ra,28(sp)
    6de4:	3825883a 	mov	r18,r7
    6de8:	8822d57a 	srli	r17,r17,21
    6dec:	00061240 	call	6124 <_Balloc>
    6df0:	1027883a 	mov	r19,r2
    6df4:	00800434 	movhi	r2,16
    6df8:	10bfffc4 	addi	r2,r2,-1
    6dfc:	808c703a 	and	r6,r16,r2
    6e00:	88000126 	beq	r17,zero,6e08 <__d2b+0x50>
    6e04:	31800434 	orhi	r6,r6,16
    6e08:	d9800015 	stw	r6,0(sp)
    6e0c:	a0002426 	beq	r20,zero,6ea0 <__d2b+0xe8>
    6e10:	d9000104 	addi	r4,sp,4
    6e14:	dd000115 	stw	r20,4(sp)
    6e18:	00064800 	call	6480 <__lo0bits>
    6e1c:	d8c00017 	ldw	r3,0(sp)
    6e20:	10002f1e 	bne	r2,zero,6ee0 <__d2b+0x128>
    6e24:	d9000117 	ldw	r4,4(sp)
    6e28:	99000515 	stw	r4,20(r19)
    6e2c:	1821003a 	cmpeq	r16,r3,zero
    6e30:	01000084 	movi	r4,2
    6e34:	2421c83a 	sub	r16,r4,r16
    6e38:	98c00615 	stw	r3,24(r19)
    6e3c:	9c000415 	stw	r16,16(r19)
    6e40:	88001f1e 	bne	r17,zero,6ec0 <__d2b+0x108>
    6e44:	10bef384 	addi	r2,r2,-1074
    6e48:	90800015 	stw	r2,0(r18)
    6e4c:	00900034 	movhi	r2,16384
    6e50:	10bfffc4 	addi	r2,r2,-1
    6e54:	8085883a 	add	r2,r16,r2
    6e58:	1085883a 	add	r2,r2,r2
    6e5c:	1085883a 	add	r2,r2,r2
    6e60:	9885883a 	add	r2,r19,r2
    6e64:	11000517 	ldw	r4,20(r2)
    6e68:	8020917a 	slli	r16,r16,5
    6e6c:	00064180 	call	6418 <__hi0bits>
    6e70:	d8c00817 	ldw	r3,32(sp)
    6e74:	8085c83a 	sub	r2,r16,r2
    6e78:	18800015 	stw	r2,0(r3)
    6e7c:	9805883a 	mov	r2,r19
    6e80:	dfc00717 	ldw	ra,28(sp)
    6e84:	dd000617 	ldw	r20,24(sp)
    6e88:	dcc00517 	ldw	r19,20(sp)
    6e8c:	dc800417 	ldw	r18,16(sp)
    6e90:	dc400317 	ldw	r17,12(sp)
    6e94:	dc000217 	ldw	r16,8(sp)
    6e98:	dec00804 	addi	sp,sp,32
    6e9c:	f800283a 	ret
    6ea0:	d809883a 	mov	r4,sp
    6ea4:	00064800 	call	6480 <__lo0bits>
    6ea8:	d8c00017 	ldw	r3,0(sp)
    6eac:	04000044 	movi	r16,1
    6eb0:	9c000415 	stw	r16,16(r19)
    6eb4:	98c00515 	stw	r3,20(r19)
    6eb8:	10800804 	addi	r2,r2,32
    6ebc:	883fe126 	beq	r17,zero,6e44 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006e44>
    6ec0:	00c00d44 	movi	r3,53
    6ec4:	8c7ef344 	addi	r17,r17,-1075
    6ec8:	88a3883a 	add	r17,r17,r2
    6ecc:	1885c83a 	sub	r2,r3,r2
    6ed0:	d8c00817 	ldw	r3,32(sp)
    6ed4:	94400015 	stw	r17,0(r18)
    6ed8:	18800015 	stw	r2,0(r3)
    6edc:	003fe706 	br	6e7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006e7c>
    6ee0:	01000804 	movi	r4,32
    6ee4:	2089c83a 	sub	r4,r4,r2
    6ee8:	1908983a 	sll	r4,r3,r4
    6eec:	d9400117 	ldw	r5,4(sp)
    6ef0:	1886d83a 	srl	r3,r3,r2
    6ef4:	2148b03a 	or	r4,r4,r5
    6ef8:	99000515 	stw	r4,20(r19)
    6efc:	d8c00015 	stw	r3,0(sp)
    6f00:	003fca06 	br	6e2c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006e2c>

00006f04 <__ratio>:
    6f04:	defff904 	addi	sp,sp,-28
    6f08:	dc400315 	stw	r17,12(sp)
    6f0c:	2823883a 	mov	r17,r5
    6f10:	d9400104 	addi	r5,sp,4
    6f14:	dfc00615 	stw	ra,24(sp)
    6f18:	dcc00515 	stw	r19,20(sp)
    6f1c:	dc800415 	stw	r18,16(sp)
    6f20:	2027883a 	mov	r19,r4
    6f24:	dc000215 	stw	r16,8(sp)
    6f28:	0006cac0 	call	6cac <__b2d>
    6f2c:	d80b883a 	mov	r5,sp
    6f30:	8809883a 	mov	r4,r17
    6f34:	1025883a 	mov	r18,r2
    6f38:	1821883a 	mov	r16,r3
    6f3c:	0006cac0 	call	6cac <__b2d>
    6f40:	8a000417 	ldw	r8,16(r17)
    6f44:	99000417 	ldw	r4,16(r19)
    6f48:	d9400117 	ldw	r5,4(sp)
    6f4c:	2209c83a 	sub	r4,r4,r8
    6f50:	2010917a 	slli	r8,r4,5
    6f54:	d9000017 	ldw	r4,0(sp)
    6f58:	2909c83a 	sub	r4,r5,r4
    6f5c:	4109883a 	add	r4,r8,r4
    6f60:	01000e0e 	bge	zero,r4,6f9c <__ratio+0x98>
    6f64:	2008953a 	slli	r4,r4,20
    6f68:	2421883a 	add	r16,r4,r16
    6f6c:	100d883a 	mov	r6,r2
    6f70:	180f883a 	mov	r7,r3
    6f74:	9009883a 	mov	r4,r18
    6f78:	800b883a 	mov	r5,r16
    6f7c:	000b4a00 	call	b4a0 <__divdf3>
    6f80:	dfc00617 	ldw	ra,24(sp)
    6f84:	dcc00517 	ldw	r19,20(sp)
    6f88:	dc800417 	ldw	r18,16(sp)
    6f8c:	dc400317 	ldw	r17,12(sp)
    6f90:	dc000217 	ldw	r16,8(sp)
    6f94:	dec00704 	addi	sp,sp,28
    6f98:	f800283a 	ret
    6f9c:	2008953a 	slli	r4,r4,20
    6fa0:	1907c83a 	sub	r3,r3,r4
    6fa4:	003ff106 	br	6f6c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006f6c>

00006fa8 <_mprec_log10>:
    6fa8:	defffe04 	addi	sp,sp,-8
    6fac:	dc000015 	stw	r16,0(sp)
    6fb0:	dfc00115 	stw	ra,4(sp)
    6fb4:	008005c4 	movi	r2,23
    6fb8:	2021883a 	mov	r16,r4
    6fbc:	11000d0e 	bge	r2,r4,6ff4 <_mprec_log10+0x4c>
    6fc0:	0005883a 	mov	r2,zero
    6fc4:	00cffc34 	movhi	r3,16368
    6fc8:	843fffc4 	addi	r16,r16,-1
    6fcc:	000d883a 	mov	r6,zero
    6fd0:	01d00934 	movhi	r7,16420
    6fd4:	1009883a 	mov	r4,r2
    6fd8:	180b883a 	mov	r5,r3
    6fdc:	000bfe00 	call	bfe0 <__muldf3>
    6fe0:	803ff91e 	bne	r16,zero,6fc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7006fc8>
    6fe4:	dfc00117 	ldw	ra,4(sp)
    6fe8:	dc000017 	ldw	r16,0(sp)
    6fec:	dec00204 	addi	sp,sp,8
    6ff0:	f800283a 	ret
    6ff4:	202090fa 	slli	r16,r4,3
    6ff8:	00800074 	movhi	r2,1
    6ffc:	10860804 	addi	r2,r2,6176
    7000:	1421883a 	add	r16,r2,r16
    7004:	80800017 	ldw	r2,0(r16)
    7008:	80c00117 	ldw	r3,4(r16)
    700c:	dfc00117 	ldw	ra,4(sp)
    7010:	dc000017 	ldw	r16,0(sp)
    7014:	dec00204 	addi	sp,sp,8
    7018:	f800283a 	ret

0000701c <__copybits>:
    701c:	297fffc4 	addi	r5,r5,-1
    7020:	280fd17a 	srai	r7,r5,5
    7024:	30c00417 	ldw	r3,16(r6)
    7028:	30800504 	addi	r2,r6,20
    702c:	39c00044 	addi	r7,r7,1
    7030:	18c7883a 	add	r3,r3,r3
    7034:	39cf883a 	add	r7,r7,r7
    7038:	18c7883a 	add	r3,r3,r3
    703c:	39cf883a 	add	r7,r7,r7
    7040:	10c7883a 	add	r3,r2,r3
    7044:	21cf883a 	add	r7,r4,r7
    7048:	10c00d2e 	bgeu	r2,r3,7080 <__copybits+0x64>
    704c:	200b883a 	mov	r5,r4
    7050:	12000017 	ldw	r8,0(r2)
    7054:	29400104 	addi	r5,r5,4
    7058:	10800104 	addi	r2,r2,4
    705c:	2a3fff15 	stw	r8,-4(r5)
    7060:	10fffb36 	bltu	r2,r3,7050 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007050>
    7064:	1985c83a 	sub	r2,r3,r6
    7068:	10bffac4 	addi	r2,r2,-21
    706c:	1004d0ba 	srli	r2,r2,2
    7070:	10800044 	addi	r2,r2,1
    7074:	1085883a 	add	r2,r2,r2
    7078:	1085883a 	add	r2,r2,r2
    707c:	2089883a 	add	r4,r4,r2
    7080:	21c0032e 	bgeu	r4,r7,7090 <__copybits+0x74>
    7084:	20000015 	stw	zero,0(r4)
    7088:	21000104 	addi	r4,r4,4
    708c:	21fffd36 	bltu	r4,r7,7084 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007084>
    7090:	f800283a 	ret

00007094 <__any_on>:
    7094:	20c00417 	ldw	r3,16(r4)
    7098:	2805d17a 	srai	r2,r5,5
    709c:	21000504 	addi	r4,r4,20
    70a0:	18800d0e 	bge	r3,r2,70d8 <__any_on+0x44>
    70a4:	18c7883a 	add	r3,r3,r3
    70a8:	18c7883a 	add	r3,r3,r3
    70ac:	20c7883a 	add	r3,r4,r3
    70b0:	20c0192e 	bgeu	r4,r3,7118 <__any_on+0x84>
    70b4:	18bfff17 	ldw	r2,-4(r3)
    70b8:	18ffff04 	addi	r3,r3,-4
    70bc:	1000041e 	bne	r2,zero,70d0 <__any_on+0x3c>
    70c0:	20c0142e 	bgeu	r4,r3,7114 <__any_on+0x80>
    70c4:	18ffff04 	addi	r3,r3,-4
    70c8:	19400017 	ldw	r5,0(r3)
    70cc:	283ffc26 	beq	r5,zero,70c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70070c0>
    70d0:	00800044 	movi	r2,1
    70d4:	f800283a 	ret
    70d8:	10c00a0e 	bge	r2,r3,7104 <__any_on+0x70>
    70dc:	1085883a 	add	r2,r2,r2
    70e0:	1085883a 	add	r2,r2,r2
    70e4:	294007cc 	andi	r5,r5,31
    70e8:	2087883a 	add	r3,r4,r2
    70ec:	283ff026 	beq	r5,zero,70b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70070b0>
    70f0:	19800017 	ldw	r6,0(r3)
    70f4:	3144d83a 	srl	r2,r6,r5
    70f8:	114a983a 	sll	r5,r2,r5
    70fc:	317ff41e 	bne	r6,r5,70d0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70070d0>
    7100:	003feb06 	br	70b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70070b0>
    7104:	1085883a 	add	r2,r2,r2
    7108:	1085883a 	add	r2,r2,r2
    710c:	2087883a 	add	r3,r4,r2
    7110:	003fe706 	br	70b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70070b0>
    7114:	f800283a 	ret
    7118:	0005883a 	mov	r2,zero
    711c:	f800283a 	ret

00007120 <__fpclassifyd>:
    7120:	00a00034 	movhi	r2,32768
    7124:	10bfffc4 	addi	r2,r2,-1
    7128:	2884703a 	and	r2,r5,r2
    712c:	10000726 	beq	r2,zero,714c <__fpclassifyd+0x2c>
    7130:	00fffc34 	movhi	r3,65520
    7134:	019ff834 	movhi	r6,32736
    7138:	28c7883a 	add	r3,r5,r3
    713c:	31bfffc4 	addi	r6,r6,-1
    7140:	30c00536 	bltu	r6,r3,7158 <__fpclassifyd+0x38>
    7144:	00800104 	movi	r2,4
    7148:	f800283a 	ret
    714c:	2000021e 	bne	r4,zero,7158 <__fpclassifyd+0x38>
    7150:	00800084 	movi	r2,2
    7154:	f800283a 	ret
    7158:	00dffc34 	movhi	r3,32752
    715c:	019ff834 	movhi	r6,32736
    7160:	28cb883a 	add	r5,r5,r3
    7164:	31bfffc4 	addi	r6,r6,-1
    7168:	317ff62e 	bgeu	r6,r5,7144 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007144>
    716c:	01400434 	movhi	r5,16
    7170:	297fffc4 	addi	r5,r5,-1
    7174:	28800236 	bltu	r5,r2,7180 <__fpclassifyd+0x60>
    7178:	008000c4 	movi	r2,3
    717c:	f800283a 	ret
    7180:	10c00226 	beq	r2,r3,718c <__fpclassifyd+0x6c>
    7184:	0005883a 	mov	r2,zero
    7188:	f800283a 	ret
    718c:	2005003a 	cmpeq	r2,r4,zero
    7190:	f800283a 	ret

00007194 <_sbrk_r>:
    7194:	defffd04 	addi	sp,sp,-12
    7198:	dc000015 	stw	r16,0(sp)
    719c:	04000074 	movhi	r16,1
    71a0:	dc400115 	stw	r17,4(sp)
    71a4:	8415a804 	addi	r16,r16,22176
    71a8:	2023883a 	mov	r17,r4
    71ac:	2809883a 	mov	r4,r5
    71b0:	dfc00215 	stw	ra,8(sp)
    71b4:	80000015 	stw	zero,0(r16)
    71b8:	000db2c0 	call	db2c <sbrk>
    71bc:	00ffffc4 	movi	r3,-1
    71c0:	10c00526 	beq	r2,r3,71d8 <_sbrk_r+0x44>
    71c4:	dfc00217 	ldw	ra,8(sp)
    71c8:	dc400117 	ldw	r17,4(sp)
    71cc:	dc000017 	ldw	r16,0(sp)
    71d0:	dec00304 	addi	sp,sp,12
    71d4:	f800283a 	ret
    71d8:	80c00017 	ldw	r3,0(r16)
    71dc:	183ff926 	beq	r3,zero,71c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70071c4>
    71e0:	88c00015 	stw	r3,0(r17)
    71e4:	003ff706 	br	71c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70071c4>

000071e8 <__sread>:
    71e8:	defffe04 	addi	sp,sp,-8
    71ec:	dc000015 	stw	r16,0(sp)
    71f0:	2821883a 	mov	r16,r5
    71f4:	2940038f 	ldh	r5,14(r5)
    71f8:	dfc00115 	stw	ra,4(sp)
    71fc:	000968c0 	call	968c <_read_r>
    7200:	10000716 	blt	r2,zero,7220 <__sread+0x38>
    7204:	80c01417 	ldw	r3,80(r16)
    7208:	1887883a 	add	r3,r3,r2
    720c:	80c01415 	stw	r3,80(r16)
    7210:	dfc00117 	ldw	ra,4(sp)
    7214:	dc000017 	ldw	r16,0(sp)
    7218:	dec00204 	addi	sp,sp,8
    721c:	f800283a 	ret
    7220:	80c0030b 	ldhu	r3,12(r16)
    7224:	18fbffcc 	andi	r3,r3,61439
    7228:	80c0030d 	sth	r3,12(r16)
    722c:	dfc00117 	ldw	ra,4(sp)
    7230:	dc000017 	ldw	r16,0(sp)
    7234:	dec00204 	addi	sp,sp,8
    7238:	f800283a 	ret

0000723c <__seofread>:
    723c:	0005883a 	mov	r2,zero
    7240:	f800283a 	ret

00007244 <__swrite>:
    7244:	2880030b 	ldhu	r2,12(r5)
    7248:	defffb04 	addi	sp,sp,-20
    724c:	dcc00315 	stw	r19,12(sp)
    7250:	dc800215 	stw	r18,8(sp)
    7254:	dc400115 	stw	r17,4(sp)
    7258:	dc000015 	stw	r16,0(sp)
    725c:	dfc00415 	stw	ra,16(sp)
    7260:	10c0400c 	andi	r3,r2,256
    7264:	2821883a 	mov	r16,r5
    7268:	2023883a 	mov	r17,r4
    726c:	3025883a 	mov	r18,r6
    7270:	3827883a 	mov	r19,r7
    7274:	18000526 	beq	r3,zero,728c <__swrite+0x48>
    7278:	2940038f 	ldh	r5,14(r5)
    727c:	01c00084 	movi	r7,2
    7280:	000d883a 	mov	r6,zero
    7284:	00094d00 	call	94d0 <_lseek_r>
    7288:	8080030b 	ldhu	r2,12(r16)
    728c:	8140038f 	ldh	r5,14(r16)
    7290:	10bbffcc 	andi	r2,r2,61439
    7294:	980f883a 	mov	r7,r19
    7298:	900d883a 	mov	r6,r18
    729c:	8809883a 	mov	r4,r17
    72a0:	8080030d 	sth	r2,12(r16)
    72a4:	dfc00417 	ldw	ra,16(sp)
    72a8:	dcc00317 	ldw	r19,12(sp)
    72ac:	dc800217 	ldw	r18,8(sp)
    72b0:	dc400117 	ldw	r17,4(sp)
    72b4:	dc000017 	ldw	r16,0(sp)
    72b8:	dec00504 	addi	sp,sp,20
    72bc:	0008ae01 	jmpi	8ae0 <_write_r>

000072c0 <__sseek>:
    72c0:	defffe04 	addi	sp,sp,-8
    72c4:	dc000015 	stw	r16,0(sp)
    72c8:	2821883a 	mov	r16,r5
    72cc:	2940038f 	ldh	r5,14(r5)
    72d0:	dfc00115 	stw	ra,4(sp)
    72d4:	00094d00 	call	94d0 <_lseek_r>
    72d8:	00ffffc4 	movi	r3,-1
    72dc:	10c00826 	beq	r2,r3,7300 <__sseek+0x40>
    72e0:	80c0030b 	ldhu	r3,12(r16)
    72e4:	80801415 	stw	r2,80(r16)
    72e8:	18c40014 	ori	r3,r3,4096
    72ec:	80c0030d 	sth	r3,12(r16)
    72f0:	dfc00117 	ldw	ra,4(sp)
    72f4:	dc000017 	ldw	r16,0(sp)
    72f8:	dec00204 	addi	sp,sp,8
    72fc:	f800283a 	ret
    7300:	80c0030b 	ldhu	r3,12(r16)
    7304:	18fbffcc 	andi	r3,r3,61439
    7308:	80c0030d 	sth	r3,12(r16)
    730c:	dfc00117 	ldw	ra,4(sp)
    7310:	dc000017 	ldw	r16,0(sp)
    7314:	dec00204 	addi	sp,sp,8
    7318:	f800283a 	ret

0000731c <__sclose>:
    731c:	2940038f 	ldh	r5,14(r5)
    7320:	0008b401 	jmpi	8b40 <_close_r>

00007324 <strcmp>:
    7324:	2144b03a 	or	r2,r4,r5
    7328:	108000cc 	andi	r2,r2,3
    732c:	1000171e 	bne	r2,zero,738c <strcmp+0x68>
    7330:	20800017 	ldw	r2,0(r4)
    7334:	28c00017 	ldw	r3,0(r5)
    7338:	10c0141e 	bne	r2,r3,738c <strcmp+0x68>
    733c:	027fbff4 	movhi	r9,65279
    7340:	4a7fbfc4 	addi	r9,r9,-257
    7344:	0086303a 	nor	r3,zero,r2
    7348:	02202074 	movhi	r8,32897
    734c:	1245883a 	add	r2,r2,r9
    7350:	42202004 	addi	r8,r8,-32640
    7354:	10c4703a 	and	r2,r2,r3
    7358:	1204703a 	and	r2,r2,r8
    735c:	10000226 	beq	r2,zero,7368 <strcmp+0x44>
    7360:	00002306 	br	73f0 <strcmp+0xcc>
    7364:	1000221e 	bne	r2,zero,73f0 <strcmp+0xcc>
    7368:	21000104 	addi	r4,r4,4
    736c:	20c00017 	ldw	r3,0(r4)
    7370:	29400104 	addi	r5,r5,4
    7374:	29800017 	ldw	r6,0(r5)
    7378:	1a4f883a 	add	r7,r3,r9
    737c:	00c4303a 	nor	r2,zero,r3
    7380:	3884703a 	and	r2,r7,r2
    7384:	1204703a 	and	r2,r2,r8
    7388:	19bff626 	beq	r3,r6,7364 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007364>
    738c:	20800003 	ldbu	r2,0(r4)
    7390:	10c03fcc 	andi	r3,r2,255
    7394:	18c0201c 	xori	r3,r3,128
    7398:	18ffe004 	addi	r3,r3,-128
    739c:	18000c26 	beq	r3,zero,73d0 <strcmp+0xac>
    73a0:	29800007 	ldb	r6,0(r5)
    73a4:	19800326 	beq	r3,r6,73b4 <strcmp+0x90>
    73a8:	00001306 	br	73f8 <strcmp+0xd4>
    73ac:	29800007 	ldb	r6,0(r5)
    73b0:	11800b1e 	bne	r2,r6,73e0 <strcmp+0xbc>
    73b4:	21000044 	addi	r4,r4,1
    73b8:	20c00003 	ldbu	r3,0(r4)
    73bc:	29400044 	addi	r5,r5,1
    73c0:	18803fcc 	andi	r2,r3,255
    73c4:	1080201c 	xori	r2,r2,128
    73c8:	10bfe004 	addi	r2,r2,-128
    73cc:	103ff71e 	bne	r2,zero,73ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70073ac>
    73d0:	0007883a 	mov	r3,zero
    73d4:	28800003 	ldbu	r2,0(r5)
    73d8:	1885c83a 	sub	r2,r3,r2
    73dc:	f800283a 	ret
    73e0:	28800003 	ldbu	r2,0(r5)
    73e4:	18c03fcc 	andi	r3,r3,255
    73e8:	1885c83a 	sub	r2,r3,r2
    73ec:	f800283a 	ret
    73f0:	0005883a 	mov	r2,zero
    73f4:	f800283a 	ret
    73f8:	10c03fcc 	andi	r3,r2,255
    73fc:	003ff506 	br	73d4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70073d4>

00007400 <strlen>:
    7400:	208000cc 	andi	r2,r4,3
    7404:	10002026 	beq	r2,zero,7488 <strlen+0x88>
    7408:	20800007 	ldb	r2,0(r4)
    740c:	10002026 	beq	r2,zero,7490 <strlen+0x90>
    7410:	2005883a 	mov	r2,r4
    7414:	00000206 	br	7420 <strlen+0x20>
    7418:	10c00007 	ldb	r3,0(r2)
    741c:	18001826 	beq	r3,zero,7480 <strlen+0x80>
    7420:	10800044 	addi	r2,r2,1
    7424:	10c000cc 	andi	r3,r2,3
    7428:	183ffb1e 	bne	r3,zero,7418 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007418>
    742c:	10c00017 	ldw	r3,0(r2)
    7430:	01ffbff4 	movhi	r7,65279
    7434:	39ffbfc4 	addi	r7,r7,-257
    7438:	00ca303a 	nor	r5,zero,r3
    743c:	01a02074 	movhi	r6,32897
    7440:	19c7883a 	add	r3,r3,r7
    7444:	31a02004 	addi	r6,r6,-32640
    7448:	1946703a 	and	r3,r3,r5
    744c:	1986703a 	and	r3,r3,r6
    7450:	1800091e 	bne	r3,zero,7478 <strlen+0x78>
    7454:	10800104 	addi	r2,r2,4
    7458:	10c00017 	ldw	r3,0(r2)
    745c:	19cb883a 	add	r5,r3,r7
    7460:	00c6303a 	nor	r3,zero,r3
    7464:	28c6703a 	and	r3,r5,r3
    7468:	1986703a 	and	r3,r3,r6
    746c:	183ff926 	beq	r3,zero,7454 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007454>
    7470:	00000106 	br	7478 <strlen+0x78>
    7474:	10800044 	addi	r2,r2,1
    7478:	10c00007 	ldb	r3,0(r2)
    747c:	183ffd1e 	bne	r3,zero,7474 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007474>
    7480:	1105c83a 	sub	r2,r2,r4
    7484:	f800283a 	ret
    7488:	2005883a 	mov	r2,r4
    748c:	003fe706 	br	742c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700742c>
    7490:	0005883a 	mov	r2,zero
    7494:	f800283a 	ret

00007498 <__sprint_r.part.0>:
    7498:	28801917 	ldw	r2,100(r5)
    749c:	defff604 	addi	sp,sp,-40
    74a0:	dd400515 	stw	r21,20(sp)
    74a4:	dfc00915 	stw	ra,36(sp)
    74a8:	df000815 	stw	fp,32(sp)
    74ac:	ddc00715 	stw	r23,28(sp)
    74b0:	dd800615 	stw	r22,24(sp)
    74b4:	dd000415 	stw	r20,16(sp)
    74b8:	dcc00315 	stw	r19,12(sp)
    74bc:	dc800215 	stw	r18,8(sp)
    74c0:	dc400115 	stw	r17,4(sp)
    74c4:	dc000015 	stw	r16,0(sp)
    74c8:	1088000c 	andi	r2,r2,8192
    74cc:	302b883a 	mov	r21,r6
    74d0:	10002e26 	beq	r2,zero,758c <__sprint_r.part.0+0xf4>
    74d4:	30800217 	ldw	r2,8(r6)
    74d8:	35800017 	ldw	r22,0(r6)
    74dc:	10002926 	beq	r2,zero,7584 <__sprint_r.part.0+0xec>
    74e0:	2827883a 	mov	r19,r5
    74e4:	2029883a 	mov	r20,r4
    74e8:	b5c00104 	addi	r23,r22,4
    74ec:	04bfffc4 	movi	r18,-1
    74f0:	bc400017 	ldw	r17,0(r23)
    74f4:	b4000017 	ldw	r16,0(r22)
    74f8:	0039883a 	mov	fp,zero
    74fc:	8822d0ba 	srli	r17,r17,2
    7500:	8800031e 	bne	r17,zero,7510 <__sprint_r.part.0+0x78>
    7504:	00001806 	br	7568 <__sprint_r.part.0+0xd0>
    7508:	84000104 	addi	r16,r16,4
    750c:	8f001526 	beq	r17,fp,7564 <__sprint_r.part.0+0xcc>
    7510:	81400017 	ldw	r5,0(r16)
    7514:	980d883a 	mov	r6,r19
    7518:	a009883a 	mov	r4,r20
    751c:	0008ec00 	call	8ec0 <_fputwc_r>
    7520:	e7000044 	addi	fp,fp,1
    7524:	14bff81e 	bne	r2,r18,7508 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007508>
    7528:	9005883a 	mov	r2,r18
    752c:	a8000215 	stw	zero,8(r21)
    7530:	a8000115 	stw	zero,4(r21)
    7534:	dfc00917 	ldw	ra,36(sp)
    7538:	df000817 	ldw	fp,32(sp)
    753c:	ddc00717 	ldw	r23,28(sp)
    7540:	dd800617 	ldw	r22,24(sp)
    7544:	dd400517 	ldw	r21,20(sp)
    7548:	dd000417 	ldw	r20,16(sp)
    754c:	dcc00317 	ldw	r19,12(sp)
    7550:	dc800217 	ldw	r18,8(sp)
    7554:	dc400117 	ldw	r17,4(sp)
    7558:	dc000017 	ldw	r16,0(sp)
    755c:	dec00a04 	addi	sp,sp,40
    7560:	f800283a 	ret
    7564:	a8800217 	ldw	r2,8(r21)
    7568:	8c63883a 	add	r17,r17,r17
    756c:	8c63883a 	add	r17,r17,r17
    7570:	1445c83a 	sub	r2,r2,r17
    7574:	a8800215 	stw	r2,8(r21)
    7578:	b5800204 	addi	r22,r22,8
    757c:	bdc00204 	addi	r23,r23,8
    7580:	103fdb1e 	bne	r2,zero,74f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70074f0>
    7584:	0005883a 	mov	r2,zero
    7588:	003fe806 	br	752c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700752c>
    758c:	0008fc00 	call	8fc0 <__sfvwrite_r>
    7590:	003fe606 	br	752c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700752c>

00007594 <__sprint_r>:
    7594:	30c00217 	ldw	r3,8(r6)
    7598:	18000126 	beq	r3,zero,75a0 <__sprint_r+0xc>
    759c:	00074981 	jmpi	7498 <__sprint_r.part.0>
    75a0:	30000115 	stw	zero,4(r6)
    75a4:	0005883a 	mov	r2,zero
    75a8:	f800283a 	ret

000075ac <___vfiprintf_internal_r>:
    75ac:	deffc904 	addi	sp,sp,-220
    75b0:	df003515 	stw	fp,212(sp)
    75b4:	dd003115 	stw	r20,196(sp)
    75b8:	dfc03615 	stw	ra,216(sp)
    75bc:	ddc03415 	stw	r23,208(sp)
    75c0:	dd803315 	stw	r22,204(sp)
    75c4:	dd403215 	stw	r21,200(sp)
    75c8:	dcc03015 	stw	r19,192(sp)
    75cc:	dc802f15 	stw	r18,188(sp)
    75d0:	dc402e15 	stw	r17,184(sp)
    75d4:	dc002d15 	stw	r16,180(sp)
    75d8:	d9002015 	stw	r4,128(sp)
    75dc:	d9c02215 	stw	r7,136(sp)
    75e0:	2829883a 	mov	r20,r5
    75e4:	3039883a 	mov	fp,r6
    75e8:	20000226 	beq	r4,zero,75f4 <___vfiprintf_internal_r+0x48>
    75ec:	20800e17 	ldw	r2,56(r4)
    75f0:	1000cf26 	beq	r2,zero,7930 <___vfiprintf_internal_r+0x384>
    75f4:	a080030b 	ldhu	r2,12(r20)
    75f8:	10c8000c 	andi	r3,r2,8192
    75fc:	1800061e 	bne	r3,zero,7618 <___vfiprintf_internal_r+0x6c>
    7600:	a1001917 	ldw	r4,100(r20)
    7604:	00f7ffc4 	movi	r3,-8193
    7608:	10880014 	ori	r2,r2,8192
    760c:	20c6703a 	and	r3,r4,r3
    7610:	a080030d 	sth	r2,12(r20)
    7614:	a0c01915 	stw	r3,100(r20)
    7618:	10c0020c 	andi	r3,r2,8
    761c:	1800a926 	beq	r3,zero,78c4 <___vfiprintf_internal_r+0x318>
    7620:	a0c00417 	ldw	r3,16(r20)
    7624:	1800a726 	beq	r3,zero,78c4 <___vfiprintf_internal_r+0x318>
    7628:	1080068c 	andi	r2,r2,26
    762c:	00c00284 	movi	r3,10
    7630:	10c0ac26 	beq	r2,r3,78e4 <___vfiprintf_internal_r+0x338>
    7634:	da801a04 	addi	r10,sp,104
    7638:	da801e15 	stw	r10,120(sp)
    763c:	d8801e17 	ldw	r2,120(sp)
    7640:	da8019c4 	addi	r10,sp,103
    7644:	05800074 	movhi	r22,1
    7648:	05c00074 	movhi	r23,1
    764c:	da801f15 	stw	r10,124(sp)
    7650:	1295c83a 	sub	r10,r2,r10
    7654:	b5863e04 	addi	r22,r22,6392
    7658:	bdc63a04 	addi	r23,r23,6376
    765c:	dec01a15 	stw	sp,104(sp)
    7660:	d8001c15 	stw	zero,112(sp)
    7664:	d8001b15 	stw	zero,108(sp)
    7668:	d8002615 	stw	zero,152(sp)
    766c:	d8002315 	stw	zero,140(sp)
    7670:	da802715 	stw	r10,156(sp)
    7674:	d811883a 	mov	r8,sp
    7678:	dd002115 	stw	r20,132(sp)
    767c:	e021883a 	mov	r16,fp
    7680:	80800007 	ldb	r2,0(r16)
    7684:	1003ea26 	beq	r2,zero,8630 <___vfiprintf_internal_r+0x1084>
    7688:	00c00944 	movi	r3,37
    768c:	8025883a 	mov	r18,r16
    7690:	10c0021e 	bne	r2,r3,769c <___vfiprintf_internal_r+0xf0>
    7694:	00001606 	br	76f0 <___vfiprintf_internal_r+0x144>
    7698:	10c00326 	beq	r2,r3,76a8 <___vfiprintf_internal_r+0xfc>
    769c:	94800044 	addi	r18,r18,1
    76a0:	90800007 	ldb	r2,0(r18)
    76a4:	103ffc1e 	bne	r2,zero,7698 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007698>
    76a8:	9423c83a 	sub	r17,r18,r16
    76ac:	88001026 	beq	r17,zero,76f0 <___vfiprintf_internal_r+0x144>
    76b0:	d8c01c17 	ldw	r3,112(sp)
    76b4:	d8801b17 	ldw	r2,108(sp)
    76b8:	44000015 	stw	r16,0(r8)
    76bc:	88c7883a 	add	r3,r17,r3
    76c0:	10800044 	addi	r2,r2,1
    76c4:	44400115 	stw	r17,4(r8)
    76c8:	d8c01c15 	stw	r3,112(sp)
    76cc:	d8801b15 	stw	r2,108(sp)
    76d0:	010001c4 	movi	r4,7
    76d4:	2080760e 	bge	r4,r2,78b0 <___vfiprintf_internal_r+0x304>
    76d8:	1803821e 	bne	r3,zero,84e4 <___vfiprintf_internal_r+0xf38>
    76dc:	da802317 	ldw	r10,140(sp)
    76e0:	d8001b15 	stw	zero,108(sp)
    76e4:	d811883a 	mov	r8,sp
    76e8:	5455883a 	add	r10,r10,r17
    76ec:	da802315 	stw	r10,140(sp)
    76f0:	90800007 	ldb	r2,0(r18)
    76f4:	10044626 	beq	r2,zero,8810 <___vfiprintf_internal_r+0x1264>
    76f8:	90c00047 	ldb	r3,1(r18)
    76fc:	94000044 	addi	r16,r18,1
    7700:	d8001d85 	stb	zero,118(sp)
    7704:	0009883a 	mov	r4,zero
    7708:	000f883a 	mov	r7,zero
    770c:	027fffc4 	movi	r9,-1
    7710:	0023883a 	mov	r17,zero
    7714:	0029883a 	mov	r20,zero
    7718:	01401604 	movi	r5,88
    771c:	01800244 	movi	r6,9
    7720:	03400a84 	movi	r13,42
    7724:	03001b04 	movi	r12,108
    7728:	84000044 	addi	r16,r16,1
    772c:	18bff804 	addi	r2,r3,-32
    7730:	28827336 	bltu	r5,r2,8100 <___vfiprintf_internal_r+0xb54>
    7734:	100490ba 	slli	r2,r2,2
    7738:	02800034 	movhi	r10,0
    773c:	529dd304 	addi	r10,r10,30540
    7740:	1285883a 	add	r2,r2,r10
    7744:	10800017 	ldw	r2,0(r2)
    7748:	1000683a 	jmp	r2
    774c:	00007e34 	movhi	zero,504
    7750:	00008100 	call	810 <__floatsisf+0x98>
    7754:	00008100 	call	810 <__floatsisf+0x98>
    7758:	00007e54 	movui	zero,505
    775c:	00008100 	call	810 <__floatsisf+0x98>
    7760:	00008100 	call	810 <__floatsisf+0x98>
    7764:	00008100 	call	810 <__floatsisf+0x98>
    7768:	00008100 	call	810 <__floatsisf+0x98>
    776c:	00008100 	call	810 <__floatsisf+0x98>
    7770:	00008100 	call	810 <__floatsisf+0x98>
    7774:	0000803c 	xorhi	zero,zero,512
    7778:	00008058 	cmpnei	zero,zero,513
    777c:	00008100 	call	810 <__floatsisf+0x98>
    7780:	00007940 	call	794 <__floatsisf+0x1c>
    7784:	00008068 	cmpgeui	zero,zero,513
    7788:	00008100 	call	810 <__floatsisf+0x98>
    778c:	00007e60 	cmpeqi	zero,zero,505
    7790:	00007e6c 	andhi	zero,zero,505
    7794:	00007e6c 	andhi	zero,zero,505
    7798:	00007e6c 	andhi	zero,zero,505
    779c:	00007e6c 	andhi	zero,zero,505
    77a0:	00007e6c 	andhi	zero,zero,505
    77a4:	00007e6c 	andhi	zero,zero,505
    77a8:	00007e6c 	andhi	zero,zero,505
    77ac:	00007e6c 	andhi	zero,zero,505
    77b0:	00007e6c 	andhi	zero,zero,505
    77b4:	00008100 	call	810 <__floatsisf+0x98>
    77b8:	00008100 	call	810 <__floatsisf+0x98>
    77bc:	00008100 	call	810 <__floatsisf+0x98>
    77c0:	00008100 	call	810 <__floatsisf+0x98>
    77c4:	00008100 	call	810 <__floatsisf+0x98>
    77c8:	00008100 	call	810 <__floatsisf+0x98>
    77cc:	00008100 	call	810 <__floatsisf+0x98>
    77d0:	00008100 	call	810 <__floatsisf+0x98>
    77d4:	00008100 	call	810 <__floatsisf+0x98>
    77d8:	00008100 	call	810 <__floatsisf+0x98>
    77dc:	00007e98 	cmpnei	zero,zero,506
    77e0:	00008100 	call	810 <__floatsisf+0x98>
    77e4:	00008100 	call	810 <__floatsisf+0x98>
    77e8:	00008100 	call	810 <__floatsisf+0x98>
    77ec:	00008100 	call	810 <__floatsisf+0x98>
    77f0:	00008100 	call	810 <__floatsisf+0x98>
    77f4:	00008100 	call	810 <__floatsisf+0x98>
    77f8:	00008100 	call	810 <__floatsisf+0x98>
    77fc:	00008100 	call	810 <__floatsisf+0x98>
    7800:	00008100 	call	810 <__floatsisf+0x98>
    7804:	00008100 	call	810 <__floatsisf+0x98>
    7808:	00007ed0 	cmplti	zero,zero,507
    780c:	00008100 	call	810 <__floatsisf+0x98>
    7810:	00008100 	call	810 <__floatsisf+0x98>
    7814:	00008100 	call	810 <__floatsisf+0x98>
    7818:	00008100 	call	810 <__floatsisf+0x98>
    781c:	00008100 	call	810 <__floatsisf+0x98>
    7820:	00007f28 	cmpgeui	zero,zero,508
    7824:	00008100 	call	810 <__floatsisf+0x98>
    7828:	00008100 	call	810 <__floatsisf+0x98>
    782c:	00007f98 	cmpnei	zero,zero,510
    7830:	00008100 	call	810 <__floatsisf+0x98>
    7834:	00008100 	call	810 <__floatsisf+0x98>
    7838:	00008100 	call	810 <__floatsisf+0x98>
    783c:	00008100 	call	810 <__floatsisf+0x98>
    7840:	00008100 	call	810 <__floatsisf+0x98>
    7844:	00008100 	call	810 <__floatsisf+0x98>
    7848:	00008100 	call	810 <__floatsisf+0x98>
    784c:	00008100 	call	810 <__floatsisf+0x98>
    7850:	00008100 	call	810 <__floatsisf+0x98>
    7854:	00008100 	call	810 <__floatsisf+0x98>
    7858:	00007d44 	movi	zero,501
    785c:	00007d70 	cmpltui	zero,zero,501
    7860:	00008100 	call	810 <__floatsisf+0x98>
    7864:	00008100 	call	810 <__floatsisf+0x98>
    7868:	00008100 	call	810 <__floatsisf+0x98>
    786c:	000080a8 	cmpgeui	zero,zero,514
    7870:	00007d70 	cmpltui	zero,zero,501
    7874:	00008100 	call	810 <__floatsisf+0x98>
    7878:	00008100 	call	810 <__floatsisf+0x98>
    787c:	00007c04 	movi	zero,496
    7880:	00008100 	call	810 <__floatsisf+0x98>
    7884:	00007c14 	movui	zero,496
    7888:	00007c50 	cmplti	zero,zero,497
    788c:	0000794c 	andi	zero,zero,485
    7890:	00007bf8 	rdprs	zero,zero,495
    7894:	00008100 	call	810 <__floatsisf+0x98>
    7898:	00007fd4 	movui	zero,511
    789c:	00008100 	call	810 <__floatsisf+0x98>
    78a0:	0000802c 	andhi	zero,zero,512
    78a4:	00008100 	call	810 <__floatsisf+0x98>
    78a8:	00008100 	call	810 <__floatsisf+0x98>
    78ac:	00007cf0 	cmpltui	zero,zero,499
    78b0:	42000204 	addi	r8,r8,8
    78b4:	da802317 	ldw	r10,140(sp)
    78b8:	5455883a 	add	r10,r10,r17
    78bc:	da802315 	stw	r10,140(sp)
    78c0:	003f8b06 	br	76f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70076f0>
    78c4:	d9002017 	ldw	r4,128(sp)
    78c8:	a00b883a 	mov	r5,r20
    78cc:	0002d4c0 	call	2d4c <__swsetup_r>
    78d0:	1003b11e 	bne	r2,zero,8798 <___vfiprintf_internal_r+0x11ec>
    78d4:	a080030b 	ldhu	r2,12(r20)
    78d8:	00c00284 	movi	r3,10
    78dc:	1080068c 	andi	r2,r2,26
    78e0:	10ff541e 	bne	r2,r3,7634 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007634>
    78e4:	a080038f 	ldh	r2,14(r20)
    78e8:	103f5216 	blt	r2,zero,7634 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007634>
    78ec:	d9c02217 	ldw	r7,136(sp)
    78f0:	d9002017 	ldw	r4,128(sp)
    78f4:	e00d883a 	mov	r6,fp
    78f8:	a00b883a 	mov	r5,r20
    78fc:	0008a240 	call	8a24 <__sbprintf>
    7900:	dfc03617 	ldw	ra,216(sp)
    7904:	df003517 	ldw	fp,212(sp)
    7908:	ddc03417 	ldw	r23,208(sp)
    790c:	dd803317 	ldw	r22,204(sp)
    7910:	dd403217 	ldw	r21,200(sp)
    7914:	dd003117 	ldw	r20,196(sp)
    7918:	dcc03017 	ldw	r19,192(sp)
    791c:	dc802f17 	ldw	r18,188(sp)
    7920:	dc402e17 	ldw	r17,184(sp)
    7924:	dc002d17 	ldw	r16,180(sp)
    7928:	dec03704 	addi	sp,sp,220
    792c:	f800283a 	ret
    7930:	0004d200 	call	4d20 <__sinit>
    7934:	003f2f06 	br	75f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70075f4>
    7938:	0463c83a 	sub	r17,zero,r17
    793c:	d8802215 	stw	r2,136(sp)
    7940:	a5000114 	ori	r20,r20,4
    7944:	80c00007 	ldb	r3,0(r16)
    7948:	003f7706 	br	7728 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007728>
    794c:	00800c04 	movi	r2,48
    7950:	da802217 	ldw	r10,136(sp)
    7954:	d8801d05 	stb	r2,116(sp)
    7958:	00801e04 	movi	r2,120
    795c:	d8801d45 	stb	r2,117(sp)
    7960:	d8001d85 	stb	zero,118(sp)
    7964:	50c00104 	addi	r3,r10,4
    7968:	54800017 	ldw	r18,0(r10)
    796c:	0027883a 	mov	r19,zero
    7970:	a0800094 	ori	r2,r20,2
    7974:	48030b16 	blt	r9,zero,85a4 <___vfiprintf_internal_r+0xff8>
    7978:	00bfdfc4 	movi	r2,-129
    797c:	a096703a 	and	r11,r20,r2
    7980:	d8c02215 	stw	r3,136(sp)
    7984:	5d000094 	ori	r20,r11,2
    7988:	90032b1e 	bne	r18,zero,8638 <___vfiprintf_internal_r+0x108c>
    798c:	00800074 	movhi	r2,1
    7990:	1085d904 	addi	r2,r2,5988
    7994:	d8802615 	stw	r2,152(sp)
    7998:	0039883a 	mov	fp,zero
    799c:	48017b1e 	bne	r9,zero,7f8c <___vfiprintf_internal_r+0x9e0>
    79a0:	0013883a 	mov	r9,zero
    79a4:	0027883a 	mov	r19,zero
    79a8:	dd401a04 	addi	r21,sp,104
    79ac:	4825883a 	mov	r18,r9
    79b0:	4cc0010e 	bge	r9,r19,79b8 <___vfiprintf_internal_r+0x40c>
    79b4:	9825883a 	mov	r18,r19
    79b8:	e7003fcc 	andi	fp,fp,255
    79bc:	e700201c 	xori	fp,fp,128
    79c0:	e73fe004 	addi	fp,fp,-128
    79c4:	e0000126 	beq	fp,zero,79cc <___vfiprintf_internal_r+0x420>
    79c8:	94800044 	addi	r18,r18,1
    79cc:	a380008c 	andi	r14,r20,2
    79d0:	70000126 	beq	r14,zero,79d8 <___vfiprintf_internal_r+0x42c>
    79d4:	94800084 	addi	r18,r18,2
    79d8:	a700210c 	andi	fp,r20,132
    79dc:	e001df1e 	bne	fp,zero,815c <___vfiprintf_internal_r+0xbb0>
    79e0:	8c87c83a 	sub	r3,r17,r18
    79e4:	00c1dd0e 	bge	zero,r3,815c <___vfiprintf_internal_r+0xbb0>
    79e8:	01c00404 	movi	r7,16
    79ec:	d8801c17 	ldw	r2,112(sp)
    79f0:	38c3ad0e 	bge	r7,r3,88a8 <___vfiprintf_internal_r+0x12fc>
    79f4:	02800074 	movhi	r10,1
    79f8:	52863e04 	addi	r10,r10,6392
    79fc:	dc002915 	stw	r16,164(sp)
    7a00:	d9801b17 	ldw	r6,108(sp)
    7a04:	da802415 	stw	r10,144(sp)
    7a08:	03c001c4 	movi	r15,7
    7a0c:	da402515 	stw	r9,148(sp)
    7a10:	db802815 	stw	r14,160(sp)
    7a14:	1821883a 	mov	r16,r3
    7a18:	00000506 	br	7a30 <___vfiprintf_internal_r+0x484>
    7a1c:	31400084 	addi	r5,r6,2
    7a20:	42000204 	addi	r8,r8,8
    7a24:	200d883a 	mov	r6,r4
    7a28:	843ffc04 	addi	r16,r16,-16
    7a2c:	3c000d0e 	bge	r7,r16,7a64 <___vfiprintf_internal_r+0x4b8>
    7a30:	10800404 	addi	r2,r2,16
    7a34:	31000044 	addi	r4,r6,1
    7a38:	45800015 	stw	r22,0(r8)
    7a3c:	41c00115 	stw	r7,4(r8)
    7a40:	d8801c15 	stw	r2,112(sp)
    7a44:	d9001b15 	stw	r4,108(sp)
    7a48:	793ff40e 	bge	r15,r4,7a1c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007a1c>
    7a4c:	1001b51e 	bne	r2,zero,8124 <___vfiprintf_internal_r+0xb78>
    7a50:	843ffc04 	addi	r16,r16,-16
    7a54:	000d883a 	mov	r6,zero
    7a58:	01400044 	movi	r5,1
    7a5c:	d811883a 	mov	r8,sp
    7a60:	3c3ff316 	blt	r7,r16,7a30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007a30>
    7a64:	8007883a 	mov	r3,r16
    7a68:	da402517 	ldw	r9,148(sp)
    7a6c:	db802817 	ldw	r14,160(sp)
    7a70:	dc002917 	ldw	r16,164(sp)
    7a74:	da802417 	ldw	r10,144(sp)
    7a78:	1885883a 	add	r2,r3,r2
    7a7c:	40c00115 	stw	r3,4(r8)
    7a80:	42800015 	stw	r10,0(r8)
    7a84:	d8801c15 	stw	r2,112(sp)
    7a88:	d9401b15 	stw	r5,108(sp)
    7a8c:	00c001c4 	movi	r3,7
    7a90:	19426016 	blt	r3,r5,8414 <___vfiprintf_internal_r+0xe68>
    7a94:	d8c01d87 	ldb	r3,118(sp)
    7a98:	42000204 	addi	r8,r8,8
    7a9c:	29000044 	addi	r4,r5,1
    7aa0:	1801b31e 	bne	r3,zero,8170 <___vfiprintf_internal_r+0xbc4>
    7aa4:	7001c026 	beq	r14,zero,81a8 <___vfiprintf_internal_r+0xbfc>
    7aa8:	d8c01d04 	addi	r3,sp,116
    7aac:	10800084 	addi	r2,r2,2
    7ab0:	40c00015 	stw	r3,0(r8)
    7ab4:	00c00084 	movi	r3,2
    7ab8:	40c00115 	stw	r3,4(r8)
    7abc:	d8801c15 	stw	r2,112(sp)
    7ac0:	d9001b15 	stw	r4,108(sp)
    7ac4:	00c001c4 	movi	r3,7
    7ac8:	1902650e 	bge	r3,r4,8460 <___vfiprintf_internal_r+0xeb4>
    7acc:	10029a1e 	bne	r2,zero,8538 <___vfiprintf_internal_r+0xf8c>
    7ad0:	00c02004 	movi	r3,128
    7ad4:	01000044 	movi	r4,1
    7ad8:	000b883a 	mov	r5,zero
    7adc:	d811883a 	mov	r8,sp
    7ae0:	e0c1b31e 	bne	fp,r3,81b0 <___vfiprintf_internal_r+0xc04>
    7ae4:	8cb9c83a 	sub	fp,r17,r18
    7ae8:	0701b10e 	bge	zero,fp,81b0 <___vfiprintf_internal_r+0xc04>
    7aec:	01c00404 	movi	r7,16
    7af0:	3f03890e 	bge	r7,fp,8918 <___vfiprintf_internal_r+0x136c>
    7af4:	00c00074 	movhi	r3,1
    7af8:	18c63a04 	addi	r3,r3,6376
    7afc:	d8c02415 	stw	r3,144(sp)
    7b00:	8007883a 	mov	r3,r16
    7b04:	034001c4 	movi	r13,7
    7b08:	e021883a 	mov	r16,fp
    7b0c:	da402515 	stw	r9,148(sp)
    7b10:	1839883a 	mov	fp,r3
    7b14:	00000506 	br	7b2c <___vfiprintf_internal_r+0x580>
    7b18:	29800084 	addi	r6,r5,2
    7b1c:	42000204 	addi	r8,r8,8
    7b20:	180b883a 	mov	r5,r3
    7b24:	843ffc04 	addi	r16,r16,-16
    7b28:	3c000d0e 	bge	r7,r16,7b60 <___vfiprintf_internal_r+0x5b4>
    7b2c:	10800404 	addi	r2,r2,16
    7b30:	28c00044 	addi	r3,r5,1
    7b34:	45c00015 	stw	r23,0(r8)
    7b38:	41c00115 	stw	r7,4(r8)
    7b3c:	d8801c15 	stw	r2,112(sp)
    7b40:	d8c01b15 	stw	r3,108(sp)
    7b44:	68fff40e 	bge	r13,r3,7b18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007b18>
    7b48:	1002241e 	bne	r2,zero,83dc <___vfiprintf_internal_r+0xe30>
    7b4c:	843ffc04 	addi	r16,r16,-16
    7b50:	01800044 	movi	r6,1
    7b54:	000b883a 	mov	r5,zero
    7b58:	d811883a 	mov	r8,sp
    7b5c:	3c3ff316 	blt	r7,r16,7b2c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007b2c>
    7b60:	da402517 	ldw	r9,148(sp)
    7b64:	e007883a 	mov	r3,fp
    7b68:	8039883a 	mov	fp,r16
    7b6c:	1821883a 	mov	r16,r3
    7b70:	d8c02417 	ldw	r3,144(sp)
    7b74:	1705883a 	add	r2,r2,fp
    7b78:	47000115 	stw	fp,4(r8)
    7b7c:	40c00015 	stw	r3,0(r8)
    7b80:	d8801c15 	stw	r2,112(sp)
    7b84:	d9801b15 	stw	r6,108(sp)
    7b88:	00c001c4 	movi	r3,7
    7b8c:	19827616 	blt	r3,r6,8568 <___vfiprintf_internal_r+0xfbc>
    7b90:	4cf9c83a 	sub	fp,r9,r19
    7b94:	42000204 	addi	r8,r8,8
    7b98:	31000044 	addi	r4,r6,1
    7b9c:	300b883a 	mov	r5,r6
    7ba0:	07018516 	blt	zero,fp,81b8 <___vfiprintf_internal_r+0xc0c>
    7ba4:	9885883a 	add	r2,r19,r2
    7ba8:	45400015 	stw	r21,0(r8)
    7bac:	44c00115 	stw	r19,4(r8)
    7bb0:	d8801c15 	stw	r2,112(sp)
    7bb4:	d9001b15 	stw	r4,108(sp)
    7bb8:	00c001c4 	movi	r3,7
    7bbc:	1901dd0e 	bge	r3,r4,8334 <___vfiprintf_internal_r+0xd88>
    7bc0:	1002401e 	bne	r2,zero,84c4 <___vfiprintf_internal_r+0xf18>
    7bc4:	d8001b15 	stw	zero,108(sp)
    7bc8:	a2c0010c 	andi	r11,r20,4
    7bcc:	58000226 	beq	r11,zero,7bd8 <___vfiprintf_internal_r+0x62c>
    7bd0:	8ca7c83a 	sub	r19,r17,r18
    7bd4:	04c2f216 	blt	zero,r19,87a0 <___vfiprintf_internal_r+0x11f4>
    7bd8:	8c80010e 	bge	r17,r18,7be0 <___vfiprintf_internal_r+0x634>
    7bdc:	9023883a 	mov	r17,r18
    7be0:	da802317 	ldw	r10,140(sp)
    7be4:	5455883a 	add	r10,r10,r17
    7be8:	da802315 	stw	r10,140(sp)
    7bec:	d8001b15 	stw	zero,108(sp)
    7bf0:	d811883a 	mov	r8,sp
    7bf4:	003ea206 	br	7680 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007680>
    7bf8:	a5000814 	ori	r20,r20,32
    7bfc:	80c00007 	ldb	r3,0(r16)
    7c00:	003ec906 	br	7728 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007728>
    7c04:	80c00007 	ldb	r3,0(r16)
    7c08:	1b030926 	beq	r3,r12,8830 <___vfiprintf_internal_r+0x1284>
    7c0c:	a5000414 	ori	r20,r20,16
    7c10:	003ec506 	br	7728 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007728>
    7c14:	21003fcc 	andi	r4,r4,255
    7c18:	20035e1e 	bne	r4,zero,8994 <___vfiprintf_internal_r+0x13e8>
    7c1c:	a080080c 	andi	r2,r20,32
    7c20:	1002a526 	beq	r2,zero,86b8 <___vfiprintf_internal_r+0x110c>
    7c24:	da802217 	ldw	r10,136(sp)
    7c28:	50800017 	ldw	r2,0(r10)
    7c2c:	da802317 	ldw	r10,140(sp)
    7c30:	5007d7fa 	srai	r3,r10,31
    7c34:	da802217 	ldw	r10,136(sp)
    7c38:	10c00115 	stw	r3,4(r2)
    7c3c:	52800104 	addi	r10,r10,4
    7c40:	da802215 	stw	r10,136(sp)
    7c44:	da802317 	ldw	r10,140(sp)
    7c48:	12800015 	stw	r10,0(r2)
    7c4c:	003e8c06 	br	7680 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007680>
    7c50:	21003fcc 	andi	r4,r4,255
    7c54:	2003511e 	bne	r4,zero,899c <___vfiprintf_internal_r+0x13f0>
    7c58:	a080080c 	andi	r2,r20,32
    7c5c:	1000a126 	beq	r2,zero,7ee4 <___vfiprintf_internal_r+0x938>
    7c60:	da802217 	ldw	r10,136(sp)
    7c64:	d8001d85 	stb	zero,118(sp)
    7c68:	50800204 	addi	r2,r10,8
    7c6c:	54800017 	ldw	r18,0(r10)
    7c70:	54c00117 	ldw	r19,4(r10)
    7c74:	4802b416 	blt	r9,zero,8748 <___vfiprintf_internal_r+0x119c>
    7c78:	013fdfc4 	movi	r4,-129
    7c7c:	94c6b03a 	or	r3,r18,r19
    7c80:	d8802215 	stw	r2,136(sp)
    7c84:	a128703a 	and	r20,r20,r4
    7c88:	1800a226 	beq	r3,zero,7f14 <___vfiprintf_internal_r+0x968>
    7c8c:	0039883a 	mov	fp,zero
    7c90:	dd401a04 	addi	r21,sp,104
    7c94:	9006d0fa 	srli	r3,r18,3
    7c98:	9808977a 	slli	r4,r19,29
    7c9c:	9826d0fa 	srli	r19,r19,3
    7ca0:	948001cc 	andi	r18,r18,7
    7ca4:	90800c04 	addi	r2,r18,48
    7ca8:	ad7fffc4 	addi	r21,r21,-1
    7cac:	20e4b03a 	or	r18,r4,r3
    7cb0:	a8800005 	stb	r2,0(r21)
    7cb4:	94c6b03a 	or	r3,r18,r19
    7cb8:	183ff61e 	bne	r3,zero,7c94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007c94>
    7cbc:	a0c0004c 	andi	r3,r20,1
    7cc0:	18005926 	beq	r3,zero,7e28 <___vfiprintf_internal_r+0x87c>
    7cc4:	10803fcc 	andi	r2,r2,255
    7cc8:	1080201c 	xori	r2,r2,128
    7ccc:	10bfe004 	addi	r2,r2,-128
    7cd0:	00c00c04 	movi	r3,48
    7cd4:	10c05426 	beq	r2,r3,7e28 <___vfiprintf_internal_r+0x87c>
    7cd8:	da801e17 	ldw	r10,120(sp)
    7cdc:	a8bfffc4 	addi	r2,r21,-1
    7ce0:	a8ffffc5 	stb	r3,-1(r21)
    7ce4:	50a7c83a 	sub	r19,r10,r2
    7ce8:	102b883a 	mov	r21,r2
    7cec:	003f2f06 	br	79ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079ac>
    7cf0:	21003fcc 	andi	r4,r4,255
    7cf4:	2003421e 	bne	r4,zero,8a00 <___vfiprintf_internal_r+0x1454>
    7cf8:	00800074 	movhi	r2,1
    7cfc:	1085d904 	addi	r2,r2,5988
    7d00:	d8802615 	stw	r2,152(sp)
    7d04:	a080080c 	andi	r2,r20,32
    7d08:	1000aa26 	beq	r2,zero,7fb4 <___vfiprintf_internal_r+0xa08>
    7d0c:	da802217 	ldw	r10,136(sp)
    7d10:	54800017 	ldw	r18,0(r10)
    7d14:	54c00117 	ldw	r19,4(r10)
    7d18:	52800204 	addi	r10,r10,8
    7d1c:	da802215 	stw	r10,136(sp)
    7d20:	a080004c 	andi	r2,r20,1
    7d24:	1001d226 	beq	r2,zero,8470 <___vfiprintf_internal_r+0xec4>
    7d28:	94c4b03a 	or	r2,r18,r19
    7d2c:	1002351e 	bne	r2,zero,8604 <___vfiprintf_internal_r+0x1058>
    7d30:	d8001d85 	stb	zero,118(sp)
    7d34:	48022216 	blt	r9,zero,85c0 <___vfiprintf_internal_r+0x1014>
    7d38:	00bfdfc4 	movi	r2,-129
    7d3c:	a0a8703a 	and	r20,r20,r2
    7d40:	003f1506 	br	7998 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007998>
    7d44:	da802217 	ldw	r10,136(sp)
    7d48:	04800044 	movi	r18,1
    7d4c:	d8001d85 	stb	zero,118(sp)
    7d50:	50800017 	ldw	r2,0(r10)
    7d54:	52800104 	addi	r10,r10,4
    7d58:	da802215 	stw	r10,136(sp)
    7d5c:	d8801005 	stb	r2,64(sp)
    7d60:	9027883a 	mov	r19,r18
    7d64:	dd401004 	addi	r21,sp,64
    7d68:	0013883a 	mov	r9,zero
    7d6c:	003f1706 	br	79cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079cc>
    7d70:	21003fcc 	andi	r4,r4,255
    7d74:	2003201e 	bne	r4,zero,89f8 <___vfiprintf_internal_r+0x144c>
    7d78:	a080080c 	andi	r2,r20,32
    7d7c:	10004b26 	beq	r2,zero,7eac <___vfiprintf_internal_r+0x900>
    7d80:	da802217 	ldw	r10,136(sp)
    7d84:	50800117 	ldw	r2,4(r10)
    7d88:	54800017 	ldw	r18,0(r10)
    7d8c:	52800204 	addi	r10,r10,8
    7d90:	da802215 	stw	r10,136(sp)
    7d94:	1027883a 	mov	r19,r2
    7d98:	10022c16 	blt	r2,zero,864c <___vfiprintf_internal_r+0x10a0>
    7d9c:	df001d83 	ldbu	fp,118(sp)
    7da0:	48007216 	blt	r9,zero,7f6c <___vfiprintf_internal_r+0x9c0>
    7da4:	00ffdfc4 	movi	r3,-129
    7da8:	94c4b03a 	or	r2,r18,r19
    7dac:	a0e8703a 	and	r20,r20,r3
    7db0:	1000cc26 	beq	r2,zero,80e4 <___vfiprintf_internal_r+0xb38>
    7db4:	98021026 	beq	r19,zero,85f8 <___vfiprintf_internal_r+0x104c>
    7db8:	dc402415 	stw	r17,144(sp)
    7dbc:	dc002515 	stw	r16,148(sp)
    7dc0:	9823883a 	mov	r17,r19
    7dc4:	9021883a 	mov	r16,r18
    7dc8:	dd401a04 	addi	r21,sp,104
    7dcc:	4825883a 	mov	r18,r9
    7dd0:	4027883a 	mov	r19,r8
    7dd4:	8009883a 	mov	r4,r16
    7dd8:	880b883a 	mov	r5,r17
    7ddc:	01800284 	movi	r6,10
    7de0:	000f883a 	mov	r7,zero
    7de4:	000a5080 	call	a508 <__umoddi3>
    7de8:	10800c04 	addi	r2,r2,48
    7dec:	ad7fffc4 	addi	r21,r21,-1
    7df0:	8009883a 	mov	r4,r16
    7df4:	880b883a 	mov	r5,r17
    7df8:	a8800005 	stb	r2,0(r21)
    7dfc:	01800284 	movi	r6,10
    7e00:	000f883a 	mov	r7,zero
    7e04:	0009f900 	call	9f90 <__udivdi3>
    7e08:	1021883a 	mov	r16,r2
    7e0c:	10c4b03a 	or	r2,r2,r3
    7e10:	1823883a 	mov	r17,r3
    7e14:	103fef1e 	bne	r2,zero,7dd4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007dd4>
    7e18:	dc402417 	ldw	r17,144(sp)
    7e1c:	dc002517 	ldw	r16,148(sp)
    7e20:	9013883a 	mov	r9,r18
    7e24:	9811883a 	mov	r8,r19
    7e28:	da801e17 	ldw	r10,120(sp)
    7e2c:	5567c83a 	sub	r19,r10,r21
    7e30:	003ede06 	br	79ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079ac>
    7e34:	38803fcc 	andi	r2,r7,255
    7e38:	1080201c 	xori	r2,r2,128
    7e3c:	10bfe004 	addi	r2,r2,-128
    7e40:	1002371e 	bne	r2,zero,8720 <___vfiprintf_internal_r+0x1174>
    7e44:	01000044 	movi	r4,1
    7e48:	01c00804 	movi	r7,32
    7e4c:	80c00007 	ldb	r3,0(r16)
    7e50:	003e3506 	br	7728 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007728>
    7e54:	a5000054 	ori	r20,r20,1
    7e58:	80c00007 	ldb	r3,0(r16)
    7e5c:	003e3206 	br	7728 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007728>
    7e60:	a5002014 	ori	r20,r20,128
    7e64:	80c00007 	ldb	r3,0(r16)
    7e68:	003e2f06 	br	7728 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007728>
    7e6c:	8015883a 	mov	r10,r16
    7e70:	0023883a 	mov	r17,zero
    7e74:	18bff404 	addi	r2,r3,-48
    7e78:	50c00007 	ldb	r3,0(r10)
    7e7c:	8c4002a4 	muli	r17,r17,10
    7e80:	84000044 	addi	r16,r16,1
    7e84:	8015883a 	mov	r10,r16
    7e88:	1463883a 	add	r17,r2,r17
    7e8c:	18bff404 	addi	r2,r3,-48
    7e90:	30bff92e 	bgeu	r6,r2,7e78 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007e78>
    7e94:	003e2506 	br	772c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700772c>
    7e98:	21003fcc 	andi	r4,r4,255
    7e9c:	2002d41e 	bne	r4,zero,89f0 <___vfiprintf_internal_r+0x1444>
    7ea0:	a5000414 	ori	r20,r20,16
    7ea4:	a080080c 	andi	r2,r20,32
    7ea8:	103fb51e 	bne	r2,zero,7d80 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d80>
    7eac:	a080040c 	andi	r2,r20,16
    7eb0:	1001f826 	beq	r2,zero,8694 <___vfiprintf_internal_r+0x10e8>
    7eb4:	da802217 	ldw	r10,136(sp)
    7eb8:	54800017 	ldw	r18,0(r10)
    7ebc:	52800104 	addi	r10,r10,4
    7ec0:	da802215 	stw	r10,136(sp)
    7ec4:	9027d7fa 	srai	r19,r18,31
    7ec8:	9805883a 	mov	r2,r19
    7ecc:	003fb206 	br	7d98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d98>
    7ed0:	21003fcc 	andi	r4,r4,255
    7ed4:	2002c41e 	bne	r4,zero,89e8 <___vfiprintf_internal_r+0x143c>
    7ed8:	a5000414 	ori	r20,r20,16
    7edc:	a080080c 	andi	r2,r20,32
    7ee0:	103f5f1e 	bne	r2,zero,7c60 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007c60>
    7ee4:	a080040c 	andi	r2,r20,16
    7ee8:	10020f26 	beq	r2,zero,8728 <___vfiprintf_internal_r+0x117c>
    7eec:	da802217 	ldw	r10,136(sp)
    7ef0:	d8001d85 	stb	zero,118(sp)
    7ef4:	0027883a 	mov	r19,zero
    7ef8:	50800104 	addi	r2,r10,4
    7efc:	54800017 	ldw	r18,0(r10)
    7f00:	48021116 	blt	r9,zero,8748 <___vfiprintf_internal_r+0x119c>
    7f04:	00ffdfc4 	movi	r3,-129
    7f08:	d8802215 	stw	r2,136(sp)
    7f0c:	a0e8703a 	and	r20,r20,r3
    7f10:	903f5e1e 	bne	r18,zero,7c8c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007c8c>
    7f14:	0039883a 	mov	fp,zero
    7f18:	4802a626 	beq	r9,zero,89b4 <___vfiprintf_internal_r+0x1408>
    7f1c:	0025883a 	mov	r18,zero
    7f20:	0027883a 	mov	r19,zero
    7f24:	003f5a06 	br	7c90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007c90>
    7f28:	21003fcc 	andi	r4,r4,255
    7f2c:	20029f1e 	bne	r4,zero,89ac <___vfiprintf_internal_r+0x1400>
    7f30:	a5000414 	ori	r20,r20,16
    7f34:	a080080c 	andi	r2,r20,32
    7f38:	10005e1e 	bne	r2,zero,80b4 <___vfiprintf_internal_r+0xb08>
    7f3c:	a080040c 	andi	r2,r20,16
    7f40:	1001a21e 	bne	r2,zero,85cc <___vfiprintf_internal_r+0x1020>
    7f44:	a080100c 	andi	r2,r20,64
    7f48:	d8001d85 	stb	zero,118(sp)
    7f4c:	da802217 	ldw	r10,136(sp)
    7f50:	1002231e 	bne	r2,zero,87e0 <___vfiprintf_internal_r+0x1234>
    7f54:	50800104 	addi	r2,r10,4
    7f58:	54800017 	ldw	r18,0(r10)
    7f5c:	0027883a 	mov	r19,zero
    7f60:	4801a00e 	bge	r9,zero,85e4 <___vfiprintf_internal_r+0x1038>
    7f64:	d8802215 	stw	r2,136(sp)
    7f68:	0039883a 	mov	fp,zero
    7f6c:	94c4b03a 	or	r2,r18,r19
    7f70:	103f901e 	bne	r2,zero,7db4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007db4>
    7f74:	00800044 	movi	r2,1
    7f78:	10803fcc 	andi	r2,r2,255
    7f7c:	00c00044 	movi	r3,1
    7f80:	10c05926 	beq	r2,r3,80e8 <___vfiprintf_internal_r+0xb3c>
    7f84:	00c00084 	movi	r3,2
    7f88:	10ffe41e 	bne	r2,r3,7f1c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f1c>
    7f8c:	0025883a 	mov	r18,zero
    7f90:	0027883a 	mov	r19,zero
    7f94:	00013d06 	br	848c <___vfiprintf_internal_r+0xee0>
    7f98:	21003fcc 	andi	r4,r4,255
    7f9c:	2002811e 	bne	r4,zero,89a4 <___vfiprintf_internal_r+0x13f8>
    7fa0:	00800074 	movhi	r2,1
    7fa4:	1085d404 	addi	r2,r2,5968
    7fa8:	d8802615 	stw	r2,152(sp)
    7fac:	a080080c 	andi	r2,r20,32
    7fb0:	103f561e 	bne	r2,zero,7d0c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d0c>
    7fb4:	a080040c 	andi	r2,r20,16
    7fb8:	1001d126 	beq	r2,zero,8700 <___vfiprintf_internal_r+0x1154>
    7fbc:	da802217 	ldw	r10,136(sp)
    7fc0:	0027883a 	mov	r19,zero
    7fc4:	54800017 	ldw	r18,0(r10)
    7fc8:	52800104 	addi	r10,r10,4
    7fcc:	da802215 	stw	r10,136(sp)
    7fd0:	003f5306 	br	7d20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d20>
    7fd4:	da802217 	ldw	r10,136(sp)
    7fd8:	d8001d85 	stb	zero,118(sp)
    7fdc:	55400017 	ldw	r21,0(r10)
    7fe0:	50c00104 	addi	r3,r10,4
    7fe4:	a8024226 	beq	r21,zero,88f0 <___vfiprintf_internal_r+0x1344>
    7fe8:	48021816 	blt	r9,zero,884c <___vfiprintf_internal_r+0x12a0>
    7fec:	480d883a 	mov	r6,r9
    7ff0:	000b883a 	mov	r5,zero
    7ff4:	a809883a 	mov	r4,r21
    7ff8:	d8c02a15 	stw	r3,168(sp)
    7ffc:	da002b15 	stw	r8,172(sp)
    8000:	da402c15 	stw	r9,176(sp)
    8004:	0005dd00 	call	5dd0 <memchr>
    8008:	d8c02a17 	ldw	r3,168(sp)
    800c:	da002b17 	ldw	r8,172(sp)
    8010:	da402c17 	ldw	r9,176(sp)
    8014:	10024826 	beq	r2,zero,8938 <___vfiprintf_internal_r+0x138c>
    8018:	1567c83a 	sub	r19,r2,r21
    801c:	df001d83 	ldbu	fp,118(sp)
    8020:	d8c02215 	stw	r3,136(sp)
    8024:	0013883a 	mov	r9,zero
    8028:	003e6006 	br	79ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079ac>
    802c:	21003fcc 	andi	r4,r4,255
    8030:	203fc026 	beq	r4,zero,7f34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f34>
    8034:	d9c01d85 	stb	r7,118(sp)
    8038:	003fbe06 	br	7f34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f34>
    803c:	da802217 	ldw	r10,136(sp)
    8040:	54400017 	ldw	r17,0(r10)
    8044:	50800104 	addi	r2,r10,4
    8048:	883e3b16 	blt	r17,zero,7938 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007938>
    804c:	d8802215 	stw	r2,136(sp)
    8050:	80c00007 	ldb	r3,0(r16)
    8054:	003db406 	br	7728 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007728>
    8058:	01000044 	movi	r4,1
    805c:	01c00ac4 	movi	r7,43
    8060:	80c00007 	ldb	r3,0(r16)
    8064:	003db006 	br	7728 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007728>
    8068:	80c00007 	ldb	r3,0(r16)
    806c:	82800044 	addi	r10,r16,1
    8070:	1b423c26 	beq	r3,r13,8964 <___vfiprintf_internal_r+0x13b8>
    8074:	18bff404 	addi	r2,r3,-48
    8078:	0013883a 	mov	r9,zero
    807c:	30822b36 	bltu	r6,r2,892c <___vfiprintf_internal_r+0x1380>
    8080:	50c00007 	ldb	r3,0(r10)
    8084:	4a4002a4 	muli	r9,r9,10
    8088:	54000044 	addi	r16,r10,1
    808c:	8015883a 	mov	r10,r16
    8090:	4893883a 	add	r9,r9,r2
    8094:	18bff404 	addi	r2,r3,-48
    8098:	30bff92e 	bgeu	r6,r2,8080 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008080>
    809c:	483da30e 	bge	r9,zero,772c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700772c>
    80a0:	027fffc4 	movi	r9,-1
    80a4:	003da106 	br	772c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700772c>
    80a8:	a5001014 	ori	r20,r20,64
    80ac:	80c00007 	ldb	r3,0(r16)
    80b0:	003d9d06 	br	7728 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007728>
    80b4:	da802217 	ldw	r10,136(sp)
    80b8:	d8001d85 	stb	zero,118(sp)
    80bc:	50c00204 	addi	r3,r10,8
    80c0:	54800017 	ldw	r18,0(r10)
    80c4:	54c00117 	ldw	r19,4(r10)
    80c8:	4801ca16 	blt	r9,zero,87f4 <___vfiprintf_internal_r+0x1248>
    80cc:	013fdfc4 	movi	r4,-129
    80d0:	94c4b03a 	or	r2,r18,r19
    80d4:	d8c02215 	stw	r3,136(sp)
    80d8:	a128703a 	and	r20,r20,r4
    80dc:	0039883a 	mov	fp,zero
    80e0:	103f341e 	bne	r2,zero,7db4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007db4>
    80e4:	483e2e26 	beq	r9,zero,79a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079a0>
    80e8:	0025883a 	mov	r18,zero
    80ec:	94800c04 	addi	r18,r18,48
    80f0:	dc8019c5 	stb	r18,103(sp)
    80f4:	dcc02717 	ldw	r19,156(sp)
    80f8:	dd4019c4 	addi	r21,sp,103
    80fc:	003e2b06 	br	79ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079ac>
    8100:	21003fcc 	andi	r4,r4,255
    8104:	2002361e 	bne	r4,zero,89e0 <___vfiprintf_internal_r+0x1434>
    8108:	1801c126 	beq	r3,zero,8810 <___vfiprintf_internal_r+0x1264>
    810c:	04800044 	movi	r18,1
    8110:	d8c01005 	stb	r3,64(sp)
    8114:	d8001d85 	stb	zero,118(sp)
    8118:	9027883a 	mov	r19,r18
    811c:	dd401004 	addi	r21,sp,64
    8120:	003f1106 	br	7d68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d68>
    8124:	d9402117 	ldw	r5,132(sp)
    8128:	d9002017 	ldw	r4,128(sp)
    812c:	d9801a04 	addi	r6,sp,104
    8130:	d9c02b15 	stw	r7,172(sp)
    8134:	dbc02a15 	stw	r15,168(sp)
    8138:	00074980 	call	7498 <__sprint_r.part.0>
    813c:	d9c02b17 	ldw	r7,172(sp)
    8140:	dbc02a17 	ldw	r15,168(sp)
    8144:	10006d1e 	bne	r2,zero,82fc <___vfiprintf_internal_r+0xd50>
    8148:	d9801b17 	ldw	r6,108(sp)
    814c:	d8801c17 	ldw	r2,112(sp)
    8150:	d811883a 	mov	r8,sp
    8154:	31400044 	addi	r5,r6,1
    8158:	003e3306 	br	7a28 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007a28>
    815c:	d9401b17 	ldw	r5,108(sp)
    8160:	d8801c17 	ldw	r2,112(sp)
    8164:	29000044 	addi	r4,r5,1
    8168:	d8c01d87 	ldb	r3,118(sp)
    816c:	183e4d26 	beq	r3,zero,7aa4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007aa4>
    8170:	00c00044 	movi	r3,1
    8174:	d9401d84 	addi	r5,sp,118
    8178:	10c5883a 	add	r2,r2,r3
    817c:	41400015 	stw	r5,0(r8)
    8180:	40c00115 	stw	r3,4(r8)
    8184:	d8801c15 	stw	r2,112(sp)
    8188:	d9001b15 	stw	r4,108(sp)
    818c:	014001c4 	movi	r5,7
    8190:	2900a90e 	bge	r5,r4,8438 <___vfiprintf_internal_r+0xe8c>
    8194:	1000da1e 	bne	r2,zero,8500 <___vfiprintf_internal_r+0xf54>
    8198:	7000ab1e 	bne	r14,zero,8448 <___vfiprintf_internal_r+0xe9c>
    819c:	000b883a 	mov	r5,zero
    81a0:	1809883a 	mov	r4,r3
    81a4:	d811883a 	mov	r8,sp
    81a8:	00c02004 	movi	r3,128
    81ac:	e0fe4d26 	beq	fp,r3,7ae4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007ae4>
    81b0:	4cf9c83a 	sub	fp,r9,r19
    81b4:	073e7b0e 	bge	zero,fp,7ba4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007ba4>
    81b8:	01c00404 	movi	r7,16
    81bc:	3f01900e 	bge	r7,fp,8800 <___vfiprintf_internal_r+0x1254>
    81c0:	00c00074 	movhi	r3,1
    81c4:	18c63a04 	addi	r3,r3,6376
    81c8:	d8c02415 	stw	r3,144(sp)
    81cc:	034001c4 	movi	r13,7
    81d0:	00000506 	br	81e8 <___vfiprintf_internal_r+0xc3c>
    81d4:	29000084 	addi	r4,r5,2
    81d8:	42000204 	addi	r8,r8,8
    81dc:	180b883a 	mov	r5,r3
    81e0:	e73ffc04 	addi	fp,fp,-16
    81e4:	3f000d0e 	bge	r7,fp,821c <___vfiprintf_internal_r+0xc70>
    81e8:	10800404 	addi	r2,r2,16
    81ec:	28c00044 	addi	r3,r5,1
    81f0:	45c00015 	stw	r23,0(r8)
    81f4:	41c00115 	stw	r7,4(r8)
    81f8:	d8801c15 	stw	r2,112(sp)
    81fc:	d8c01b15 	stw	r3,108(sp)
    8200:	68fff40e 	bge	r13,r3,81d4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70081d4>
    8204:	1000101e 	bne	r2,zero,8248 <___vfiprintf_internal_r+0xc9c>
    8208:	e73ffc04 	addi	fp,fp,-16
    820c:	01000044 	movi	r4,1
    8210:	000b883a 	mov	r5,zero
    8214:	d811883a 	mov	r8,sp
    8218:	3f3ff316 	blt	r7,fp,81e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70081e8>
    821c:	da802417 	ldw	r10,144(sp)
    8220:	1705883a 	add	r2,r2,fp
    8224:	47000115 	stw	fp,4(r8)
    8228:	42800015 	stw	r10,0(r8)
    822c:	d8801c15 	stw	r2,112(sp)
    8230:	d9001b15 	stw	r4,108(sp)
    8234:	00c001c4 	movi	r3,7
    8238:	19003616 	blt	r3,r4,8314 <___vfiprintf_internal_r+0xd68>
    823c:	42000204 	addi	r8,r8,8
    8240:	21000044 	addi	r4,r4,1
    8244:	003e5706 	br	7ba4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007ba4>
    8248:	d9402117 	ldw	r5,132(sp)
    824c:	d9002017 	ldw	r4,128(sp)
    8250:	d9801a04 	addi	r6,sp,104
    8254:	d9c02b15 	stw	r7,172(sp)
    8258:	db402a15 	stw	r13,168(sp)
    825c:	00074980 	call	7498 <__sprint_r.part.0>
    8260:	d9c02b17 	ldw	r7,172(sp)
    8264:	db402a17 	ldw	r13,168(sp)
    8268:	1000241e 	bne	r2,zero,82fc <___vfiprintf_internal_r+0xd50>
    826c:	d9401b17 	ldw	r5,108(sp)
    8270:	d8801c17 	ldw	r2,112(sp)
    8274:	d811883a 	mov	r8,sp
    8278:	29000044 	addi	r4,r5,1
    827c:	003fd806 	br	81e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70081e0>
    8280:	d9401b17 	ldw	r5,108(sp)
    8284:	00c00074 	movhi	r3,1
    8288:	18c63e04 	addi	r3,r3,6392
    828c:	d8c02415 	stw	r3,144(sp)
    8290:	29400044 	addi	r5,r5,1
    8294:	d8c02417 	ldw	r3,144(sp)
    8298:	14c5883a 	add	r2,r2,r19
    829c:	44c00115 	stw	r19,4(r8)
    82a0:	40c00015 	stw	r3,0(r8)
    82a4:	d8801c15 	stw	r2,112(sp)
    82a8:	d9401b15 	stw	r5,108(sp)
    82ac:	00c001c4 	movi	r3,7
    82b0:	1940070e 	bge	r3,r5,82d0 <___vfiprintf_internal_r+0xd24>
    82b4:	103e4826 	beq	r2,zero,7bd8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007bd8>
    82b8:	d9402117 	ldw	r5,132(sp)
    82bc:	d9002017 	ldw	r4,128(sp)
    82c0:	d9801a04 	addi	r6,sp,104
    82c4:	00074980 	call	7498 <__sprint_r.part.0>
    82c8:	10000c1e 	bne	r2,zero,82fc <___vfiprintf_internal_r+0xd50>
    82cc:	d8801c17 	ldw	r2,112(sp)
    82d0:	8c80010e 	bge	r17,r18,82d8 <___vfiprintf_internal_r+0xd2c>
    82d4:	9023883a 	mov	r17,r18
    82d8:	da802317 	ldw	r10,140(sp)
    82dc:	5455883a 	add	r10,r10,r17
    82e0:	da802315 	stw	r10,140(sp)
    82e4:	103e4126 	beq	r2,zero,7bec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007bec>
    82e8:	d9402117 	ldw	r5,132(sp)
    82ec:	d9002017 	ldw	r4,128(sp)
    82f0:	d9801a04 	addi	r6,sp,104
    82f4:	00074980 	call	7498 <__sprint_r.part.0>
    82f8:	103e3c26 	beq	r2,zero,7bec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007bec>
    82fc:	dd002117 	ldw	r20,132(sp)
    8300:	a080030b 	ldhu	r2,12(r20)
    8304:	1080100c 	andi	r2,r2,64
    8308:	1001231e 	bne	r2,zero,8798 <___vfiprintf_internal_r+0x11ec>
    830c:	d8802317 	ldw	r2,140(sp)
    8310:	003d7b06 	br	7900 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007900>
    8314:	1000991e 	bne	r2,zero,857c <___vfiprintf_internal_r+0xfd0>
    8318:	00c00044 	movi	r3,1
    831c:	9805883a 	mov	r2,r19
    8320:	dd400015 	stw	r21,0(sp)
    8324:	dcc00115 	stw	r19,4(sp)
    8328:	dcc01c15 	stw	r19,112(sp)
    832c:	d8c01b15 	stw	r3,108(sp)
    8330:	d811883a 	mov	r8,sp
    8334:	42000204 	addi	r8,r8,8
    8338:	a2c0010c 	andi	r11,r20,4
    833c:	583fe426 	beq	r11,zero,82d0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082d0>
    8340:	8ca7c83a 	sub	r19,r17,r18
    8344:	04ffe20e 	bge	zero,r19,82d0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082d0>
    8348:	01c00404 	movi	r7,16
    834c:	3cffcc0e 	bge	r7,r19,8280 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008280>
    8350:	02800074 	movhi	r10,1
    8354:	52863e04 	addi	r10,r10,6392
    8358:	d9001b17 	ldw	r4,108(sp)
    835c:	da802415 	stw	r10,144(sp)
    8360:	382b883a 	mov	r21,r7
    8364:	050001c4 	movi	r20,7
    8368:	df002017 	ldw	fp,128(sp)
    836c:	00000506 	br	8384 <___vfiprintf_internal_r+0xdd8>
    8370:	21400084 	addi	r5,r4,2
    8374:	42000204 	addi	r8,r8,8
    8378:	1809883a 	mov	r4,r3
    837c:	9cfffc04 	addi	r19,r19,-16
    8380:	acffc40e 	bge	r21,r19,8294 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008294>
    8384:	10800404 	addi	r2,r2,16
    8388:	20c00044 	addi	r3,r4,1
    838c:	45800015 	stw	r22,0(r8)
    8390:	45400115 	stw	r21,4(r8)
    8394:	d8801c15 	stw	r2,112(sp)
    8398:	d8c01b15 	stw	r3,108(sp)
    839c:	a0fff40e 	bge	r20,r3,8370 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008370>
    83a0:	1000041e 	bne	r2,zero,83b4 <___vfiprintf_internal_r+0xe08>
    83a4:	01400044 	movi	r5,1
    83a8:	0009883a 	mov	r4,zero
    83ac:	d811883a 	mov	r8,sp
    83b0:	003ff206 	br	837c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700837c>
    83b4:	d9402117 	ldw	r5,132(sp)
    83b8:	d9801a04 	addi	r6,sp,104
    83bc:	e009883a 	mov	r4,fp
    83c0:	00074980 	call	7498 <__sprint_r.part.0>
    83c4:	103fcd1e 	bne	r2,zero,82fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082fc>
    83c8:	d9001b17 	ldw	r4,108(sp)
    83cc:	d8801c17 	ldw	r2,112(sp)
    83d0:	d811883a 	mov	r8,sp
    83d4:	21400044 	addi	r5,r4,1
    83d8:	003fe806 	br	837c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700837c>
    83dc:	d9402117 	ldw	r5,132(sp)
    83e0:	d9002017 	ldw	r4,128(sp)
    83e4:	d9801a04 	addi	r6,sp,104
    83e8:	d9c02b15 	stw	r7,172(sp)
    83ec:	db402a15 	stw	r13,168(sp)
    83f0:	00074980 	call	7498 <__sprint_r.part.0>
    83f4:	d9c02b17 	ldw	r7,172(sp)
    83f8:	db402a17 	ldw	r13,168(sp)
    83fc:	103fbf1e 	bne	r2,zero,82fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082fc>
    8400:	d9401b17 	ldw	r5,108(sp)
    8404:	d8801c17 	ldw	r2,112(sp)
    8408:	d811883a 	mov	r8,sp
    840c:	29800044 	addi	r6,r5,1
    8410:	003dc406 	br	7b24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007b24>
    8414:	1000d21e 	bne	r2,zero,8760 <___vfiprintf_internal_r+0x11b4>
    8418:	d8c01d87 	ldb	r3,118(sp)
    841c:	18009526 	beq	r3,zero,8674 <___vfiprintf_internal_r+0x10c8>
    8420:	00800044 	movi	r2,1
    8424:	d8c01d84 	addi	r3,sp,118
    8428:	1009883a 	mov	r4,r2
    842c:	d8c00015 	stw	r3,0(sp)
    8430:	d8800115 	stw	r2,4(sp)
    8434:	d811883a 	mov	r8,sp
    8438:	200b883a 	mov	r5,r4
    843c:	42000204 	addi	r8,r8,8
    8440:	21000044 	addi	r4,r4,1
    8444:	003d9706 	br	7aa4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007aa4>
    8448:	d9001d04 	addi	r4,sp,116
    844c:	00800084 	movi	r2,2
    8450:	d9000015 	stw	r4,0(sp)
    8454:	d8800115 	stw	r2,4(sp)
    8458:	1809883a 	mov	r4,r3
    845c:	d811883a 	mov	r8,sp
    8460:	200b883a 	mov	r5,r4
    8464:	42000204 	addi	r8,r8,8
    8468:	21000044 	addi	r4,r4,1
    846c:	003f4e06 	br	81a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70081a8>
    8470:	d8001d85 	stb	zero,118(sp)
    8474:	48005016 	blt	r9,zero,85b8 <___vfiprintf_internal_r+0x100c>
    8478:	00ffdfc4 	movi	r3,-129
    847c:	94c4b03a 	or	r2,r18,r19
    8480:	a0e8703a 	and	r20,r20,r3
    8484:	103d4426 	beq	r2,zero,7998 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007998>
    8488:	0039883a 	mov	fp,zero
    848c:	d9002617 	ldw	r4,152(sp)
    8490:	dd401a04 	addi	r21,sp,104
    8494:	908003cc 	andi	r2,r18,15
    8498:	9806973a 	slli	r3,r19,28
    849c:	2085883a 	add	r2,r4,r2
    84a0:	9024d13a 	srli	r18,r18,4
    84a4:	10800003 	ldbu	r2,0(r2)
    84a8:	9826d13a 	srli	r19,r19,4
    84ac:	ad7fffc4 	addi	r21,r21,-1
    84b0:	1ca4b03a 	or	r18,r3,r18
    84b4:	a8800005 	stb	r2,0(r21)
    84b8:	94c4b03a 	or	r2,r18,r19
    84bc:	103ff51e 	bne	r2,zero,8494 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008494>
    84c0:	003e5906 	br	7e28 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007e28>
    84c4:	d9402117 	ldw	r5,132(sp)
    84c8:	d9002017 	ldw	r4,128(sp)
    84cc:	d9801a04 	addi	r6,sp,104
    84d0:	00074980 	call	7498 <__sprint_r.part.0>
    84d4:	103f891e 	bne	r2,zero,82fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082fc>
    84d8:	d8801c17 	ldw	r2,112(sp)
    84dc:	d811883a 	mov	r8,sp
    84e0:	003f9506 	br	8338 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008338>
    84e4:	d9402117 	ldw	r5,132(sp)
    84e8:	d9002017 	ldw	r4,128(sp)
    84ec:	d9801a04 	addi	r6,sp,104
    84f0:	00074980 	call	7498 <__sprint_r.part.0>
    84f4:	103f811e 	bne	r2,zero,82fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082fc>
    84f8:	d811883a 	mov	r8,sp
    84fc:	003ced06 	br	78b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70078b4>
    8500:	d9402117 	ldw	r5,132(sp)
    8504:	d9002017 	ldw	r4,128(sp)
    8508:	d9801a04 	addi	r6,sp,104
    850c:	da402c15 	stw	r9,176(sp)
    8510:	db802a15 	stw	r14,168(sp)
    8514:	00074980 	call	7498 <__sprint_r.part.0>
    8518:	da402c17 	ldw	r9,176(sp)
    851c:	db802a17 	ldw	r14,168(sp)
    8520:	103f761e 	bne	r2,zero,82fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082fc>
    8524:	d9401b17 	ldw	r5,108(sp)
    8528:	d8801c17 	ldw	r2,112(sp)
    852c:	d811883a 	mov	r8,sp
    8530:	29000044 	addi	r4,r5,1
    8534:	003d5b06 	br	7aa4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007aa4>
    8538:	d9402117 	ldw	r5,132(sp)
    853c:	d9002017 	ldw	r4,128(sp)
    8540:	d9801a04 	addi	r6,sp,104
    8544:	da402c15 	stw	r9,176(sp)
    8548:	00074980 	call	7498 <__sprint_r.part.0>
    854c:	da402c17 	ldw	r9,176(sp)
    8550:	103f6a1e 	bne	r2,zero,82fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082fc>
    8554:	d9401b17 	ldw	r5,108(sp)
    8558:	d8801c17 	ldw	r2,112(sp)
    855c:	d811883a 	mov	r8,sp
    8560:	29000044 	addi	r4,r5,1
    8564:	003f1006 	br	81a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70081a8>
    8568:	1000c31e 	bne	r2,zero,8878 <___vfiprintf_internal_r+0x12cc>
    856c:	01000044 	movi	r4,1
    8570:	000b883a 	mov	r5,zero
    8574:	d811883a 	mov	r8,sp
    8578:	003f0d06 	br	81b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70081b0>
    857c:	d9402117 	ldw	r5,132(sp)
    8580:	d9002017 	ldw	r4,128(sp)
    8584:	d9801a04 	addi	r6,sp,104
    8588:	00074980 	call	7498 <__sprint_r.part.0>
    858c:	103f5b1e 	bne	r2,zero,82fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082fc>
    8590:	d9001b17 	ldw	r4,108(sp)
    8594:	d8801c17 	ldw	r2,112(sp)
    8598:	d811883a 	mov	r8,sp
    859c:	21000044 	addi	r4,r4,1
    85a0:	003d8006 	br	7ba4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007ba4>
    85a4:	01000074 	movhi	r4,1
    85a8:	2105d904 	addi	r4,r4,5988
    85ac:	d9002615 	stw	r4,152(sp)
    85b0:	d8c02215 	stw	r3,136(sp)
    85b4:	1029883a 	mov	r20,r2
    85b8:	94c4b03a 	or	r2,r18,r19
    85bc:	103fb21e 	bne	r2,zero,8488 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008488>
    85c0:	0039883a 	mov	fp,zero
    85c4:	00800084 	movi	r2,2
    85c8:	003e6b06 	br	7f78 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f78>
    85cc:	da802217 	ldw	r10,136(sp)
    85d0:	d8001d85 	stb	zero,118(sp)
    85d4:	0027883a 	mov	r19,zero
    85d8:	50800104 	addi	r2,r10,4
    85dc:	54800017 	ldw	r18,0(r10)
    85e0:	483e6016 	blt	r9,zero,7f64 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f64>
    85e4:	00ffdfc4 	movi	r3,-129
    85e8:	d8802215 	stw	r2,136(sp)
    85ec:	a0e8703a 	and	r20,r20,r3
    85f0:	0039883a 	mov	fp,zero
    85f4:	903ebb26 	beq	r18,zero,80e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70080e4>
    85f8:	00800244 	movi	r2,9
    85fc:	14bdee36 	bltu	r2,r18,7db8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007db8>
    8600:	003eba06 	br	80ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70080ec>
    8604:	00800c04 	movi	r2,48
    8608:	d8c01d45 	stb	r3,117(sp)
    860c:	d8801d05 	stb	r2,116(sp)
    8610:	d8001d85 	stb	zero,118(sp)
    8614:	a0c00094 	ori	r3,r20,2
    8618:	4800a916 	blt	r9,zero,88c0 <___vfiprintf_internal_r+0x1314>
    861c:	00bfdfc4 	movi	r2,-129
    8620:	a096703a 	and	r11,r20,r2
    8624:	5d000094 	ori	r20,r11,2
    8628:	0039883a 	mov	fp,zero
    862c:	003f9706 	br	848c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700848c>
    8630:	8025883a 	mov	r18,r16
    8634:	003c2e06 	br	76f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70076f0>
    8638:	00800074 	movhi	r2,1
    863c:	1085d904 	addi	r2,r2,5988
    8640:	0039883a 	mov	fp,zero
    8644:	d8802615 	stw	r2,152(sp)
    8648:	003f9006 	br	848c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700848c>
    864c:	04a5c83a 	sub	r18,zero,r18
    8650:	07000b44 	movi	fp,45
    8654:	9004c03a 	cmpne	r2,r18,zero
    8658:	04e7c83a 	sub	r19,zero,r19
    865c:	df001d85 	stb	fp,118(sp)
    8660:	98a7c83a 	sub	r19,r19,r2
    8664:	48009f16 	blt	r9,zero,88e4 <___vfiprintf_internal_r+0x1338>
    8668:	00bfdfc4 	movi	r2,-129
    866c:	a0a8703a 	and	r20,r20,r2
    8670:	003dd006 	br	7db4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007db4>
    8674:	70004c26 	beq	r14,zero,87a8 <___vfiprintf_internal_r+0x11fc>
    8678:	00800084 	movi	r2,2
    867c:	d8c01d04 	addi	r3,sp,116
    8680:	d8c00015 	stw	r3,0(sp)
    8684:	d8800115 	stw	r2,4(sp)
    8688:	01000044 	movi	r4,1
    868c:	d811883a 	mov	r8,sp
    8690:	003f7306 	br	8460 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008460>
    8694:	a080100c 	andi	r2,r20,64
    8698:	da802217 	ldw	r10,136(sp)
    869c:	103e0626 	beq	r2,zero,7eb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007eb8>
    86a0:	5480000f 	ldh	r18,0(r10)
    86a4:	52800104 	addi	r10,r10,4
    86a8:	da802215 	stw	r10,136(sp)
    86ac:	9027d7fa 	srai	r19,r18,31
    86b0:	9805883a 	mov	r2,r19
    86b4:	003db806 	br	7d98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d98>
    86b8:	a080040c 	andi	r2,r20,16
    86bc:	1000091e 	bne	r2,zero,86e4 <___vfiprintf_internal_r+0x1138>
    86c0:	a2c0100c 	andi	r11,r20,64
    86c4:	58000726 	beq	r11,zero,86e4 <___vfiprintf_internal_r+0x1138>
    86c8:	da802217 	ldw	r10,136(sp)
    86cc:	50800017 	ldw	r2,0(r10)
    86d0:	52800104 	addi	r10,r10,4
    86d4:	da802215 	stw	r10,136(sp)
    86d8:	da802317 	ldw	r10,140(sp)
    86dc:	1280000d 	sth	r10,0(r2)
    86e0:	003be706 	br	7680 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007680>
    86e4:	da802217 	ldw	r10,136(sp)
    86e8:	50800017 	ldw	r2,0(r10)
    86ec:	52800104 	addi	r10,r10,4
    86f0:	da802215 	stw	r10,136(sp)
    86f4:	da802317 	ldw	r10,140(sp)
    86f8:	12800015 	stw	r10,0(r2)
    86fc:	003be006 	br	7680 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007680>
    8700:	a080100c 	andi	r2,r20,64
    8704:	da802217 	ldw	r10,136(sp)
    8708:	10003026 	beq	r2,zero,87cc <___vfiprintf_internal_r+0x1220>
    870c:	5480000b 	ldhu	r18,0(r10)
    8710:	52800104 	addi	r10,r10,4
    8714:	0027883a 	mov	r19,zero
    8718:	da802215 	stw	r10,136(sp)
    871c:	003d8006 	br	7d20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d20>
    8720:	80c00007 	ldb	r3,0(r16)
    8724:	003c0006 	br	7728 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007728>
    8728:	a080100c 	andi	r2,r20,64
    872c:	d8001d85 	stb	zero,118(sp)
    8730:	da802217 	ldw	r10,136(sp)
    8734:	1000201e 	bne	r2,zero,87b8 <___vfiprintf_internal_r+0x120c>
    8738:	50800104 	addi	r2,r10,4
    873c:	54800017 	ldw	r18,0(r10)
    8740:	0027883a 	mov	r19,zero
    8744:	483def0e 	bge	r9,zero,7f04 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f04>
    8748:	94c6b03a 	or	r3,r18,r19
    874c:	d8802215 	stw	r2,136(sp)
    8750:	183d4e1e 	bne	r3,zero,7c8c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007c8c>
    8754:	0039883a 	mov	fp,zero
    8758:	0005883a 	mov	r2,zero
    875c:	003e0606 	br	7f78 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f78>
    8760:	d9402117 	ldw	r5,132(sp)
    8764:	d9002017 	ldw	r4,128(sp)
    8768:	d9801a04 	addi	r6,sp,104
    876c:	da402c15 	stw	r9,176(sp)
    8770:	db802a15 	stw	r14,168(sp)
    8774:	00074980 	call	7498 <__sprint_r.part.0>
    8778:	da402c17 	ldw	r9,176(sp)
    877c:	db802a17 	ldw	r14,168(sp)
    8780:	103ede1e 	bne	r2,zero,82fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082fc>
    8784:	d9401b17 	ldw	r5,108(sp)
    8788:	d8801c17 	ldw	r2,112(sp)
    878c:	d811883a 	mov	r8,sp
    8790:	29000044 	addi	r4,r5,1
    8794:	003e7406 	br	8168 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008168>
    8798:	00bfffc4 	movi	r2,-1
    879c:	003c5806 	br	7900 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007900>
    87a0:	d811883a 	mov	r8,sp
    87a4:	003ee806 	br	8348 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008348>
    87a8:	000b883a 	mov	r5,zero
    87ac:	01000044 	movi	r4,1
    87b0:	d811883a 	mov	r8,sp
    87b4:	003e7c06 	br	81a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70081a8>
    87b8:	50800104 	addi	r2,r10,4
    87bc:	5480000b 	ldhu	r18,0(r10)
    87c0:	0027883a 	mov	r19,zero
    87c4:	483dcf0e 	bge	r9,zero,7f04 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f04>
    87c8:	003fdf06 	br	8748 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008748>
    87cc:	54800017 	ldw	r18,0(r10)
    87d0:	52800104 	addi	r10,r10,4
    87d4:	0027883a 	mov	r19,zero
    87d8:	da802215 	stw	r10,136(sp)
    87dc:	003d5006 	br	7d20 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d20>
    87e0:	50800104 	addi	r2,r10,4
    87e4:	5480000b 	ldhu	r18,0(r10)
    87e8:	0027883a 	mov	r19,zero
    87ec:	483f7d0e 	bge	r9,zero,85e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70085e4>
    87f0:	003ddc06 	br	7f64 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f64>
    87f4:	d8c02215 	stw	r3,136(sp)
    87f8:	0039883a 	mov	fp,zero
    87fc:	003ddb06 	br	7f6c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f6c>
    8800:	02800074 	movhi	r10,1
    8804:	52863a04 	addi	r10,r10,6376
    8808:	da802415 	stw	r10,144(sp)
    880c:	003e8306 	br	821c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700821c>
    8810:	d8801c17 	ldw	r2,112(sp)
    8814:	dd002117 	ldw	r20,132(sp)
    8818:	103eb926 	beq	r2,zero,8300 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008300>
    881c:	d9002017 	ldw	r4,128(sp)
    8820:	d9801a04 	addi	r6,sp,104
    8824:	a00b883a 	mov	r5,r20
    8828:	00074980 	call	7498 <__sprint_r.part.0>
    882c:	003eb406 	br	8300 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008300>
    8830:	80c00043 	ldbu	r3,1(r16)
    8834:	a5000814 	ori	r20,r20,32
    8838:	84000044 	addi	r16,r16,1
    883c:	18c03fcc 	andi	r3,r3,255
    8840:	18c0201c 	xori	r3,r3,128
    8844:	18ffe004 	addi	r3,r3,-128
    8848:	003bb706 	br	7728 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007728>
    884c:	a809883a 	mov	r4,r21
    8850:	d8c02a15 	stw	r3,168(sp)
    8854:	da002b15 	stw	r8,172(sp)
    8858:	00074000 	call	7400 <strlen>
    885c:	d8c02a17 	ldw	r3,168(sp)
    8860:	1027883a 	mov	r19,r2
    8864:	df001d83 	ldbu	fp,118(sp)
    8868:	d8c02215 	stw	r3,136(sp)
    886c:	0013883a 	mov	r9,zero
    8870:	da002b17 	ldw	r8,172(sp)
    8874:	003c4d06 	br	79ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079ac>
    8878:	d9402117 	ldw	r5,132(sp)
    887c:	d9002017 	ldw	r4,128(sp)
    8880:	d9801a04 	addi	r6,sp,104
    8884:	da402c15 	stw	r9,176(sp)
    8888:	00074980 	call	7498 <__sprint_r.part.0>
    888c:	da402c17 	ldw	r9,176(sp)
    8890:	103e9a1e 	bne	r2,zero,82fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70082fc>
    8894:	d9401b17 	ldw	r5,108(sp)
    8898:	d8801c17 	ldw	r2,112(sp)
    889c:	d811883a 	mov	r8,sp
    88a0:	29000044 	addi	r4,r5,1
    88a4:	003e4206 	br	81b0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70081b0>
    88a8:	d9401b17 	ldw	r5,108(sp)
    88ac:	01000074 	movhi	r4,1
    88b0:	21063e04 	addi	r4,r4,6392
    88b4:	d9002415 	stw	r4,144(sp)
    88b8:	29400044 	addi	r5,r5,1
    88bc:	003c6d06 	br	7a74 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007a74>
    88c0:	0039883a 	mov	fp,zero
    88c4:	00800084 	movi	r2,2
    88c8:	10803fcc 	andi	r2,r2,255
    88cc:	01000044 	movi	r4,1
    88d0:	11001e26 	beq	r2,r4,894c <___vfiprintf_internal_r+0x13a0>
    88d4:	01000084 	movi	r4,2
    88d8:	11001e1e 	bne	r2,r4,8954 <___vfiprintf_internal_r+0x13a8>
    88dc:	1829883a 	mov	r20,r3
    88e0:	003eea06 	br	848c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700848c>
    88e4:	a007883a 	mov	r3,r20
    88e8:	00800044 	movi	r2,1
    88ec:	003ff606 	br	88c8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70088c8>
    88f0:	00800184 	movi	r2,6
    88f4:	1240012e 	bgeu	r2,r9,88fc <___vfiprintf_internal_r+0x1350>
    88f8:	1013883a 	mov	r9,r2
    88fc:	4827883a 	mov	r19,r9
    8900:	4825883a 	mov	r18,r9
    8904:	48001516 	blt	r9,zero,895c <___vfiprintf_internal_r+0x13b0>
    8908:	05400074 	movhi	r21,1
    890c:	d8c02215 	stw	r3,136(sp)
    8910:	ad45de04 	addi	r21,r21,6008
    8914:	003d1406 	br	7d68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d68>
    8918:	02800074 	movhi	r10,1
    891c:	52863a04 	addi	r10,r10,6376
    8920:	da802415 	stw	r10,144(sp)
    8924:	200d883a 	mov	r6,r4
    8928:	003c9106 	br	7b70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007b70>
    892c:	5021883a 	mov	r16,r10
    8930:	0013883a 	mov	r9,zero
    8934:	003b7d06 	br	772c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700772c>
    8938:	4827883a 	mov	r19,r9
    893c:	df001d83 	ldbu	fp,118(sp)
    8940:	d8c02215 	stw	r3,136(sp)
    8944:	0013883a 	mov	r9,zero
    8948:	003c1806 	br	79ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079ac>
    894c:	1829883a 	mov	r20,r3
    8950:	003d1806 	br	7db4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007db4>
    8954:	1829883a 	mov	r20,r3
    8958:	003ccd06 	br	7c90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007c90>
    895c:	0025883a 	mov	r18,zero
    8960:	003fe906 	br	8908 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008908>
    8964:	d8802217 	ldw	r2,136(sp)
    8968:	80c00043 	ldbu	r3,1(r16)
    896c:	5021883a 	mov	r16,r10
    8970:	12400017 	ldw	r9,0(r2)
    8974:	10800104 	addi	r2,r2,4
    8978:	d8802215 	stw	r2,136(sp)
    897c:	483faf0e 	bge	r9,zero,883c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700883c>
    8980:	18c03fcc 	andi	r3,r3,255
    8984:	18c0201c 	xori	r3,r3,128
    8988:	027fffc4 	movi	r9,-1
    898c:	18ffe004 	addi	r3,r3,-128
    8990:	003b6506 	br	7728 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007728>
    8994:	d9c01d85 	stb	r7,118(sp)
    8998:	003ca006 	br	7c1c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007c1c>
    899c:	d9c01d85 	stb	r7,118(sp)
    89a0:	003cad06 	br	7c58 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007c58>
    89a4:	d9c01d85 	stb	r7,118(sp)
    89a8:	003d7d06 	br	7fa0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007fa0>
    89ac:	d9c01d85 	stb	r7,118(sp)
    89b0:	003d5f06 	br	7f30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007f30>
    89b4:	a080004c 	andi	r2,r20,1
    89b8:	0039883a 	mov	fp,zero
    89bc:	10000526 	beq	r2,zero,89d4 <___vfiprintf_internal_r+0x1428>
    89c0:	00800c04 	movi	r2,48
    89c4:	d88019c5 	stb	r2,103(sp)
    89c8:	dcc02717 	ldw	r19,156(sp)
    89cc:	dd4019c4 	addi	r21,sp,103
    89d0:	003bf606 	br	79ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079ac>
    89d4:	0027883a 	mov	r19,zero
    89d8:	dd401a04 	addi	r21,sp,104
    89dc:	003bf306 	br	79ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70079ac>
    89e0:	d9c01d85 	stb	r7,118(sp)
    89e4:	003dc806 	br	8108 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008108>
    89e8:	d9c01d85 	stb	r7,118(sp)
    89ec:	003d3a06 	br	7ed8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007ed8>
    89f0:	d9c01d85 	stb	r7,118(sp)
    89f4:	003d2a06 	br	7ea0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007ea0>
    89f8:	d9c01d85 	stb	r7,118(sp)
    89fc:	003cde06 	br	7d78 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007d78>
    8a00:	d9c01d85 	stb	r7,118(sp)
    8a04:	003cbc06 	br	7cf8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7007cf8>

00008a08 <__vfiprintf_internal>:
    8a08:	00800074 	movhi	r2,1
    8a0c:	108e1004 	addi	r2,r2,14400
    8a10:	300f883a 	mov	r7,r6
    8a14:	280d883a 	mov	r6,r5
    8a18:	200b883a 	mov	r5,r4
    8a1c:	11000017 	ldw	r4,0(r2)
    8a20:	00075ac1 	jmpi	75ac <___vfiprintf_internal_r>

00008a24 <__sbprintf>:
    8a24:	2880030b 	ldhu	r2,12(r5)
    8a28:	2ac01917 	ldw	r11,100(r5)
    8a2c:	2a80038b 	ldhu	r10,14(r5)
    8a30:	2a400717 	ldw	r9,28(r5)
    8a34:	2a000917 	ldw	r8,36(r5)
    8a38:	defee204 	addi	sp,sp,-1144
    8a3c:	00c10004 	movi	r3,1024
    8a40:	dc011a15 	stw	r16,1128(sp)
    8a44:	10bfff4c 	andi	r2,r2,65533
    8a48:	2821883a 	mov	r16,r5
    8a4c:	d8cb883a 	add	r5,sp,r3
    8a50:	dc811c15 	stw	r18,1136(sp)
    8a54:	dc411b15 	stw	r17,1132(sp)
    8a58:	dfc11d15 	stw	ra,1140(sp)
    8a5c:	2025883a 	mov	r18,r4
    8a60:	d881030d 	sth	r2,1036(sp)
    8a64:	dac11915 	stw	r11,1124(sp)
    8a68:	da81038d 	sth	r10,1038(sp)
    8a6c:	da410715 	stw	r9,1052(sp)
    8a70:	da010915 	stw	r8,1060(sp)
    8a74:	dec10015 	stw	sp,1024(sp)
    8a78:	dec10415 	stw	sp,1040(sp)
    8a7c:	d8c10215 	stw	r3,1032(sp)
    8a80:	d8c10515 	stw	r3,1044(sp)
    8a84:	d8010615 	stw	zero,1048(sp)
    8a88:	00075ac0 	call	75ac <___vfiprintf_internal_r>
    8a8c:	1023883a 	mov	r17,r2
    8a90:	10000416 	blt	r2,zero,8aa4 <__sbprintf+0x80>
    8a94:	d9410004 	addi	r5,sp,1024
    8a98:	9009883a 	mov	r4,r18
    8a9c:	00049440 	call	4944 <_fflush_r>
    8aa0:	10000d1e 	bne	r2,zero,8ad8 <__sbprintf+0xb4>
    8aa4:	d881030b 	ldhu	r2,1036(sp)
    8aa8:	1080100c 	andi	r2,r2,64
    8aac:	10000326 	beq	r2,zero,8abc <__sbprintf+0x98>
    8ab0:	8080030b 	ldhu	r2,12(r16)
    8ab4:	10801014 	ori	r2,r2,64
    8ab8:	8080030d 	sth	r2,12(r16)
    8abc:	8805883a 	mov	r2,r17
    8ac0:	dfc11d17 	ldw	ra,1140(sp)
    8ac4:	dc811c17 	ldw	r18,1136(sp)
    8ac8:	dc411b17 	ldw	r17,1132(sp)
    8acc:	dc011a17 	ldw	r16,1128(sp)
    8ad0:	dec11e04 	addi	sp,sp,1144
    8ad4:	f800283a 	ret
    8ad8:	047fffc4 	movi	r17,-1
    8adc:	003ff106 	br	8aa4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008aa4>

00008ae0 <_write_r>:
    8ae0:	defffd04 	addi	sp,sp,-12
    8ae4:	2805883a 	mov	r2,r5
    8ae8:	dc000015 	stw	r16,0(sp)
    8aec:	04000074 	movhi	r16,1
    8af0:	dc400115 	stw	r17,4(sp)
    8af4:	300b883a 	mov	r5,r6
    8af8:	8415a804 	addi	r16,r16,22176
    8afc:	2023883a 	mov	r17,r4
    8b00:	380d883a 	mov	r6,r7
    8b04:	1009883a 	mov	r4,r2
    8b08:	dfc00215 	stw	ra,8(sp)
    8b0c:	80000015 	stw	zero,0(r16)
    8b10:	000ddbc0 	call	ddbc <write>
    8b14:	00ffffc4 	movi	r3,-1
    8b18:	10c00526 	beq	r2,r3,8b30 <_write_r+0x50>
    8b1c:	dfc00217 	ldw	ra,8(sp)
    8b20:	dc400117 	ldw	r17,4(sp)
    8b24:	dc000017 	ldw	r16,0(sp)
    8b28:	dec00304 	addi	sp,sp,12
    8b2c:	f800283a 	ret
    8b30:	80c00017 	ldw	r3,0(r16)
    8b34:	183ff926 	beq	r3,zero,8b1c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008b1c>
    8b38:	88c00015 	stw	r3,0(r17)
    8b3c:	003ff706 	br	8b1c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008b1c>

00008b40 <_close_r>:
    8b40:	defffd04 	addi	sp,sp,-12
    8b44:	dc000015 	stw	r16,0(sp)
    8b48:	04000074 	movhi	r16,1
    8b4c:	dc400115 	stw	r17,4(sp)
    8b50:	8415a804 	addi	r16,r16,22176
    8b54:	2023883a 	mov	r17,r4
    8b58:	2809883a 	mov	r4,r5
    8b5c:	dfc00215 	stw	ra,8(sp)
    8b60:	80000015 	stw	zero,0(r16)
    8b64:	000d2340 	call	d234 <close>
    8b68:	00ffffc4 	movi	r3,-1
    8b6c:	10c00526 	beq	r2,r3,8b84 <_close_r+0x44>
    8b70:	dfc00217 	ldw	ra,8(sp)
    8b74:	dc400117 	ldw	r17,4(sp)
    8b78:	dc000017 	ldw	r16,0(sp)
    8b7c:	dec00304 	addi	sp,sp,12
    8b80:	f800283a 	ret
    8b84:	80c00017 	ldw	r3,0(r16)
    8b88:	183ff926 	beq	r3,zero,8b70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008b70>
    8b8c:	88c00015 	stw	r3,0(r17)
    8b90:	003ff706 	br	8b70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008b70>

00008b94 <_calloc_r>:
    8b94:	298b383a 	mul	r5,r5,r6
    8b98:	defffe04 	addi	sp,sp,-8
    8b9c:	dfc00115 	stw	ra,4(sp)
    8ba0:	dc000015 	stw	r16,0(sp)
    8ba4:	00055c40 	call	55c4 <_malloc_r>
    8ba8:	10002926 	beq	r2,zero,8c50 <_calloc_r+0xbc>
    8bac:	11bfff17 	ldw	r6,-4(r2)
    8bb0:	1021883a 	mov	r16,r2
    8bb4:	00bfff04 	movi	r2,-4
    8bb8:	308c703a 	and	r6,r6,r2
    8bbc:	00c00904 	movi	r3,36
    8bc0:	308d883a 	add	r6,r6,r2
    8bc4:	19801636 	bltu	r3,r6,8c20 <_calloc_r+0x8c>
    8bc8:	008004c4 	movi	r2,19
    8bcc:	11800b2e 	bgeu	r2,r6,8bfc <_calloc_r+0x68>
    8bd0:	80000015 	stw	zero,0(r16)
    8bd4:	80000115 	stw	zero,4(r16)
    8bd8:	008006c4 	movi	r2,27
    8bdc:	11801a2e 	bgeu	r2,r6,8c48 <_calloc_r+0xb4>
    8be0:	80000215 	stw	zero,8(r16)
    8be4:	80000315 	stw	zero,12(r16)
    8be8:	30c0151e 	bne	r6,r3,8c40 <_calloc_r+0xac>
    8bec:	80000415 	stw	zero,16(r16)
    8bf0:	80800604 	addi	r2,r16,24
    8bf4:	80000515 	stw	zero,20(r16)
    8bf8:	00000106 	br	8c00 <_calloc_r+0x6c>
    8bfc:	8005883a 	mov	r2,r16
    8c00:	10000015 	stw	zero,0(r2)
    8c04:	10000115 	stw	zero,4(r2)
    8c08:	10000215 	stw	zero,8(r2)
    8c0c:	8005883a 	mov	r2,r16
    8c10:	dfc00117 	ldw	ra,4(sp)
    8c14:	dc000017 	ldw	r16,0(sp)
    8c18:	dec00204 	addi	sp,sp,8
    8c1c:	f800283a 	ret
    8c20:	000b883a 	mov	r5,zero
    8c24:	8009883a 	mov	r4,r16
    8c28:	0005ffc0 	call	5ffc <memset>
    8c2c:	8005883a 	mov	r2,r16
    8c30:	dfc00117 	ldw	ra,4(sp)
    8c34:	dc000017 	ldw	r16,0(sp)
    8c38:	dec00204 	addi	sp,sp,8
    8c3c:	f800283a 	ret
    8c40:	80800404 	addi	r2,r16,16
    8c44:	003fee06 	br	8c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008c00>
    8c48:	80800204 	addi	r2,r16,8
    8c4c:	003fec06 	br	8c00 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008c00>
    8c50:	0005883a 	mov	r2,zero
    8c54:	003fee06 	br	8c10 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008c10>

00008c58 <_fclose_r>:
    8c58:	28003926 	beq	r5,zero,8d40 <_fclose_r+0xe8>
    8c5c:	defffc04 	addi	sp,sp,-16
    8c60:	dc400115 	stw	r17,4(sp)
    8c64:	dc000015 	stw	r16,0(sp)
    8c68:	dfc00315 	stw	ra,12(sp)
    8c6c:	dc800215 	stw	r18,8(sp)
    8c70:	2023883a 	mov	r17,r4
    8c74:	2821883a 	mov	r16,r5
    8c78:	20000226 	beq	r4,zero,8c84 <_fclose_r+0x2c>
    8c7c:	20800e17 	ldw	r2,56(r4)
    8c80:	10002726 	beq	r2,zero,8d20 <_fclose_r+0xc8>
    8c84:	8080030f 	ldh	r2,12(r16)
    8c88:	1000071e 	bne	r2,zero,8ca8 <_fclose_r+0x50>
    8c8c:	0005883a 	mov	r2,zero
    8c90:	dfc00317 	ldw	ra,12(sp)
    8c94:	dc800217 	ldw	r18,8(sp)
    8c98:	dc400117 	ldw	r17,4(sp)
    8c9c:	dc000017 	ldw	r16,0(sp)
    8ca0:	dec00404 	addi	sp,sp,16
    8ca4:	f800283a 	ret
    8ca8:	800b883a 	mov	r5,r16
    8cac:	8809883a 	mov	r4,r17
    8cb0:	00047280 	call	4728 <__sflush_r>
    8cb4:	1025883a 	mov	r18,r2
    8cb8:	80800b17 	ldw	r2,44(r16)
    8cbc:	10000426 	beq	r2,zero,8cd0 <_fclose_r+0x78>
    8cc0:	81400717 	ldw	r5,28(r16)
    8cc4:	8809883a 	mov	r4,r17
    8cc8:	103ee83a 	callr	r2
    8ccc:	10001616 	blt	r2,zero,8d28 <_fclose_r+0xd0>
    8cd0:	8080030b 	ldhu	r2,12(r16)
    8cd4:	1080200c 	andi	r2,r2,128
    8cd8:	1000151e 	bne	r2,zero,8d30 <_fclose_r+0xd8>
    8cdc:	81400c17 	ldw	r5,48(r16)
    8ce0:	28000526 	beq	r5,zero,8cf8 <_fclose_r+0xa0>
    8ce4:	80801004 	addi	r2,r16,64
    8ce8:	28800226 	beq	r5,r2,8cf4 <_fclose_r+0x9c>
    8cec:	8809883a 	mov	r4,r17
    8cf0:	0004e940 	call	4e94 <_free_r>
    8cf4:	80000c15 	stw	zero,48(r16)
    8cf8:	81401117 	ldw	r5,68(r16)
    8cfc:	28000326 	beq	r5,zero,8d0c <_fclose_r+0xb4>
    8d00:	8809883a 	mov	r4,r17
    8d04:	0004e940 	call	4e94 <_free_r>
    8d08:	80001115 	stw	zero,68(r16)
    8d0c:	0004d300 	call	4d30 <__sfp_lock_acquire>
    8d10:	8000030d 	sth	zero,12(r16)
    8d14:	0004d340 	call	4d34 <__sfp_lock_release>
    8d18:	9005883a 	mov	r2,r18
    8d1c:	003fdc06 	br	8c90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008c90>
    8d20:	0004d200 	call	4d20 <__sinit>
    8d24:	003fd706 	br	8c84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008c84>
    8d28:	04bfffc4 	movi	r18,-1
    8d2c:	003fe806 	br	8cd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008cd0>
    8d30:	81400417 	ldw	r5,16(r16)
    8d34:	8809883a 	mov	r4,r17
    8d38:	0004e940 	call	4e94 <_free_r>
    8d3c:	003fe706 	br	8cdc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008cdc>
    8d40:	0005883a 	mov	r2,zero
    8d44:	f800283a 	ret

00008d48 <fclose>:
    8d48:	00800074 	movhi	r2,1
    8d4c:	108e1004 	addi	r2,r2,14400
    8d50:	200b883a 	mov	r5,r4
    8d54:	11000017 	ldw	r4,0(r2)
    8d58:	0008c581 	jmpi	8c58 <_fclose_r>

00008d5c <__fputwc>:
    8d5c:	defff804 	addi	sp,sp,-32
    8d60:	dcc00415 	stw	r19,16(sp)
    8d64:	dc800315 	stw	r18,12(sp)
    8d68:	dc000115 	stw	r16,4(sp)
    8d6c:	dfc00715 	stw	ra,28(sp)
    8d70:	dd400615 	stw	r21,24(sp)
    8d74:	dd000515 	stw	r20,20(sp)
    8d78:	dc400215 	stw	r17,8(sp)
    8d7c:	2027883a 	mov	r19,r4
    8d80:	2825883a 	mov	r18,r5
    8d84:	3021883a 	mov	r16,r6
    8d88:	00053b40 	call	53b4 <__locale_mb_cur_max>
    8d8c:	00c00044 	movi	r3,1
    8d90:	10c03e26 	beq	r2,r3,8e8c <__fputwc+0x130>
    8d94:	81c01704 	addi	r7,r16,92
    8d98:	900d883a 	mov	r6,r18
    8d9c:	d80b883a 	mov	r5,sp
    8da0:	9809883a 	mov	r4,r19
    8da4:	0009da80 	call	9da8 <_wcrtomb_r>
    8da8:	1029883a 	mov	r20,r2
    8dac:	00bfffc4 	movi	r2,-1
    8db0:	a0802026 	beq	r20,r2,8e34 <__fputwc+0xd8>
    8db4:	d9400003 	ldbu	r5,0(sp)
    8db8:	a0001c26 	beq	r20,zero,8e2c <__fputwc+0xd0>
    8dbc:	0023883a 	mov	r17,zero
    8dc0:	05400284 	movi	r21,10
    8dc4:	00000906 	br	8dec <__fputwc+0x90>
    8dc8:	80800017 	ldw	r2,0(r16)
    8dcc:	11400005 	stb	r5,0(r2)
    8dd0:	80c00017 	ldw	r3,0(r16)
    8dd4:	18c00044 	addi	r3,r3,1
    8dd8:	80c00015 	stw	r3,0(r16)
    8ddc:	8c400044 	addi	r17,r17,1
    8de0:	dc45883a 	add	r2,sp,r17
    8de4:	8d00112e 	bgeu	r17,r20,8e2c <__fputwc+0xd0>
    8de8:	11400003 	ldbu	r5,0(r2)
    8dec:	80c00217 	ldw	r3,8(r16)
    8df0:	18ffffc4 	addi	r3,r3,-1
    8df4:	80c00215 	stw	r3,8(r16)
    8df8:	183ff30e 	bge	r3,zero,8dc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008dc8>
    8dfc:	80800617 	ldw	r2,24(r16)
    8e00:	18801916 	blt	r3,r2,8e68 <__fputwc+0x10c>
    8e04:	80800017 	ldw	r2,0(r16)
    8e08:	11400005 	stb	r5,0(r2)
    8e0c:	80800017 	ldw	r2,0(r16)
    8e10:	10c00003 	ldbu	r3,0(r2)
    8e14:	10800044 	addi	r2,r2,1
    8e18:	1d402326 	beq	r3,r21,8ea8 <__fputwc+0x14c>
    8e1c:	80800015 	stw	r2,0(r16)
    8e20:	8c400044 	addi	r17,r17,1
    8e24:	dc45883a 	add	r2,sp,r17
    8e28:	8d3fef36 	bltu	r17,r20,8de8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008de8>
    8e2c:	9005883a 	mov	r2,r18
    8e30:	00000406 	br	8e44 <__fputwc+0xe8>
    8e34:	80c0030b 	ldhu	r3,12(r16)
    8e38:	a005883a 	mov	r2,r20
    8e3c:	18c01014 	ori	r3,r3,64
    8e40:	80c0030d 	sth	r3,12(r16)
    8e44:	dfc00717 	ldw	ra,28(sp)
    8e48:	dd400617 	ldw	r21,24(sp)
    8e4c:	dd000517 	ldw	r20,20(sp)
    8e50:	dcc00417 	ldw	r19,16(sp)
    8e54:	dc800317 	ldw	r18,12(sp)
    8e58:	dc400217 	ldw	r17,8(sp)
    8e5c:	dc000117 	ldw	r16,4(sp)
    8e60:	dec00804 	addi	sp,sp,32
    8e64:	f800283a 	ret
    8e68:	800d883a 	mov	r6,r16
    8e6c:	29403fcc 	andi	r5,r5,255
    8e70:	9809883a 	mov	r4,r19
    8e74:	0009c500 	call	9c50 <__swbuf_r>
    8e78:	10bfffe0 	cmpeqi	r2,r2,-1
    8e7c:	10803fcc 	andi	r2,r2,255
    8e80:	103fd626 	beq	r2,zero,8ddc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008ddc>
    8e84:	00bfffc4 	movi	r2,-1
    8e88:	003fee06 	br	8e44 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008e44>
    8e8c:	90ffffc4 	addi	r3,r18,-1
    8e90:	01003f84 	movi	r4,254
    8e94:	20ffbf36 	bltu	r4,r3,8d94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008d94>
    8e98:	900b883a 	mov	r5,r18
    8e9c:	dc800005 	stb	r18,0(sp)
    8ea0:	1029883a 	mov	r20,r2
    8ea4:	003fc506 	br	8dbc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008dbc>
    8ea8:	800d883a 	mov	r6,r16
    8eac:	a80b883a 	mov	r5,r21
    8eb0:	9809883a 	mov	r4,r19
    8eb4:	0009c500 	call	9c50 <__swbuf_r>
    8eb8:	10bfffe0 	cmpeqi	r2,r2,-1
    8ebc:	003fef06 	br	8e7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008e7c>

00008ec0 <_fputwc_r>:
    8ec0:	3080030b 	ldhu	r2,12(r6)
    8ec4:	10c8000c 	andi	r3,r2,8192
    8ec8:	1800051e 	bne	r3,zero,8ee0 <_fputwc_r+0x20>
    8ecc:	30c01917 	ldw	r3,100(r6)
    8ed0:	10880014 	ori	r2,r2,8192
    8ed4:	3080030d 	sth	r2,12(r6)
    8ed8:	18880014 	ori	r2,r3,8192
    8edc:	30801915 	stw	r2,100(r6)
    8ee0:	0008d5c1 	jmpi	8d5c <__fputwc>

00008ee4 <fputwc>:
    8ee4:	00800074 	movhi	r2,1
    8ee8:	defffc04 	addi	sp,sp,-16
    8eec:	108e1004 	addi	r2,r2,14400
    8ef0:	dc000115 	stw	r16,4(sp)
    8ef4:	14000017 	ldw	r16,0(r2)
    8ef8:	dc400215 	stw	r17,8(sp)
    8efc:	dfc00315 	stw	ra,12(sp)
    8f00:	2023883a 	mov	r17,r4
    8f04:	80000226 	beq	r16,zero,8f10 <fputwc+0x2c>
    8f08:	80800e17 	ldw	r2,56(r16)
    8f0c:	10001026 	beq	r2,zero,8f50 <fputwc+0x6c>
    8f10:	2880030b 	ldhu	r2,12(r5)
    8f14:	10c8000c 	andi	r3,r2,8192
    8f18:	1800051e 	bne	r3,zero,8f30 <fputwc+0x4c>
    8f1c:	28c01917 	ldw	r3,100(r5)
    8f20:	10880014 	ori	r2,r2,8192
    8f24:	2880030d 	sth	r2,12(r5)
    8f28:	18880014 	ori	r2,r3,8192
    8f2c:	28801915 	stw	r2,100(r5)
    8f30:	280d883a 	mov	r6,r5
    8f34:	8009883a 	mov	r4,r16
    8f38:	880b883a 	mov	r5,r17
    8f3c:	dfc00317 	ldw	ra,12(sp)
    8f40:	dc400217 	ldw	r17,8(sp)
    8f44:	dc000117 	ldw	r16,4(sp)
    8f48:	dec00404 	addi	sp,sp,16
    8f4c:	0008d5c1 	jmpi	8d5c <__fputwc>
    8f50:	8009883a 	mov	r4,r16
    8f54:	d9400015 	stw	r5,0(sp)
    8f58:	0004d200 	call	4d20 <__sinit>
    8f5c:	d9400017 	ldw	r5,0(sp)
    8f60:	003feb06 	br	8f10 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008f10>

00008f64 <_fstat_r>:
    8f64:	defffd04 	addi	sp,sp,-12
    8f68:	2805883a 	mov	r2,r5
    8f6c:	dc000015 	stw	r16,0(sp)
    8f70:	04000074 	movhi	r16,1
    8f74:	dc400115 	stw	r17,4(sp)
    8f78:	8415a804 	addi	r16,r16,22176
    8f7c:	2023883a 	mov	r17,r4
    8f80:	300b883a 	mov	r5,r6
    8f84:	1009883a 	mov	r4,r2
    8f88:	dfc00215 	stw	ra,8(sp)
    8f8c:	80000015 	stw	zero,0(r16)
    8f90:	000d36c0 	call	d36c <fstat>
    8f94:	00ffffc4 	movi	r3,-1
    8f98:	10c00526 	beq	r2,r3,8fb0 <_fstat_r+0x4c>
    8f9c:	dfc00217 	ldw	ra,8(sp)
    8fa0:	dc400117 	ldw	r17,4(sp)
    8fa4:	dc000017 	ldw	r16,0(sp)
    8fa8:	dec00304 	addi	sp,sp,12
    8fac:	f800283a 	ret
    8fb0:	80c00017 	ldw	r3,0(r16)
    8fb4:	183ff926 	beq	r3,zero,8f9c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008f9c>
    8fb8:	88c00015 	stw	r3,0(r17)
    8fbc:	003ff706 	br	8f9c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7008f9c>

00008fc0 <__sfvwrite_r>:
    8fc0:	30800217 	ldw	r2,8(r6)
    8fc4:	10006726 	beq	r2,zero,9164 <__sfvwrite_r+0x1a4>
    8fc8:	28c0030b 	ldhu	r3,12(r5)
    8fcc:	defff404 	addi	sp,sp,-48
    8fd0:	dd400715 	stw	r21,28(sp)
    8fd4:	dd000615 	stw	r20,24(sp)
    8fd8:	dc000215 	stw	r16,8(sp)
    8fdc:	dfc00b15 	stw	ra,44(sp)
    8fe0:	df000a15 	stw	fp,40(sp)
    8fe4:	ddc00915 	stw	r23,36(sp)
    8fe8:	dd800815 	stw	r22,32(sp)
    8fec:	dcc00515 	stw	r19,20(sp)
    8ff0:	dc800415 	stw	r18,16(sp)
    8ff4:	dc400315 	stw	r17,12(sp)
    8ff8:	1880020c 	andi	r2,r3,8
    8ffc:	2821883a 	mov	r16,r5
    9000:	202b883a 	mov	r21,r4
    9004:	3029883a 	mov	r20,r6
    9008:	10002726 	beq	r2,zero,90a8 <__sfvwrite_r+0xe8>
    900c:	28800417 	ldw	r2,16(r5)
    9010:	10002526 	beq	r2,zero,90a8 <__sfvwrite_r+0xe8>
    9014:	1880008c 	andi	r2,r3,2
    9018:	a4400017 	ldw	r17,0(r20)
    901c:	10002a26 	beq	r2,zero,90c8 <__sfvwrite_r+0x108>
    9020:	05a00034 	movhi	r22,32768
    9024:	0027883a 	mov	r19,zero
    9028:	0025883a 	mov	r18,zero
    902c:	b5bf0004 	addi	r22,r22,-1024
    9030:	980d883a 	mov	r6,r19
    9034:	a809883a 	mov	r4,r21
    9038:	90004626 	beq	r18,zero,9154 <__sfvwrite_r+0x194>
    903c:	900f883a 	mov	r7,r18
    9040:	b480022e 	bgeu	r22,r18,904c <__sfvwrite_r+0x8c>
    9044:	01e00034 	movhi	r7,32768
    9048:	39ff0004 	addi	r7,r7,-1024
    904c:	80800917 	ldw	r2,36(r16)
    9050:	81400717 	ldw	r5,28(r16)
    9054:	103ee83a 	callr	r2
    9058:	0080570e 	bge	zero,r2,91b8 <__sfvwrite_r+0x1f8>
    905c:	a0c00217 	ldw	r3,8(r20)
    9060:	98a7883a 	add	r19,r19,r2
    9064:	90a5c83a 	sub	r18,r18,r2
    9068:	1885c83a 	sub	r2,r3,r2
    906c:	a0800215 	stw	r2,8(r20)
    9070:	103fef1e 	bne	r2,zero,9030 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009030>
    9074:	0005883a 	mov	r2,zero
    9078:	dfc00b17 	ldw	ra,44(sp)
    907c:	df000a17 	ldw	fp,40(sp)
    9080:	ddc00917 	ldw	r23,36(sp)
    9084:	dd800817 	ldw	r22,32(sp)
    9088:	dd400717 	ldw	r21,28(sp)
    908c:	dd000617 	ldw	r20,24(sp)
    9090:	dcc00517 	ldw	r19,20(sp)
    9094:	dc800417 	ldw	r18,16(sp)
    9098:	dc400317 	ldw	r17,12(sp)
    909c:	dc000217 	ldw	r16,8(sp)
    90a0:	dec00c04 	addi	sp,sp,48
    90a4:	f800283a 	ret
    90a8:	800b883a 	mov	r5,r16
    90ac:	a809883a 	mov	r4,r21
    90b0:	0002d4c0 	call	2d4c <__swsetup_r>
    90b4:	1000eb1e 	bne	r2,zero,9464 <__sfvwrite_r+0x4a4>
    90b8:	80c0030b 	ldhu	r3,12(r16)
    90bc:	a4400017 	ldw	r17,0(r20)
    90c0:	1880008c 	andi	r2,r3,2
    90c4:	103fd61e 	bne	r2,zero,9020 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009020>
    90c8:	1880004c 	andi	r2,r3,1
    90cc:	10003f1e 	bne	r2,zero,91cc <__sfvwrite_r+0x20c>
    90d0:	0039883a 	mov	fp,zero
    90d4:	0025883a 	mov	r18,zero
    90d8:	90001a26 	beq	r18,zero,9144 <__sfvwrite_r+0x184>
    90dc:	1880800c 	andi	r2,r3,512
    90e0:	84c00217 	ldw	r19,8(r16)
    90e4:	10002126 	beq	r2,zero,916c <__sfvwrite_r+0x1ac>
    90e8:	982f883a 	mov	r23,r19
    90ec:	94c09336 	bltu	r18,r19,933c <__sfvwrite_r+0x37c>
    90f0:	1881200c 	andi	r2,r3,1152
    90f4:	10009e1e 	bne	r2,zero,9370 <__sfvwrite_r+0x3b0>
    90f8:	81000017 	ldw	r4,0(r16)
    90fc:	b80d883a 	mov	r6,r23
    9100:	e00b883a 	mov	r5,fp
    9104:	00095300 	call	9530 <memmove>
    9108:	80c00217 	ldw	r3,8(r16)
    910c:	81000017 	ldw	r4,0(r16)
    9110:	9005883a 	mov	r2,r18
    9114:	1ce7c83a 	sub	r19,r3,r19
    9118:	25cf883a 	add	r7,r4,r23
    911c:	84c00215 	stw	r19,8(r16)
    9120:	81c00015 	stw	r7,0(r16)
    9124:	a0c00217 	ldw	r3,8(r20)
    9128:	e0b9883a 	add	fp,fp,r2
    912c:	90a5c83a 	sub	r18,r18,r2
    9130:	18a7c83a 	sub	r19,r3,r2
    9134:	a4c00215 	stw	r19,8(r20)
    9138:	983fce26 	beq	r19,zero,9074 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009074>
    913c:	80c0030b 	ldhu	r3,12(r16)
    9140:	903fe61e 	bne	r18,zero,90dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70090dc>
    9144:	8f000017 	ldw	fp,0(r17)
    9148:	8c800117 	ldw	r18,4(r17)
    914c:	8c400204 	addi	r17,r17,8
    9150:	003fe106 	br	90d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70090d8>
    9154:	8cc00017 	ldw	r19,0(r17)
    9158:	8c800117 	ldw	r18,4(r17)
    915c:	8c400204 	addi	r17,r17,8
    9160:	003fb306 	br	9030 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009030>
    9164:	0005883a 	mov	r2,zero
    9168:	f800283a 	ret
    916c:	81000017 	ldw	r4,0(r16)
    9170:	80800417 	ldw	r2,16(r16)
    9174:	11005736 	bltu	r2,r4,92d4 <__sfvwrite_r+0x314>
    9178:	85c00517 	ldw	r23,20(r16)
    917c:	95c05536 	bltu	r18,r23,92d4 <__sfvwrite_r+0x314>
    9180:	00a00034 	movhi	r2,32768
    9184:	10bfffc4 	addi	r2,r2,-1
    9188:	9009883a 	mov	r4,r18
    918c:	1480012e 	bgeu	r2,r18,9194 <__sfvwrite_r+0x1d4>
    9190:	1009883a 	mov	r4,r2
    9194:	b80b883a 	mov	r5,r23
    9198:	000aa400 	call	aa40 <__divsi3>
    919c:	15cf383a 	mul	r7,r2,r23
    91a0:	81400717 	ldw	r5,28(r16)
    91a4:	80800917 	ldw	r2,36(r16)
    91a8:	e00d883a 	mov	r6,fp
    91ac:	a809883a 	mov	r4,r21
    91b0:	103ee83a 	callr	r2
    91b4:	00bfdb16 	blt	zero,r2,9124 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009124>
    91b8:	8080030b 	ldhu	r2,12(r16)
    91bc:	10801014 	ori	r2,r2,64
    91c0:	8080030d 	sth	r2,12(r16)
    91c4:	00bfffc4 	movi	r2,-1
    91c8:	003fab06 	br	9078 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009078>
    91cc:	0027883a 	mov	r19,zero
    91d0:	0011883a 	mov	r8,zero
    91d4:	0039883a 	mov	fp,zero
    91d8:	0025883a 	mov	r18,zero
    91dc:	90001f26 	beq	r18,zero,925c <__sfvwrite_r+0x29c>
    91e0:	40005a26 	beq	r8,zero,934c <__sfvwrite_r+0x38c>
    91e4:	982d883a 	mov	r22,r19
    91e8:	94c0012e 	bgeu	r18,r19,91f0 <__sfvwrite_r+0x230>
    91ec:	902d883a 	mov	r22,r18
    91f0:	81000017 	ldw	r4,0(r16)
    91f4:	80800417 	ldw	r2,16(r16)
    91f8:	b02f883a 	mov	r23,r22
    91fc:	81c00517 	ldw	r7,20(r16)
    9200:	1100032e 	bgeu	r2,r4,9210 <__sfvwrite_r+0x250>
    9204:	80c00217 	ldw	r3,8(r16)
    9208:	38c7883a 	add	r3,r7,r3
    920c:	1d801816 	blt	r3,r22,9270 <__sfvwrite_r+0x2b0>
    9210:	b1c03e16 	blt	r22,r7,930c <__sfvwrite_r+0x34c>
    9214:	80800917 	ldw	r2,36(r16)
    9218:	81400717 	ldw	r5,28(r16)
    921c:	e00d883a 	mov	r6,fp
    9220:	da000115 	stw	r8,4(sp)
    9224:	a809883a 	mov	r4,r21
    9228:	103ee83a 	callr	r2
    922c:	102f883a 	mov	r23,r2
    9230:	da000117 	ldw	r8,4(sp)
    9234:	00bfe00e 	bge	zero,r2,91b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70091b8>
    9238:	9de7c83a 	sub	r19,r19,r23
    923c:	98001f26 	beq	r19,zero,92bc <__sfvwrite_r+0x2fc>
    9240:	a0800217 	ldw	r2,8(r20)
    9244:	e5f9883a 	add	fp,fp,r23
    9248:	95e5c83a 	sub	r18,r18,r23
    924c:	15efc83a 	sub	r23,r2,r23
    9250:	a5c00215 	stw	r23,8(r20)
    9254:	b83f8726 	beq	r23,zero,9074 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009074>
    9258:	903fe11e 	bne	r18,zero,91e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70091e0>
    925c:	8f000017 	ldw	fp,0(r17)
    9260:	8c800117 	ldw	r18,4(r17)
    9264:	0011883a 	mov	r8,zero
    9268:	8c400204 	addi	r17,r17,8
    926c:	003fdb06 	br	91dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70091dc>
    9270:	180d883a 	mov	r6,r3
    9274:	e00b883a 	mov	r5,fp
    9278:	da000115 	stw	r8,4(sp)
    927c:	d8c00015 	stw	r3,0(sp)
    9280:	00095300 	call	9530 <memmove>
    9284:	d8c00017 	ldw	r3,0(sp)
    9288:	80800017 	ldw	r2,0(r16)
    928c:	800b883a 	mov	r5,r16
    9290:	a809883a 	mov	r4,r21
    9294:	10c5883a 	add	r2,r2,r3
    9298:	80800015 	stw	r2,0(r16)
    929c:	d8c00015 	stw	r3,0(sp)
    92a0:	00049440 	call	4944 <_fflush_r>
    92a4:	d8c00017 	ldw	r3,0(sp)
    92a8:	da000117 	ldw	r8,4(sp)
    92ac:	103fc21e 	bne	r2,zero,91b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70091b8>
    92b0:	182f883a 	mov	r23,r3
    92b4:	9de7c83a 	sub	r19,r19,r23
    92b8:	983fe11e 	bne	r19,zero,9240 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009240>
    92bc:	800b883a 	mov	r5,r16
    92c0:	a809883a 	mov	r4,r21
    92c4:	00049440 	call	4944 <_fflush_r>
    92c8:	103fbb1e 	bne	r2,zero,91b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70091b8>
    92cc:	0011883a 	mov	r8,zero
    92d0:	003fdb06 	br	9240 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009240>
    92d4:	94c0012e 	bgeu	r18,r19,92dc <__sfvwrite_r+0x31c>
    92d8:	9027883a 	mov	r19,r18
    92dc:	980d883a 	mov	r6,r19
    92e0:	e00b883a 	mov	r5,fp
    92e4:	00095300 	call	9530 <memmove>
    92e8:	80800217 	ldw	r2,8(r16)
    92ec:	80c00017 	ldw	r3,0(r16)
    92f0:	14c5c83a 	sub	r2,r2,r19
    92f4:	1cc7883a 	add	r3,r3,r19
    92f8:	80800215 	stw	r2,8(r16)
    92fc:	80c00015 	stw	r3,0(r16)
    9300:	10004326 	beq	r2,zero,9410 <__sfvwrite_r+0x450>
    9304:	9805883a 	mov	r2,r19
    9308:	003f8606 	br	9124 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009124>
    930c:	b00d883a 	mov	r6,r22
    9310:	e00b883a 	mov	r5,fp
    9314:	da000115 	stw	r8,4(sp)
    9318:	00095300 	call	9530 <memmove>
    931c:	80800217 	ldw	r2,8(r16)
    9320:	80c00017 	ldw	r3,0(r16)
    9324:	da000117 	ldw	r8,4(sp)
    9328:	1585c83a 	sub	r2,r2,r22
    932c:	1dad883a 	add	r22,r3,r22
    9330:	80800215 	stw	r2,8(r16)
    9334:	85800015 	stw	r22,0(r16)
    9338:	003fbf06 	br	9238 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009238>
    933c:	81000017 	ldw	r4,0(r16)
    9340:	9027883a 	mov	r19,r18
    9344:	902f883a 	mov	r23,r18
    9348:	003f6c06 	br	90fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70090fc>
    934c:	900d883a 	mov	r6,r18
    9350:	01400284 	movi	r5,10
    9354:	e009883a 	mov	r4,fp
    9358:	0005dd00 	call	5dd0 <memchr>
    935c:	10003e26 	beq	r2,zero,9458 <__sfvwrite_r+0x498>
    9360:	10800044 	addi	r2,r2,1
    9364:	1727c83a 	sub	r19,r2,fp
    9368:	02000044 	movi	r8,1
    936c:	003f9d06 	br	91e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70091e4>
    9370:	80800517 	ldw	r2,20(r16)
    9374:	81400417 	ldw	r5,16(r16)
    9378:	81c00017 	ldw	r7,0(r16)
    937c:	10a7883a 	add	r19,r2,r2
    9380:	9885883a 	add	r2,r19,r2
    9384:	1026d7fa 	srli	r19,r2,31
    9388:	396dc83a 	sub	r22,r7,r5
    938c:	b1000044 	addi	r4,r22,1
    9390:	9885883a 	add	r2,r19,r2
    9394:	1027d07a 	srai	r19,r2,1
    9398:	2485883a 	add	r2,r4,r18
    939c:	980d883a 	mov	r6,r19
    93a0:	9880022e 	bgeu	r19,r2,93ac <__sfvwrite_r+0x3ec>
    93a4:	1027883a 	mov	r19,r2
    93a8:	100d883a 	mov	r6,r2
    93ac:	18c1000c 	andi	r3,r3,1024
    93b0:	18001c26 	beq	r3,zero,9424 <__sfvwrite_r+0x464>
    93b4:	300b883a 	mov	r5,r6
    93b8:	a809883a 	mov	r4,r21
    93bc:	00055c40 	call	55c4 <_malloc_r>
    93c0:	102f883a 	mov	r23,r2
    93c4:	10002926 	beq	r2,zero,946c <__sfvwrite_r+0x4ac>
    93c8:	81400417 	ldw	r5,16(r16)
    93cc:	b00d883a 	mov	r6,r22
    93d0:	1009883a 	mov	r4,r2
    93d4:	0005eb40 	call	5eb4 <memcpy>
    93d8:	8080030b 	ldhu	r2,12(r16)
    93dc:	00fedfc4 	movi	r3,-1153
    93e0:	10c4703a 	and	r2,r2,r3
    93e4:	10802014 	ori	r2,r2,128
    93e8:	8080030d 	sth	r2,12(r16)
    93ec:	bd89883a 	add	r4,r23,r22
    93f0:	9d8fc83a 	sub	r7,r19,r22
    93f4:	85c00415 	stw	r23,16(r16)
    93f8:	84c00515 	stw	r19,20(r16)
    93fc:	81000015 	stw	r4,0(r16)
    9400:	9027883a 	mov	r19,r18
    9404:	81c00215 	stw	r7,8(r16)
    9408:	902f883a 	mov	r23,r18
    940c:	003f3b06 	br	90fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70090fc>
    9410:	800b883a 	mov	r5,r16
    9414:	a809883a 	mov	r4,r21
    9418:	00049440 	call	4944 <_fflush_r>
    941c:	103fb926 	beq	r2,zero,9304 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009304>
    9420:	003f6506 	br	91b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70091b8>
    9424:	a809883a 	mov	r4,r21
    9428:	00096ec0 	call	96ec <_realloc_r>
    942c:	102f883a 	mov	r23,r2
    9430:	103fee1e 	bne	r2,zero,93ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70093ec>
    9434:	81400417 	ldw	r5,16(r16)
    9438:	a809883a 	mov	r4,r21
    943c:	0004e940 	call	4e94 <_free_r>
    9440:	8080030b 	ldhu	r2,12(r16)
    9444:	00ffdfc4 	movi	r3,-129
    9448:	1884703a 	and	r2,r3,r2
    944c:	00c00304 	movi	r3,12
    9450:	a8c00015 	stw	r3,0(r21)
    9454:	003f5906 	br	91bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70091bc>
    9458:	94c00044 	addi	r19,r18,1
    945c:	02000044 	movi	r8,1
    9460:	003f6006 	br	91e4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70091e4>
    9464:	00bfffc4 	movi	r2,-1
    9468:	003f0306 	br	9078 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009078>
    946c:	00800304 	movi	r2,12
    9470:	a8800015 	stw	r2,0(r21)
    9474:	8080030b 	ldhu	r2,12(r16)
    9478:	003f5006 	br	91bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70091bc>

0000947c <_isatty_r>:
    947c:	defffd04 	addi	sp,sp,-12
    9480:	dc000015 	stw	r16,0(sp)
    9484:	04000074 	movhi	r16,1
    9488:	dc400115 	stw	r17,4(sp)
    948c:	8415a804 	addi	r16,r16,22176
    9490:	2023883a 	mov	r17,r4
    9494:	2809883a 	mov	r4,r5
    9498:	dfc00215 	stw	ra,8(sp)
    949c:	80000015 	stw	zero,0(r16)
    94a0:	000d62c0 	call	d62c <isatty>
    94a4:	00ffffc4 	movi	r3,-1
    94a8:	10c00526 	beq	r2,r3,94c0 <_isatty_r+0x44>
    94ac:	dfc00217 	ldw	ra,8(sp)
    94b0:	dc400117 	ldw	r17,4(sp)
    94b4:	dc000017 	ldw	r16,0(sp)
    94b8:	dec00304 	addi	sp,sp,12
    94bc:	f800283a 	ret
    94c0:	80c00017 	ldw	r3,0(r16)
    94c4:	183ff926 	beq	r3,zero,94ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70094ac>
    94c8:	88c00015 	stw	r3,0(r17)
    94cc:	003ff706 	br	94ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70094ac>

000094d0 <_lseek_r>:
    94d0:	defffd04 	addi	sp,sp,-12
    94d4:	2805883a 	mov	r2,r5
    94d8:	dc000015 	stw	r16,0(sp)
    94dc:	04000074 	movhi	r16,1
    94e0:	dc400115 	stw	r17,4(sp)
    94e4:	300b883a 	mov	r5,r6
    94e8:	8415a804 	addi	r16,r16,22176
    94ec:	2023883a 	mov	r17,r4
    94f0:	380d883a 	mov	r6,r7
    94f4:	1009883a 	mov	r4,r2
    94f8:	dfc00215 	stw	ra,8(sp)
    94fc:	80000015 	stw	zero,0(r16)
    9500:	000d7f80 	call	d7f8 <lseek>
    9504:	00ffffc4 	movi	r3,-1
    9508:	10c00526 	beq	r2,r3,9520 <_lseek_r+0x50>
    950c:	dfc00217 	ldw	ra,8(sp)
    9510:	dc400117 	ldw	r17,4(sp)
    9514:	dc000017 	ldw	r16,0(sp)
    9518:	dec00304 	addi	sp,sp,12
    951c:	f800283a 	ret
    9520:	80c00017 	ldw	r3,0(r16)
    9524:	183ff926 	beq	r3,zero,950c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700950c>
    9528:	88c00015 	stw	r3,0(r17)
    952c:	003ff706 	br	950c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700950c>

00009530 <memmove>:
    9530:	2005883a 	mov	r2,r4
    9534:	29000b2e 	bgeu	r5,r4,9564 <memmove+0x34>
    9538:	298f883a 	add	r7,r5,r6
    953c:	21c0092e 	bgeu	r4,r7,9564 <memmove+0x34>
    9540:	2187883a 	add	r3,r4,r6
    9544:	198bc83a 	sub	r5,r3,r6
    9548:	30004826 	beq	r6,zero,966c <memmove+0x13c>
    954c:	39ffffc4 	addi	r7,r7,-1
    9550:	39000003 	ldbu	r4,0(r7)
    9554:	18ffffc4 	addi	r3,r3,-1
    9558:	19000005 	stb	r4,0(r3)
    955c:	28fffb1e 	bne	r5,r3,954c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700954c>
    9560:	f800283a 	ret
    9564:	00c003c4 	movi	r3,15
    9568:	1980412e 	bgeu	r3,r6,9670 <memmove+0x140>
    956c:	2886b03a 	or	r3,r5,r2
    9570:	18c000cc 	andi	r3,r3,3
    9574:	1800401e 	bne	r3,zero,9678 <memmove+0x148>
    9578:	33fffc04 	addi	r15,r6,-16
    957c:	781ed13a 	srli	r15,r15,4
    9580:	28c00104 	addi	r3,r5,4
    9584:	13400104 	addi	r13,r2,4
    9588:	781c913a 	slli	r14,r15,4
    958c:	2b000204 	addi	r12,r5,8
    9590:	12c00204 	addi	r11,r2,8
    9594:	73800504 	addi	r14,r14,20
    9598:	2a800304 	addi	r10,r5,12
    959c:	12400304 	addi	r9,r2,12
    95a0:	2b9d883a 	add	r14,r5,r14
    95a4:	2811883a 	mov	r8,r5
    95a8:	100f883a 	mov	r7,r2
    95ac:	41000017 	ldw	r4,0(r8)
    95b0:	39c00404 	addi	r7,r7,16
    95b4:	18c00404 	addi	r3,r3,16
    95b8:	393ffc15 	stw	r4,-16(r7)
    95bc:	193ffc17 	ldw	r4,-16(r3)
    95c0:	6b400404 	addi	r13,r13,16
    95c4:	5ac00404 	addi	r11,r11,16
    95c8:	693ffc15 	stw	r4,-16(r13)
    95cc:	61000017 	ldw	r4,0(r12)
    95d0:	4a400404 	addi	r9,r9,16
    95d4:	42000404 	addi	r8,r8,16
    95d8:	593ffc15 	stw	r4,-16(r11)
    95dc:	51000017 	ldw	r4,0(r10)
    95e0:	63000404 	addi	r12,r12,16
    95e4:	52800404 	addi	r10,r10,16
    95e8:	493ffc15 	stw	r4,-16(r9)
    95ec:	1bbfef1e 	bne	r3,r14,95ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70095ac>
    95f0:	79000044 	addi	r4,r15,1
    95f4:	2008913a 	slli	r4,r4,4
    95f8:	328003cc 	andi	r10,r6,15
    95fc:	02c000c4 	movi	r11,3
    9600:	1107883a 	add	r3,r2,r4
    9604:	290b883a 	add	r5,r5,r4
    9608:	5a801e2e 	bgeu	r11,r10,9684 <memmove+0x154>
    960c:	1813883a 	mov	r9,r3
    9610:	2811883a 	mov	r8,r5
    9614:	500f883a 	mov	r7,r10
    9618:	41000017 	ldw	r4,0(r8)
    961c:	4a400104 	addi	r9,r9,4
    9620:	39ffff04 	addi	r7,r7,-4
    9624:	493fff15 	stw	r4,-4(r9)
    9628:	42000104 	addi	r8,r8,4
    962c:	59fffa36 	bltu	r11,r7,9618 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009618>
    9630:	513fff04 	addi	r4,r10,-4
    9634:	2008d0ba 	srli	r4,r4,2
    9638:	318000cc 	andi	r6,r6,3
    963c:	21000044 	addi	r4,r4,1
    9640:	2109883a 	add	r4,r4,r4
    9644:	2109883a 	add	r4,r4,r4
    9648:	1907883a 	add	r3,r3,r4
    964c:	290b883a 	add	r5,r5,r4
    9650:	30000b26 	beq	r6,zero,9680 <memmove+0x150>
    9654:	198d883a 	add	r6,r3,r6
    9658:	29c00003 	ldbu	r7,0(r5)
    965c:	18c00044 	addi	r3,r3,1
    9660:	29400044 	addi	r5,r5,1
    9664:	19ffffc5 	stb	r7,-1(r3)
    9668:	19bffb1e 	bne	r3,r6,9658 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009658>
    966c:	f800283a 	ret
    9670:	1007883a 	mov	r3,r2
    9674:	003ff606 	br	9650 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009650>
    9678:	1007883a 	mov	r3,r2
    967c:	003ff506 	br	9654 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009654>
    9680:	f800283a 	ret
    9684:	500d883a 	mov	r6,r10
    9688:	003ff106 	br	9650 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009650>

0000968c <_read_r>:
    968c:	defffd04 	addi	sp,sp,-12
    9690:	2805883a 	mov	r2,r5
    9694:	dc000015 	stw	r16,0(sp)
    9698:	04000074 	movhi	r16,1
    969c:	dc400115 	stw	r17,4(sp)
    96a0:	300b883a 	mov	r5,r6
    96a4:	8415a804 	addi	r16,r16,22176
    96a8:	2023883a 	mov	r17,r4
    96ac:	380d883a 	mov	r6,r7
    96b0:	1009883a 	mov	r4,r2
    96b4:	dfc00215 	stw	ra,8(sp)
    96b8:	80000015 	stw	zero,0(r16)
    96bc:	000d9cc0 	call	d9cc <read>
    96c0:	00ffffc4 	movi	r3,-1
    96c4:	10c00526 	beq	r2,r3,96dc <_read_r+0x50>
    96c8:	dfc00217 	ldw	ra,8(sp)
    96cc:	dc400117 	ldw	r17,4(sp)
    96d0:	dc000017 	ldw	r16,0(sp)
    96d4:	dec00304 	addi	sp,sp,12
    96d8:	f800283a 	ret
    96dc:	80c00017 	ldw	r3,0(r16)
    96e0:	183ff926 	beq	r3,zero,96c8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70096c8>
    96e4:	88c00015 	stw	r3,0(r17)
    96e8:	003ff706 	br	96c8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70096c8>

000096ec <_realloc_r>:
    96ec:	defff604 	addi	sp,sp,-40
    96f0:	dc800215 	stw	r18,8(sp)
    96f4:	dfc00915 	stw	ra,36(sp)
    96f8:	df000815 	stw	fp,32(sp)
    96fc:	ddc00715 	stw	r23,28(sp)
    9700:	dd800615 	stw	r22,24(sp)
    9704:	dd400515 	stw	r21,20(sp)
    9708:	dd000415 	stw	r20,16(sp)
    970c:	dcc00315 	stw	r19,12(sp)
    9710:	dc400115 	stw	r17,4(sp)
    9714:	dc000015 	stw	r16,0(sp)
    9718:	3025883a 	mov	r18,r6
    971c:	2800b726 	beq	r5,zero,99fc <_realloc_r+0x310>
    9720:	282b883a 	mov	r21,r5
    9724:	2029883a 	mov	r20,r4
    9728:	000d9480 	call	d948 <__malloc_lock>
    972c:	a8bfff17 	ldw	r2,-4(r21)
    9730:	043fff04 	movi	r16,-4
    9734:	90c002c4 	addi	r3,r18,11
    9738:	01000584 	movi	r4,22
    973c:	acfffe04 	addi	r19,r21,-8
    9740:	1420703a 	and	r16,r2,r16
    9744:	20c0332e 	bgeu	r4,r3,9814 <_realloc_r+0x128>
    9748:	047ffe04 	movi	r17,-8
    974c:	1c62703a 	and	r17,r3,r17
    9750:	8807883a 	mov	r3,r17
    9754:	88005816 	blt	r17,zero,98b8 <_realloc_r+0x1cc>
    9758:	8c805736 	bltu	r17,r18,98b8 <_realloc_r+0x1cc>
    975c:	80c0300e 	bge	r16,r3,9820 <_realloc_r+0x134>
    9760:	07000074 	movhi	fp,1
    9764:	e707c704 	addi	fp,fp,7964
    9768:	e1c00217 	ldw	r7,8(fp)
    976c:	9c09883a 	add	r4,r19,r16
    9770:	22000117 	ldw	r8,4(r4)
    9774:	21c06326 	beq	r4,r7,9904 <_realloc_r+0x218>
    9778:	017fff84 	movi	r5,-2
    977c:	414a703a 	and	r5,r8,r5
    9780:	214b883a 	add	r5,r4,r5
    9784:	29800117 	ldw	r6,4(r5)
    9788:	3180004c 	andi	r6,r6,1
    978c:	30003f26 	beq	r6,zero,988c <_realloc_r+0x1a0>
    9790:	1080004c 	andi	r2,r2,1
    9794:	10008326 	beq	r2,zero,99a4 <_realloc_r+0x2b8>
    9798:	900b883a 	mov	r5,r18
    979c:	a009883a 	mov	r4,r20
    97a0:	00055c40 	call	55c4 <_malloc_r>
    97a4:	1025883a 	mov	r18,r2
    97a8:	10011e26 	beq	r2,zero,9c24 <_realloc_r+0x538>
    97ac:	a93fff17 	ldw	r4,-4(r21)
    97b0:	10fffe04 	addi	r3,r2,-8
    97b4:	00bfff84 	movi	r2,-2
    97b8:	2084703a 	and	r2,r4,r2
    97bc:	9885883a 	add	r2,r19,r2
    97c0:	1880ee26 	beq	r3,r2,9b7c <_realloc_r+0x490>
    97c4:	81bfff04 	addi	r6,r16,-4
    97c8:	00800904 	movi	r2,36
    97cc:	1180b836 	bltu	r2,r6,9ab0 <_realloc_r+0x3c4>
    97d0:	00c004c4 	movi	r3,19
    97d4:	19809636 	bltu	r3,r6,9a30 <_realloc_r+0x344>
    97d8:	9005883a 	mov	r2,r18
    97dc:	a807883a 	mov	r3,r21
    97e0:	19000017 	ldw	r4,0(r3)
    97e4:	11000015 	stw	r4,0(r2)
    97e8:	19000117 	ldw	r4,4(r3)
    97ec:	11000115 	stw	r4,4(r2)
    97f0:	18c00217 	ldw	r3,8(r3)
    97f4:	10c00215 	stw	r3,8(r2)
    97f8:	a80b883a 	mov	r5,r21
    97fc:	a009883a 	mov	r4,r20
    9800:	0004e940 	call	4e94 <_free_r>
    9804:	a009883a 	mov	r4,r20
    9808:	000d96c0 	call	d96c <__malloc_unlock>
    980c:	9005883a 	mov	r2,r18
    9810:	00001206 	br	985c <_realloc_r+0x170>
    9814:	00c00404 	movi	r3,16
    9818:	1823883a 	mov	r17,r3
    981c:	003fce06 	br	9758 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009758>
    9820:	a825883a 	mov	r18,r21
    9824:	8445c83a 	sub	r2,r16,r17
    9828:	00c003c4 	movi	r3,15
    982c:	18802636 	bltu	r3,r2,98c8 <_realloc_r+0x1dc>
    9830:	99800117 	ldw	r6,4(r19)
    9834:	9c07883a 	add	r3,r19,r16
    9838:	3180004c 	andi	r6,r6,1
    983c:	3420b03a 	or	r16,r6,r16
    9840:	9c000115 	stw	r16,4(r19)
    9844:	18800117 	ldw	r2,4(r3)
    9848:	10800054 	ori	r2,r2,1
    984c:	18800115 	stw	r2,4(r3)
    9850:	a009883a 	mov	r4,r20
    9854:	000d96c0 	call	d96c <__malloc_unlock>
    9858:	9005883a 	mov	r2,r18
    985c:	dfc00917 	ldw	ra,36(sp)
    9860:	df000817 	ldw	fp,32(sp)
    9864:	ddc00717 	ldw	r23,28(sp)
    9868:	dd800617 	ldw	r22,24(sp)
    986c:	dd400517 	ldw	r21,20(sp)
    9870:	dd000417 	ldw	r20,16(sp)
    9874:	dcc00317 	ldw	r19,12(sp)
    9878:	dc800217 	ldw	r18,8(sp)
    987c:	dc400117 	ldw	r17,4(sp)
    9880:	dc000017 	ldw	r16,0(sp)
    9884:	dec00a04 	addi	sp,sp,40
    9888:	f800283a 	ret
    988c:	017fff04 	movi	r5,-4
    9890:	414a703a 	and	r5,r8,r5
    9894:	814d883a 	add	r6,r16,r5
    9898:	30c01f16 	blt	r6,r3,9918 <_realloc_r+0x22c>
    989c:	20800317 	ldw	r2,12(r4)
    98a0:	20c00217 	ldw	r3,8(r4)
    98a4:	a825883a 	mov	r18,r21
    98a8:	3021883a 	mov	r16,r6
    98ac:	18800315 	stw	r2,12(r3)
    98b0:	10c00215 	stw	r3,8(r2)
    98b4:	003fdb06 	br	9824 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009824>
    98b8:	00800304 	movi	r2,12
    98bc:	a0800015 	stw	r2,0(r20)
    98c0:	0005883a 	mov	r2,zero
    98c4:	003fe506 	br	985c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700985c>
    98c8:	98c00117 	ldw	r3,4(r19)
    98cc:	9c4b883a 	add	r5,r19,r17
    98d0:	11000054 	ori	r4,r2,1
    98d4:	18c0004c 	andi	r3,r3,1
    98d8:	1c62b03a 	or	r17,r3,r17
    98dc:	9c400115 	stw	r17,4(r19)
    98e0:	29000115 	stw	r4,4(r5)
    98e4:	2885883a 	add	r2,r5,r2
    98e8:	10c00117 	ldw	r3,4(r2)
    98ec:	29400204 	addi	r5,r5,8
    98f0:	a009883a 	mov	r4,r20
    98f4:	18c00054 	ori	r3,r3,1
    98f8:	10c00115 	stw	r3,4(r2)
    98fc:	0004e940 	call	4e94 <_free_r>
    9900:	003fd306 	br	9850 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009850>
    9904:	017fff04 	movi	r5,-4
    9908:	414a703a 	and	r5,r8,r5
    990c:	89800404 	addi	r6,r17,16
    9910:	8151883a 	add	r8,r16,r5
    9914:	4180590e 	bge	r8,r6,9a7c <_realloc_r+0x390>
    9918:	1080004c 	andi	r2,r2,1
    991c:	103f9e1e 	bne	r2,zero,9798 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009798>
    9920:	adbffe17 	ldw	r22,-8(r21)
    9924:	00bfff04 	movi	r2,-4
    9928:	9dadc83a 	sub	r22,r19,r22
    992c:	b1800117 	ldw	r6,4(r22)
    9930:	3084703a 	and	r2,r6,r2
    9934:	20002026 	beq	r4,zero,99b8 <_realloc_r+0x2cc>
    9938:	80af883a 	add	r23,r16,r2
    993c:	b96f883a 	add	r23,r23,r5
    9940:	21c05f26 	beq	r4,r7,9ac0 <_realloc_r+0x3d4>
    9944:	b8c01c16 	blt	r23,r3,99b8 <_realloc_r+0x2cc>
    9948:	20800317 	ldw	r2,12(r4)
    994c:	20c00217 	ldw	r3,8(r4)
    9950:	81bfff04 	addi	r6,r16,-4
    9954:	01000904 	movi	r4,36
    9958:	18800315 	stw	r2,12(r3)
    995c:	10c00215 	stw	r3,8(r2)
    9960:	b0c00217 	ldw	r3,8(r22)
    9964:	b0800317 	ldw	r2,12(r22)
    9968:	b4800204 	addi	r18,r22,8
    996c:	18800315 	stw	r2,12(r3)
    9970:	10c00215 	stw	r3,8(r2)
    9974:	21801b36 	bltu	r4,r6,99e4 <_realloc_r+0x2f8>
    9978:	008004c4 	movi	r2,19
    997c:	1180352e 	bgeu	r2,r6,9a54 <_realloc_r+0x368>
    9980:	a8800017 	ldw	r2,0(r21)
    9984:	b0800215 	stw	r2,8(r22)
    9988:	a8800117 	ldw	r2,4(r21)
    998c:	b0800315 	stw	r2,12(r22)
    9990:	008006c4 	movi	r2,27
    9994:	11807f36 	bltu	r2,r6,9b94 <_realloc_r+0x4a8>
    9998:	b0800404 	addi	r2,r22,16
    999c:	ad400204 	addi	r21,r21,8
    99a0:	00002d06 	br	9a58 <_realloc_r+0x36c>
    99a4:	adbffe17 	ldw	r22,-8(r21)
    99a8:	00bfff04 	movi	r2,-4
    99ac:	9dadc83a 	sub	r22,r19,r22
    99b0:	b1000117 	ldw	r4,4(r22)
    99b4:	2084703a 	and	r2,r4,r2
    99b8:	b03f7726 	beq	r22,zero,9798 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009798>
    99bc:	80af883a 	add	r23,r16,r2
    99c0:	b8ff7516 	blt	r23,r3,9798 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009798>
    99c4:	b0800317 	ldw	r2,12(r22)
    99c8:	b0c00217 	ldw	r3,8(r22)
    99cc:	81bfff04 	addi	r6,r16,-4
    99d0:	01000904 	movi	r4,36
    99d4:	18800315 	stw	r2,12(r3)
    99d8:	10c00215 	stw	r3,8(r2)
    99dc:	b4800204 	addi	r18,r22,8
    99e0:	21bfe52e 	bgeu	r4,r6,9978 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009978>
    99e4:	a80b883a 	mov	r5,r21
    99e8:	9009883a 	mov	r4,r18
    99ec:	00095300 	call	9530 <memmove>
    99f0:	b821883a 	mov	r16,r23
    99f4:	b027883a 	mov	r19,r22
    99f8:	003f8a06 	br	9824 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009824>
    99fc:	300b883a 	mov	r5,r6
    9a00:	dfc00917 	ldw	ra,36(sp)
    9a04:	df000817 	ldw	fp,32(sp)
    9a08:	ddc00717 	ldw	r23,28(sp)
    9a0c:	dd800617 	ldw	r22,24(sp)
    9a10:	dd400517 	ldw	r21,20(sp)
    9a14:	dd000417 	ldw	r20,16(sp)
    9a18:	dcc00317 	ldw	r19,12(sp)
    9a1c:	dc800217 	ldw	r18,8(sp)
    9a20:	dc400117 	ldw	r17,4(sp)
    9a24:	dc000017 	ldw	r16,0(sp)
    9a28:	dec00a04 	addi	sp,sp,40
    9a2c:	00055c41 	jmpi	55c4 <_malloc_r>
    9a30:	a8c00017 	ldw	r3,0(r21)
    9a34:	90c00015 	stw	r3,0(r18)
    9a38:	a8c00117 	ldw	r3,4(r21)
    9a3c:	90c00115 	stw	r3,4(r18)
    9a40:	00c006c4 	movi	r3,27
    9a44:	19804536 	bltu	r3,r6,9b5c <_realloc_r+0x470>
    9a48:	90800204 	addi	r2,r18,8
    9a4c:	a8c00204 	addi	r3,r21,8
    9a50:	003f6306 	br	97e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70097e0>
    9a54:	9005883a 	mov	r2,r18
    9a58:	a8c00017 	ldw	r3,0(r21)
    9a5c:	b821883a 	mov	r16,r23
    9a60:	b027883a 	mov	r19,r22
    9a64:	10c00015 	stw	r3,0(r2)
    9a68:	a8c00117 	ldw	r3,4(r21)
    9a6c:	10c00115 	stw	r3,4(r2)
    9a70:	a8c00217 	ldw	r3,8(r21)
    9a74:	10c00215 	stw	r3,8(r2)
    9a78:	003f6a06 	br	9824 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009824>
    9a7c:	9c67883a 	add	r19,r19,r17
    9a80:	4445c83a 	sub	r2,r8,r17
    9a84:	e4c00215 	stw	r19,8(fp)
    9a88:	10800054 	ori	r2,r2,1
    9a8c:	98800115 	stw	r2,4(r19)
    9a90:	a8bfff17 	ldw	r2,-4(r21)
    9a94:	a009883a 	mov	r4,r20
    9a98:	1080004c 	andi	r2,r2,1
    9a9c:	1462b03a 	or	r17,r2,r17
    9aa0:	ac7fff15 	stw	r17,-4(r21)
    9aa4:	000d96c0 	call	d96c <__malloc_unlock>
    9aa8:	a805883a 	mov	r2,r21
    9aac:	003f6b06 	br	985c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700985c>
    9ab0:	a80b883a 	mov	r5,r21
    9ab4:	9009883a 	mov	r4,r18
    9ab8:	00095300 	call	9530 <memmove>
    9abc:	003f4e06 	br	97f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70097f8>
    9ac0:	89000404 	addi	r4,r17,16
    9ac4:	b93fbc16 	blt	r23,r4,99b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70099b8>
    9ac8:	b0800317 	ldw	r2,12(r22)
    9acc:	b0c00217 	ldw	r3,8(r22)
    9ad0:	81bfff04 	addi	r6,r16,-4
    9ad4:	01000904 	movi	r4,36
    9ad8:	18800315 	stw	r2,12(r3)
    9adc:	10c00215 	stw	r3,8(r2)
    9ae0:	b4800204 	addi	r18,r22,8
    9ae4:	21804336 	bltu	r4,r6,9bf4 <_realloc_r+0x508>
    9ae8:	008004c4 	movi	r2,19
    9aec:	11803f2e 	bgeu	r2,r6,9bec <_realloc_r+0x500>
    9af0:	a8800017 	ldw	r2,0(r21)
    9af4:	b0800215 	stw	r2,8(r22)
    9af8:	a8800117 	ldw	r2,4(r21)
    9afc:	b0800315 	stw	r2,12(r22)
    9b00:	008006c4 	movi	r2,27
    9b04:	11803f36 	bltu	r2,r6,9c04 <_realloc_r+0x518>
    9b08:	b0800404 	addi	r2,r22,16
    9b0c:	ad400204 	addi	r21,r21,8
    9b10:	a8c00017 	ldw	r3,0(r21)
    9b14:	10c00015 	stw	r3,0(r2)
    9b18:	a8c00117 	ldw	r3,4(r21)
    9b1c:	10c00115 	stw	r3,4(r2)
    9b20:	a8c00217 	ldw	r3,8(r21)
    9b24:	10c00215 	stw	r3,8(r2)
    9b28:	b447883a 	add	r3,r22,r17
    9b2c:	bc45c83a 	sub	r2,r23,r17
    9b30:	e0c00215 	stw	r3,8(fp)
    9b34:	10800054 	ori	r2,r2,1
    9b38:	18800115 	stw	r2,4(r3)
    9b3c:	b0800117 	ldw	r2,4(r22)
    9b40:	a009883a 	mov	r4,r20
    9b44:	1080004c 	andi	r2,r2,1
    9b48:	1462b03a 	or	r17,r2,r17
    9b4c:	b4400115 	stw	r17,4(r22)
    9b50:	000d96c0 	call	d96c <__malloc_unlock>
    9b54:	9005883a 	mov	r2,r18
    9b58:	003f4006 	br	985c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700985c>
    9b5c:	a8c00217 	ldw	r3,8(r21)
    9b60:	90c00215 	stw	r3,8(r18)
    9b64:	a8c00317 	ldw	r3,12(r21)
    9b68:	90c00315 	stw	r3,12(r18)
    9b6c:	30801126 	beq	r6,r2,9bb4 <_realloc_r+0x4c8>
    9b70:	90800404 	addi	r2,r18,16
    9b74:	a8c00404 	addi	r3,r21,16
    9b78:	003f1906 	br	97e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70097e0>
    9b7c:	90ffff17 	ldw	r3,-4(r18)
    9b80:	00bfff04 	movi	r2,-4
    9b84:	a825883a 	mov	r18,r21
    9b88:	1884703a 	and	r2,r3,r2
    9b8c:	80a1883a 	add	r16,r16,r2
    9b90:	003f2406 	br	9824 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009824>
    9b94:	a8800217 	ldw	r2,8(r21)
    9b98:	b0800415 	stw	r2,16(r22)
    9b9c:	a8800317 	ldw	r2,12(r21)
    9ba0:	b0800515 	stw	r2,20(r22)
    9ba4:	31000a26 	beq	r6,r4,9bd0 <_realloc_r+0x4e4>
    9ba8:	b0800604 	addi	r2,r22,24
    9bac:	ad400404 	addi	r21,r21,16
    9bb0:	003fa906 	br	9a58 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009a58>
    9bb4:	a9000417 	ldw	r4,16(r21)
    9bb8:	90800604 	addi	r2,r18,24
    9bbc:	a8c00604 	addi	r3,r21,24
    9bc0:	91000415 	stw	r4,16(r18)
    9bc4:	a9000517 	ldw	r4,20(r21)
    9bc8:	91000515 	stw	r4,20(r18)
    9bcc:	003f0406 	br	97e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70097e0>
    9bd0:	a8c00417 	ldw	r3,16(r21)
    9bd4:	ad400604 	addi	r21,r21,24
    9bd8:	b0800804 	addi	r2,r22,32
    9bdc:	b0c00615 	stw	r3,24(r22)
    9be0:	a8ffff17 	ldw	r3,-4(r21)
    9be4:	b0c00715 	stw	r3,28(r22)
    9be8:	003f9b06 	br	9a58 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009a58>
    9bec:	9005883a 	mov	r2,r18
    9bf0:	003fc706 	br	9b10 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009b10>
    9bf4:	a80b883a 	mov	r5,r21
    9bf8:	9009883a 	mov	r4,r18
    9bfc:	00095300 	call	9530 <memmove>
    9c00:	003fc906 	br	9b28 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009b28>
    9c04:	a8800217 	ldw	r2,8(r21)
    9c08:	b0800415 	stw	r2,16(r22)
    9c0c:	a8800317 	ldw	r2,12(r21)
    9c10:	b0800515 	stw	r2,20(r22)
    9c14:	31000726 	beq	r6,r4,9c34 <_realloc_r+0x548>
    9c18:	b0800604 	addi	r2,r22,24
    9c1c:	ad400404 	addi	r21,r21,16
    9c20:	003fbb06 	br	9b10 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009b10>
    9c24:	a009883a 	mov	r4,r20
    9c28:	000d96c0 	call	d96c <__malloc_unlock>
    9c2c:	0005883a 	mov	r2,zero
    9c30:	003f0a06 	br	985c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700985c>
    9c34:	a8c00417 	ldw	r3,16(r21)
    9c38:	ad400604 	addi	r21,r21,24
    9c3c:	b0800804 	addi	r2,r22,32
    9c40:	b0c00615 	stw	r3,24(r22)
    9c44:	a8ffff17 	ldw	r3,-4(r21)
    9c48:	b0c00715 	stw	r3,28(r22)
    9c4c:	003fb006 	br	9b10 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009b10>

00009c50 <__swbuf_r>:
    9c50:	defffb04 	addi	sp,sp,-20
    9c54:	dcc00315 	stw	r19,12(sp)
    9c58:	dc800215 	stw	r18,8(sp)
    9c5c:	dc000015 	stw	r16,0(sp)
    9c60:	dfc00415 	stw	ra,16(sp)
    9c64:	dc400115 	stw	r17,4(sp)
    9c68:	2025883a 	mov	r18,r4
    9c6c:	2827883a 	mov	r19,r5
    9c70:	3021883a 	mov	r16,r6
    9c74:	20000226 	beq	r4,zero,9c80 <__swbuf_r+0x30>
    9c78:	20800e17 	ldw	r2,56(r4)
    9c7c:	10004226 	beq	r2,zero,9d88 <__swbuf_r+0x138>
    9c80:	80800617 	ldw	r2,24(r16)
    9c84:	8100030b 	ldhu	r4,12(r16)
    9c88:	80800215 	stw	r2,8(r16)
    9c8c:	2080020c 	andi	r2,r4,8
    9c90:	10003626 	beq	r2,zero,9d6c <__swbuf_r+0x11c>
    9c94:	80c00417 	ldw	r3,16(r16)
    9c98:	18003426 	beq	r3,zero,9d6c <__swbuf_r+0x11c>
    9c9c:	2088000c 	andi	r2,r4,8192
    9ca0:	9c403fcc 	andi	r17,r19,255
    9ca4:	10001a26 	beq	r2,zero,9d10 <__swbuf_r+0xc0>
    9ca8:	80800017 	ldw	r2,0(r16)
    9cac:	81000517 	ldw	r4,20(r16)
    9cb0:	10c7c83a 	sub	r3,r2,r3
    9cb4:	1900200e 	bge	r3,r4,9d38 <__swbuf_r+0xe8>
    9cb8:	18c00044 	addi	r3,r3,1
    9cbc:	81000217 	ldw	r4,8(r16)
    9cc0:	11400044 	addi	r5,r2,1
    9cc4:	81400015 	stw	r5,0(r16)
    9cc8:	213fffc4 	addi	r4,r4,-1
    9ccc:	81000215 	stw	r4,8(r16)
    9cd0:	14c00005 	stb	r19,0(r2)
    9cd4:	80800517 	ldw	r2,20(r16)
    9cd8:	10c01e26 	beq	r2,r3,9d54 <__swbuf_r+0x104>
    9cdc:	8080030b 	ldhu	r2,12(r16)
    9ce0:	1080004c 	andi	r2,r2,1
    9ce4:	10000226 	beq	r2,zero,9cf0 <__swbuf_r+0xa0>
    9ce8:	00800284 	movi	r2,10
    9cec:	88801926 	beq	r17,r2,9d54 <__swbuf_r+0x104>
    9cf0:	8805883a 	mov	r2,r17
    9cf4:	dfc00417 	ldw	ra,16(sp)
    9cf8:	dcc00317 	ldw	r19,12(sp)
    9cfc:	dc800217 	ldw	r18,8(sp)
    9d00:	dc400117 	ldw	r17,4(sp)
    9d04:	dc000017 	ldw	r16,0(sp)
    9d08:	dec00504 	addi	sp,sp,20
    9d0c:	f800283a 	ret
    9d10:	81401917 	ldw	r5,100(r16)
    9d14:	00b7ffc4 	movi	r2,-8193
    9d18:	21080014 	ori	r4,r4,8192
    9d1c:	2884703a 	and	r2,r5,r2
    9d20:	80801915 	stw	r2,100(r16)
    9d24:	80800017 	ldw	r2,0(r16)
    9d28:	8100030d 	sth	r4,12(r16)
    9d2c:	81000517 	ldw	r4,20(r16)
    9d30:	10c7c83a 	sub	r3,r2,r3
    9d34:	193fe016 	blt	r3,r4,9cb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009cb8>
    9d38:	800b883a 	mov	r5,r16
    9d3c:	9009883a 	mov	r4,r18
    9d40:	00049440 	call	4944 <_fflush_r>
    9d44:	1000071e 	bne	r2,zero,9d64 <__swbuf_r+0x114>
    9d48:	80800017 	ldw	r2,0(r16)
    9d4c:	00c00044 	movi	r3,1
    9d50:	003fda06 	br	9cbc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009cbc>
    9d54:	800b883a 	mov	r5,r16
    9d58:	9009883a 	mov	r4,r18
    9d5c:	00049440 	call	4944 <_fflush_r>
    9d60:	103fe326 	beq	r2,zero,9cf0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009cf0>
    9d64:	00bfffc4 	movi	r2,-1
    9d68:	003fe206 	br	9cf4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009cf4>
    9d6c:	800b883a 	mov	r5,r16
    9d70:	9009883a 	mov	r4,r18
    9d74:	0002d4c0 	call	2d4c <__swsetup_r>
    9d78:	103ffa1e 	bne	r2,zero,9d64 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009d64>
    9d7c:	8100030b 	ldhu	r4,12(r16)
    9d80:	80c00417 	ldw	r3,16(r16)
    9d84:	003fc506 	br	9c9c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009c9c>
    9d88:	0004d200 	call	4d20 <__sinit>
    9d8c:	003fbc06 	br	9c80 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009c80>

00009d90 <__swbuf>:
    9d90:	00800074 	movhi	r2,1
    9d94:	108e1004 	addi	r2,r2,14400
    9d98:	280d883a 	mov	r6,r5
    9d9c:	200b883a 	mov	r5,r4
    9da0:	11000017 	ldw	r4,0(r2)
    9da4:	0009c501 	jmpi	9c50 <__swbuf_r>

00009da8 <_wcrtomb_r>:
    9da8:	defff604 	addi	sp,sp,-40
    9dac:	00800074 	movhi	r2,1
    9db0:	dc800815 	stw	r18,32(sp)
    9db4:	dc400715 	stw	r17,28(sp)
    9db8:	dc000615 	stw	r16,24(sp)
    9dbc:	108e1404 	addi	r2,r2,14416
    9dc0:	dfc00915 	stw	ra,36(sp)
    9dc4:	2021883a 	mov	r16,r4
    9dc8:	3823883a 	mov	r17,r7
    9dcc:	14800017 	ldw	r18,0(r2)
    9dd0:	28001426 	beq	r5,zero,9e24 <_wcrtomb_r+0x7c>
    9dd4:	d9400415 	stw	r5,16(sp)
    9dd8:	d9800515 	stw	r6,20(sp)
    9ddc:	00053a80 	call	53a8 <__locale_charset>
    9de0:	d9800517 	ldw	r6,20(sp)
    9de4:	d9400417 	ldw	r5,16(sp)
    9de8:	100f883a 	mov	r7,r2
    9dec:	dc400015 	stw	r17,0(sp)
    9df0:	8009883a 	mov	r4,r16
    9df4:	903ee83a 	callr	r18
    9df8:	00ffffc4 	movi	r3,-1
    9dfc:	10c0031e 	bne	r2,r3,9e0c <_wcrtomb_r+0x64>
    9e00:	88000015 	stw	zero,0(r17)
    9e04:	00c02284 	movi	r3,138
    9e08:	80c00015 	stw	r3,0(r16)
    9e0c:	dfc00917 	ldw	ra,36(sp)
    9e10:	dc800817 	ldw	r18,32(sp)
    9e14:	dc400717 	ldw	r17,28(sp)
    9e18:	dc000617 	ldw	r16,24(sp)
    9e1c:	dec00a04 	addi	sp,sp,40
    9e20:	f800283a 	ret
    9e24:	00053a80 	call	53a8 <__locale_charset>
    9e28:	100f883a 	mov	r7,r2
    9e2c:	dc400015 	stw	r17,0(sp)
    9e30:	000d883a 	mov	r6,zero
    9e34:	d9400104 	addi	r5,sp,4
    9e38:	8009883a 	mov	r4,r16
    9e3c:	903ee83a 	callr	r18
    9e40:	003fed06 	br	9df8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009df8>

00009e44 <wcrtomb>:
    9e44:	defff604 	addi	sp,sp,-40
    9e48:	00800074 	movhi	r2,1
    9e4c:	dc800615 	stw	r18,24(sp)
    9e50:	dc400515 	stw	r17,20(sp)
    9e54:	108e1004 	addi	r2,r2,14400
    9e58:	dfc00915 	stw	ra,36(sp)
    9e5c:	dd000815 	stw	r20,32(sp)
    9e60:	dcc00715 	stw	r19,28(sp)
    9e64:	dc000415 	stw	r16,16(sp)
    9e68:	3025883a 	mov	r18,r6
    9e6c:	14400017 	ldw	r17,0(r2)
    9e70:	20001926 	beq	r4,zero,9ed8 <wcrtomb+0x94>
    9e74:	00800074 	movhi	r2,1
    9e78:	108e1404 	addi	r2,r2,14416
    9e7c:	15000017 	ldw	r20,0(r2)
    9e80:	2021883a 	mov	r16,r4
    9e84:	2827883a 	mov	r19,r5
    9e88:	00053a80 	call	53a8 <__locale_charset>
    9e8c:	100f883a 	mov	r7,r2
    9e90:	dc800015 	stw	r18,0(sp)
    9e94:	980d883a 	mov	r6,r19
    9e98:	800b883a 	mov	r5,r16
    9e9c:	8809883a 	mov	r4,r17
    9ea0:	a03ee83a 	callr	r20
    9ea4:	00ffffc4 	movi	r3,-1
    9ea8:	10c0031e 	bne	r2,r3,9eb8 <wcrtomb+0x74>
    9eac:	90000015 	stw	zero,0(r18)
    9eb0:	00c02284 	movi	r3,138
    9eb4:	88c00015 	stw	r3,0(r17)
    9eb8:	dfc00917 	ldw	ra,36(sp)
    9ebc:	dd000817 	ldw	r20,32(sp)
    9ec0:	dcc00717 	ldw	r19,28(sp)
    9ec4:	dc800617 	ldw	r18,24(sp)
    9ec8:	dc400517 	ldw	r17,20(sp)
    9ecc:	dc000417 	ldw	r16,16(sp)
    9ed0:	dec00a04 	addi	sp,sp,40
    9ed4:	f800283a 	ret
    9ed8:	00800074 	movhi	r2,1
    9edc:	108e1404 	addi	r2,r2,14416
    9ee0:	14000017 	ldw	r16,0(r2)
    9ee4:	00053a80 	call	53a8 <__locale_charset>
    9ee8:	100f883a 	mov	r7,r2
    9eec:	dc800015 	stw	r18,0(sp)
    9ef0:	000d883a 	mov	r6,zero
    9ef4:	d9400104 	addi	r5,sp,4
    9ef8:	8809883a 	mov	r4,r17
    9efc:	803ee83a 	callr	r16
    9f00:	003fe806 	br	9ea4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009ea4>

00009f04 <__ascii_wctomb>:
    9f04:	28000526 	beq	r5,zero,9f1c <__ascii_wctomb+0x18>
    9f08:	00803fc4 	movi	r2,255
    9f0c:	11800536 	bltu	r2,r6,9f24 <__ascii_wctomb+0x20>
    9f10:	29800005 	stb	r6,0(r5)
    9f14:	00800044 	movi	r2,1
    9f18:	f800283a 	ret
    9f1c:	0005883a 	mov	r2,zero
    9f20:	f800283a 	ret
    9f24:	00802284 	movi	r2,138
    9f28:	20800015 	stw	r2,0(r4)
    9f2c:	00bfffc4 	movi	r2,-1
    9f30:	f800283a 	ret

00009f34 <_wctomb_r>:
    9f34:	00800074 	movhi	r2,1
    9f38:	defff904 	addi	sp,sp,-28
    9f3c:	108e1404 	addi	r2,r2,14416
    9f40:	dfc00615 	stw	ra,24(sp)
    9f44:	dc400515 	stw	r17,20(sp)
    9f48:	dc000415 	stw	r16,16(sp)
    9f4c:	3823883a 	mov	r17,r7
    9f50:	14000017 	ldw	r16,0(r2)
    9f54:	d9000115 	stw	r4,4(sp)
    9f58:	d9400215 	stw	r5,8(sp)
    9f5c:	d9800315 	stw	r6,12(sp)
    9f60:	00053a80 	call	53a8 <__locale_charset>
    9f64:	d9800317 	ldw	r6,12(sp)
    9f68:	d9400217 	ldw	r5,8(sp)
    9f6c:	d9000117 	ldw	r4,4(sp)
    9f70:	100f883a 	mov	r7,r2
    9f74:	dc400015 	stw	r17,0(sp)
    9f78:	803ee83a 	callr	r16
    9f7c:	dfc00617 	ldw	ra,24(sp)
    9f80:	dc400517 	ldw	r17,20(sp)
    9f84:	dc000417 	ldw	r16,16(sp)
    9f88:	dec00704 	addi	sp,sp,28
    9f8c:	f800283a 	ret

00009f90 <__udivdi3>:
    9f90:	defff504 	addi	sp,sp,-44
    9f94:	dcc00415 	stw	r19,16(sp)
    9f98:	dc000115 	stw	r16,4(sp)
    9f9c:	dfc00a15 	stw	ra,40(sp)
    9fa0:	df000915 	stw	fp,36(sp)
    9fa4:	ddc00815 	stw	r23,32(sp)
    9fa8:	dd800715 	stw	r22,28(sp)
    9fac:	dd400615 	stw	r21,24(sp)
    9fb0:	dd000515 	stw	r20,20(sp)
    9fb4:	dc800315 	stw	r18,12(sp)
    9fb8:	dc400215 	stw	r17,8(sp)
    9fbc:	2027883a 	mov	r19,r4
    9fc0:	2821883a 	mov	r16,r5
    9fc4:	3800411e 	bne	r7,zero,a0cc <__udivdi3+0x13c>
    9fc8:	3023883a 	mov	r17,r6
    9fcc:	2025883a 	mov	r18,r4
    9fd0:	2980522e 	bgeu	r5,r6,a11c <__udivdi3+0x18c>
    9fd4:	00bfffd4 	movui	r2,65535
    9fd8:	282d883a 	mov	r22,r5
    9fdc:	1180a836 	bltu	r2,r6,a280 <__udivdi3+0x2f0>
    9fe0:	00803fc4 	movi	r2,255
    9fe4:	1185803a 	cmpltu	r2,r2,r6
    9fe8:	100490fa 	slli	r2,r2,3
    9fec:	3086d83a 	srl	r3,r6,r2
    9ff0:	01000074 	movhi	r4,1
    9ff4:	21058fc4 	addi	r4,r4,5695
    9ff8:	20c7883a 	add	r3,r4,r3
    9ffc:	18c00003 	ldbu	r3,0(r3)
    a000:	1885883a 	add	r2,r3,r2
    a004:	00c00804 	movi	r3,32
    a008:	1887c83a 	sub	r3,r3,r2
    a00c:	18000526 	beq	r3,zero,a024 <__udivdi3+0x94>
    a010:	80e0983a 	sll	r16,r16,r3
    a014:	9884d83a 	srl	r2,r19,r2
    a018:	30e2983a 	sll	r17,r6,r3
    a01c:	98e4983a 	sll	r18,r19,r3
    a020:	142cb03a 	or	r22,r2,r16
    a024:	882ad43a 	srli	r21,r17,16
    a028:	b009883a 	mov	r4,r22
    a02c:	8d3fffcc 	andi	r20,r17,65535
    a030:	a80b883a 	mov	r5,r21
    a034:	000ab9c0 	call	ab9c <__umodsi3>
    a038:	b009883a 	mov	r4,r22
    a03c:	a80b883a 	mov	r5,r21
    a040:	1027883a 	mov	r19,r2
    a044:	000ab380 	call	ab38 <__udivsi3>
    a048:	102d883a 	mov	r22,r2
    a04c:	9826943a 	slli	r19,r19,16
    a050:	9004d43a 	srli	r2,r18,16
    a054:	a5a1383a 	mul	r16,r20,r22
    a058:	14c4b03a 	or	r2,r2,r19
    a05c:	1400052e 	bgeu	r2,r16,a074 <__udivdi3+0xe4>
    a060:	1445883a 	add	r2,r2,r17
    a064:	b0ffffc4 	addi	r3,r22,-1
    a068:	14400136 	bltu	r2,r17,a070 <__udivdi3+0xe0>
    a06c:	14012336 	bltu	r2,r16,a4fc <__udivdi3+0x56c>
    a070:	182d883a 	mov	r22,r3
    a074:	1421c83a 	sub	r16,r2,r16
    a078:	a80b883a 	mov	r5,r21
    a07c:	8009883a 	mov	r4,r16
    a080:	000ab9c0 	call	ab9c <__umodsi3>
    a084:	1027883a 	mov	r19,r2
    a088:	a80b883a 	mov	r5,r21
    a08c:	8009883a 	mov	r4,r16
    a090:	000ab380 	call	ab38 <__udivsi3>
    a094:	9826943a 	slli	r19,r19,16
    a098:	a0a9383a 	mul	r20,r20,r2
    a09c:	94bfffcc 	andi	r18,r18,65535
    a0a0:	94e4b03a 	or	r18,r18,r19
    a0a4:	9500052e 	bgeu	r18,r20,a0bc <__udivdi3+0x12c>
    a0a8:	8ca5883a 	add	r18,r17,r18
    a0ac:	10ffffc4 	addi	r3,r2,-1
    a0b0:	9440f136 	bltu	r18,r17,a478 <__udivdi3+0x4e8>
    a0b4:	9500f02e 	bgeu	r18,r20,a478 <__udivdi3+0x4e8>
    a0b8:	10bfff84 	addi	r2,r2,-2
    a0bc:	b00c943a 	slli	r6,r22,16
    a0c0:	0007883a 	mov	r3,zero
    a0c4:	3084b03a 	or	r2,r6,r2
    a0c8:	00005906 	br	a230 <__udivdi3+0x2a0>
    a0cc:	29c05636 	bltu	r5,r7,a228 <__udivdi3+0x298>
    a0d0:	00bfffd4 	movui	r2,65535
    a0d4:	11c0622e 	bgeu	r2,r7,a260 <__udivdi3+0x2d0>
    a0d8:	00804034 	movhi	r2,256
    a0dc:	10bfffc4 	addi	r2,r2,-1
    a0e0:	11c0ee36 	bltu	r2,r7,a49c <__udivdi3+0x50c>
    a0e4:	00800404 	movi	r2,16
    a0e8:	3886d83a 	srl	r3,r7,r2
    a0ec:	01000074 	movhi	r4,1
    a0f0:	21058fc4 	addi	r4,r4,5695
    a0f4:	20c7883a 	add	r3,r4,r3
    a0f8:	18c00003 	ldbu	r3,0(r3)
    a0fc:	05400804 	movi	r21,32
    a100:	1885883a 	add	r2,r3,r2
    a104:	a8abc83a 	sub	r21,r21,r2
    a108:	a800621e 	bne	r21,zero,a294 <__udivdi3+0x304>
    a10c:	3c00e936 	bltu	r7,r16,a4b4 <__udivdi3+0x524>
    a110:	9985403a 	cmpgeu	r2,r19,r6
    a114:	0007883a 	mov	r3,zero
    a118:	00004506 	br	a230 <__udivdi3+0x2a0>
    a11c:	3000041e 	bne	r6,zero,a130 <__udivdi3+0x1a0>
    a120:	000b883a 	mov	r5,zero
    a124:	01000044 	movi	r4,1
    a128:	000ab380 	call	ab38 <__udivsi3>
    a12c:	1023883a 	mov	r17,r2
    a130:	00bfffd4 	movui	r2,65535
    a134:	14404e2e 	bgeu	r2,r17,a270 <__udivdi3+0x2e0>
    a138:	00804034 	movhi	r2,256
    a13c:	10bfffc4 	addi	r2,r2,-1
    a140:	1440d836 	bltu	r2,r17,a4a4 <__udivdi3+0x514>
    a144:	00800404 	movi	r2,16
    a148:	8886d83a 	srl	r3,r17,r2
    a14c:	01000074 	movhi	r4,1
    a150:	21058fc4 	addi	r4,r4,5695
    a154:	20c7883a 	add	r3,r4,r3
    a158:	18c00003 	ldbu	r3,0(r3)
    a15c:	1885883a 	add	r2,r3,r2
    a160:	00c00804 	movi	r3,32
    a164:	1887c83a 	sub	r3,r3,r2
    a168:	18008f1e 	bne	r3,zero,a3a8 <__udivdi3+0x418>
    a16c:	882ad43a 	srli	r21,r17,16
    a170:	8461c83a 	sub	r16,r16,r17
    a174:	8d3fffcc 	andi	r20,r17,65535
    a178:	00c00044 	movi	r3,1
    a17c:	8009883a 	mov	r4,r16
    a180:	a80b883a 	mov	r5,r21
    a184:	d8c00015 	stw	r3,0(sp)
    a188:	000ab9c0 	call	ab9c <__umodsi3>
    a18c:	8009883a 	mov	r4,r16
    a190:	a80b883a 	mov	r5,r21
    a194:	1027883a 	mov	r19,r2
    a198:	000ab380 	call	ab38 <__udivsi3>
    a19c:	9826943a 	slli	r19,r19,16
    a1a0:	9008d43a 	srli	r4,r18,16
    a1a4:	1521383a 	mul	r16,r2,r20
    a1a8:	102d883a 	mov	r22,r2
    a1ac:	24c8b03a 	or	r4,r4,r19
    a1b0:	d8c00017 	ldw	r3,0(sp)
    a1b4:	2400052e 	bgeu	r4,r16,a1cc <__udivdi3+0x23c>
    a1b8:	2449883a 	add	r4,r4,r17
    a1bc:	b0bfffc4 	addi	r2,r22,-1
    a1c0:	24400136 	bltu	r4,r17,a1c8 <__udivdi3+0x238>
    a1c4:	2400ca36 	bltu	r4,r16,a4f0 <__udivdi3+0x560>
    a1c8:	102d883a 	mov	r22,r2
    a1cc:	2421c83a 	sub	r16,r4,r16
    a1d0:	a80b883a 	mov	r5,r21
    a1d4:	8009883a 	mov	r4,r16
    a1d8:	d8c00015 	stw	r3,0(sp)
    a1dc:	000ab9c0 	call	ab9c <__umodsi3>
    a1e0:	1027883a 	mov	r19,r2
    a1e4:	a80b883a 	mov	r5,r21
    a1e8:	8009883a 	mov	r4,r16
    a1ec:	000ab380 	call	ab38 <__udivsi3>
    a1f0:	9826943a 	slli	r19,r19,16
    a1f4:	1529383a 	mul	r20,r2,r20
    a1f8:	94bfffcc 	andi	r18,r18,65535
    a1fc:	94e4b03a 	or	r18,r18,r19
    a200:	d8c00017 	ldw	r3,0(sp)
    a204:	9500052e 	bgeu	r18,r20,a21c <__udivdi3+0x28c>
    a208:	8ca5883a 	add	r18,r17,r18
    a20c:	113fffc4 	addi	r4,r2,-1
    a210:	94409736 	bltu	r18,r17,a470 <__udivdi3+0x4e0>
    a214:	9500962e 	bgeu	r18,r20,a470 <__udivdi3+0x4e0>
    a218:	10bfff84 	addi	r2,r2,-2
    a21c:	b00c943a 	slli	r6,r22,16
    a220:	3084b03a 	or	r2,r6,r2
    a224:	00000206 	br	a230 <__udivdi3+0x2a0>
    a228:	0007883a 	mov	r3,zero
    a22c:	0005883a 	mov	r2,zero
    a230:	dfc00a17 	ldw	ra,40(sp)
    a234:	df000917 	ldw	fp,36(sp)
    a238:	ddc00817 	ldw	r23,32(sp)
    a23c:	dd800717 	ldw	r22,28(sp)
    a240:	dd400617 	ldw	r21,24(sp)
    a244:	dd000517 	ldw	r20,20(sp)
    a248:	dcc00417 	ldw	r19,16(sp)
    a24c:	dc800317 	ldw	r18,12(sp)
    a250:	dc400217 	ldw	r17,8(sp)
    a254:	dc000117 	ldw	r16,4(sp)
    a258:	dec00b04 	addi	sp,sp,44
    a25c:	f800283a 	ret
    a260:	00803fc4 	movi	r2,255
    a264:	11c5803a 	cmpltu	r2,r2,r7
    a268:	100490fa 	slli	r2,r2,3
    a26c:	003f9e06 	br	a0e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a0e8>
    a270:	00803fc4 	movi	r2,255
    a274:	1445803a 	cmpltu	r2,r2,r17
    a278:	100490fa 	slli	r2,r2,3
    a27c:	003fb206 	br	a148 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a148>
    a280:	00804034 	movhi	r2,256
    a284:	10bfffc4 	addi	r2,r2,-1
    a288:	11808836 	bltu	r2,r6,a4ac <__udivdi3+0x51c>
    a28c:	00800404 	movi	r2,16
    a290:	003f5606 	br	9fec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009fec>
    a294:	30aed83a 	srl	r23,r6,r2
    a298:	3d4e983a 	sll	r7,r7,r21
    a29c:	80acd83a 	srl	r22,r16,r2
    a2a0:	9884d83a 	srl	r2,r19,r2
    a2a4:	3deeb03a 	or	r23,r7,r23
    a2a8:	b824d43a 	srli	r18,r23,16
    a2ac:	8560983a 	sll	r16,r16,r21
    a2b0:	b009883a 	mov	r4,r22
    a2b4:	900b883a 	mov	r5,r18
    a2b8:	3568983a 	sll	r20,r6,r21
    a2bc:	1420b03a 	or	r16,r2,r16
    a2c0:	000ab9c0 	call	ab9c <__umodsi3>
    a2c4:	b009883a 	mov	r4,r22
    a2c8:	900b883a 	mov	r5,r18
    a2cc:	1023883a 	mov	r17,r2
    a2d0:	000ab380 	call	ab38 <__udivsi3>
    a2d4:	8808943a 	slli	r4,r17,16
    a2d8:	bf3fffcc 	andi	fp,r23,65535
    a2dc:	8006d43a 	srli	r3,r16,16
    a2e0:	e0a3383a 	mul	r17,fp,r2
    a2e4:	100d883a 	mov	r6,r2
    a2e8:	1906b03a 	or	r3,r3,r4
    a2ec:	1c40042e 	bgeu	r3,r17,a300 <__udivdi3+0x370>
    a2f0:	1dc7883a 	add	r3,r3,r23
    a2f4:	10bfffc4 	addi	r2,r2,-1
    a2f8:	1dc0752e 	bgeu	r3,r23,a4d0 <__udivdi3+0x540>
    a2fc:	100d883a 	mov	r6,r2
    a300:	1c63c83a 	sub	r17,r3,r17
    a304:	900b883a 	mov	r5,r18
    a308:	8809883a 	mov	r4,r17
    a30c:	d9800015 	stw	r6,0(sp)
    a310:	000ab9c0 	call	ab9c <__umodsi3>
    a314:	102d883a 	mov	r22,r2
    a318:	8809883a 	mov	r4,r17
    a31c:	900b883a 	mov	r5,r18
    a320:	000ab380 	call	ab38 <__udivsi3>
    a324:	b02c943a 	slli	r22,r22,16
    a328:	e089383a 	mul	r4,fp,r2
    a32c:	843fffcc 	andi	r16,r16,65535
    a330:	85a0b03a 	or	r16,r16,r22
    a334:	d9800017 	ldw	r6,0(sp)
    a338:	8100042e 	bgeu	r16,r4,a34c <__udivdi3+0x3bc>
    a33c:	85e1883a 	add	r16,r16,r23
    a340:	10ffffc4 	addi	r3,r2,-1
    a344:	85c05e2e 	bgeu	r16,r23,a4c0 <__udivdi3+0x530>
    a348:	1805883a 	mov	r2,r3
    a34c:	300c943a 	slli	r6,r6,16
    a350:	a17fffcc 	andi	r5,r20,65535
    a354:	a028d43a 	srli	r20,r20,16
    a358:	3084b03a 	or	r2,r6,r2
    a35c:	10ffffcc 	andi	r3,r2,65535
    a360:	100cd43a 	srli	r6,r2,16
    a364:	194f383a 	mul	r7,r3,r5
    a368:	1d07383a 	mul	r3,r3,r20
    a36c:	314b383a 	mul	r5,r6,r5
    a370:	3810d43a 	srli	r8,r7,16
    a374:	8121c83a 	sub	r16,r16,r4
    a378:	1947883a 	add	r3,r3,r5
    a37c:	40c7883a 	add	r3,r8,r3
    a380:	350d383a 	mul	r6,r6,r20
    a384:	1940022e 	bgeu	r3,r5,a390 <__udivdi3+0x400>
    a388:	01000074 	movhi	r4,1
    a38c:	310d883a 	add	r6,r6,r4
    a390:	1828d43a 	srli	r20,r3,16
    a394:	a18d883a 	add	r6,r20,r6
    a398:	81803e36 	bltu	r16,r6,a494 <__udivdi3+0x504>
    a39c:	81803826 	beq	r16,r6,a480 <__udivdi3+0x4f0>
    a3a0:	0007883a 	mov	r3,zero
    a3a4:	003fa206 	br	a230 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a230>
    a3a8:	88e2983a 	sll	r17,r17,r3
    a3ac:	80a8d83a 	srl	r20,r16,r2
    a3b0:	80e0983a 	sll	r16,r16,r3
    a3b4:	882ad43a 	srli	r21,r17,16
    a3b8:	9884d83a 	srl	r2,r19,r2
    a3bc:	a009883a 	mov	r4,r20
    a3c0:	a80b883a 	mov	r5,r21
    a3c4:	142eb03a 	or	r23,r2,r16
    a3c8:	98e4983a 	sll	r18,r19,r3
    a3cc:	000ab9c0 	call	ab9c <__umodsi3>
    a3d0:	a009883a 	mov	r4,r20
    a3d4:	a80b883a 	mov	r5,r21
    a3d8:	1021883a 	mov	r16,r2
    a3dc:	000ab380 	call	ab38 <__udivsi3>
    a3e0:	1039883a 	mov	fp,r2
    a3e4:	8d3fffcc 	andi	r20,r17,65535
    a3e8:	8020943a 	slli	r16,r16,16
    a3ec:	b804d43a 	srli	r2,r23,16
    a3f0:	a72d383a 	mul	r22,r20,fp
    a3f4:	1404b03a 	or	r2,r2,r16
    a3f8:	1580062e 	bgeu	r2,r22,a414 <__udivdi3+0x484>
    a3fc:	1445883a 	add	r2,r2,r17
    a400:	e0ffffc4 	addi	r3,fp,-1
    a404:	14403836 	bltu	r2,r17,a4e8 <__udivdi3+0x558>
    a408:	1580372e 	bgeu	r2,r22,a4e8 <__udivdi3+0x558>
    a40c:	e73fff84 	addi	fp,fp,-2
    a410:	1445883a 	add	r2,r2,r17
    a414:	15adc83a 	sub	r22,r2,r22
    a418:	a80b883a 	mov	r5,r21
    a41c:	b009883a 	mov	r4,r22
    a420:	000ab9c0 	call	ab9c <__umodsi3>
    a424:	1027883a 	mov	r19,r2
    a428:	b009883a 	mov	r4,r22
    a42c:	a80b883a 	mov	r5,r21
    a430:	000ab380 	call	ab38 <__udivsi3>
    a434:	9826943a 	slli	r19,r19,16
    a438:	a0a1383a 	mul	r16,r20,r2
    a43c:	b93fffcc 	andi	r4,r23,65535
    a440:	24c8b03a 	or	r4,r4,r19
    a444:	2400062e 	bgeu	r4,r16,a460 <__udivdi3+0x4d0>
    a448:	2449883a 	add	r4,r4,r17
    a44c:	10ffffc4 	addi	r3,r2,-1
    a450:	24402336 	bltu	r4,r17,a4e0 <__udivdi3+0x550>
    a454:	2400222e 	bgeu	r4,r16,a4e0 <__udivdi3+0x550>
    a458:	10bfff84 	addi	r2,r2,-2
    a45c:	2449883a 	add	r4,r4,r17
    a460:	e038943a 	slli	fp,fp,16
    a464:	2421c83a 	sub	r16,r4,r16
    a468:	e086b03a 	or	r3,fp,r2
    a46c:	003f4306 	br	a17c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a17c>
    a470:	2005883a 	mov	r2,r4
    a474:	003f6906 	br	a21c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a21c>
    a478:	1805883a 	mov	r2,r3
    a47c:	003f0f06 	br	a0bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a0bc>
    a480:	1806943a 	slli	r3,r3,16
    a484:	9d66983a 	sll	r19,r19,r21
    a488:	39ffffcc 	andi	r7,r7,65535
    a48c:	19c7883a 	add	r3,r3,r7
    a490:	98ffc32e 	bgeu	r19,r3,a3a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a3a0>
    a494:	10bfffc4 	addi	r2,r2,-1
    a498:	003fc106 	br	a3a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a3a0>
    a49c:	00800604 	movi	r2,24
    a4a0:	003f1106 	br	a0e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a0e8>
    a4a4:	00800604 	movi	r2,24
    a4a8:	003f2706 	br	a148 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a148>
    a4ac:	00800604 	movi	r2,24
    a4b0:	003ece06 	br	9fec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7009fec>
    a4b4:	0007883a 	mov	r3,zero
    a4b8:	00800044 	movi	r2,1
    a4bc:	003f5c06 	br	a230 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a230>
    a4c0:	813fa12e 	bgeu	r16,r4,a348 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a348>
    a4c4:	10bfff84 	addi	r2,r2,-2
    a4c8:	85e1883a 	add	r16,r16,r23
    a4cc:	003f9f06 	br	a34c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a34c>
    a4d0:	1c7f8a2e 	bgeu	r3,r17,a2fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a2fc>
    a4d4:	31bfff84 	addi	r6,r6,-2
    a4d8:	1dc7883a 	add	r3,r3,r23
    a4dc:	003f8806 	br	a300 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a300>
    a4e0:	1805883a 	mov	r2,r3
    a4e4:	003fde06 	br	a460 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a460>
    a4e8:	1839883a 	mov	fp,r3
    a4ec:	003fc906 	br	a414 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a414>
    a4f0:	b5bfff84 	addi	r22,r22,-2
    a4f4:	2449883a 	add	r4,r4,r17
    a4f8:	003f3406 	br	a1cc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a1cc>
    a4fc:	b5bfff84 	addi	r22,r22,-2
    a500:	1445883a 	add	r2,r2,r17
    a504:	003edb06 	br	a074 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a074>

0000a508 <__umoddi3>:
    a508:	defff404 	addi	sp,sp,-48
    a50c:	df000a15 	stw	fp,40(sp)
    a510:	dc400315 	stw	r17,12(sp)
    a514:	dc000215 	stw	r16,8(sp)
    a518:	dfc00b15 	stw	ra,44(sp)
    a51c:	ddc00915 	stw	r23,36(sp)
    a520:	dd800815 	stw	r22,32(sp)
    a524:	dd400715 	stw	r21,28(sp)
    a528:	dd000615 	stw	r20,24(sp)
    a52c:	dcc00515 	stw	r19,20(sp)
    a530:	dc800415 	stw	r18,16(sp)
    a534:	2021883a 	mov	r16,r4
    a538:	2823883a 	mov	r17,r5
    a53c:	2839883a 	mov	fp,r5
    a540:	38003c1e 	bne	r7,zero,a634 <__umoddi3+0x12c>
    a544:	3027883a 	mov	r19,r6
    a548:	2029883a 	mov	r20,r4
    a54c:	2980512e 	bgeu	r5,r6,a694 <__umoddi3+0x18c>
    a550:	00bfffd4 	movui	r2,65535
    a554:	11809a36 	bltu	r2,r6,a7c0 <__umoddi3+0x2b8>
    a558:	01003fc4 	movi	r4,255
    a55c:	2189803a 	cmpltu	r4,r4,r6
    a560:	200890fa 	slli	r4,r4,3
    a564:	3104d83a 	srl	r2,r6,r4
    a568:	00c00074 	movhi	r3,1
    a56c:	18c58fc4 	addi	r3,r3,5695
    a570:	1885883a 	add	r2,r3,r2
    a574:	10c00003 	ldbu	r3,0(r2)
    a578:	00800804 	movi	r2,32
    a57c:	1909883a 	add	r4,r3,r4
    a580:	1125c83a 	sub	r18,r2,r4
    a584:	90000526 	beq	r18,zero,a59c <__umoddi3+0x94>
    a588:	8ca2983a 	sll	r17,r17,r18
    a58c:	8108d83a 	srl	r4,r16,r4
    a590:	34a6983a 	sll	r19,r6,r18
    a594:	84a8983a 	sll	r20,r16,r18
    a598:	2478b03a 	or	fp,r4,r17
    a59c:	982ed43a 	srli	r23,r19,16
    a5a0:	e009883a 	mov	r4,fp
    a5a4:	9dbfffcc 	andi	r22,r19,65535
    a5a8:	b80b883a 	mov	r5,r23
    a5ac:	000ab9c0 	call	ab9c <__umodsi3>
    a5b0:	e009883a 	mov	r4,fp
    a5b4:	b80b883a 	mov	r5,r23
    a5b8:	102b883a 	mov	r21,r2
    a5bc:	000ab380 	call	ab38 <__udivsi3>
    a5c0:	a806943a 	slli	r3,r21,16
    a5c4:	a008d43a 	srli	r4,r20,16
    a5c8:	b085383a 	mul	r2,r22,r2
    a5cc:	20c8b03a 	or	r4,r4,r3
    a5d0:	2080032e 	bgeu	r4,r2,a5e0 <__umoddi3+0xd8>
    a5d4:	24c9883a 	add	r4,r4,r19
    a5d8:	24c00136 	bltu	r4,r19,a5e0 <__umoddi3+0xd8>
    a5dc:	20811036 	bltu	r4,r2,aa20 <__umoddi3+0x518>
    a5e0:	20abc83a 	sub	r21,r4,r2
    a5e4:	b80b883a 	mov	r5,r23
    a5e8:	a809883a 	mov	r4,r21
    a5ec:	000ab9c0 	call	ab9c <__umodsi3>
    a5f0:	1023883a 	mov	r17,r2
    a5f4:	b80b883a 	mov	r5,r23
    a5f8:	a809883a 	mov	r4,r21
    a5fc:	000ab380 	call	ab38 <__udivsi3>
    a600:	8822943a 	slli	r17,r17,16
    a604:	b085383a 	mul	r2,r22,r2
    a608:	a0ffffcc 	andi	r3,r20,65535
    a60c:	1c46b03a 	or	r3,r3,r17
    a610:	1880042e 	bgeu	r3,r2,a624 <__umoddi3+0x11c>
    a614:	1cc7883a 	add	r3,r3,r19
    a618:	1cc00236 	bltu	r3,r19,a624 <__umoddi3+0x11c>
    a61c:	1880012e 	bgeu	r3,r2,a624 <__umoddi3+0x11c>
    a620:	1cc7883a 	add	r3,r3,r19
    a624:	1885c83a 	sub	r2,r3,r2
    a628:	1484d83a 	srl	r2,r2,r18
    a62c:	0007883a 	mov	r3,zero
    a630:	00004f06 	br	a770 <__umoddi3+0x268>
    a634:	29c04c36 	bltu	r5,r7,a768 <__umoddi3+0x260>
    a638:	00bfffd4 	movui	r2,65535
    a63c:	11c0582e 	bgeu	r2,r7,a7a0 <__umoddi3+0x298>
    a640:	00804034 	movhi	r2,256
    a644:	10bfffc4 	addi	r2,r2,-1
    a648:	11c0e736 	bltu	r2,r7,a9e8 <__umoddi3+0x4e0>
    a64c:	01000404 	movi	r4,16
    a650:	3904d83a 	srl	r2,r7,r4
    a654:	00c00074 	movhi	r3,1
    a658:	18c58fc4 	addi	r3,r3,5695
    a65c:	1885883a 	add	r2,r3,r2
    a660:	14c00003 	ldbu	r19,0(r2)
    a664:	00c00804 	movi	r3,32
    a668:	9927883a 	add	r19,r19,r4
    a66c:	1ce9c83a 	sub	r20,r3,r19
    a670:	a000581e 	bne	r20,zero,a7d4 <__umoddi3+0x2cc>
    a674:	3c400136 	bltu	r7,r17,a67c <__umoddi3+0x174>
    a678:	8180eb36 	bltu	r16,r6,aa28 <__umoddi3+0x520>
    a67c:	8185c83a 	sub	r2,r16,r6
    a680:	89e3c83a 	sub	r17,r17,r7
    a684:	8089803a 	cmpltu	r4,r16,r2
    a688:	8939c83a 	sub	fp,r17,r4
    a68c:	e007883a 	mov	r3,fp
    a690:	00003706 	br	a770 <__umoddi3+0x268>
    a694:	3000041e 	bne	r6,zero,a6a8 <__umoddi3+0x1a0>
    a698:	000b883a 	mov	r5,zero
    a69c:	01000044 	movi	r4,1
    a6a0:	000ab380 	call	ab38 <__udivsi3>
    a6a4:	1027883a 	mov	r19,r2
    a6a8:	00bfffd4 	movui	r2,65535
    a6ac:	14c0402e 	bgeu	r2,r19,a7b0 <__umoddi3+0x2a8>
    a6b0:	00804034 	movhi	r2,256
    a6b4:	10bfffc4 	addi	r2,r2,-1
    a6b8:	14c0cd36 	bltu	r2,r19,a9f0 <__umoddi3+0x4e8>
    a6bc:	00800404 	movi	r2,16
    a6c0:	9886d83a 	srl	r3,r19,r2
    a6c4:	01000074 	movhi	r4,1
    a6c8:	21058fc4 	addi	r4,r4,5695
    a6cc:	20c7883a 	add	r3,r4,r3
    a6d0:	18c00003 	ldbu	r3,0(r3)
    a6d4:	1887883a 	add	r3,r3,r2
    a6d8:	00800804 	movi	r2,32
    a6dc:	10e5c83a 	sub	r18,r2,r3
    a6e0:	9000901e 	bne	r18,zero,a924 <__umoddi3+0x41c>
    a6e4:	982cd43a 	srli	r22,r19,16
    a6e8:	8ce3c83a 	sub	r17,r17,r19
    a6ec:	9d7fffcc 	andi	r21,r19,65535
    a6f0:	b00b883a 	mov	r5,r22
    a6f4:	8809883a 	mov	r4,r17
    a6f8:	000ab9c0 	call	ab9c <__umodsi3>
    a6fc:	8809883a 	mov	r4,r17
    a700:	b00b883a 	mov	r5,r22
    a704:	1021883a 	mov	r16,r2
    a708:	000ab380 	call	ab38 <__udivsi3>
    a70c:	8006943a 	slli	r3,r16,16
    a710:	a008d43a 	srli	r4,r20,16
    a714:	1545383a 	mul	r2,r2,r21
    a718:	20c8b03a 	or	r4,r4,r3
    a71c:	2080042e 	bgeu	r4,r2,a730 <__umoddi3+0x228>
    a720:	24c9883a 	add	r4,r4,r19
    a724:	24c00236 	bltu	r4,r19,a730 <__umoddi3+0x228>
    a728:	2080012e 	bgeu	r4,r2,a730 <__umoddi3+0x228>
    a72c:	24c9883a 	add	r4,r4,r19
    a730:	20a1c83a 	sub	r16,r4,r2
    a734:	b00b883a 	mov	r5,r22
    a738:	8009883a 	mov	r4,r16
    a73c:	000ab9c0 	call	ab9c <__umodsi3>
    a740:	1023883a 	mov	r17,r2
    a744:	b00b883a 	mov	r5,r22
    a748:	8009883a 	mov	r4,r16
    a74c:	000ab380 	call	ab38 <__udivsi3>
    a750:	8822943a 	slli	r17,r17,16
    a754:	1545383a 	mul	r2,r2,r21
    a758:	a53fffcc 	andi	r20,r20,65535
    a75c:	a446b03a 	or	r3,r20,r17
    a760:	18bfb02e 	bgeu	r3,r2,a624 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a624>
    a764:	003fab06 	br	a614 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a614>
    a768:	2005883a 	mov	r2,r4
    a76c:	2807883a 	mov	r3,r5
    a770:	dfc00b17 	ldw	ra,44(sp)
    a774:	df000a17 	ldw	fp,40(sp)
    a778:	ddc00917 	ldw	r23,36(sp)
    a77c:	dd800817 	ldw	r22,32(sp)
    a780:	dd400717 	ldw	r21,28(sp)
    a784:	dd000617 	ldw	r20,24(sp)
    a788:	dcc00517 	ldw	r19,20(sp)
    a78c:	dc800417 	ldw	r18,16(sp)
    a790:	dc400317 	ldw	r17,12(sp)
    a794:	dc000217 	ldw	r16,8(sp)
    a798:	dec00c04 	addi	sp,sp,48
    a79c:	f800283a 	ret
    a7a0:	04c03fc4 	movi	r19,255
    a7a4:	99c9803a 	cmpltu	r4,r19,r7
    a7a8:	200890fa 	slli	r4,r4,3
    a7ac:	003fa806 	br	a650 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a650>
    a7b0:	00803fc4 	movi	r2,255
    a7b4:	14c5803a 	cmpltu	r2,r2,r19
    a7b8:	100490fa 	slli	r2,r2,3
    a7bc:	003fc006 	br	a6c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a6c0>
    a7c0:	00804034 	movhi	r2,256
    a7c4:	10bfffc4 	addi	r2,r2,-1
    a7c8:	11808b36 	bltu	r2,r6,a9f8 <__umoddi3+0x4f0>
    a7cc:	01000404 	movi	r4,16
    a7d0:	003f6406 	br	a564 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a564>
    a7d4:	34c4d83a 	srl	r2,r6,r19
    a7d8:	3d0e983a 	sll	r7,r7,r20
    a7dc:	8cf8d83a 	srl	fp,r17,r19
    a7e0:	8d10983a 	sll	r8,r17,r20
    a7e4:	38aab03a 	or	r21,r7,r2
    a7e8:	a82cd43a 	srli	r22,r21,16
    a7ec:	84e2d83a 	srl	r17,r16,r19
    a7f0:	e009883a 	mov	r4,fp
    a7f4:	b00b883a 	mov	r5,r22
    a7f8:	8a22b03a 	or	r17,r17,r8
    a7fc:	3524983a 	sll	r18,r6,r20
    a800:	000ab9c0 	call	ab9c <__umodsi3>
    a804:	e009883a 	mov	r4,fp
    a808:	b00b883a 	mov	r5,r22
    a80c:	102f883a 	mov	r23,r2
    a810:	000ab380 	call	ab38 <__udivsi3>
    a814:	100d883a 	mov	r6,r2
    a818:	b808943a 	slli	r4,r23,16
    a81c:	aa3fffcc 	andi	r8,r21,65535
    a820:	8804d43a 	srli	r2,r17,16
    a824:	41af383a 	mul	r23,r8,r6
    a828:	8520983a 	sll	r16,r16,r20
    a82c:	1104b03a 	or	r2,r2,r4
    a830:	15c0042e 	bgeu	r2,r23,a844 <__umoddi3+0x33c>
    a834:	1545883a 	add	r2,r2,r21
    a838:	30ffffc4 	addi	r3,r6,-1
    a83c:	1540742e 	bgeu	r2,r21,aa10 <__umoddi3+0x508>
    a840:	180d883a 	mov	r6,r3
    a844:	15efc83a 	sub	r23,r2,r23
    a848:	b00b883a 	mov	r5,r22
    a84c:	b809883a 	mov	r4,r23
    a850:	d9800115 	stw	r6,4(sp)
    a854:	da000015 	stw	r8,0(sp)
    a858:	000ab9c0 	call	ab9c <__umodsi3>
    a85c:	b00b883a 	mov	r5,r22
    a860:	b809883a 	mov	r4,r23
    a864:	1039883a 	mov	fp,r2
    a868:	000ab380 	call	ab38 <__udivsi3>
    a86c:	da000017 	ldw	r8,0(sp)
    a870:	e038943a 	slli	fp,fp,16
    a874:	100b883a 	mov	r5,r2
    a878:	4089383a 	mul	r4,r8,r2
    a87c:	8a3fffcc 	andi	r8,r17,65535
    a880:	4710b03a 	or	r8,r8,fp
    a884:	d9800117 	ldw	r6,4(sp)
    a888:	4100042e 	bgeu	r8,r4,a89c <__umoddi3+0x394>
    a88c:	4551883a 	add	r8,r8,r21
    a890:	10bfffc4 	addi	r2,r2,-1
    a894:	45405a2e 	bgeu	r8,r21,aa00 <__umoddi3+0x4f8>
    a898:	100b883a 	mov	r5,r2
    a89c:	300c943a 	slli	r6,r6,16
    a8a0:	91ffffcc 	andi	r7,r18,65535
    a8a4:	9004d43a 	srli	r2,r18,16
    a8a8:	314cb03a 	or	r6,r6,r5
    a8ac:	317fffcc 	andi	r5,r6,65535
    a8b0:	300cd43a 	srli	r6,r6,16
    a8b4:	29d3383a 	mul	r9,r5,r7
    a8b8:	288b383a 	mul	r5,r5,r2
    a8bc:	31cf383a 	mul	r7,r6,r7
    a8c0:	4806d43a 	srli	r3,r9,16
    a8c4:	4111c83a 	sub	r8,r8,r4
    a8c8:	29cb883a 	add	r5,r5,r7
    a8cc:	194b883a 	add	r5,r3,r5
    a8d0:	3085383a 	mul	r2,r6,r2
    a8d4:	29c0022e 	bgeu	r5,r7,a8e0 <__umoddi3+0x3d8>
    a8d8:	00c00074 	movhi	r3,1
    a8dc:	10c5883a 	add	r2,r2,r3
    a8e0:	2808d43a 	srli	r4,r5,16
    a8e4:	280a943a 	slli	r5,r5,16
    a8e8:	4a7fffcc 	andi	r9,r9,65535
    a8ec:	2085883a 	add	r2,r4,r2
    a8f0:	2a4b883a 	add	r5,r5,r9
    a8f4:	40803636 	bltu	r8,r2,a9d0 <__umoddi3+0x4c8>
    a8f8:	40804d26 	beq	r8,r2,aa30 <__umoddi3+0x528>
    a8fc:	4089c83a 	sub	r4,r8,r2
    a900:	280f883a 	mov	r7,r5
    a904:	81cfc83a 	sub	r7,r16,r7
    a908:	81c7803a 	cmpltu	r3,r16,r7
    a90c:	20c7c83a 	sub	r3,r4,r3
    a910:	1cc4983a 	sll	r2,r3,r19
    a914:	3d0ed83a 	srl	r7,r7,r20
    a918:	1d06d83a 	srl	r3,r3,r20
    a91c:	11c4b03a 	or	r2,r2,r7
    a920:	003f9306 	br	a770 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a770>
    a924:	9ca6983a 	sll	r19,r19,r18
    a928:	88e8d83a 	srl	r20,r17,r3
    a92c:	80c4d83a 	srl	r2,r16,r3
    a930:	982cd43a 	srli	r22,r19,16
    a934:	8ca2983a 	sll	r17,r17,r18
    a938:	a009883a 	mov	r4,r20
    a93c:	b00b883a 	mov	r5,r22
    a940:	1478b03a 	or	fp,r2,r17
    a944:	000ab9c0 	call	ab9c <__umodsi3>
    a948:	a009883a 	mov	r4,r20
    a94c:	b00b883a 	mov	r5,r22
    a950:	1023883a 	mov	r17,r2
    a954:	000ab380 	call	ab38 <__udivsi3>
    a958:	9d7fffcc 	andi	r21,r19,65535
    a95c:	880a943a 	slli	r5,r17,16
    a960:	e008d43a 	srli	r4,fp,16
    a964:	a885383a 	mul	r2,r21,r2
    a968:	84a8983a 	sll	r20,r16,r18
    a96c:	2148b03a 	or	r4,r4,r5
    a970:	2080042e 	bgeu	r4,r2,a984 <__umoddi3+0x47c>
    a974:	24c9883a 	add	r4,r4,r19
    a978:	24c00236 	bltu	r4,r19,a984 <__umoddi3+0x47c>
    a97c:	2080012e 	bgeu	r4,r2,a984 <__umoddi3+0x47c>
    a980:	24c9883a 	add	r4,r4,r19
    a984:	20a3c83a 	sub	r17,r4,r2
    a988:	b00b883a 	mov	r5,r22
    a98c:	8809883a 	mov	r4,r17
    a990:	000ab9c0 	call	ab9c <__umodsi3>
    a994:	102f883a 	mov	r23,r2
    a998:	8809883a 	mov	r4,r17
    a99c:	b00b883a 	mov	r5,r22
    a9a0:	000ab380 	call	ab38 <__udivsi3>
    a9a4:	b82e943a 	slli	r23,r23,16
    a9a8:	a885383a 	mul	r2,r21,r2
    a9ac:	e13fffcc 	andi	r4,fp,65535
    a9b0:	25c8b03a 	or	r4,r4,r23
    a9b4:	2080042e 	bgeu	r4,r2,a9c8 <__umoddi3+0x4c0>
    a9b8:	24c9883a 	add	r4,r4,r19
    a9bc:	24c00236 	bltu	r4,r19,a9c8 <__umoddi3+0x4c0>
    a9c0:	2080012e 	bgeu	r4,r2,a9c8 <__umoddi3+0x4c0>
    a9c4:	24c9883a 	add	r4,r4,r19
    a9c8:	20a3c83a 	sub	r17,r4,r2
    a9cc:	003f4806 	br	a6f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a6f0>
    a9d0:	2c8fc83a 	sub	r7,r5,r18
    a9d4:	1545c83a 	sub	r2,r2,r21
    a9d8:	29cb803a 	cmpltu	r5,r5,r7
    a9dc:	1145c83a 	sub	r2,r2,r5
    a9e0:	4089c83a 	sub	r4,r8,r2
    a9e4:	003fc706 	br	a904 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a904>
    a9e8:	01000604 	movi	r4,24
    a9ec:	003f1806 	br	a650 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a650>
    a9f0:	00800604 	movi	r2,24
    a9f4:	003f3206 	br	a6c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a6c0>
    a9f8:	01000604 	movi	r4,24
    a9fc:	003ed906 	br	a564 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a564>
    aa00:	413fa52e 	bgeu	r8,r4,a898 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a898>
    aa04:	297fff84 	addi	r5,r5,-2
    aa08:	4551883a 	add	r8,r8,r21
    aa0c:	003fa306 	br	a89c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a89c>
    aa10:	15ff8b2e 	bgeu	r2,r23,a840 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a840>
    aa14:	31bfff84 	addi	r6,r6,-2
    aa18:	1545883a 	add	r2,r2,r21
    aa1c:	003f8906 	br	a844 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a844>
    aa20:	24c9883a 	add	r4,r4,r19
    aa24:	003eee06 	br	a5e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a5e0>
    aa28:	8005883a 	mov	r2,r16
    aa2c:	003f1706 	br	a68c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a68c>
    aa30:	817fe736 	bltu	r16,r5,a9d0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a9d0>
    aa34:	280f883a 	mov	r7,r5
    aa38:	0009883a 	mov	r4,zero
    aa3c:	003fb106 	br	a904 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700a904>

0000aa40 <__divsi3>:
    aa40:	20001b16 	blt	r4,zero,aab0 <__divsi3+0x70>
    aa44:	000f883a 	mov	r7,zero
    aa48:	28001616 	blt	r5,zero,aaa4 <__divsi3+0x64>
    aa4c:	200d883a 	mov	r6,r4
    aa50:	29001a2e 	bgeu	r5,r4,aabc <__divsi3+0x7c>
    aa54:	00800804 	movi	r2,32
    aa58:	00c00044 	movi	r3,1
    aa5c:	00000106 	br	aa64 <__divsi3+0x24>
    aa60:	10000d26 	beq	r2,zero,aa98 <__divsi3+0x58>
    aa64:	294b883a 	add	r5,r5,r5
    aa68:	10bfffc4 	addi	r2,r2,-1
    aa6c:	18c7883a 	add	r3,r3,r3
    aa70:	293ffb36 	bltu	r5,r4,aa60 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa60>
    aa74:	0005883a 	mov	r2,zero
    aa78:	18000726 	beq	r3,zero,aa98 <__divsi3+0x58>
    aa7c:	0005883a 	mov	r2,zero
    aa80:	31400236 	bltu	r6,r5,aa8c <__divsi3+0x4c>
    aa84:	314dc83a 	sub	r6,r6,r5
    aa88:	10c4b03a 	or	r2,r2,r3
    aa8c:	1806d07a 	srli	r3,r3,1
    aa90:	280ad07a 	srli	r5,r5,1
    aa94:	183ffa1e 	bne	r3,zero,aa80 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa80>
    aa98:	38000126 	beq	r7,zero,aaa0 <__divsi3+0x60>
    aa9c:	0085c83a 	sub	r2,zero,r2
    aaa0:	f800283a 	ret
    aaa4:	014bc83a 	sub	r5,zero,r5
    aaa8:	39c0005c 	xori	r7,r7,1
    aaac:	003fe706 	br	aa4c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa4c>
    aab0:	0109c83a 	sub	r4,zero,r4
    aab4:	01c00044 	movi	r7,1
    aab8:	003fe306 	br	aa48 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa48>
    aabc:	00c00044 	movi	r3,1
    aac0:	003fee06 	br	aa7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aa7c>

0000aac4 <__modsi3>:
    aac4:	20001716 	blt	r4,zero,ab24 <__modsi3+0x60>
    aac8:	000f883a 	mov	r7,zero
    aacc:	2005883a 	mov	r2,r4
    aad0:	28001216 	blt	r5,zero,ab1c <__modsi3+0x58>
    aad4:	2900162e 	bgeu	r5,r4,ab30 <__modsi3+0x6c>
    aad8:	01800804 	movi	r6,32
    aadc:	00c00044 	movi	r3,1
    aae0:	00000106 	br	aae8 <__modsi3+0x24>
    aae4:	30000a26 	beq	r6,zero,ab10 <__modsi3+0x4c>
    aae8:	294b883a 	add	r5,r5,r5
    aaec:	31bfffc4 	addi	r6,r6,-1
    aaf0:	18c7883a 	add	r3,r3,r3
    aaf4:	293ffb36 	bltu	r5,r4,aae4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aae4>
    aaf8:	18000526 	beq	r3,zero,ab10 <__modsi3+0x4c>
    aafc:	1806d07a 	srli	r3,r3,1
    ab00:	11400136 	bltu	r2,r5,ab08 <__modsi3+0x44>
    ab04:	1145c83a 	sub	r2,r2,r5
    ab08:	280ad07a 	srli	r5,r5,1
    ab0c:	183ffb1e 	bne	r3,zero,aafc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aafc>
    ab10:	38000126 	beq	r7,zero,ab18 <__modsi3+0x54>
    ab14:	0085c83a 	sub	r2,zero,r2
    ab18:	f800283a 	ret
    ab1c:	014bc83a 	sub	r5,zero,r5
    ab20:	003fec06 	br	aad4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aad4>
    ab24:	0109c83a 	sub	r4,zero,r4
    ab28:	01c00044 	movi	r7,1
    ab2c:	003fe706 	br	aacc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aacc>
    ab30:	00c00044 	movi	r3,1
    ab34:	003ff106 	br	aafc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700aafc>

0000ab38 <__udivsi3>:
    ab38:	200d883a 	mov	r6,r4
    ab3c:	2900152e 	bgeu	r5,r4,ab94 <__udivsi3+0x5c>
    ab40:	28001416 	blt	r5,zero,ab94 <__udivsi3+0x5c>
    ab44:	00800804 	movi	r2,32
    ab48:	00c00044 	movi	r3,1
    ab4c:	00000206 	br	ab58 <__udivsi3+0x20>
    ab50:	10000e26 	beq	r2,zero,ab8c <__udivsi3+0x54>
    ab54:	28000516 	blt	r5,zero,ab6c <__udivsi3+0x34>
    ab58:	294b883a 	add	r5,r5,r5
    ab5c:	10bfffc4 	addi	r2,r2,-1
    ab60:	18c7883a 	add	r3,r3,r3
    ab64:	293ffa36 	bltu	r5,r4,ab50 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ab50>
    ab68:	18000826 	beq	r3,zero,ab8c <__udivsi3+0x54>
    ab6c:	0005883a 	mov	r2,zero
    ab70:	31400236 	bltu	r6,r5,ab7c <__udivsi3+0x44>
    ab74:	314dc83a 	sub	r6,r6,r5
    ab78:	10c4b03a 	or	r2,r2,r3
    ab7c:	1806d07a 	srli	r3,r3,1
    ab80:	280ad07a 	srli	r5,r5,1
    ab84:	183ffa1e 	bne	r3,zero,ab70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ab70>
    ab88:	f800283a 	ret
    ab8c:	0005883a 	mov	r2,zero
    ab90:	f800283a 	ret
    ab94:	00c00044 	movi	r3,1
    ab98:	003ff406 	br	ab6c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ab6c>

0000ab9c <__umodsi3>:
    ab9c:	2005883a 	mov	r2,r4
    aba0:	2900122e 	bgeu	r5,r4,abec <__umodsi3+0x50>
    aba4:	28001116 	blt	r5,zero,abec <__umodsi3+0x50>
    aba8:	01800804 	movi	r6,32
    abac:	00c00044 	movi	r3,1
    abb0:	00000206 	br	abbc <__umodsi3+0x20>
    abb4:	30000c26 	beq	r6,zero,abe8 <__umodsi3+0x4c>
    abb8:	28000516 	blt	r5,zero,abd0 <__umodsi3+0x34>
    abbc:	294b883a 	add	r5,r5,r5
    abc0:	31bfffc4 	addi	r6,r6,-1
    abc4:	18c7883a 	add	r3,r3,r3
    abc8:	293ffa36 	bltu	r5,r4,abb4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700abb4>
    abcc:	18000626 	beq	r3,zero,abe8 <__umodsi3+0x4c>
    abd0:	1806d07a 	srli	r3,r3,1
    abd4:	11400136 	bltu	r2,r5,abdc <__umodsi3+0x40>
    abd8:	1145c83a 	sub	r2,r2,r5
    abdc:	280ad07a 	srli	r5,r5,1
    abe0:	183ffb1e 	bne	r3,zero,abd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700abd0>
    abe4:	f800283a 	ret
    abe8:	f800283a 	ret
    abec:	00c00044 	movi	r3,1
    abf0:	003ff706 	br	abd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700abd0>

0000abf4 <__adddf3>:
    abf4:	02c00434 	movhi	r11,16
    abf8:	5affffc4 	addi	r11,r11,-1
    abfc:	2806d7fa 	srli	r3,r5,31
    ac00:	2ad4703a 	and	r10,r5,r11
    ac04:	3ad2703a 	and	r9,r7,r11
    ac08:	3804d53a 	srli	r2,r7,20
    ac0c:	3018d77a 	srli	r12,r6,29
    ac10:	280ad53a 	srli	r5,r5,20
    ac14:	501490fa 	slli	r10,r10,3
    ac18:	2010d77a 	srli	r8,r4,29
    ac1c:	481290fa 	slli	r9,r9,3
    ac20:	380ed7fa 	srli	r7,r7,31
    ac24:	defffb04 	addi	sp,sp,-20
    ac28:	dc800215 	stw	r18,8(sp)
    ac2c:	dc400115 	stw	r17,4(sp)
    ac30:	dc000015 	stw	r16,0(sp)
    ac34:	dfc00415 	stw	ra,16(sp)
    ac38:	dcc00315 	stw	r19,12(sp)
    ac3c:	1c803fcc 	andi	r18,r3,255
    ac40:	2c01ffcc 	andi	r16,r5,2047
    ac44:	5210b03a 	or	r8,r10,r8
    ac48:	202290fa 	slli	r17,r4,3
    ac4c:	1081ffcc 	andi	r2,r2,2047
    ac50:	4b12b03a 	or	r9,r9,r12
    ac54:	300c90fa 	slli	r6,r6,3
    ac58:	91c07526 	beq	r18,r7,ae30 <__adddf3+0x23c>
    ac5c:	8087c83a 	sub	r3,r16,r2
    ac60:	00c0ab0e 	bge	zero,r3,af10 <__adddf3+0x31c>
    ac64:	10002a1e 	bne	r2,zero,ad10 <__adddf3+0x11c>
    ac68:	4984b03a 	or	r2,r9,r6
    ac6c:	1000961e 	bne	r2,zero,aec8 <__adddf3+0x2d4>
    ac70:	888001cc 	andi	r2,r17,7
    ac74:	10000726 	beq	r2,zero,ac94 <__adddf3+0xa0>
    ac78:	888003cc 	andi	r2,r17,15
    ac7c:	00c00104 	movi	r3,4
    ac80:	10c00426 	beq	r2,r3,ac94 <__adddf3+0xa0>
    ac84:	88c7883a 	add	r3,r17,r3
    ac88:	1c63803a 	cmpltu	r17,r3,r17
    ac8c:	4451883a 	add	r8,r8,r17
    ac90:	1823883a 	mov	r17,r3
    ac94:	4080202c 	andhi	r2,r8,128
    ac98:	10005926 	beq	r2,zero,ae00 <__adddf3+0x20c>
    ac9c:	84000044 	addi	r16,r16,1
    aca0:	0081ffc4 	movi	r2,2047
    aca4:	8080ba26 	beq	r16,r2,af90 <__adddf3+0x39c>
    aca8:	00bfe034 	movhi	r2,65408
    acac:	10bfffc4 	addi	r2,r2,-1
    acb0:	4090703a 	and	r8,r8,r2
    acb4:	4004977a 	slli	r2,r8,29
    acb8:	4010927a 	slli	r8,r8,9
    acbc:	8822d0fa 	srli	r17,r17,3
    acc0:	8401ffcc 	andi	r16,r16,2047
    acc4:	4010d33a 	srli	r8,r8,12
    acc8:	9007883a 	mov	r3,r18
    accc:	1444b03a 	or	r2,r2,r17
    acd0:	8401ffcc 	andi	r16,r16,2047
    acd4:	8020953a 	slli	r16,r16,20
    acd8:	18c03fcc 	andi	r3,r3,255
    acdc:	01000434 	movhi	r4,16
    ace0:	213fffc4 	addi	r4,r4,-1
    ace4:	180697fa 	slli	r3,r3,31
    ace8:	4110703a 	and	r8,r8,r4
    acec:	4410b03a 	or	r8,r8,r16
    acf0:	40c6b03a 	or	r3,r8,r3
    acf4:	dfc00417 	ldw	ra,16(sp)
    acf8:	dcc00317 	ldw	r19,12(sp)
    acfc:	dc800217 	ldw	r18,8(sp)
    ad00:	dc400117 	ldw	r17,4(sp)
    ad04:	dc000017 	ldw	r16,0(sp)
    ad08:	dec00504 	addi	sp,sp,20
    ad0c:	f800283a 	ret
    ad10:	0081ffc4 	movi	r2,2047
    ad14:	80bfd626 	beq	r16,r2,ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    ad18:	4a402034 	orhi	r9,r9,128
    ad1c:	00800e04 	movi	r2,56
    ad20:	10c09f16 	blt	r2,r3,afa0 <__adddf3+0x3ac>
    ad24:	008007c4 	movi	r2,31
    ad28:	10c0c216 	blt	r2,r3,b034 <__adddf3+0x440>
    ad2c:	00800804 	movi	r2,32
    ad30:	10c5c83a 	sub	r2,r2,r3
    ad34:	488a983a 	sll	r5,r9,r2
    ad38:	30c8d83a 	srl	r4,r6,r3
    ad3c:	3084983a 	sll	r2,r6,r2
    ad40:	48c6d83a 	srl	r3,r9,r3
    ad44:	290cb03a 	or	r6,r5,r4
    ad48:	1004c03a 	cmpne	r2,r2,zero
    ad4c:	308cb03a 	or	r6,r6,r2
    ad50:	898dc83a 	sub	r6,r17,r6
    ad54:	89a3803a 	cmpltu	r17,r17,r6
    ad58:	40d1c83a 	sub	r8,r8,r3
    ad5c:	4451c83a 	sub	r8,r8,r17
    ad60:	3023883a 	mov	r17,r6
    ad64:	4080202c 	andhi	r2,r8,128
    ad68:	10002326 	beq	r2,zero,adf8 <__adddf3+0x204>
    ad6c:	04c02034 	movhi	r19,128
    ad70:	9cffffc4 	addi	r19,r19,-1
    ad74:	44e6703a 	and	r19,r8,r19
    ad78:	98007626 	beq	r19,zero,af54 <__adddf3+0x360>
    ad7c:	9809883a 	mov	r4,r19
    ad80:	00009ac0 	call	9ac <__clzsi2>
    ad84:	10fffe04 	addi	r3,r2,-8
    ad88:	010007c4 	movi	r4,31
    ad8c:	20c07716 	blt	r4,r3,af6c <__adddf3+0x378>
    ad90:	00800804 	movi	r2,32
    ad94:	10c5c83a 	sub	r2,r2,r3
    ad98:	8884d83a 	srl	r2,r17,r2
    ad9c:	98d0983a 	sll	r8,r19,r3
    ada0:	88e2983a 	sll	r17,r17,r3
    ada4:	1204b03a 	or	r2,r2,r8
    ada8:	1c007416 	blt	r3,r16,af7c <__adddf3+0x388>
    adac:	1c21c83a 	sub	r16,r3,r16
    adb0:	82000044 	addi	r8,r16,1
    adb4:	00c007c4 	movi	r3,31
    adb8:	1a009116 	blt	r3,r8,b000 <__adddf3+0x40c>
    adbc:	00c00804 	movi	r3,32
    adc0:	1a07c83a 	sub	r3,r3,r8
    adc4:	8a08d83a 	srl	r4,r17,r8
    adc8:	88e2983a 	sll	r17,r17,r3
    adcc:	10c6983a 	sll	r3,r2,r3
    add0:	1210d83a 	srl	r8,r2,r8
    add4:	8804c03a 	cmpne	r2,r17,zero
    add8:	1906b03a 	or	r3,r3,r4
    addc:	18a2b03a 	or	r17,r3,r2
    ade0:	0021883a 	mov	r16,zero
    ade4:	003fa206 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    ade8:	1890b03a 	or	r8,r3,r2
    adec:	40017d26 	beq	r8,zero,b3e4 <__adddf3+0x7f0>
    adf0:	1011883a 	mov	r8,r2
    adf4:	1823883a 	mov	r17,r3
    adf8:	888001cc 	andi	r2,r17,7
    adfc:	103f9e1e 	bne	r2,zero,ac78 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac78>
    ae00:	4004977a 	slli	r2,r8,29
    ae04:	8822d0fa 	srli	r17,r17,3
    ae08:	4010d0fa 	srli	r8,r8,3
    ae0c:	9007883a 	mov	r3,r18
    ae10:	1444b03a 	or	r2,r2,r17
    ae14:	0101ffc4 	movi	r4,2047
    ae18:	81002426 	beq	r16,r4,aeac <__adddf3+0x2b8>
    ae1c:	8120703a 	and	r16,r16,r4
    ae20:	01000434 	movhi	r4,16
    ae24:	213fffc4 	addi	r4,r4,-1
    ae28:	4110703a 	and	r8,r8,r4
    ae2c:	003fa806 	br	acd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700acd0>
    ae30:	8089c83a 	sub	r4,r16,r2
    ae34:	01005e0e 	bge	zero,r4,afb0 <__adddf3+0x3bc>
    ae38:	10002b26 	beq	r2,zero,aee8 <__adddf3+0x2f4>
    ae3c:	0081ffc4 	movi	r2,2047
    ae40:	80bf8b26 	beq	r16,r2,ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    ae44:	4a402034 	orhi	r9,r9,128
    ae48:	00800e04 	movi	r2,56
    ae4c:	1100a40e 	bge	r2,r4,b0e0 <__adddf3+0x4ec>
    ae50:	498cb03a 	or	r6,r9,r6
    ae54:	300ac03a 	cmpne	r5,r6,zero
    ae58:	0013883a 	mov	r9,zero
    ae5c:	2c4b883a 	add	r5,r5,r17
    ae60:	2c63803a 	cmpltu	r17,r5,r17
    ae64:	4a11883a 	add	r8,r9,r8
    ae68:	8a11883a 	add	r8,r17,r8
    ae6c:	2823883a 	mov	r17,r5
    ae70:	4080202c 	andhi	r2,r8,128
    ae74:	103fe026 	beq	r2,zero,adf8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700adf8>
    ae78:	84000044 	addi	r16,r16,1
    ae7c:	0081ffc4 	movi	r2,2047
    ae80:	8080d226 	beq	r16,r2,b1cc <__adddf3+0x5d8>
    ae84:	00bfe034 	movhi	r2,65408
    ae88:	10bfffc4 	addi	r2,r2,-1
    ae8c:	4090703a 	and	r8,r8,r2
    ae90:	880ad07a 	srli	r5,r17,1
    ae94:	400897fa 	slli	r4,r8,31
    ae98:	88c0004c 	andi	r3,r17,1
    ae9c:	28e2b03a 	or	r17,r5,r3
    aea0:	4010d07a 	srli	r8,r8,1
    aea4:	2462b03a 	or	r17,r4,r17
    aea8:	003f7106 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    aeac:	4088b03a 	or	r4,r8,r2
    aeb0:	20014526 	beq	r4,zero,b3c8 <__adddf3+0x7d4>
    aeb4:	01000434 	movhi	r4,16
    aeb8:	42000234 	orhi	r8,r8,8
    aebc:	213fffc4 	addi	r4,r4,-1
    aec0:	4110703a 	and	r8,r8,r4
    aec4:	003f8206 	br	acd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700acd0>
    aec8:	18ffffc4 	addi	r3,r3,-1
    aecc:	1800491e 	bne	r3,zero,aff4 <__adddf3+0x400>
    aed0:	898bc83a 	sub	r5,r17,r6
    aed4:	8963803a 	cmpltu	r17,r17,r5
    aed8:	4251c83a 	sub	r8,r8,r9
    aedc:	4451c83a 	sub	r8,r8,r17
    aee0:	2823883a 	mov	r17,r5
    aee4:	003f9f06 	br	ad64 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ad64>
    aee8:	4984b03a 	or	r2,r9,r6
    aeec:	103f6026 	beq	r2,zero,ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    aef0:	213fffc4 	addi	r4,r4,-1
    aef4:	2000931e 	bne	r4,zero,b144 <__adddf3+0x550>
    aef8:	898d883a 	add	r6,r17,r6
    aefc:	3463803a 	cmpltu	r17,r6,r17
    af00:	4251883a 	add	r8,r8,r9
    af04:	8a11883a 	add	r8,r17,r8
    af08:	3023883a 	mov	r17,r6
    af0c:	003fd806 	br	ae70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ae70>
    af10:	1800541e 	bne	r3,zero,b064 <__adddf3+0x470>
    af14:	80800044 	addi	r2,r16,1
    af18:	1081ffcc 	andi	r2,r2,2047
    af1c:	00c00044 	movi	r3,1
    af20:	1880a00e 	bge	r3,r2,b1a4 <__adddf3+0x5b0>
    af24:	8989c83a 	sub	r4,r17,r6
    af28:	8905803a 	cmpltu	r2,r17,r4
    af2c:	4267c83a 	sub	r19,r8,r9
    af30:	98a7c83a 	sub	r19,r19,r2
    af34:	9880202c 	andhi	r2,r19,128
    af38:	10006326 	beq	r2,zero,b0c8 <__adddf3+0x4d4>
    af3c:	3463c83a 	sub	r17,r6,r17
    af40:	4a07c83a 	sub	r3,r9,r8
    af44:	344d803a 	cmpltu	r6,r6,r17
    af48:	19a7c83a 	sub	r19,r3,r6
    af4c:	3825883a 	mov	r18,r7
    af50:	983f8a1e 	bne	r19,zero,ad7c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ad7c>
    af54:	8809883a 	mov	r4,r17
    af58:	00009ac0 	call	9ac <__clzsi2>
    af5c:	10800804 	addi	r2,r2,32
    af60:	10fffe04 	addi	r3,r2,-8
    af64:	010007c4 	movi	r4,31
    af68:	20ff890e 	bge	r4,r3,ad90 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ad90>
    af6c:	10bff604 	addi	r2,r2,-40
    af70:	8884983a 	sll	r2,r17,r2
    af74:	0023883a 	mov	r17,zero
    af78:	1c3f8c0e 	bge	r3,r16,adac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700adac>
    af7c:	023fe034 	movhi	r8,65408
    af80:	423fffc4 	addi	r8,r8,-1
    af84:	80e1c83a 	sub	r16,r16,r3
    af88:	1210703a 	and	r8,r2,r8
    af8c:	003f3806 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    af90:	9007883a 	mov	r3,r18
    af94:	0011883a 	mov	r8,zero
    af98:	0005883a 	mov	r2,zero
    af9c:	003f4c06 	br	acd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700acd0>
    afa0:	498cb03a 	or	r6,r9,r6
    afa4:	300cc03a 	cmpne	r6,r6,zero
    afa8:	0007883a 	mov	r3,zero
    afac:	003f6806 	br	ad50 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ad50>
    afb0:	20009c1e 	bne	r4,zero,b224 <__adddf3+0x630>
    afb4:	80800044 	addi	r2,r16,1
    afb8:	1141ffcc 	andi	r5,r2,2047
    afbc:	01000044 	movi	r4,1
    afc0:	2140670e 	bge	r4,r5,b160 <__adddf3+0x56c>
    afc4:	0101ffc4 	movi	r4,2047
    afc8:	11007f26 	beq	r2,r4,b1c8 <__adddf3+0x5d4>
    afcc:	898d883a 	add	r6,r17,r6
    afd0:	4247883a 	add	r3,r8,r9
    afd4:	3451803a 	cmpltu	r8,r6,r17
    afd8:	40d1883a 	add	r8,r8,r3
    afdc:	402297fa 	slli	r17,r8,31
    afe0:	300cd07a 	srli	r6,r6,1
    afe4:	4010d07a 	srli	r8,r8,1
    afe8:	1021883a 	mov	r16,r2
    afec:	89a2b03a 	or	r17,r17,r6
    aff0:	003f1f06 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    aff4:	0081ffc4 	movi	r2,2047
    aff8:	80bf481e 	bne	r16,r2,ad1c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ad1c>
    affc:	003f1c06 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b000:	843ff844 	addi	r16,r16,-31
    b004:	01000804 	movi	r4,32
    b008:	1406d83a 	srl	r3,r2,r16
    b00c:	41005026 	beq	r8,r4,b150 <__adddf3+0x55c>
    b010:	01001004 	movi	r4,64
    b014:	2211c83a 	sub	r8,r4,r8
    b018:	1204983a 	sll	r2,r2,r8
    b01c:	88a2b03a 	or	r17,r17,r2
    b020:	8822c03a 	cmpne	r17,r17,zero
    b024:	1c62b03a 	or	r17,r3,r17
    b028:	0011883a 	mov	r8,zero
    b02c:	0021883a 	mov	r16,zero
    b030:	003f7106 	br	adf8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700adf8>
    b034:	193ff804 	addi	r4,r3,-32
    b038:	00800804 	movi	r2,32
    b03c:	4908d83a 	srl	r4,r9,r4
    b040:	18804526 	beq	r3,r2,b158 <__adddf3+0x564>
    b044:	00801004 	movi	r2,64
    b048:	10c5c83a 	sub	r2,r2,r3
    b04c:	4886983a 	sll	r3,r9,r2
    b050:	198cb03a 	or	r6,r3,r6
    b054:	300cc03a 	cmpne	r6,r6,zero
    b058:	218cb03a 	or	r6,r4,r6
    b05c:	0007883a 	mov	r3,zero
    b060:	003f3b06 	br	ad50 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ad50>
    b064:	80002a26 	beq	r16,zero,b110 <__adddf3+0x51c>
    b068:	0101ffc4 	movi	r4,2047
    b06c:	11006826 	beq	r2,r4,b210 <__adddf3+0x61c>
    b070:	00c7c83a 	sub	r3,zero,r3
    b074:	42002034 	orhi	r8,r8,128
    b078:	01000e04 	movi	r4,56
    b07c:	20c07c16 	blt	r4,r3,b270 <__adddf3+0x67c>
    b080:	010007c4 	movi	r4,31
    b084:	20c0da16 	blt	r4,r3,b3f0 <__adddf3+0x7fc>
    b088:	01000804 	movi	r4,32
    b08c:	20c9c83a 	sub	r4,r4,r3
    b090:	4114983a 	sll	r10,r8,r4
    b094:	88cad83a 	srl	r5,r17,r3
    b098:	8908983a 	sll	r4,r17,r4
    b09c:	40c6d83a 	srl	r3,r8,r3
    b0a0:	5162b03a 	or	r17,r10,r5
    b0a4:	2008c03a 	cmpne	r4,r4,zero
    b0a8:	8922b03a 	or	r17,r17,r4
    b0ac:	3463c83a 	sub	r17,r6,r17
    b0b0:	48c7c83a 	sub	r3,r9,r3
    b0b4:	344d803a 	cmpltu	r6,r6,r17
    b0b8:	1991c83a 	sub	r8,r3,r6
    b0bc:	1021883a 	mov	r16,r2
    b0c0:	3825883a 	mov	r18,r7
    b0c4:	003f2706 	br	ad64 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ad64>
    b0c8:	24d0b03a 	or	r8,r4,r19
    b0cc:	40001b1e 	bne	r8,zero,b13c <__adddf3+0x548>
    b0d0:	0005883a 	mov	r2,zero
    b0d4:	0007883a 	mov	r3,zero
    b0d8:	0021883a 	mov	r16,zero
    b0dc:	003f4d06 	br	ae14 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ae14>
    b0e0:	008007c4 	movi	r2,31
    b0e4:	11003c16 	blt	r2,r4,b1d8 <__adddf3+0x5e4>
    b0e8:	00800804 	movi	r2,32
    b0ec:	1105c83a 	sub	r2,r2,r4
    b0f0:	488e983a 	sll	r7,r9,r2
    b0f4:	310ad83a 	srl	r5,r6,r4
    b0f8:	3084983a 	sll	r2,r6,r2
    b0fc:	4912d83a 	srl	r9,r9,r4
    b100:	394ab03a 	or	r5,r7,r5
    b104:	1004c03a 	cmpne	r2,r2,zero
    b108:	288ab03a 	or	r5,r5,r2
    b10c:	003f5306 	br	ae5c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ae5c>
    b110:	4448b03a 	or	r4,r8,r17
    b114:	20003e26 	beq	r4,zero,b210 <__adddf3+0x61c>
    b118:	00c6303a 	nor	r3,zero,r3
    b11c:	18003a1e 	bne	r3,zero,b208 <__adddf3+0x614>
    b120:	3463c83a 	sub	r17,r6,r17
    b124:	4a07c83a 	sub	r3,r9,r8
    b128:	344d803a 	cmpltu	r6,r6,r17
    b12c:	1991c83a 	sub	r8,r3,r6
    b130:	1021883a 	mov	r16,r2
    b134:	3825883a 	mov	r18,r7
    b138:	003f0a06 	br	ad64 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ad64>
    b13c:	2023883a 	mov	r17,r4
    b140:	003f0d06 	br	ad78 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ad78>
    b144:	0081ffc4 	movi	r2,2047
    b148:	80bf3f1e 	bne	r16,r2,ae48 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ae48>
    b14c:	003ec806 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b150:	0005883a 	mov	r2,zero
    b154:	003fb106 	br	b01c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b01c>
    b158:	0007883a 	mov	r3,zero
    b15c:	003fbc06 	br	b050 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b050>
    b160:	4444b03a 	or	r2,r8,r17
    b164:	8000871e 	bne	r16,zero,b384 <__adddf3+0x790>
    b168:	1000ba26 	beq	r2,zero,b454 <__adddf3+0x860>
    b16c:	4984b03a 	or	r2,r9,r6
    b170:	103ebf26 	beq	r2,zero,ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b174:	8985883a 	add	r2,r17,r6
    b178:	4247883a 	add	r3,r8,r9
    b17c:	1451803a 	cmpltu	r8,r2,r17
    b180:	40d1883a 	add	r8,r8,r3
    b184:	40c0202c 	andhi	r3,r8,128
    b188:	1023883a 	mov	r17,r2
    b18c:	183f1a26 	beq	r3,zero,adf8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700adf8>
    b190:	00bfe034 	movhi	r2,65408
    b194:	10bfffc4 	addi	r2,r2,-1
    b198:	2021883a 	mov	r16,r4
    b19c:	4090703a 	and	r8,r8,r2
    b1a0:	003eb306 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b1a4:	4444b03a 	or	r2,r8,r17
    b1a8:	8000291e 	bne	r16,zero,b250 <__adddf3+0x65c>
    b1ac:	10004b1e 	bne	r2,zero,b2dc <__adddf3+0x6e8>
    b1b0:	4990b03a 	or	r8,r9,r6
    b1b4:	40008b26 	beq	r8,zero,b3e4 <__adddf3+0x7f0>
    b1b8:	4811883a 	mov	r8,r9
    b1bc:	3023883a 	mov	r17,r6
    b1c0:	3825883a 	mov	r18,r7
    b1c4:	003eaa06 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b1c8:	1021883a 	mov	r16,r2
    b1cc:	0011883a 	mov	r8,zero
    b1d0:	0005883a 	mov	r2,zero
    b1d4:	003f0f06 	br	ae14 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ae14>
    b1d8:	217ff804 	addi	r5,r4,-32
    b1dc:	00800804 	movi	r2,32
    b1e0:	494ad83a 	srl	r5,r9,r5
    b1e4:	20807d26 	beq	r4,r2,b3dc <__adddf3+0x7e8>
    b1e8:	00801004 	movi	r2,64
    b1ec:	1109c83a 	sub	r4,r2,r4
    b1f0:	4912983a 	sll	r9,r9,r4
    b1f4:	498cb03a 	or	r6,r9,r6
    b1f8:	300cc03a 	cmpne	r6,r6,zero
    b1fc:	298ab03a 	or	r5,r5,r6
    b200:	0013883a 	mov	r9,zero
    b204:	003f1506 	br	ae5c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ae5c>
    b208:	0101ffc4 	movi	r4,2047
    b20c:	113f9a1e 	bne	r2,r4,b078 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b078>
    b210:	4811883a 	mov	r8,r9
    b214:	3023883a 	mov	r17,r6
    b218:	1021883a 	mov	r16,r2
    b21c:	3825883a 	mov	r18,r7
    b220:	003e9306 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b224:	8000161e 	bne	r16,zero,b280 <__adddf3+0x68c>
    b228:	444ab03a 	or	r5,r8,r17
    b22c:	28005126 	beq	r5,zero,b374 <__adddf3+0x780>
    b230:	0108303a 	nor	r4,zero,r4
    b234:	20004d1e 	bne	r4,zero,b36c <__adddf3+0x778>
    b238:	89a3883a 	add	r17,r17,r6
    b23c:	4253883a 	add	r9,r8,r9
    b240:	898d803a 	cmpltu	r6,r17,r6
    b244:	3251883a 	add	r8,r6,r9
    b248:	1021883a 	mov	r16,r2
    b24c:	003f0806 	br	ae70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ae70>
    b250:	1000301e 	bne	r2,zero,b314 <__adddf3+0x720>
    b254:	4984b03a 	or	r2,r9,r6
    b258:	10007126 	beq	r2,zero,b420 <__adddf3+0x82c>
    b25c:	4811883a 	mov	r8,r9
    b260:	3023883a 	mov	r17,r6
    b264:	3825883a 	mov	r18,r7
    b268:	0401ffc4 	movi	r16,2047
    b26c:	003e8006 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b270:	4462b03a 	or	r17,r8,r17
    b274:	8822c03a 	cmpne	r17,r17,zero
    b278:	0007883a 	mov	r3,zero
    b27c:	003f8b06 	br	b0ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b0ac>
    b280:	0141ffc4 	movi	r5,2047
    b284:	11403b26 	beq	r2,r5,b374 <__adddf3+0x780>
    b288:	0109c83a 	sub	r4,zero,r4
    b28c:	42002034 	orhi	r8,r8,128
    b290:	01400e04 	movi	r5,56
    b294:	29006716 	blt	r5,r4,b434 <__adddf3+0x840>
    b298:	014007c4 	movi	r5,31
    b29c:	29007016 	blt	r5,r4,b460 <__adddf3+0x86c>
    b2a0:	01400804 	movi	r5,32
    b2a4:	290bc83a 	sub	r5,r5,r4
    b2a8:	4154983a 	sll	r10,r8,r5
    b2ac:	890ed83a 	srl	r7,r17,r4
    b2b0:	894a983a 	sll	r5,r17,r5
    b2b4:	4108d83a 	srl	r4,r8,r4
    b2b8:	51e2b03a 	or	r17,r10,r7
    b2bc:	280ac03a 	cmpne	r5,r5,zero
    b2c0:	8962b03a 	or	r17,r17,r5
    b2c4:	89a3883a 	add	r17,r17,r6
    b2c8:	2253883a 	add	r9,r4,r9
    b2cc:	898d803a 	cmpltu	r6,r17,r6
    b2d0:	3251883a 	add	r8,r6,r9
    b2d4:	1021883a 	mov	r16,r2
    b2d8:	003ee506 	br	ae70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ae70>
    b2dc:	4984b03a 	or	r2,r9,r6
    b2e0:	103e6326 	beq	r2,zero,ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b2e4:	8987c83a 	sub	r3,r17,r6
    b2e8:	88c9803a 	cmpltu	r4,r17,r3
    b2ec:	4245c83a 	sub	r2,r8,r9
    b2f0:	1105c83a 	sub	r2,r2,r4
    b2f4:	1100202c 	andhi	r4,r2,128
    b2f8:	203ebb26 	beq	r4,zero,ade8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ade8>
    b2fc:	3463c83a 	sub	r17,r6,r17
    b300:	4a07c83a 	sub	r3,r9,r8
    b304:	344d803a 	cmpltu	r6,r6,r17
    b308:	1991c83a 	sub	r8,r3,r6
    b30c:	3825883a 	mov	r18,r7
    b310:	003e5706 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b314:	4984b03a 	or	r2,r9,r6
    b318:	10002e26 	beq	r2,zero,b3d4 <__adddf3+0x7e0>
    b31c:	4004d0fa 	srli	r2,r8,3
    b320:	8822d0fa 	srli	r17,r17,3
    b324:	4010977a 	slli	r8,r8,29
    b328:	10c0022c 	andhi	r3,r2,8
    b32c:	4462b03a 	or	r17,r8,r17
    b330:	18000826 	beq	r3,zero,b354 <__adddf3+0x760>
    b334:	4808d0fa 	srli	r4,r9,3
    b338:	20c0022c 	andhi	r3,r4,8
    b33c:	1800051e 	bne	r3,zero,b354 <__adddf3+0x760>
    b340:	300cd0fa 	srli	r6,r6,3
    b344:	4806977a 	slli	r3,r9,29
    b348:	2005883a 	mov	r2,r4
    b34c:	3825883a 	mov	r18,r7
    b350:	19a2b03a 	or	r17,r3,r6
    b354:	8810d77a 	srli	r8,r17,29
    b358:	100490fa 	slli	r2,r2,3
    b35c:	882290fa 	slli	r17,r17,3
    b360:	0401ffc4 	movi	r16,2047
    b364:	4090b03a 	or	r8,r8,r2
    b368:	003e4106 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b36c:	0141ffc4 	movi	r5,2047
    b370:	117fc71e 	bne	r2,r5,b290 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b290>
    b374:	4811883a 	mov	r8,r9
    b378:	3023883a 	mov	r17,r6
    b37c:	1021883a 	mov	r16,r2
    b380:	003e3b06 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b384:	10002f26 	beq	r2,zero,b444 <__adddf3+0x850>
    b388:	4984b03a 	or	r2,r9,r6
    b38c:	10001126 	beq	r2,zero,b3d4 <__adddf3+0x7e0>
    b390:	4004d0fa 	srli	r2,r8,3
    b394:	8822d0fa 	srli	r17,r17,3
    b398:	4010977a 	slli	r8,r8,29
    b39c:	10c0022c 	andhi	r3,r2,8
    b3a0:	4462b03a 	or	r17,r8,r17
    b3a4:	183feb26 	beq	r3,zero,b354 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b354>
    b3a8:	4808d0fa 	srli	r4,r9,3
    b3ac:	20c0022c 	andhi	r3,r4,8
    b3b0:	183fe81e 	bne	r3,zero,b354 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b354>
    b3b4:	300cd0fa 	srli	r6,r6,3
    b3b8:	4806977a 	slli	r3,r9,29
    b3bc:	2005883a 	mov	r2,r4
    b3c0:	19a2b03a 	or	r17,r3,r6
    b3c4:	003fe306 	br	b354 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b354>
    b3c8:	0011883a 	mov	r8,zero
    b3cc:	0005883a 	mov	r2,zero
    b3d0:	003e3f06 	br	acd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700acd0>
    b3d4:	0401ffc4 	movi	r16,2047
    b3d8:	003e2506 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b3dc:	0013883a 	mov	r9,zero
    b3e0:	003f8406 	br	b1f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b1f4>
    b3e4:	0005883a 	mov	r2,zero
    b3e8:	0007883a 	mov	r3,zero
    b3ec:	003e8906 	br	ae14 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ae14>
    b3f0:	197ff804 	addi	r5,r3,-32
    b3f4:	01000804 	movi	r4,32
    b3f8:	414ad83a 	srl	r5,r8,r5
    b3fc:	19002426 	beq	r3,r4,b490 <__adddf3+0x89c>
    b400:	01001004 	movi	r4,64
    b404:	20c7c83a 	sub	r3,r4,r3
    b408:	40c6983a 	sll	r3,r8,r3
    b40c:	1c46b03a 	or	r3,r3,r17
    b410:	1806c03a 	cmpne	r3,r3,zero
    b414:	28e2b03a 	or	r17,r5,r3
    b418:	0007883a 	mov	r3,zero
    b41c:	003f2306 	br	b0ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b0ac>
    b420:	0007883a 	mov	r3,zero
    b424:	5811883a 	mov	r8,r11
    b428:	00bfffc4 	movi	r2,-1
    b42c:	0401ffc4 	movi	r16,2047
    b430:	003e7806 	br	ae14 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ae14>
    b434:	4462b03a 	or	r17,r8,r17
    b438:	8822c03a 	cmpne	r17,r17,zero
    b43c:	0009883a 	mov	r4,zero
    b440:	003fa006 	br	b2c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b2c4>
    b444:	4811883a 	mov	r8,r9
    b448:	3023883a 	mov	r17,r6
    b44c:	0401ffc4 	movi	r16,2047
    b450:	003e0706 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b454:	4811883a 	mov	r8,r9
    b458:	3023883a 	mov	r17,r6
    b45c:	003e0406 	br	ac70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ac70>
    b460:	21fff804 	addi	r7,r4,-32
    b464:	01400804 	movi	r5,32
    b468:	41ced83a 	srl	r7,r8,r7
    b46c:	21400a26 	beq	r4,r5,b498 <__adddf3+0x8a4>
    b470:	01401004 	movi	r5,64
    b474:	2909c83a 	sub	r4,r5,r4
    b478:	4108983a 	sll	r4,r8,r4
    b47c:	2448b03a 	or	r4,r4,r17
    b480:	2008c03a 	cmpne	r4,r4,zero
    b484:	3922b03a 	or	r17,r7,r4
    b488:	0009883a 	mov	r4,zero
    b48c:	003f8d06 	br	b2c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b2c4>
    b490:	0007883a 	mov	r3,zero
    b494:	003fdd06 	br	b40c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b40c>
    b498:	0009883a 	mov	r4,zero
    b49c:	003ff706 	br	b47c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b47c>

0000b4a0 <__divdf3>:
    b4a0:	defff204 	addi	sp,sp,-56
    b4a4:	dd400915 	stw	r21,36(sp)
    b4a8:	282ad53a 	srli	r21,r5,20
    b4ac:	dd000815 	stw	r20,32(sp)
    b4b0:	2828d7fa 	srli	r20,r5,31
    b4b4:	dc000415 	stw	r16,16(sp)
    b4b8:	04000434 	movhi	r16,16
    b4bc:	df000c15 	stw	fp,48(sp)
    b4c0:	843fffc4 	addi	r16,r16,-1
    b4c4:	dfc00d15 	stw	ra,52(sp)
    b4c8:	ddc00b15 	stw	r23,44(sp)
    b4cc:	dd800a15 	stw	r22,40(sp)
    b4d0:	dcc00715 	stw	r19,28(sp)
    b4d4:	dc800615 	stw	r18,24(sp)
    b4d8:	dc400515 	stw	r17,20(sp)
    b4dc:	ad41ffcc 	andi	r21,r21,2047
    b4e0:	2c20703a 	and	r16,r5,r16
    b4e4:	a7003fcc 	andi	fp,r20,255
    b4e8:	a8006126 	beq	r21,zero,b670 <__divdf3+0x1d0>
    b4ec:	0081ffc4 	movi	r2,2047
    b4f0:	2025883a 	mov	r18,r4
    b4f4:	a8803726 	beq	r21,r2,b5d4 <__divdf3+0x134>
    b4f8:	80800434 	orhi	r2,r16,16
    b4fc:	100490fa 	slli	r2,r2,3
    b500:	2020d77a 	srli	r16,r4,29
    b504:	202490fa 	slli	r18,r4,3
    b508:	ad7f0044 	addi	r21,r21,-1023
    b50c:	80a0b03a 	or	r16,r16,r2
    b510:	0027883a 	mov	r19,zero
    b514:	0013883a 	mov	r9,zero
    b518:	3804d53a 	srli	r2,r7,20
    b51c:	382cd7fa 	srli	r22,r7,31
    b520:	04400434 	movhi	r17,16
    b524:	8c7fffc4 	addi	r17,r17,-1
    b528:	1081ffcc 	andi	r2,r2,2047
    b52c:	3011883a 	mov	r8,r6
    b530:	3c62703a 	and	r17,r7,r17
    b534:	b5c03fcc 	andi	r23,r22,255
    b538:	10006c26 	beq	r2,zero,b6ec <__divdf3+0x24c>
    b53c:	00c1ffc4 	movi	r3,2047
    b540:	10c06426 	beq	r2,r3,b6d4 <__divdf3+0x234>
    b544:	88c00434 	orhi	r3,r17,16
    b548:	180690fa 	slli	r3,r3,3
    b54c:	3022d77a 	srli	r17,r6,29
    b550:	301090fa 	slli	r8,r6,3
    b554:	10bf0044 	addi	r2,r2,-1023
    b558:	88e2b03a 	or	r17,r17,r3
    b55c:	000f883a 	mov	r7,zero
    b560:	a58cf03a 	xor	r6,r20,r22
    b564:	3cc8b03a 	or	r4,r7,r19
    b568:	a8abc83a 	sub	r21,r21,r2
    b56c:	008003c4 	movi	r2,15
    b570:	3007883a 	mov	r3,r6
    b574:	34c03fcc 	andi	r19,r6,255
    b578:	11009036 	bltu	r2,r4,b7bc <__divdf3+0x31c>
    b57c:	200890ba 	slli	r4,r4,2
    b580:	00800074 	movhi	r2,1
    b584:	10ad6504 	addi	r2,r2,-19052
    b588:	2089883a 	add	r4,r4,r2
    b58c:	20800017 	ldw	r2,0(r4)
    b590:	1000683a 	jmp	r2
    b594:	0000b7bc 	xorhi	zero,zero,734
    b598:	0000b60c 	andi	zero,zero,728
    b59c:	0000b7ac 	andhi	zero,zero,734
    b5a0:	0000b600 	call	b60 <___vfprintf_internal_r+0xe4>
    b5a4:	0000b7ac 	andhi	zero,zero,734
    b5a8:	0000b780 	call	b78 <___vfprintf_internal_r+0xfc>
    b5ac:	0000b7ac 	andhi	zero,zero,734
    b5b0:	0000b600 	call	b60 <___vfprintf_internal_r+0xe4>
    b5b4:	0000b60c 	andi	zero,zero,728
    b5b8:	0000b60c 	andi	zero,zero,728
    b5bc:	0000b780 	call	b78 <___vfprintf_internal_r+0xfc>
    b5c0:	0000b600 	call	b60 <___vfprintf_internal_r+0xe4>
    b5c4:	0000b5f0 	cmpltui	zero,zero,727
    b5c8:	0000b5f0 	cmpltui	zero,zero,727
    b5cc:	0000b5f0 	cmpltui	zero,zero,727
    b5d0:	0000baa0 	cmpeqi	zero,zero,746
    b5d4:	2404b03a 	or	r2,r4,r16
    b5d8:	1000661e 	bne	r2,zero,b774 <__divdf3+0x2d4>
    b5dc:	04c00204 	movi	r19,8
    b5e0:	0021883a 	mov	r16,zero
    b5e4:	0025883a 	mov	r18,zero
    b5e8:	02400084 	movi	r9,2
    b5ec:	003fca06 	br	b518 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b518>
    b5f0:	8023883a 	mov	r17,r16
    b5f4:	9011883a 	mov	r8,r18
    b5f8:	e02f883a 	mov	r23,fp
    b5fc:	480f883a 	mov	r7,r9
    b600:	00800084 	movi	r2,2
    b604:	3881311e 	bne	r7,r2,bacc <__divdf3+0x62c>
    b608:	b827883a 	mov	r19,r23
    b60c:	98c0004c 	andi	r3,r19,1
    b610:	0081ffc4 	movi	r2,2047
    b614:	000b883a 	mov	r5,zero
    b618:	0025883a 	mov	r18,zero
    b61c:	1004953a 	slli	r2,r2,20
    b620:	18c03fcc 	andi	r3,r3,255
    b624:	04400434 	movhi	r17,16
    b628:	8c7fffc4 	addi	r17,r17,-1
    b62c:	180697fa 	slli	r3,r3,31
    b630:	2c4a703a 	and	r5,r5,r17
    b634:	288ab03a 	or	r5,r5,r2
    b638:	28c6b03a 	or	r3,r5,r3
    b63c:	9005883a 	mov	r2,r18
    b640:	dfc00d17 	ldw	ra,52(sp)
    b644:	df000c17 	ldw	fp,48(sp)
    b648:	ddc00b17 	ldw	r23,44(sp)
    b64c:	dd800a17 	ldw	r22,40(sp)
    b650:	dd400917 	ldw	r21,36(sp)
    b654:	dd000817 	ldw	r20,32(sp)
    b658:	dcc00717 	ldw	r19,28(sp)
    b65c:	dc800617 	ldw	r18,24(sp)
    b660:	dc400517 	ldw	r17,20(sp)
    b664:	dc000417 	ldw	r16,16(sp)
    b668:	dec00e04 	addi	sp,sp,56
    b66c:	f800283a 	ret
    b670:	2404b03a 	or	r2,r4,r16
    b674:	2027883a 	mov	r19,r4
    b678:	10003926 	beq	r2,zero,b760 <__divdf3+0x2c0>
    b67c:	80012e26 	beq	r16,zero,bb38 <__divdf3+0x698>
    b680:	8009883a 	mov	r4,r16
    b684:	d9800315 	stw	r6,12(sp)
    b688:	d9c00215 	stw	r7,8(sp)
    b68c:	00009ac0 	call	9ac <__clzsi2>
    b690:	d9800317 	ldw	r6,12(sp)
    b694:	d9c00217 	ldw	r7,8(sp)
    b698:	113ffd44 	addi	r4,r2,-11
    b69c:	00c00704 	movi	r3,28
    b6a0:	19012116 	blt	r3,r4,bb28 <__divdf3+0x688>
    b6a4:	00c00744 	movi	r3,29
    b6a8:	147ffe04 	addi	r17,r2,-8
    b6ac:	1907c83a 	sub	r3,r3,r4
    b6b0:	8460983a 	sll	r16,r16,r17
    b6b4:	98c6d83a 	srl	r3,r19,r3
    b6b8:	9c64983a 	sll	r18,r19,r17
    b6bc:	1c20b03a 	or	r16,r3,r16
    b6c0:	1080fcc4 	addi	r2,r2,1011
    b6c4:	00abc83a 	sub	r21,zero,r2
    b6c8:	0027883a 	mov	r19,zero
    b6cc:	0013883a 	mov	r9,zero
    b6d0:	003f9106 	br	b518 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b518>
    b6d4:	3446b03a 	or	r3,r6,r17
    b6d8:	18001f1e 	bne	r3,zero,b758 <__divdf3+0x2b8>
    b6dc:	0023883a 	mov	r17,zero
    b6e0:	0011883a 	mov	r8,zero
    b6e4:	01c00084 	movi	r7,2
    b6e8:	003f9d06 	br	b560 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b560>
    b6ec:	3446b03a 	or	r3,r6,r17
    b6f0:	18001526 	beq	r3,zero,b748 <__divdf3+0x2a8>
    b6f4:	88011b26 	beq	r17,zero,bb64 <__divdf3+0x6c4>
    b6f8:	8809883a 	mov	r4,r17
    b6fc:	d9800315 	stw	r6,12(sp)
    b700:	da400115 	stw	r9,4(sp)
    b704:	00009ac0 	call	9ac <__clzsi2>
    b708:	d9800317 	ldw	r6,12(sp)
    b70c:	da400117 	ldw	r9,4(sp)
    b710:	113ffd44 	addi	r4,r2,-11
    b714:	00c00704 	movi	r3,28
    b718:	19010e16 	blt	r3,r4,bb54 <__divdf3+0x6b4>
    b71c:	00c00744 	movi	r3,29
    b720:	123ffe04 	addi	r8,r2,-8
    b724:	1907c83a 	sub	r3,r3,r4
    b728:	8a22983a 	sll	r17,r17,r8
    b72c:	30c6d83a 	srl	r3,r6,r3
    b730:	3210983a 	sll	r8,r6,r8
    b734:	1c62b03a 	or	r17,r3,r17
    b738:	1080fcc4 	addi	r2,r2,1011
    b73c:	0085c83a 	sub	r2,zero,r2
    b740:	000f883a 	mov	r7,zero
    b744:	003f8606 	br	b560 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b560>
    b748:	0023883a 	mov	r17,zero
    b74c:	0011883a 	mov	r8,zero
    b750:	01c00044 	movi	r7,1
    b754:	003f8206 	br	b560 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b560>
    b758:	01c000c4 	movi	r7,3
    b75c:	003f8006 	br	b560 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b560>
    b760:	04c00104 	movi	r19,4
    b764:	0021883a 	mov	r16,zero
    b768:	0025883a 	mov	r18,zero
    b76c:	02400044 	movi	r9,1
    b770:	003f6906 	br	b518 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b518>
    b774:	04c00304 	movi	r19,12
    b778:	024000c4 	movi	r9,3
    b77c:	003f6606 	br	b518 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b518>
    b780:	01400434 	movhi	r5,16
    b784:	0007883a 	mov	r3,zero
    b788:	297fffc4 	addi	r5,r5,-1
    b78c:	04bfffc4 	movi	r18,-1
    b790:	0081ffc4 	movi	r2,2047
    b794:	003fa106 	br	b61c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b61c>
    b798:	00c00044 	movi	r3,1
    b79c:	1887c83a 	sub	r3,r3,r2
    b7a0:	01000e04 	movi	r4,56
    b7a4:	20c1210e 	bge	r4,r3,bc2c <__divdf3+0x78c>
    b7a8:	98c0004c 	andi	r3,r19,1
    b7ac:	0005883a 	mov	r2,zero
    b7b0:	000b883a 	mov	r5,zero
    b7b4:	0025883a 	mov	r18,zero
    b7b8:	003f9806 	br	b61c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b61c>
    b7bc:	8c00fd36 	bltu	r17,r16,bbb4 <__divdf3+0x714>
    b7c0:	8440fb26 	beq	r16,r17,bbb0 <__divdf3+0x710>
    b7c4:	8007883a 	mov	r3,r16
    b7c8:	ad7fffc4 	addi	r21,r21,-1
    b7cc:	0021883a 	mov	r16,zero
    b7d0:	4004d63a 	srli	r2,r8,24
    b7d4:	8822923a 	slli	r17,r17,8
    b7d8:	1809883a 	mov	r4,r3
    b7dc:	402c923a 	slli	r22,r8,8
    b7e0:	88b8b03a 	or	fp,r17,r2
    b7e4:	e028d43a 	srli	r20,fp,16
    b7e8:	d8c00015 	stw	r3,0(sp)
    b7ec:	e5ffffcc 	andi	r23,fp,65535
    b7f0:	a00b883a 	mov	r5,r20
    b7f4:	000ab380 	call	ab38 <__udivsi3>
    b7f8:	d8c00017 	ldw	r3,0(sp)
    b7fc:	a00b883a 	mov	r5,r20
    b800:	d8800315 	stw	r2,12(sp)
    b804:	1809883a 	mov	r4,r3
    b808:	000ab9c0 	call	ab9c <__umodsi3>
    b80c:	d9800317 	ldw	r6,12(sp)
    b810:	1006943a 	slli	r3,r2,16
    b814:	9004d43a 	srli	r2,r18,16
    b818:	b9a3383a 	mul	r17,r23,r6
    b81c:	10c4b03a 	or	r2,r2,r3
    b820:	1440062e 	bgeu	r2,r17,b83c <__divdf3+0x39c>
    b824:	1705883a 	add	r2,r2,fp
    b828:	30ffffc4 	addi	r3,r6,-1
    b82c:	1700ee36 	bltu	r2,fp,bbe8 <__divdf3+0x748>
    b830:	1440ed2e 	bgeu	r2,r17,bbe8 <__divdf3+0x748>
    b834:	31bfff84 	addi	r6,r6,-2
    b838:	1705883a 	add	r2,r2,fp
    b83c:	1463c83a 	sub	r17,r2,r17
    b840:	a00b883a 	mov	r5,r20
    b844:	8809883a 	mov	r4,r17
    b848:	d9800315 	stw	r6,12(sp)
    b84c:	000ab380 	call	ab38 <__udivsi3>
    b850:	a00b883a 	mov	r5,r20
    b854:	8809883a 	mov	r4,r17
    b858:	d8800215 	stw	r2,8(sp)
    b85c:	000ab9c0 	call	ab9c <__umodsi3>
    b860:	d9c00217 	ldw	r7,8(sp)
    b864:	1004943a 	slli	r2,r2,16
    b868:	94bfffcc 	andi	r18,r18,65535
    b86c:	b9d1383a 	mul	r8,r23,r7
    b870:	90a4b03a 	or	r18,r18,r2
    b874:	d9800317 	ldw	r6,12(sp)
    b878:	9200062e 	bgeu	r18,r8,b894 <__divdf3+0x3f4>
    b87c:	9725883a 	add	r18,r18,fp
    b880:	38bfffc4 	addi	r2,r7,-1
    b884:	9700d636 	bltu	r18,fp,bbe0 <__divdf3+0x740>
    b888:	9200d52e 	bgeu	r18,r8,bbe0 <__divdf3+0x740>
    b88c:	39ffff84 	addi	r7,r7,-2
    b890:	9725883a 	add	r18,r18,fp
    b894:	3004943a 	slli	r2,r6,16
    b898:	b012d43a 	srli	r9,r22,16
    b89c:	b1bfffcc 	andi	r6,r22,65535
    b8a0:	11e2b03a 	or	r17,r2,r7
    b8a4:	8806d43a 	srli	r3,r17,16
    b8a8:	893fffcc 	andi	r4,r17,65535
    b8ac:	218b383a 	mul	r5,r4,r6
    b8b0:	30c5383a 	mul	r2,r6,r3
    b8b4:	2249383a 	mul	r4,r4,r9
    b8b8:	280ed43a 	srli	r7,r5,16
    b8bc:	9225c83a 	sub	r18,r18,r8
    b8c0:	2089883a 	add	r4,r4,r2
    b8c4:	3909883a 	add	r4,r7,r4
    b8c8:	1a47383a 	mul	r3,r3,r9
    b8cc:	2080022e 	bgeu	r4,r2,b8d8 <__divdf3+0x438>
    b8d0:	00800074 	movhi	r2,1
    b8d4:	1887883a 	add	r3,r3,r2
    b8d8:	2004d43a 	srli	r2,r4,16
    b8dc:	2008943a 	slli	r4,r4,16
    b8e0:	297fffcc 	andi	r5,r5,65535
    b8e4:	10c7883a 	add	r3,r2,r3
    b8e8:	2149883a 	add	r4,r4,r5
    b8ec:	90c0a536 	bltu	r18,r3,bb84 <__divdf3+0x6e4>
    b8f0:	90c0bf26 	beq	r18,r3,bbf0 <__divdf3+0x750>
    b8f4:	90c7c83a 	sub	r3,r18,r3
    b8f8:	810fc83a 	sub	r7,r16,r4
    b8fc:	81e5803a 	cmpltu	r18,r16,r7
    b900:	1ca5c83a 	sub	r18,r3,r18
    b904:	e480c126 	beq	fp,r18,bc0c <__divdf3+0x76c>
    b908:	a00b883a 	mov	r5,r20
    b90c:	9009883a 	mov	r4,r18
    b910:	d9800315 	stw	r6,12(sp)
    b914:	d9c00215 	stw	r7,8(sp)
    b918:	da400115 	stw	r9,4(sp)
    b91c:	000ab380 	call	ab38 <__udivsi3>
    b920:	a00b883a 	mov	r5,r20
    b924:	9009883a 	mov	r4,r18
    b928:	d8800015 	stw	r2,0(sp)
    b92c:	000ab9c0 	call	ab9c <__umodsi3>
    b930:	d9c00217 	ldw	r7,8(sp)
    b934:	da000017 	ldw	r8,0(sp)
    b938:	1006943a 	slli	r3,r2,16
    b93c:	3804d43a 	srli	r2,r7,16
    b940:	ba21383a 	mul	r16,r23,r8
    b944:	d9800317 	ldw	r6,12(sp)
    b948:	10c4b03a 	or	r2,r2,r3
    b94c:	da400117 	ldw	r9,4(sp)
    b950:	1400062e 	bgeu	r2,r16,b96c <__divdf3+0x4cc>
    b954:	1705883a 	add	r2,r2,fp
    b958:	40ffffc4 	addi	r3,r8,-1
    b95c:	1700ad36 	bltu	r2,fp,bc14 <__divdf3+0x774>
    b960:	1400ac2e 	bgeu	r2,r16,bc14 <__divdf3+0x774>
    b964:	423fff84 	addi	r8,r8,-2
    b968:	1705883a 	add	r2,r2,fp
    b96c:	1421c83a 	sub	r16,r2,r16
    b970:	a00b883a 	mov	r5,r20
    b974:	8009883a 	mov	r4,r16
    b978:	d9800315 	stw	r6,12(sp)
    b97c:	d9c00215 	stw	r7,8(sp)
    b980:	da000015 	stw	r8,0(sp)
    b984:	da400115 	stw	r9,4(sp)
    b988:	000ab380 	call	ab38 <__udivsi3>
    b98c:	8009883a 	mov	r4,r16
    b990:	a00b883a 	mov	r5,r20
    b994:	1025883a 	mov	r18,r2
    b998:	000ab9c0 	call	ab9c <__umodsi3>
    b99c:	d9c00217 	ldw	r7,8(sp)
    b9a0:	1004943a 	slli	r2,r2,16
    b9a4:	bcaf383a 	mul	r23,r23,r18
    b9a8:	393fffcc 	andi	r4,r7,65535
    b9ac:	2088b03a 	or	r4,r4,r2
    b9b0:	d9800317 	ldw	r6,12(sp)
    b9b4:	da000017 	ldw	r8,0(sp)
    b9b8:	da400117 	ldw	r9,4(sp)
    b9bc:	25c0062e 	bgeu	r4,r23,b9d8 <__divdf3+0x538>
    b9c0:	2709883a 	add	r4,r4,fp
    b9c4:	90bfffc4 	addi	r2,r18,-1
    b9c8:	27009436 	bltu	r4,fp,bc1c <__divdf3+0x77c>
    b9cc:	25c0932e 	bgeu	r4,r23,bc1c <__divdf3+0x77c>
    b9d0:	94bfff84 	addi	r18,r18,-2
    b9d4:	2709883a 	add	r4,r4,fp
    b9d8:	4004943a 	slli	r2,r8,16
    b9dc:	25efc83a 	sub	r23,r4,r23
    b9e0:	1490b03a 	or	r8,r2,r18
    b9e4:	4008d43a 	srli	r4,r8,16
    b9e8:	40ffffcc 	andi	r3,r8,65535
    b9ec:	30c5383a 	mul	r2,r6,r3
    b9f0:	1a47383a 	mul	r3,r3,r9
    b9f4:	310d383a 	mul	r6,r6,r4
    b9f8:	100ad43a 	srli	r5,r2,16
    b9fc:	4913383a 	mul	r9,r9,r4
    ba00:	1987883a 	add	r3,r3,r6
    ba04:	28c7883a 	add	r3,r5,r3
    ba08:	1980022e 	bgeu	r3,r6,ba14 <__divdf3+0x574>
    ba0c:	01000074 	movhi	r4,1
    ba10:	4913883a 	add	r9,r9,r4
    ba14:	1808d43a 	srli	r4,r3,16
    ba18:	1806943a 	slli	r3,r3,16
    ba1c:	10bfffcc 	andi	r2,r2,65535
    ba20:	2253883a 	add	r9,r4,r9
    ba24:	1887883a 	add	r3,r3,r2
    ba28:	ba403836 	bltu	r23,r9,bb0c <__divdf3+0x66c>
    ba2c:	ba403626 	beq	r23,r9,bb08 <__divdf3+0x668>
    ba30:	42000054 	ori	r8,r8,1
    ba34:	a880ffc4 	addi	r2,r21,1023
    ba38:	00bf570e 	bge	zero,r2,b798 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b798>
    ba3c:	40c001cc 	andi	r3,r8,7
    ba40:	18000726 	beq	r3,zero,ba60 <__divdf3+0x5c0>
    ba44:	40c003cc 	andi	r3,r8,15
    ba48:	01000104 	movi	r4,4
    ba4c:	19000426 	beq	r3,r4,ba60 <__divdf3+0x5c0>
    ba50:	4107883a 	add	r3,r8,r4
    ba54:	1a11803a 	cmpltu	r8,r3,r8
    ba58:	8a23883a 	add	r17,r17,r8
    ba5c:	1811883a 	mov	r8,r3
    ba60:	88c0402c 	andhi	r3,r17,256
    ba64:	18000426 	beq	r3,zero,ba78 <__divdf3+0x5d8>
    ba68:	00ffc034 	movhi	r3,65280
    ba6c:	18ffffc4 	addi	r3,r3,-1
    ba70:	a8810004 	addi	r2,r21,1024
    ba74:	88e2703a 	and	r17,r17,r3
    ba78:	00c1ff84 	movi	r3,2046
    ba7c:	18bee316 	blt	r3,r2,b60c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b60c>
    ba80:	8824977a 	slli	r18,r17,29
    ba84:	4010d0fa 	srli	r8,r8,3
    ba88:	8822927a 	slli	r17,r17,9
    ba8c:	1081ffcc 	andi	r2,r2,2047
    ba90:	9224b03a 	or	r18,r18,r8
    ba94:	880ad33a 	srli	r5,r17,12
    ba98:	98c0004c 	andi	r3,r19,1
    ba9c:	003edf06 	br	b61c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b61c>
    baa0:	8080022c 	andhi	r2,r16,8
    baa4:	10001226 	beq	r2,zero,baf0 <__divdf3+0x650>
    baa8:	8880022c 	andhi	r2,r17,8
    baac:	1000101e 	bne	r2,zero,baf0 <__divdf3+0x650>
    bab0:	00800434 	movhi	r2,16
    bab4:	89400234 	orhi	r5,r17,8
    bab8:	10bfffc4 	addi	r2,r2,-1
    babc:	b007883a 	mov	r3,r22
    bac0:	288a703a 	and	r5,r5,r2
    bac4:	4025883a 	mov	r18,r8
    bac8:	003f3106 	br	b790 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b790>
    bacc:	008000c4 	movi	r2,3
    bad0:	3880a626 	beq	r7,r2,bd6c <__divdf3+0x8cc>
    bad4:	00800044 	movi	r2,1
    bad8:	3880521e 	bne	r7,r2,bc24 <__divdf3+0x784>
    badc:	b807883a 	mov	r3,r23
    bae0:	0005883a 	mov	r2,zero
    bae4:	000b883a 	mov	r5,zero
    bae8:	0025883a 	mov	r18,zero
    baec:	003ecb06 	br	b61c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b61c>
    baf0:	00800434 	movhi	r2,16
    baf4:	81400234 	orhi	r5,r16,8
    baf8:	10bfffc4 	addi	r2,r2,-1
    bafc:	a007883a 	mov	r3,r20
    bb00:	288a703a 	and	r5,r5,r2
    bb04:	003f2206 	br	b790 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b790>
    bb08:	183fca26 	beq	r3,zero,ba34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ba34>
    bb0c:	e5ef883a 	add	r23,fp,r23
    bb10:	40bfffc4 	addi	r2,r8,-1
    bb14:	bf00392e 	bgeu	r23,fp,bbfc <__divdf3+0x75c>
    bb18:	1011883a 	mov	r8,r2
    bb1c:	ba7fc41e 	bne	r23,r9,ba30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ba30>
    bb20:	b0ffc31e 	bne	r22,r3,ba30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ba30>
    bb24:	003fc306 	br	ba34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ba34>
    bb28:	143ff604 	addi	r16,r2,-40
    bb2c:	9c20983a 	sll	r16,r19,r16
    bb30:	0025883a 	mov	r18,zero
    bb34:	003ee206 	br	b6c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b6c0>
    bb38:	d9800315 	stw	r6,12(sp)
    bb3c:	d9c00215 	stw	r7,8(sp)
    bb40:	00009ac0 	call	9ac <__clzsi2>
    bb44:	10800804 	addi	r2,r2,32
    bb48:	d9c00217 	ldw	r7,8(sp)
    bb4c:	d9800317 	ldw	r6,12(sp)
    bb50:	003ed106 	br	b698 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b698>
    bb54:	147ff604 	addi	r17,r2,-40
    bb58:	3462983a 	sll	r17,r6,r17
    bb5c:	0011883a 	mov	r8,zero
    bb60:	003ef506 	br	b738 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b738>
    bb64:	3009883a 	mov	r4,r6
    bb68:	d9800315 	stw	r6,12(sp)
    bb6c:	da400115 	stw	r9,4(sp)
    bb70:	00009ac0 	call	9ac <__clzsi2>
    bb74:	10800804 	addi	r2,r2,32
    bb78:	da400117 	ldw	r9,4(sp)
    bb7c:	d9800317 	ldw	r6,12(sp)
    bb80:	003ee306 	br	b710 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b710>
    bb84:	85a1883a 	add	r16,r16,r22
    bb88:	8585803a 	cmpltu	r2,r16,r22
    bb8c:	1705883a 	add	r2,r2,fp
    bb90:	14a5883a 	add	r18,r2,r18
    bb94:	88bfffc4 	addi	r2,r17,-1
    bb98:	e4800c2e 	bgeu	fp,r18,bbcc <__divdf3+0x72c>
    bb9c:	90c03e36 	bltu	r18,r3,bc98 <__divdf3+0x7f8>
    bba0:	1c806926 	beq	r3,r18,bd48 <__divdf3+0x8a8>
    bba4:	90c7c83a 	sub	r3,r18,r3
    bba8:	1023883a 	mov	r17,r2
    bbac:	003f5206 	br	b8f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b8f8>
    bbb0:	923f0436 	bltu	r18,r8,b7c4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b7c4>
    bbb4:	800897fa 	slli	r4,r16,31
    bbb8:	9004d07a 	srli	r2,r18,1
    bbbc:	8006d07a 	srli	r3,r16,1
    bbc0:	902097fa 	slli	r16,r18,31
    bbc4:	20a4b03a 	or	r18,r4,r2
    bbc8:	003f0106 	br	b7d0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b7d0>
    bbcc:	e4bff51e 	bne	fp,r18,bba4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bba4>
    bbd0:	85bff22e 	bgeu	r16,r22,bb9c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bb9c>
    bbd4:	e0c7c83a 	sub	r3,fp,r3
    bbd8:	1023883a 	mov	r17,r2
    bbdc:	003f4606 	br	b8f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b8f8>
    bbe0:	100f883a 	mov	r7,r2
    bbe4:	003f2b06 	br	b894 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b894>
    bbe8:	180d883a 	mov	r6,r3
    bbec:	003f1306 	br	b83c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b83c>
    bbf0:	813fe436 	bltu	r16,r4,bb84 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bb84>
    bbf4:	0007883a 	mov	r3,zero
    bbf8:	003f3f06 	br	b8f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b8f8>
    bbfc:	ba402c36 	bltu	r23,r9,bcb0 <__divdf3+0x810>
    bc00:	4dc05426 	beq	r9,r23,bd54 <__divdf3+0x8b4>
    bc04:	1011883a 	mov	r8,r2
    bc08:	003f8906 	br	ba30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ba30>
    bc0c:	023fffc4 	movi	r8,-1
    bc10:	003f8806 	br	ba34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ba34>
    bc14:	1811883a 	mov	r8,r3
    bc18:	003f5406 	br	b96c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b96c>
    bc1c:	1025883a 	mov	r18,r2
    bc20:	003f6d06 	br	b9d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b9d8>
    bc24:	b827883a 	mov	r19,r23
    bc28:	003f8206 	br	ba34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ba34>
    bc2c:	010007c4 	movi	r4,31
    bc30:	20c02616 	blt	r4,r3,bccc <__divdf3+0x82c>
    bc34:	00800804 	movi	r2,32
    bc38:	10c5c83a 	sub	r2,r2,r3
    bc3c:	888a983a 	sll	r5,r17,r2
    bc40:	40c8d83a 	srl	r4,r8,r3
    bc44:	4084983a 	sll	r2,r8,r2
    bc48:	88e2d83a 	srl	r17,r17,r3
    bc4c:	2906b03a 	or	r3,r5,r4
    bc50:	1004c03a 	cmpne	r2,r2,zero
    bc54:	1886b03a 	or	r3,r3,r2
    bc58:	188001cc 	andi	r2,r3,7
    bc5c:	10000726 	beq	r2,zero,bc7c <__divdf3+0x7dc>
    bc60:	188003cc 	andi	r2,r3,15
    bc64:	01000104 	movi	r4,4
    bc68:	11000426 	beq	r2,r4,bc7c <__divdf3+0x7dc>
    bc6c:	1805883a 	mov	r2,r3
    bc70:	10c00104 	addi	r3,r2,4
    bc74:	1885803a 	cmpltu	r2,r3,r2
    bc78:	88a3883a 	add	r17,r17,r2
    bc7c:	8880202c 	andhi	r2,r17,128
    bc80:	10002726 	beq	r2,zero,bd20 <__divdf3+0x880>
    bc84:	98c0004c 	andi	r3,r19,1
    bc88:	00800044 	movi	r2,1
    bc8c:	000b883a 	mov	r5,zero
    bc90:	0025883a 	mov	r18,zero
    bc94:	003e6106 	br	b61c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b61c>
    bc98:	85a1883a 	add	r16,r16,r22
    bc9c:	8585803a 	cmpltu	r2,r16,r22
    bca0:	1705883a 	add	r2,r2,fp
    bca4:	14a5883a 	add	r18,r2,r18
    bca8:	8c7fff84 	addi	r17,r17,-2
    bcac:	003f1106 	br	b8f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b8f4>
    bcb0:	b589883a 	add	r4,r22,r22
    bcb4:	25ad803a 	cmpltu	r22,r4,r22
    bcb8:	b739883a 	add	fp,r22,fp
    bcbc:	40bfff84 	addi	r2,r8,-2
    bcc0:	bf2f883a 	add	r23,r23,fp
    bcc4:	202d883a 	mov	r22,r4
    bcc8:	003f9306 	br	bb18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bb18>
    bccc:	013ff844 	movi	r4,-31
    bcd0:	2085c83a 	sub	r2,r4,r2
    bcd4:	8888d83a 	srl	r4,r17,r2
    bcd8:	00800804 	movi	r2,32
    bcdc:	18802126 	beq	r3,r2,bd64 <__divdf3+0x8c4>
    bce0:	00801004 	movi	r2,64
    bce4:	10c5c83a 	sub	r2,r2,r3
    bce8:	8884983a 	sll	r2,r17,r2
    bcec:	1204b03a 	or	r2,r2,r8
    bcf0:	1004c03a 	cmpne	r2,r2,zero
    bcf4:	2084b03a 	or	r2,r4,r2
    bcf8:	144001cc 	andi	r17,r2,7
    bcfc:	88000d1e 	bne	r17,zero,bd34 <__divdf3+0x894>
    bd00:	000b883a 	mov	r5,zero
    bd04:	1024d0fa 	srli	r18,r2,3
    bd08:	98c0004c 	andi	r3,r19,1
    bd0c:	0005883a 	mov	r2,zero
    bd10:	9464b03a 	or	r18,r18,r17
    bd14:	003e4106 	br	b61c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b61c>
    bd18:	1007883a 	mov	r3,r2
    bd1c:	0023883a 	mov	r17,zero
    bd20:	880a927a 	slli	r5,r17,9
    bd24:	1805883a 	mov	r2,r3
    bd28:	8822977a 	slli	r17,r17,29
    bd2c:	280ad33a 	srli	r5,r5,12
    bd30:	003ff406 	br	bd04 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bd04>
    bd34:	10c003cc 	andi	r3,r2,15
    bd38:	01000104 	movi	r4,4
    bd3c:	193ff626 	beq	r3,r4,bd18 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bd18>
    bd40:	0023883a 	mov	r17,zero
    bd44:	003fca06 	br	bc70 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bc70>
    bd48:	813fd336 	bltu	r16,r4,bc98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bc98>
    bd4c:	1023883a 	mov	r17,r2
    bd50:	003fa806 	br	bbf4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bbf4>
    bd54:	b0ffd636 	bltu	r22,r3,bcb0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bcb0>
    bd58:	1011883a 	mov	r8,r2
    bd5c:	b0ff341e 	bne	r22,r3,ba30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ba30>
    bd60:	003f3406 	br	ba34 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ba34>
    bd64:	0005883a 	mov	r2,zero
    bd68:	003fe006 	br	bcec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bcec>
    bd6c:	00800434 	movhi	r2,16
    bd70:	89400234 	orhi	r5,r17,8
    bd74:	10bfffc4 	addi	r2,r2,-1
    bd78:	b807883a 	mov	r3,r23
    bd7c:	288a703a 	and	r5,r5,r2
    bd80:	4025883a 	mov	r18,r8
    bd84:	003e8206 	br	b790 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700b790>

0000bd88 <__eqdf2>:
    bd88:	2804d53a 	srli	r2,r5,20
    bd8c:	3806d53a 	srli	r3,r7,20
    bd90:	02000434 	movhi	r8,16
    bd94:	423fffc4 	addi	r8,r8,-1
    bd98:	1081ffcc 	andi	r2,r2,2047
    bd9c:	0281ffc4 	movi	r10,2047
    bda0:	2a12703a 	and	r9,r5,r8
    bda4:	18c1ffcc 	andi	r3,r3,2047
    bda8:	3a10703a 	and	r8,r7,r8
    bdac:	280ad7fa 	srli	r5,r5,31
    bdb0:	380ed7fa 	srli	r7,r7,31
    bdb4:	12801026 	beq	r2,r10,bdf8 <__eqdf2+0x70>
    bdb8:	0281ffc4 	movi	r10,2047
    bdbc:	1a800a26 	beq	r3,r10,bde8 <__eqdf2+0x60>
    bdc0:	10c00226 	beq	r2,r3,bdcc <__eqdf2+0x44>
    bdc4:	00800044 	movi	r2,1
    bdc8:	f800283a 	ret
    bdcc:	4a3ffd1e 	bne	r9,r8,bdc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bdc4>
    bdd0:	21bffc1e 	bne	r4,r6,bdc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bdc4>
    bdd4:	29c00c26 	beq	r5,r7,be08 <__eqdf2+0x80>
    bdd8:	103ffa1e 	bne	r2,zero,bdc4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bdc4>
    bddc:	2244b03a 	or	r2,r4,r9
    bde0:	1004c03a 	cmpne	r2,r2,zero
    bde4:	f800283a 	ret
    bde8:	3214b03a 	or	r10,r6,r8
    bdec:	503ff426 	beq	r10,zero,bdc0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bdc0>
    bdf0:	00800044 	movi	r2,1
    bdf4:	f800283a 	ret
    bdf8:	2254b03a 	or	r10,r4,r9
    bdfc:	503fee26 	beq	r10,zero,bdb8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bdb8>
    be00:	00800044 	movi	r2,1
    be04:	f800283a 	ret
    be08:	0005883a 	mov	r2,zero
    be0c:	f800283a 	ret

0000be10 <__gedf2>:
    be10:	2804d53a 	srli	r2,r5,20
    be14:	3806d53a 	srli	r3,r7,20
    be18:	02000434 	movhi	r8,16
    be1c:	423fffc4 	addi	r8,r8,-1
    be20:	1081ffcc 	andi	r2,r2,2047
    be24:	0241ffc4 	movi	r9,2047
    be28:	2a14703a 	and	r10,r5,r8
    be2c:	18c1ffcc 	andi	r3,r3,2047
    be30:	3a10703a 	and	r8,r7,r8
    be34:	280ad7fa 	srli	r5,r5,31
    be38:	380ed7fa 	srli	r7,r7,31
    be3c:	12401d26 	beq	r2,r9,beb4 <__gedf2+0xa4>
    be40:	0241ffc4 	movi	r9,2047
    be44:	1a401226 	beq	r3,r9,be90 <__gedf2+0x80>
    be48:	1000081e 	bne	r2,zero,be6c <__gedf2+0x5c>
    be4c:	2296b03a 	or	r11,r4,r10
    be50:	5813003a 	cmpeq	r9,r11,zero
    be54:	1800091e 	bne	r3,zero,be7c <__gedf2+0x6c>
    be58:	3218b03a 	or	r12,r6,r8
    be5c:	6000071e 	bne	r12,zero,be7c <__gedf2+0x6c>
    be60:	0005883a 	mov	r2,zero
    be64:	5800101e 	bne	r11,zero,bea8 <__gedf2+0x98>
    be68:	f800283a 	ret
    be6c:	18000c1e 	bne	r3,zero,bea0 <__gedf2+0x90>
    be70:	3212b03a 	or	r9,r6,r8
    be74:	48000c26 	beq	r9,zero,bea8 <__gedf2+0x98>
    be78:	0013883a 	mov	r9,zero
    be7c:	39c03fcc 	andi	r7,r7,255
    be80:	48000826 	beq	r9,zero,bea4 <__gedf2+0x94>
    be84:	38000926 	beq	r7,zero,beac <__gedf2+0x9c>
    be88:	00800044 	movi	r2,1
    be8c:	f800283a 	ret
    be90:	3212b03a 	or	r9,r6,r8
    be94:	483fec26 	beq	r9,zero,be48 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700be48>
    be98:	00bfff84 	movi	r2,-2
    be9c:	f800283a 	ret
    bea0:	39c03fcc 	andi	r7,r7,255
    bea4:	29c00626 	beq	r5,r7,bec0 <__gedf2+0xb0>
    bea8:	283ff726 	beq	r5,zero,be88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700be88>
    beac:	00bfffc4 	movi	r2,-1
    beb0:	f800283a 	ret
    beb4:	2292b03a 	or	r9,r4,r10
    beb8:	483fe126 	beq	r9,zero,be40 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700be40>
    bebc:	003ff606 	br	be98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700be98>
    bec0:	18bff916 	blt	r3,r2,bea8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bea8>
    bec4:	10c00316 	blt	r2,r3,bed4 <__gedf2+0xc4>
    bec8:	42bff736 	bltu	r8,r10,bea8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bea8>
    becc:	52000326 	beq	r10,r8,bedc <__gedf2+0xcc>
    bed0:	5200042e 	bgeu	r10,r8,bee4 <__gedf2+0xd4>
    bed4:	283fec1e 	bne	r5,zero,be88 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700be88>
    bed8:	003ff406 	br	beac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700beac>
    bedc:	313ff236 	bltu	r6,r4,bea8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bea8>
    bee0:	21bffc36 	bltu	r4,r6,bed4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bed4>
    bee4:	0005883a 	mov	r2,zero
    bee8:	f800283a 	ret

0000beec <__ledf2>:
    beec:	2804d53a 	srli	r2,r5,20
    bef0:	3810d53a 	srli	r8,r7,20
    bef4:	00c00434 	movhi	r3,16
    bef8:	18ffffc4 	addi	r3,r3,-1
    befc:	1081ffcc 	andi	r2,r2,2047
    bf00:	0241ffc4 	movi	r9,2047
    bf04:	28d4703a 	and	r10,r5,r3
    bf08:	4201ffcc 	andi	r8,r8,2047
    bf0c:	38c6703a 	and	r3,r7,r3
    bf10:	280ad7fa 	srli	r5,r5,31
    bf14:	380ed7fa 	srli	r7,r7,31
    bf18:	12401f26 	beq	r2,r9,bf98 <__ledf2+0xac>
    bf1c:	0241ffc4 	movi	r9,2047
    bf20:	42401426 	beq	r8,r9,bf74 <__ledf2+0x88>
    bf24:	1000091e 	bne	r2,zero,bf4c <__ledf2+0x60>
    bf28:	2296b03a 	or	r11,r4,r10
    bf2c:	5813003a 	cmpeq	r9,r11,zero
    bf30:	29403fcc 	andi	r5,r5,255
    bf34:	40000a1e 	bne	r8,zero,bf60 <__ledf2+0x74>
    bf38:	30d8b03a 	or	r12,r6,r3
    bf3c:	6000081e 	bne	r12,zero,bf60 <__ledf2+0x74>
    bf40:	0005883a 	mov	r2,zero
    bf44:	5800111e 	bne	r11,zero,bf8c <__ledf2+0xa0>
    bf48:	f800283a 	ret
    bf4c:	29403fcc 	andi	r5,r5,255
    bf50:	40000c1e 	bne	r8,zero,bf84 <__ledf2+0x98>
    bf54:	30d2b03a 	or	r9,r6,r3
    bf58:	48000c26 	beq	r9,zero,bf8c <__ledf2+0xa0>
    bf5c:	0013883a 	mov	r9,zero
    bf60:	39c03fcc 	andi	r7,r7,255
    bf64:	48000826 	beq	r9,zero,bf88 <__ledf2+0x9c>
    bf68:	38001126 	beq	r7,zero,bfb0 <__ledf2+0xc4>
    bf6c:	00800044 	movi	r2,1
    bf70:	f800283a 	ret
    bf74:	30d2b03a 	or	r9,r6,r3
    bf78:	483fea26 	beq	r9,zero,bf24 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf24>
    bf7c:	00800084 	movi	r2,2
    bf80:	f800283a 	ret
    bf84:	39c03fcc 	andi	r7,r7,255
    bf88:	39400726 	beq	r7,r5,bfa8 <__ledf2+0xbc>
    bf8c:	2800081e 	bne	r5,zero,bfb0 <__ledf2+0xc4>
    bf90:	00800044 	movi	r2,1
    bf94:	f800283a 	ret
    bf98:	2292b03a 	or	r9,r4,r10
    bf9c:	483fdf26 	beq	r9,zero,bf1c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf1c>
    bfa0:	00800084 	movi	r2,2
    bfa4:	f800283a 	ret
    bfa8:	4080030e 	bge	r8,r2,bfb8 <__ledf2+0xcc>
    bfac:	383fef26 	beq	r7,zero,bf6c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf6c>
    bfb0:	00bfffc4 	movi	r2,-1
    bfb4:	f800283a 	ret
    bfb8:	123feb16 	blt	r2,r8,bf68 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf68>
    bfbc:	1abff336 	bltu	r3,r10,bf8c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf8c>
    bfc0:	50c00326 	beq	r10,r3,bfd0 <__ledf2+0xe4>
    bfc4:	50c0042e 	bgeu	r10,r3,bfd8 <__ledf2+0xec>
    bfc8:	283fe81e 	bne	r5,zero,bf6c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf6c>
    bfcc:	003ff806 	br	bfb0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bfb0>
    bfd0:	313fee36 	bltu	r6,r4,bf8c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bf8c>
    bfd4:	21bffc36 	bltu	r4,r6,bfc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700bfc8>
    bfd8:	0005883a 	mov	r2,zero
    bfdc:	f800283a 	ret

0000bfe0 <__muldf3>:
    bfe0:	defff304 	addi	sp,sp,-52
    bfe4:	2804d53a 	srli	r2,r5,20
    bfe8:	dd800915 	stw	r22,36(sp)
    bfec:	282cd7fa 	srli	r22,r5,31
    bff0:	dc000315 	stw	r16,12(sp)
    bff4:	04000434 	movhi	r16,16
    bff8:	dd400815 	stw	r21,32(sp)
    bffc:	dc800515 	stw	r18,20(sp)
    c000:	843fffc4 	addi	r16,r16,-1
    c004:	dfc00c15 	stw	ra,48(sp)
    c008:	df000b15 	stw	fp,44(sp)
    c00c:	ddc00a15 	stw	r23,40(sp)
    c010:	dd000715 	stw	r20,28(sp)
    c014:	dcc00615 	stw	r19,24(sp)
    c018:	dc400415 	stw	r17,16(sp)
    c01c:	1481ffcc 	andi	r18,r2,2047
    c020:	2c20703a 	and	r16,r5,r16
    c024:	b02b883a 	mov	r21,r22
    c028:	b2403fcc 	andi	r9,r22,255
    c02c:	90006026 	beq	r18,zero,c1b0 <__muldf3+0x1d0>
    c030:	0081ffc4 	movi	r2,2047
    c034:	2029883a 	mov	r20,r4
    c038:	90803626 	beq	r18,r2,c114 <__muldf3+0x134>
    c03c:	80800434 	orhi	r2,r16,16
    c040:	100490fa 	slli	r2,r2,3
    c044:	2020d77a 	srli	r16,r4,29
    c048:	202890fa 	slli	r20,r4,3
    c04c:	94bf0044 	addi	r18,r18,-1023
    c050:	80a0b03a 	or	r16,r16,r2
    c054:	0027883a 	mov	r19,zero
    c058:	0039883a 	mov	fp,zero
    c05c:	3804d53a 	srli	r2,r7,20
    c060:	382ed7fa 	srli	r23,r7,31
    c064:	04400434 	movhi	r17,16
    c068:	8c7fffc4 	addi	r17,r17,-1
    c06c:	1081ffcc 	andi	r2,r2,2047
    c070:	3011883a 	mov	r8,r6
    c074:	3c62703a 	and	r17,r7,r17
    c078:	ba803fcc 	andi	r10,r23,255
    c07c:	10006d26 	beq	r2,zero,c234 <__muldf3+0x254>
    c080:	00c1ffc4 	movi	r3,2047
    c084:	10c06526 	beq	r2,r3,c21c <__muldf3+0x23c>
    c088:	88c00434 	orhi	r3,r17,16
    c08c:	180690fa 	slli	r3,r3,3
    c090:	3022d77a 	srli	r17,r6,29
    c094:	301090fa 	slli	r8,r6,3
    c098:	10bf0044 	addi	r2,r2,-1023
    c09c:	88e2b03a 	or	r17,r17,r3
    c0a0:	000b883a 	mov	r5,zero
    c0a4:	9085883a 	add	r2,r18,r2
    c0a8:	2cc8b03a 	or	r4,r5,r19
    c0ac:	00c003c4 	movi	r3,15
    c0b0:	bdacf03a 	xor	r22,r23,r22
    c0b4:	12c00044 	addi	r11,r2,1
    c0b8:	19009936 	bltu	r3,r4,c320 <__muldf3+0x340>
    c0bc:	200890ba 	slli	r4,r4,2
    c0c0:	00c00074 	movhi	r3,1
    c0c4:	18f03504 	addi	r3,r3,-16172
    c0c8:	20c9883a 	add	r4,r4,r3
    c0cc:	20c00017 	ldw	r3,0(r4)
    c0d0:	1800683a 	jmp	r3
    c0d4:	0000c320 	cmpeqi	zero,zero,780
    c0d8:	0000c134 	movhi	zero,772
    c0dc:	0000c134 	movhi	zero,772
    c0e0:	0000c130 	cmpltui	zero,zero,772
    c0e4:	0000c2fc 	xorhi	zero,zero,779
    c0e8:	0000c2fc 	xorhi	zero,zero,779
    c0ec:	0000c2e4 	muli	zero,zero,779
    c0f0:	0000c130 	cmpltui	zero,zero,772
    c0f4:	0000c2fc 	xorhi	zero,zero,779
    c0f8:	0000c2e4 	muli	zero,zero,779
    c0fc:	0000c2fc 	xorhi	zero,zero,779
    c100:	0000c130 	cmpltui	zero,zero,772
    c104:	0000c30c 	andi	zero,zero,780
    c108:	0000c30c 	andi	zero,zero,780
    c10c:	0000c30c 	andi	zero,zero,780
    c110:	0000c528 	cmpgeui	zero,zero,788
    c114:	2404b03a 	or	r2,r4,r16
    c118:	10006f1e 	bne	r2,zero,c2d8 <__muldf3+0x2f8>
    c11c:	04c00204 	movi	r19,8
    c120:	0021883a 	mov	r16,zero
    c124:	0029883a 	mov	r20,zero
    c128:	07000084 	movi	fp,2
    c12c:	003fcb06 	br	c05c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c05c>
    c130:	502d883a 	mov	r22,r10
    c134:	00800084 	movi	r2,2
    c138:	28805726 	beq	r5,r2,c298 <__muldf3+0x2b8>
    c13c:	008000c4 	movi	r2,3
    c140:	28816626 	beq	r5,r2,c6dc <__muldf3+0x6fc>
    c144:	00800044 	movi	r2,1
    c148:	2881411e 	bne	r5,r2,c650 <__muldf3+0x670>
    c14c:	b02b883a 	mov	r21,r22
    c150:	0005883a 	mov	r2,zero
    c154:	000b883a 	mov	r5,zero
    c158:	0029883a 	mov	r20,zero
    c15c:	1004953a 	slli	r2,r2,20
    c160:	a8c03fcc 	andi	r3,r21,255
    c164:	04400434 	movhi	r17,16
    c168:	8c7fffc4 	addi	r17,r17,-1
    c16c:	180697fa 	slli	r3,r3,31
    c170:	2c4a703a 	and	r5,r5,r17
    c174:	288ab03a 	or	r5,r5,r2
    c178:	28c6b03a 	or	r3,r5,r3
    c17c:	a005883a 	mov	r2,r20
    c180:	dfc00c17 	ldw	ra,48(sp)
    c184:	df000b17 	ldw	fp,44(sp)
    c188:	ddc00a17 	ldw	r23,40(sp)
    c18c:	dd800917 	ldw	r22,36(sp)
    c190:	dd400817 	ldw	r21,32(sp)
    c194:	dd000717 	ldw	r20,28(sp)
    c198:	dcc00617 	ldw	r19,24(sp)
    c19c:	dc800517 	ldw	r18,20(sp)
    c1a0:	dc400417 	ldw	r17,16(sp)
    c1a4:	dc000317 	ldw	r16,12(sp)
    c1a8:	dec00d04 	addi	sp,sp,52
    c1ac:	f800283a 	ret
    c1b0:	2404b03a 	or	r2,r4,r16
    c1b4:	2027883a 	mov	r19,r4
    c1b8:	10004226 	beq	r2,zero,c2c4 <__muldf3+0x2e4>
    c1bc:	8000fc26 	beq	r16,zero,c5b0 <__muldf3+0x5d0>
    c1c0:	8009883a 	mov	r4,r16
    c1c4:	d9800215 	stw	r6,8(sp)
    c1c8:	d9c00015 	stw	r7,0(sp)
    c1cc:	da400115 	stw	r9,4(sp)
    c1d0:	00009ac0 	call	9ac <__clzsi2>
    c1d4:	d9800217 	ldw	r6,8(sp)
    c1d8:	d9c00017 	ldw	r7,0(sp)
    c1dc:	da400117 	ldw	r9,4(sp)
    c1e0:	113ffd44 	addi	r4,r2,-11
    c1e4:	00c00704 	movi	r3,28
    c1e8:	1900ed16 	blt	r3,r4,c5a0 <__muldf3+0x5c0>
    c1ec:	00c00744 	movi	r3,29
    c1f0:	147ffe04 	addi	r17,r2,-8
    c1f4:	1907c83a 	sub	r3,r3,r4
    c1f8:	8460983a 	sll	r16,r16,r17
    c1fc:	98c6d83a 	srl	r3,r19,r3
    c200:	9c68983a 	sll	r20,r19,r17
    c204:	1c20b03a 	or	r16,r3,r16
    c208:	1080fcc4 	addi	r2,r2,1011
    c20c:	00a5c83a 	sub	r18,zero,r2
    c210:	0027883a 	mov	r19,zero
    c214:	0039883a 	mov	fp,zero
    c218:	003f9006 	br	c05c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c05c>
    c21c:	3446b03a 	or	r3,r6,r17
    c220:	1800261e 	bne	r3,zero,c2bc <__muldf3+0x2dc>
    c224:	0023883a 	mov	r17,zero
    c228:	0011883a 	mov	r8,zero
    c22c:	01400084 	movi	r5,2
    c230:	003f9c06 	br	c0a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c0a4>
    c234:	3446b03a 	or	r3,r6,r17
    c238:	18001c26 	beq	r3,zero,c2ac <__muldf3+0x2cc>
    c23c:	8800ce26 	beq	r17,zero,c578 <__muldf3+0x598>
    c240:	8809883a 	mov	r4,r17
    c244:	d9800215 	stw	r6,8(sp)
    c248:	da400115 	stw	r9,4(sp)
    c24c:	da800015 	stw	r10,0(sp)
    c250:	00009ac0 	call	9ac <__clzsi2>
    c254:	d9800217 	ldw	r6,8(sp)
    c258:	da400117 	ldw	r9,4(sp)
    c25c:	da800017 	ldw	r10,0(sp)
    c260:	113ffd44 	addi	r4,r2,-11
    c264:	00c00704 	movi	r3,28
    c268:	1900bf16 	blt	r3,r4,c568 <__muldf3+0x588>
    c26c:	00c00744 	movi	r3,29
    c270:	123ffe04 	addi	r8,r2,-8
    c274:	1907c83a 	sub	r3,r3,r4
    c278:	8a22983a 	sll	r17,r17,r8
    c27c:	30c6d83a 	srl	r3,r6,r3
    c280:	3210983a 	sll	r8,r6,r8
    c284:	1c62b03a 	or	r17,r3,r17
    c288:	1080fcc4 	addi	r2,r2,1011
    c28c:	0085c83a 	sub	r2,zero,r2
    c290:	000b883a 	mov	r5,zero
    c294:	003f8306 	br	c0a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c0a4>
    c298:	b02b883a 	mov	r21,r22
    c29c:	0081ffc4 	movi	r2,2047
    c2a0:	000b883a 	mov	r5,zero
    c2a4:	0029883a 	mov	r20,zero
    c2a8:	003fac06 	br	c15c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c15c>
    c2ac:	0023883a 	mov	r17,zero
    c2b0:	0011883a 	mov	r8,zero
    c2b4:	01400044 	movi	r5,1
    c2b8:	003f7a06 	br	c0a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c0a4>
    c2bc:	014000c4 	movi	r5,3
    c2c0:	003f7806 	br	c0a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c0a4>
    c2c4:	04c00104 	movi	r19,4
    c2c8:	0021883a 	mov	r16,zero
    c2cc:	0029883a 	mov	r20,zero
    c2d0:	07000044 	movi	fp,1
    c2d4:	003f6106 	br	c05c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c05c>
    c2d8:	04c00304 	movi	r19,12
    c2dc:	070000c4 	movi	fp,3
    c2e0:	003f5e06 	br	c05c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c05c>
    c2e4:	01400434 	movhi	r5,16
    c2e8:	002b883a 	mov	r21,zero
    c2ec:	297fffc4 	addi	r5,r5,-1
    c2f0:	053fffc4 	movi	r20,-1
    c2f4:	0081ffc4 	movi	r2,2047
    c2f8:	003f9806 	br	c15c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c15c>
    c2fc:	8023883a 	mov	r17,r16
    c300:	a011883a 	mov	r8,r20
    c304:	e00b883a 	mov	r5,fp
    c308:	003f8a06 	br	c134 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c134>
    c30c:	8023883a 	mov	r17,r16
    c310:	a011883a 	mov	r8,r20
    c314:	482d883a 	mov	r22,r9
    c318:	e00b883a 	mov	r5,fp
    c31c:	003f8506 	br	c134 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c134>
    c320:	a00ad43a 	srli	r5,r20,16
    c324:	401ad43a 	srli	r13,r8,16
    c328:	a53fffcc 	andi	r20,r20,65535
    c32c:	423fffcc 	andi	r8,r8,65535
    c330:	4519383a 	mul	r12,r8,r20
    c334:	4147383a 	mul	r3,r8,r5
    c338:	6d09383a 	mul	r4,r13,r20
    c33c:	600cd43a 	srli	r6,r12,16
    c340:	2b5d383a 	mul	r14,r5,r13
    c344:	20c9883a 	add	r4,r4,r3
    c348:	310d883a 	add	r6,r6,r4
    c34c:	30c0022e 	bgeu	r6,r3,c358 <__muldf3+0x378>
    c350:	00c00074 	movhi	r3,1
    c354:	70dd883a 	add	r14,r14,r3
    c358:	8826d43a 	srli	r19,r17,16
    c35c:	8bffffcc 	andi	r15,r17,65535
    c360:	7d23383a 	mul	r17,r15,r20
    c364:	7949383a 	mul	r4,r15,r5
    c368:	9d29383a 	mul	r20,r19,r20
    c36c:	8814d43a 	srli	r10,r17,16
    c370:	3012943a 	slli	r9,r6,16
    c374:	a129883a 	add	r20,r20,r4
    c378:	633fffcc 	andi	r12,r12,65535
    c37c:	5515883a 	add	r10,r10,r20
    c380:	3006d43a 	srli	r3,r6,16
    c384:	4b13883a 	add	r9,r9,r12
    c388:	2ccb383a 	mul	r5,r5,r19
    c38c:	5100022e 	bgeu	r10,r4,c398 <__muldf3+0x3b8>
    c390:	01000074 	movhi	r4,1
    c394:	290b883a 	add	r5,r5,r4
    c398:	802ad43a 	srli	r21,r16,16
    c39c:	843fffcc 	andi	r16,r16,65535
    c3a0:	440d383a 	mul	r6,r8,r16
    c3a4:	4565383a 	mul	r18,r8,r21
    c3a8:	8349383a 	mul	r4,r16,r13
    c3ac:	500e943a 	slli	r7,r10,16
    c3b0:	3010d43a 	srli	r8,r6,16
    c3b4:	5028d43a 	srli	r20,r10,16
    c3b8:	2489883a 	add	r4,r4,r18
    c3bc:	8abfffcc 	andi	r10,r17,65535
    c3c0:	3a95883a 	add	r10,r7,r10
    c3c4:	4119883a 	add	r12,r8,r4
    c3c8:	a169883a 	add	r20,r20,r5
    c3cc:	1a87883a 	add	r3,r3,r10
    c3d0:	6d5b383a 	mul	r13,r13,r21
    c3d4:	6480022e 	bgeu	r12,r18,c3e0 <__muldf3+0x400>
    c3d8:	01000074 	movhi	r4,1
    c3dc:	691b883a 	add	r13,r13,r4
    c3e0:	7c25383a 	mul	r18,r15,r16
    c3e4:	7d4b383a 	mul	r5,r15,r21
    c3e8:	84cf383a 	mul	r7,r16,r19
    c3ec:	901ed43a 	srli	r15,r18,16
    c3f0:	6008d43a 	srli	r4,r12,16
    c3f4:	6010943a 	slli	r8,r12,16
    c3f8:	394f883a 	add	r7,r7,r5
    c3fc:	333fffcc 	andi	r12,r6,65535
    c400:	79df883a 	add	r15,r15,r7
    c404:	235b883a 	add	r13,r4,r13
    c408:	9d63383a 	mul	r17,r19,r21
    c40c:	4309883a 	add	r4,r8,r12
    c410:	7940022e 	bgeu	r15,r5,c41c <__muldf3+0x43c>
    c414:	01400074 	movhi	r5,1
    c418:	8963883a 	add	r17,r17,r5
    c41c:	780a943a 	slli	r5,r15,16
    c420:	91bfffcc 	andi	r6,r18,65535
    c424:	70c7883a 	add	r3,r14,r3
    c428:	298d883a 	add	r6,r5,r6
    c42c:	1a8f803a 	cmpltu	r7,r3,r10
    c430:	350b883a 	add	r5,r6,r20
    c434:	20c7883a 	add	r3,r4,r3
    c438:	3955883a 	add	r10,r7,r5
    c43c:	1909803a 	cmpltu	r4,r3,r4
    c440:	6a91883a 	add	r8,r13,r10
    c444:	780cd43a 	srli	r6,r15,16
    c448:	2219883a 	add	r12,r4,r8
    c44c:	2d0b803a 	cmpltu	r5,r5,r20
    c450:	51cf803a 	cmpltu	r7,r10,r7
    c454:	29ceb03a 	or	r7,r5,r7
    c458:	4351803a 	cmpltu	r8,r8,r13
    c45c:	610b803a 	cmpltu	r5,r12,r4
    c460:	4148b03a 	or	r4,r8,r5
    c464:	398f883a 	add	r7,r7,r6
    c468:	3909883a 	add	r4,r7,r4
    c46c:	1810927a 	slli	r8,r3,9
    c470:	2449883a 	add	r4,r4,r17
    c474:	2008927a 	slli	r4,r4,9
    c478:	6022d5fa 	srli	r17,r12,23
    c47c:	1806d5fa 	srli	r3,r3,23
    c480:	4252b03a 	or	r9,r8,r9
    c484:	600a927a 	slli	r5,r12,9
    c488:	4810c03a 	cmpne	r8,r9,zero
    c48c:	2462b03a 	or	r17,r4,r17
    c490:	40c6b03a 	or	r3,r8,r3
    c494:	8900402c 	andhi	r4,r17,256
    c498:	1950b03a 	or	r8,r3,r5
    c49c:	20000726 	beq	r4,zero,c4bc <__muldf3+0x4dc>
    c4a0:	4006d07a 	srli	r3,r8,1
    c4a4:	880497fa 	slli	r2,r17,31
    c4a8:	4200004c 	andi	r8,r8,1
    c4ac:	8822d07a 	srli	r17,r17,1
    c4b0:	1a10b03a 	or	r8,r3,r8
    c4b4:	1210b03a 	or	r8,r2,r8
    c4b8:	5805883a 	mov	r2,r11
    c4bc:	1140ffc4 	addi	r5,r2,1023
    c4c0:	0140440e 	bge	zero,r5,c5d4 <__muldf3+0x5f4>
    c4c4:	40c001cc 	andi	r3,r8,7
    c4c8:	18000726 	beq	r3,zero,c4e8 <__muldf3+0x508>
    c4cc:	40c003cc 	andi	r3,r8,15
    c4d0:	01000104 	movi	r4,4
    c4d4:	19000426 	beq	r3,r4,c4e8 <__muldf3+0x508>
    c4d8:	4107883a 	add	r3,r8,r4
    c4dc:	1a11803a 	cmpltu	r8,r3,r8
    c4e0:	8a23883a 	add	r17,r17,r8
    c4e4:	1811883a 	mov	r8,r3
    c4e8:	88c0402c 	andhi	r3,r17,256
    c4ec:	18000426 	beq	r3,zero,c500 <__muldf3+0x520>
    c4f0:	11410004 	addi	r5,r2,1024
    c4f4:	00bfc034 	movhi	r2,65280
    c4f8:	10bfffc4 	addi	r2,r2,-1
    c4fc:	88a2703a 	and	r17,r17,r2
    c500:	0081ff84 	movi	r2,2046
    c504:	117f6416 	blt	r2,r5,c298 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c298>
    c508:	8828977a 	slli	r20,r17,29
    c50c:	4010d0fa 	srli	r8,r8,3
    c510:	8822927a 	slli	r17,r17,9
    c514:	2881ffcc 	andi	r2,r5,2047
    c518:	a228b03a 	or	r20,r20,r8
    c51c:	880ad33a 	srli	r5,r17,12
    c520:	b02b883a 	mov	r21,r22
    c524:	003f0d06 	br	c15c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c15c>
    c528:	8080022c 	andhi	r2,r16,8
    c52c:	10000926 	beq	r2,zero,c554 <__muldf3+0x574>
    c530:	8880022c 	andhi	r2,r17,8
    c534:	1000071e 	bne	r2,zero,c554 <__muldf3+0x574>
    c538:	00800434 	movhi	r2,16
    c53c:	89400234 	orhi	r5,r17,8
    c540:	10bfffc4 	addi	r2,r2,-1
    c544:	b82b883a 	mov	r21,r23
    c548:	288a703a 	and	r5,r5,r2
    c54c:	4029883a 	mov	r20,r8
    c550:	003f6806 	br	c2f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c2f4>
    c554:	00800434 	movhi	r2,16
    c558:	81400234 	orhi	r5,r16,8
    c55c:	10bfffc4 	addi	r2,r2,-1
    c560:	288a703a 	and	r5,r5,r2
    c564:	003f6306 	br	c2f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c2f4>
    c568:	147ff604 	addi	r17,r2,-40
    c56c:	3462983a 	sll	r17,r6,r17
    c570:	0011883a 	mov	r8,zero
    c574:	003f4406 	br	c288 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c288>
    c578:	3009883a 	mov	r4,r6
    c57c:	d9800215 	stw	r6,8(sp)
    c580:	da400115 	stw	r9,4(sp)
    c584:	da800015 	stw	r10,0(sp)
    c588:	00009ac0 	call	9ac <__clzsi2>
    c58c:	10800804 	addi	r2,r2,32
    c590:	da800017 	ldw	r10,0(sp)
    c594:	da400117 	ldw	r9,4(sp)
    c598:	d9800217 	ldw	r6,8(sp)
    c59c:	003f3006 	br	c260 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c260>
    c5a0:	143ff604 	addi	r16,r2,-40
    c5a4:	9c20983a 	sll	r16,r19,r16
    c5a8:	0029883a 	mov	r20,zero
    c5ac:	003f1606 	br	c208 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c208>
    c5b0:	d9800215 	stw	r6,8(sp)
    c5b4:	d9c00015 	stw	r7,0(sp)
    c5b8:	da400115 	stw	r9,4(sp)
    c5bc:	00009ac0 	call	9ac <__clzsi2>
    c5c0:	10800804 	addi	r2,r2,32
    c5c4:	da400117 	ldw	r9,4(sp)
    c5c8:	d9c00017 	ldw	r7,0(sp)
    c5cc:	d9800217 	ldw	r6,8(sp)
    c5d0:	003f0306 	br	c1e0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c1e0>
    c5d4:	00c00044 	movi	r3,1
    c5d8:	1947c83a 	sub	r3,r3,r5
    c5dc:	00800e04 	movi	r2,56
    c5e0:	10feda16 	blt	r2,r3,c14c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c14c>
    c5e4:	008007c4 	movi	r2,31
    c5e8:	10c01b16 	blt	r2,r3,c658 <__muldf3+0x678>
    c5ec:	00800804 	movi	r2,32
    c5f0:	10c5c83a 	sub	r2,r2,r3
    c5f4:	888a983a 	sll	r5,r17,r2
    c5f8:	40c8d83a 	srl	r4,r8,r3
    c5fc:	4084983a 	sll	r2,r8,r2
    c600:	88e2d83a 	srl	r17,r17,r3
    c604:	2906b03a 	or	r3,r5,r4
    c608:	1004c03a 	cmpne	r2,r2,zero
    c60c:	1886b03a 	or	r3,r3,r2
    c610:	188001cc 	andi	r2,r3,7
    c614:	10000726 	beq	r2,zero,c634 <__muldf3+0x654>
    c618:	188003cc 	andi	r2,r3,15
    c61c:	01000104 	movi	r4,4
    c620:	11000426 	beq	r2,r4,c634 <__muldf3+0x654>
    c624:	1805883a 	mov	r2,r3
    c628:	10c00104 	addi	r3,r2,4
    c62c:	1885803a 	cmpltu	r2,r3,r2
    c630:	88a3883a 	add	r17,r17,r2
    c634:	8880202c 	andhi	r2,r17,128
    c638:	10001c26 	beq	r2,zero,c6ac <__muldf3+0x6cc>
    c63c:	b02b883a 	mov	r21,r22
    c640:	00800044 	movi	r2,1
    c644:	000b883a 	mov	r5,zero
    c648:	0029883a 	mov	r20,zero
    c64c:	003ec306 	br	c15c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c15c>
    c650:	5805883a 	mov	r2,r11
    c654:	003f9906 	br	c4bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c4bc>
    c658:	00bff844 	movi	r2,-31
    c65c:	1145c83a 	sub	r2,r2,r5
    c660:	8888d83a 	srl	r4,r17,r2
    c664:	00800804 	movi	r2,32
    c668:	18801a26 	beq	r3,r2,c6d4 <__muldf3+0x6f4>
    c66c:	00801004 	movi	r2,64
    c670:	10c5c83a 	sub	r2,r2,r3
    c674:	8884983a 	sll	r2,r17,r2
    c678:	1204b03a 	or	r2,r2,r8
    c67c:	1004c03a 	cmpne	r2,r2,zero
    c680:	2084b03a 	or	r2,r4,r2
    c684:	144001cc 	andi	r17,r2,7
    c688:	88000d1e 	bne	r17,zero,c6c0 <__muldf3+0x6e0>
    c68c:	000b883a 	mov	r5,zero
    c690:	1028d0fa 	srli	r20,r2,3
    c694:	b02b883a 	mov	r21,r22
    c698:	0005883a 	mov	r2,zero
    c69c:	a468b03a 	or	r20,r20,r17
    c6a0:	003eae06 	br	c15c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c15c>
    c6a4:	1007883a 	mov	r3,r2
    c6a8:	0023883a 	mov	r17,zero
    c6ac:	880a927a 	slli	r5,r17,9
    c6b0:	1805883a 	mov	r2,r3
    c6b4:	8822977a 	slli	r17,r17,29
    c6b8:	280ad33a 	srli	r5,r5,12
    c6bc:	003ff406 	br	c690 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c690>
    c6c0:	10c003cc 	andi	r3,r2,15
    c6c4:	01000104 	movi	r4,4
    c6c8:	193ff626 	beq	r3,r4,c6a4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c6a4>
    c6cc:	0023883a 	mov	r17,zero
    c6d0:	003fd506 	br	c628 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c628>
    c6d4:	0005883a 	mov	r2,zero
    c6d8:	003fe706 	br	c678 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c678>
    c6dc:	00800434 	movhi	r2,16
    c6e0:	89400234 	orhi	r5,r17,8
    c6e4:	10bfffc4 	addi	r2,r2,-1
    c6e8:	b02b883a 	mov	r21,r22
    c6ec:	288a703a 	and	r5,r5,r2
    c6f0:	4029883a 	mov	r20,r8
    c6f4:	003eff06 	br	c2f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c2f4>

0000c6f8 <__subdf3>:
    c6f8:	02000434 	movhi	r8,16
    c6fc:	423fffc4 	addi	r8,r8,-1
    c700:	defffb04 	addi	sp,sp,-20
    c704:	2a14703a 	and	r10,r5,r8
    c708:	3812d53a 	srli	r9,r7,20
    c70c:	3a10703a 	and	r8,r7,r8
    c710:	2006d77a 	srli	r3,r4,29
    c714:	3004d77a 	srli	r2,r6,29
    c718:	dc000015 	stw	r16,0(sp)
    c71c:	501490fa 	slli	r10,r10,3
    c720:	2820d53a 	srli	r16,r5,20
    c724:	401090fa 	slli	r8,r8,3
    c728:	dc800215 	stw	r18,8(sp)
    c72c:	dc400115 	stw	r17,4(sp)
    c730:	dfc00415 	stw	ra,16(sp)
    c734:	202290fa 	slli	r17,r4,3
    c738:	dcc00315 	stw	r19,12(sp)
    c73c:	4a41ffcc 	andi	r9,r9,2047
    c740:	0101ffc4 	movi	r4,2047
    c744:	2824d7fa 	srli	r18,r5,31
    c748:	8401ffcc 	andi	r16,r16,2047
    c74c:	50c6b03a 	or	r3,r10,r3
    c750:	380ed7fa 	srli	r7,r7,31
    c754:	408ab03a 	or	r5,r8,r2
    c758:	300c90fa 	slli	r6,r6,3
    c75c:	49009626 	beq	r9,r4,c9b8 <__subdf3+0x2c0>
    c760:	39c0005c 	xori	r7,r7,1
    c764:	8245c83a 	sub	r2,r16,r9
    c768:	3c807426 	beq	r7,r18,c93c <__subdf3+0x244>
    c76c:	0080af0e 	bge	zero,r2,ca2c <__subdf3+0x334>
    c770:	48002a1e 	bne	r9,zero,c81c <__subdf3+0x124>
    c774:	2988b03a 	or	r4,r5,r6
    c778:	20009a1e 	bne	r4,zero,c9e4 <__subdf3+0x2ec>
    c77c:	888001cc 	andi	r2,r17,7
    c780:	10000726 	beq	r2,zero,c7a0 <__subdf3+0xa8>
    c784:	888003cc 	andi	r2,r17,15
    c788:	01000104 	movi	r4,4
    c78c:	11000426 	beq	r2,r4,c7a0 <__subdf3+0xa8>
    c790:	890b883a 	add	r5,r17,r4
    c794:	2c63803a 	cmpltu	r17,r5,r17
    c798:	1c47883a 	add	r3,r3,r17
    c79c:	2823883a 	mov	r17,r5
    c7a0:	1880202c 	andhi	r2,r3,128
    c7a4:	10005926 	beq	r2,zero,c90c <__subdf3+0x214>
    c7a8:	84000044 	addi	r16,r16,1
    c7ac:	0081ffc4 	movi	r2,2047
    c7b0:	8080be26 	beq	r16,r2,caac <__subdf3+0x3b4>
    c7b4:	017fe034 	movhi	r5,65408
    c7b8:	297fffc4 	addi	r5,r5,-1
    c7bc:	1946703a 	and	r3,r3,r5
    c7c0:	1804977a 	slli	r2,r3,29
    c7c4:	1806927a 	slli	r3,r3,9
    c7c8:	8822d0fa 	srli	r17,r17,3
    c7cc:	8401ffcc 	andi	r16,r16,2047
    c7d0:	180ad33a 	srli	r5,r3,12
    c7d4:	9100004c 	andi	r4,r18,1
    c7d8:	1444b03a 	or	r2,r2,r17
    c7dc:	80c1ffcc 	andi	r3,r16,2047
    c7e0:	1820953a 	slli	r16,r3,20
    c7e4:	20c03fcc 	andi	r3,r4,255
    c7e8:	180897fa 	slli	r4,r3,31
    c7ec:	00c00434 	movhi	r3,16
    c7f0:	18ffffc4 	addi	r3,r3,-1
    c7f4:	28c6703a 	and	r3,r5,r3
    c7f8:	1c06b03a 	or	r3,r3,r16
    c7fc:	1906b03a 	or	r3,r3,r4
    c800:	dfc00417 	ldw	ra,16(sp)
    c804:	dcc00317 	ldw	r19,12(sp)
    c808:	dc800217 	ldw	r18,8(sp)
    c80c:	dc400117 	ldw	r17,4(sp)
    c810:	dc000017 	ldw	r16,0(sp)
    c814:	dec00504 	addi	sp,sp,20
    c818:	f800283a 	ret
    c81c:	0101ffc4 	movi	r4,2047
    c820:	813fd626 	beq	r16,r4,c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    c824:	29402034 	orhi	r5,r5,128
    c828:	01000e04 	movi	r4,56
    c82c:	2080a316 	blt	r4,r2,cabc <__subdf3+0x3c4>
    c830:	010007c4 	movi	r4,31
    c834:	2080c616 	blt	r4,r2,cb50 <__subdf3+0x458>
    c838:	01000804 	movi	r4,32
    c83c:	2089c83a 	sub	r4,r4,r2
    c840:	2910983a 	sll	r8,r5,r4
    c844:	308ed83a 	srl	r7,r6,r2
    c848:	3108983a 	sll	r4,r6,r4
    c84c:	2884d83a 	srl	r2,r5,r2
    c850:	41ccb03a 	or	r6,r8,r7
    c854:	2008c03a 	cmpne	r4,r4,zero
    c858:	310cb03a 	or	r6,r6,r4
    c85c:	898dc83a 	sub	r6,r17,r6
    c860:	89a3803a 	cmpltu	r17,r17,r6
    c864:	1887c83a 	sub	r3,r3,r2
    c868:	1c47c83a 	sub	r3,r3,r17
    c86c:	3023883a 	mov	r17,r6
    c870:	1880202c 	andhi	r2,r3,128
    c874:	10002326 	beq	r2,zero,c904 <__subdf3+0x20c>
    c878:	04c02034 	movhi	r19,128
    c87c:	9cffffc4 	addi	r19,r19,-1
    c880:	1ce6703a 	and	r19,r3,r19
    c884:	98007a26 	beq	r19,zero,ca70 <__subdf3+0x378>
    c888:	9809883a 	mov	r4,r19
    c88c:	00009ac0 	call	9ac <__clzsi2>
    c890:	113ffe04 	addi	r4,r2,-8
    c894:	00c007c4 	movi	r3,31
    c898:	19007b16 	blt	r3,r4,ca88 <__subdf3+0x390>
    c89c:	00800804 	movi	r2,32
    c8a0:	1105c83a 	sub	r2,r2,r4
    c8a4:	8884d83a 	srl	r2,r17,r2
    c8a8:	9906983a 	sll	r3,r19,r4
    c8ac:	8922983a 	sll	r17,r17,r4
    c8b0:	10c4b03a 	or	r2,r2,r3
    c8b4:	24007816 	blt	r4,r16,ca98 <__subdf3+0x3a0>
    c8b8:	2421c83a 	sub	r16,r4,r16
    c8bc:	80c00044 	addi	r3,r16,1
    c8c0:	010007c4 	movi	r4,31
    c8c4:	20c09516 	blt	r4,r3,cb1c <__subdf3+0x424>
    c8c8:	01400804 	movi	r5,32
    c8cc:	28cbc83a 	sub	r5,r5,r3
    c8d0:	88c8d83a 	srl	r4,r17,r3
    c8d4:	8962983a 	sll	r17,r17,r5
    c8d8:	114a983a 	sll	r5,r2,r5
    c8dc:	10c6d83a 	srl	r3,r2,r3
    c8e0:	8804c03a 	cmpne	r2,r17,zero
    c8e4:	290ab03a 	or	r5,r5,r4
    c8e8:	28a2b03a 	or	r17,r5,r2
    c8ec:	0021883a 	mov	r16,zero
    c8f0:	003fa206 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    c8f4:	2090b03a 	or	r8,r4,r2
    c8f8:	40018e26 	beq	r8,zero,cf34 <__subdf3+0x83c>
    c8fc:	1007883a 	mov	r3,r2
    c900:	2023883a 	mov	r17,r4
    c904:	888001cc 	andi	r2,r17,7
    c908:	103f9e1e 	bne	r2,zero,c784 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c784>
    c90c:	1804977a 	slli	r2,r3,29
    c910:	8822d0fa 	srli	r17,r17,3
    c914:	1810d0fa 	srli	r8,r3,3
    c918:	9100004c 	andi	r4,r18,1
    c91c:	1444b03a 	or	r2,r2,r17
    c920:	00c1ffc4 	movi	r3,2047
    c924:	80c02826 	beq	r16,r3,c9c8 <__subdf3+0x2d0>
    c928:	01400434 	movhi	r5,16
    c92c:	297fffc4 	addi	r5,r5,-1
    c930:	80e0703a 	and	r16,r16,r3
    c934:	414a703a 	and	r5,r8,r5
    c938:	003fa806 	br	c7dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c7dc>
    c93c:	0080630e 	bge	zero,r2,cacc <__subdf3+0x3d4>
    c940:	48003026 	beq	r9,zero,ca04 <__subdf3+0x30c>
    c944:	0101ffc4 	movi	r4,2047
    c948:	813f8c26 	beq	r16,r4,c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    c94c:	29402034 	orhi	r5,r5,128
    c950:	01000e04 	movi	r4,56
    c954:	2080a90e 	bge	r4,r2,cbfc <__subdf3+0x504>
    c958:	298cb03a 	or	r6,r5,r6
    c95c:	3012c03a 	cmpne	r9,r6,zero
    c960:	0005883a 	mov	r2,zero
    c964:	4c53883a 	add	r9,r9,r17
    c968:	4c63803a 	cmpltu	r17,r9,r17
    c96c:	10c7883a 	add	r3,r2,r3
    c970:	88c7883a 	add	r3,r17,r3
    c974:	4823883a 	mov	r17,r9
    c978:	1880202c 	andhi	r2,r3,128
    c97c:	1000d026 	beq	r2,zero,ccc0 <__subdf3+0x5c8>
    c980:	84000044 	addi	r16,r16,1
    c984:	0081ffc4 	movi	r2,2047
    c988:	8080fe26 	beq	r16,r2,cd84 <__subdf3+0x68c>
    c98c:	00bfe034 	movhi	r2,65408
    c990:	10bfffc4 	addi	r2,r2,-1
    c994:	1886703a 	and	r3,r3,r2
    c998:	880ad07a 	srli	r5,r17,1
    c99c:	180497fa 	slli	r2,r3,31
    c9a0:	8900004c 	andi	r4,r17,1
    c9a4:	2922b03a 	or	r17,r5,r4
    c9a8:	1806d07a 	srli	r3,r3,1
    c9ac:	1462b03a 	or	r17,r2,r17
    c9b0:	3825883a 	mov	r18,r7
    c9b4:	003f7106 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    c9b8:	2984b03a 	or	r2,r5,r6
    c9bc:	103f6826 	beq	r2,zero,c760 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c760>
    c9c0:	39c03fcc 	andi	r7,r7,255
    c9c4:	003f6706 	br	c764 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c764>
    c9c8:	4086b03a 	or	r3,r8,r2
    c9cc:	18015226 	beq	r3,zero,cf18 <__subdf3+0x820>
    c9d0:	00c00434 	movhi	r3,16
    c9d4:	41400234 	orhi	r5,r8,8
    c9d8:	18ffffc4 	addi	r3,r3,-1
    c9dc:	28ca703a 	and	r5,r5,r3
    c9e0:	003f7e06 	br	c7dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c7dc>
    c9e4:	10bfffc4 	addi	r2,r2,-1
    c9e8:	1000491e 	bne	r2,zero,cb10 <__subdf3+0x418>
    c9ec:	898fc83a 	sub	r7,r17,r6
    c9f0:	89e3803a 	cmpltu	r17,r17,r7
    c9f4:	1947c83a 	sub	r3,r3,r5
    c9f8:	1c47c83a 	sub	r3,r3,r17
    c9fc:	3823883a 	mov	r17,r7
    ca00:	003f9b06 	br	c870 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c870>
    ca04:	2988b03a 	or	r4,r5,r6
    ca08:	203f5c26 	beq	r4,zero,c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    ca0c:	10bfffc4 	addi	r2,r2,-1
    ca10:	1000931e 	bne	r2,zero,cc60 <__subdf3+0x568>
    ca14:	898d883a 	add	r6,r17,r6
    ca18:	3463803a 	cmpltu	r17,r6,r17
    ca1c:	1947883a 	add	r3,r3,r5
    ca20:	88c7883a 	add	r3,r17,r3
    ca24:	3023883a 	mov	r17,r6
    ca28:	003fd306 	br	c978 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c978>
    ca2c:	1000541e 	bne	r2,zero,cb80 <__subdf3+0x488>
    ca30:	80800044 	addi	r2,r16,1
    ca34:	1081ffcc 	andi	r2,r2,2047
    ca38:	01000044 	movi	r4,1
    ca3c:	2080a20e 	bge	r4,r2,ccc8 <__subdf3+0x5d0>
    ca40:	8989c83a 	sub	r4,r17,r6
    ca44:	8905803a 	cmpltu	r2,r17,r4
    ca48:	1967c83a 	sub	r19,r3,r5
    ca4c:	98a7c83a 	sub	r19,r19,r2
    ca50:	9880202c 	andhi	r2,r19,128
    ca54:	10006326 	beq	r2,zero,cbe4 <__subdf3+0x4ec>
    ca58:	3463c83a 	sub	r17,r6,r17
    ca5c:	28c7c83a 	sub	r3,r5,r3
    ca60:	344d803a 	cmpltu	r6,r6,r17
    ca64:	19a7c83a 	sub	r19,r3,r6
    ca68:	3825883a 	mov	r18,r7
    ca6c:	983f861e 	bne	r19,zero,c888 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c888>
    ca70:	8809883a 	mov	r4,r17
    ca74:	00009ac0 	call	9ac <__clzsi2>
    ca78:	10800804 	addi	r2,r2,32
    ca7c:	113ffe04 	addi	r4,r2,-8
    ca80:	00c007c4 	movi	r3,31
    ca84:	193f850e 	bge	r3,r4,c89c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c89c>
    ca88:	10bff604 	addi	r2,r2,-40
    ca8c:	8884983a 	sll	r2,r17,r2
    ca90:	0023883a 	mov	r17,zero
    ca94:	243f880e 	bge	r4,r16,c8b8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c8b8>
    ca98:	00ffe034 	movhi	r3,65408
    ca9c:	18ffffc4 	addi	r3,r3,-1
    caa0:	8121c83a 	sub	r16,r16,r4
    caa4:	10c6703a 	and	r3,r2,r3
    caa8:	003f3406 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    caac:	9100004c 	andi	r4,r18,1
    cab0:	000b883a 	mov	r5,zero
    cab4:	0005883a 	mov	r2,zero
    cab8:	003f4806 	br	c7dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c7dc>
    cabc:	298cb03a 	or	r6,r5,r6
    cac0:	300cc03a 	cmpne	r6,r6,zero
    cac4:	0005883a 	mov	r2,zero
    cac8:	003f6406 	br	c85c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c85c>
    cacc:	10009a1e 	bne	r2,zero,cd38 <__subdf3+0x640>
    cad0:	82400044 	addi	r9,r16,1
    cad4:	4881ffcc 	andi	r2,r9,2047
    cad8:	02800044 	movi	r10,1
    cadc:	5080670e 	bge	r10,r2,cc7c <__subdf3+0x584>
    cae0:	0081ffc4 	movi	r2,2047
    cae4:	4880af26 	beq	r9,r2,cda4 <__subdf3+0x6ac>
    cae8:	898d883a 	add	r6,r17,r6
    caec:	1945883a 	add	r2,r3,r5
    caf0:	3447803a 	cmpltu	r3,r6,r17
    caf4:	1887883a 	add	r3,r3,r2
    caf8:	182297fa 	slli	r17,r3,31
    cafc:	300cd07a 	srli	r6,r6,1
    cb00:	1806d07a 	srli	r3,r3,1
    cb04:	4821883a 	mov	r16,r9
    cb08:	89a2b03a 	or	r17,r17,r6
    cb0c:	003f1b06 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    cb10:	0101ffc4 	movi	r4,2047
    cb14:	813f441e 	bne	r16,r4,c828 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c828>
    cb18:	003f1806 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    cb1c:	843ff844 	addi	r16,r16,-31
    cb20:	01400804 	movi	r5,32
    cb24:	1408d83a 	srl	r4,r2,r16
    cb28:	19405026 	beq	r3,r5,cc6c <__subdf3+0x574>
    cb2c:	01401004 	movi	r5,64
    cb30:	28c7c83a 	sub	r3,r5,r3
    cb34:	10c4983a 	sll	r2,r2,r3
    cb38:	88a2b03a 	or	r17,r17,r2
    cb3c:	8822c03a 	cmpne	r17,r17,zero
    cb40:	2462b03a 	or	r17,r4,r17
    cb44:	0007883a 	mov	r3,zero
    cb48:	0021883a 	mov	r16,zero
    cb4c:	003f6d06 	br	c904 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c904>
    cb50:	11fff804 	addi	r7,r2,-32
    cb54:	01000804 	movi	r4,32
    cb58:	29ced83a 	srl	r7,r5,r7
    cb5c:	11004526 	beq	r2,r4,cc74 <__subdf3+0x57c>
    cb60:	01001004 	movi	r4,64
    cb64:	2089c83a 	sub	r4,r4,r2
    cb68:	2904983a 	sll	r2,r5,r4
    cb6c:	118cb03a 	or	r6,r2,r6
    cb70:	300cc03a 	cmpne	r6,r6,zero
    cb74:	398cb03a 	or	r6,r7,r6
    cb78:	0005883a 	mov	r2,zero
    cb7c:	003f3706 	br	c85c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c85c>
    cb80:	80002a26 	beq	r16,zero,cc2c <__subdf3+0x534>
    cb84:	0101ffc4 	movi	r4,2047
    cb88:	49006626 	beq	r9,r4,cd24 <__subdf3+0x62c>
    cb8c:	0085c83a 	sub	r2,zero,r2
    cb90:	18c02034 	orhi	r3,r3,128
    cb94:	01000e04 	movi	r4,56
    cb98:	20807e16 	blt	r4,r2,cd94 <__subdf3+0x69c>
    cb9c:	010007c4 	movi	r4,31
    cba0:	2080e716 	blt	r4,r2,cf40 <__subdf3+0x848>
    cba4:	01000804 	movi	r4,32
    cba8:	2089c83a 	sub	r4,r4,r2
    cbac:	1914983a 	sll	r10,r3,r4
    cbb0:	8890d83a 	srl	r8,r17,r2
    cbb4:	8908983a 	sll	r4,r17,r4
    cbb8:	1884d83a 	srl	r2,r3,r2
    cbbc:	5222b03a 	or	r17,r10,r8
    cbc0:	2006c03a 	cmpne	r3,r4,zero
    cbc4:	88e2b03a 	or	r17,r17,r3
    cbc8:	3463c83a 	sub	r17,r6,r17
    cbcc:	2885c83a 	sub	r2,r5,r2
    cbd0:	344d803a 	cmpltu	r6,r6,r17
    cbd4:	1187c83a 	sub	r3,r2,r6
    cbd8:	4821883a 	mov	r16,r9
    cbdc:	3825883a 	mov	r18,r7
    cbe0:	003f2306 	br	c870 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c870>
    cbe4:	24d0b03a 	or	r8,r4,r19
    cbe8:	40001b1e 	bne	r8,zero,cc58 <__subdf3+0x560>
    cbec:	0005883a 	mov	r2,zero
    cbf0:	0009883a 	mov	r4,zero
    cbf4:	0021883a 	mov	r16,zero
    cbf8:	003f4906 	br	c920 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c920>
    cbfc:	010007c4 	movi	r4,31
    cc00:	20803a16 	blt	r4,r2,ccec <__subdf3+0x5f4>
    cc04:	01000804 	movi	r4,32
    cc08:	2089c83a 	sub	r4,r4,r2
    cc0c:	2912983a 	sll	r9,r5,r4
    cc10:	3090d83a 	srl	r8,r6,r2
    cc14:	3108983a 	sll	r4,r6,r4
    cc18:	2884d83a 	srl	r2,r5,r2
    cc1c:	4a12b03a 	or	r9,r9,r8
    cc20:	2008c03a 	cmpne	r4,r4,zero
    cc24:	4912b03a 	or	r9,r9,r4
    cc28:	003f4e06 	br	c964 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c964>
    cc2c:	1c48b03a 	or	r4,r3,r17
    cc30:	20003c26 	beq	r4,zero,cd24 <__subdf3+0x62c>
    cc34:	0084303a 	nor	r2,zero,r2
    cc38:	1000381e 	bne	r2,zero,cd1c <__subdf3+0x624>
    cc3c:	3463c83a 	sub	r17,r6,r17
    cc40:	28c5c83a 	sub	r2,r5,r3
    cc44:	344d803a 	cmpltu	r6,r6,r17
    cc48:	1187c83a 	sub	r3,r2,r6
    cc4c:	4821883a 	mov	r16,r9
    cc50:	3825883a 	mov	r18,r7
    cc54:	003f0606 	br	c870 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c870>
    cc58:	2023883a 	mov	r17,r4
    cc5c:	003f0906 	br	c884 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c884>
    cc60:	0101ffc4 	movi	r4,2047
    cc64:	813f3a1e 	bne	r16,r4,c950 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c950>
    cc68:	003ec406 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    cc6c:	0005883a 	mov	r2,zero
    cc70:	003fb106 	br	cb38 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cb38>
    cc74:	0005883a 	mov	r2,zero
    cc78:	003fbc06 	br	cb6c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cb6c>
    cc7c:	1c44b03a 	or	r2,r3,r17
    cc80:	80008e1e 	bne	r16,zero,cebc <__subdf3+0x7c4>
    cc84:	1000c826 	beq	r2,zero,cfa8 <__subdf3+0x8b0>
    cc88:	2984b03a 	or	r2,r5,r6
    cc8c:	103ebb26 	beq	r2,zero,c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    cc90:	8989883a 	add	r4,r17,r6
    cc94:	1945883a 	add	r2,r3,r5
    cc98:	2447803a 	cmpltu	r3,r4,r17
    cc9c:	1887883a 	add	r3,r3,r2
    cca0:	1880202c 	andhi	r2,r3,128
    cca4:	2023883a 	mov	r17,r4
    cca8:	103f1626 	beq	r2,zero,c904 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c904>
    ccac:	00bfe034 	movhi	r2,65408
    ccb0:	10bfffc4 	addi	r2,r2,-1
    ccb4:	5021883a 	mov	r16,r10
    ccb8:	1886703a 	and	r3,r3,r2
    ccbc:	003eaf06 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    ccc0:	3825883a 	mov	r18,r7
    ccc4:	003f0f06 	br	c904 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c904>
    ccc8:	1c44b03a 	or	r2,r3,r17
    cccc:	8000251e 	bne	r16,zero,cd64 <__subdf3+0x66c>
    ccd0:	1000661e 	bne	r2,zero,ce6c <__subdf3+0x774>
    ccd4:	2990b03a 	or	r8,r5,r6
    ccd8:	40009626 	beq	r8,zero,cf34 <__subdf3+0x83c>
    ccdc:	2807883a 	mov	r3,r5
    cce0:	3023883a 	mov	r17,r6
    cce4:	3825883a 	mov	r18,r7
    cce8:	003ea406 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    ccec:	127ff804 	addi	r9,r2,-32
    ccf0:	01000804 	movi	r4,32
    ccf4:	2a52d83a 	srl	r9,r5,r9
    ccf8:	11008c26 	beq	r2,r4,cf2c <__subdf3+0x834>
    ccfc:	01001004 	movi	r4,64
    cd00:	2085c83a 	sub	r2,r4,r2
    cd04:	2884983a 	sll	r2,r5,r2
    cd08:	118cb03a 	or	r6,r2,r6
    cd0c:	300cc03a 	cmpne	r6,r6,zero
    cd10:	4992b03a 	or	r9,r9,r6
    cd14:	0005883a 	mov	r2,zero
    cd18:	003f1206 	br	c964 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c964>
    cd1c:	0101ffc4 	movi	r4,2047
    cd20:	493f9c1e 	bne	r9,r4,cb94 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cb94>
    cd24:	2807883a 	mov	r3,r5
    cd28:	3023883a 	mov	r17,r6
    cd2c:	4821883a 	mov	r16,r9
    cd30:	3825883a 	mov	r18,r7
    cd34:	003e9106 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    cd38:	80001f1e 	bne	r16,zero,cdb8 <__subdf3+0x6c0>
    cd3c:	1c48b03a 	or	r4,r3,r17
    cd40:	20005a26 	beq	r4,zero,ceac <__subdf3+0x7b4>
    cd44:	0084303a 	nor	r2,zero,r2
    cd48:	1000561e 	bne	r2,zero,cea4 <__subdf3+0x7ac>
    cd4c:	89a3883a 	add	r17,r17,r6
    cd50:	1945883a 	add	r2,r3,r5
    cd54:	898d803a 	cmpltu	r6,r17,r6
    cd58:	3087883a 	add	r3,r6,r2
    cd5c:	4821883a 	mov	r16,r9
    cd60:	003f0506 	br	c978 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c978>
    cd64:	10002b1e 	bne	r2,zero,ce14 <__subdf3+0x71c>
    cd68:	2984b03a 	or	r2,r5,r6
    cd6c:	10008026 	beq	r2,zero,cf70 <__subdf3+0x878>
    cd70:	2807883a 	mov	r3,r5
    cd74:	3023883a 	mov	r17,r6
    cd78:	3825883a 	mov	r18,r7
    cd7c:	0401ffc4 	movi	r16,2047
    cd80:	003e7e06 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    cd84:	3809883a 	mov	r4,r7
    cd88:	0011883a 	mov	r8,zero
    cd8c:	0005883a 	mov	r2,zero
    cd90:	003ee306 	br	c920 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c920>
    cd94:	1c62b03a 	or	r17,r3,r17
    cd98:	8822c03a 	cmpne	r17,r17,zero
    cd9c:	0005883a 	mov	r2,zero
    cda0:	003f8906 	br	cbc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cbc8>
    cda4:	3809883a 	mov	r4,r7
    cda8:	4821883a 	mov	r16,r9
    cdac:	0011883a 	mov	r8,zero
    cdb0:	0005883a 	mov	r2,zero
    cdb4:	003eda06 	br	c920 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c920>
    cdb8:	0101ffc4 	movi	r4,2047
    cdbc:	49003b26 	beq	r9,r4,ceac <__subdf3+0x7b4>
    cdc0:	0085c83a 	sub	r2,zero,r2
    cdc4:	18c02034 	orhi	r3,r3,128
    cdc8:	01000e04 	movi	r4,56
    cdcc:	20806e16 	blt	r4,r2,cf88 <__subdf3+0x890>
    cdd0:	010007c4 	movi	r4,31
    cdd4:	20807716 	blt	r4,r2,cfb4 <__subdf3+0x8bc>
    cdd8:	01000804 	movi	r4,32
    cddc:	2089c83a 	sub	r4,r4,r2
    cde0:	1914983a 	sll	r10,r3,r4
    cde4:	8890d83a 	srl	r8,r17,r2
    cde8:	8908983a 	sll	r4,r17,r4
    cdec:	1884d83a 	srl	r2,r3,r2
    cdf0:	5222b03a 	or	r17,r10,r8
    cdf4:	2006c03a 	cmpne	r3,r4,zero
    cdf8:	88e2b03a 	or	r17,r17,r3
    cdfc:	89a3883a 	add	r17,r17,r6
    ce00:	1145883a 	add	r2,r2,r5
    ce04:	898d803a 	cmpltu	r6,r17,r6
    ce08:	3087883a 	add	r3,r6,r2
    ce0c:	4821883a 	mov	r16,r9
    ce10:	003ed906 	br	c978 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c978>
    ce14:	2984b03a 	or	r2,r5,r6
    ce18:	10004226 	beq	r2,zero,cf24 <__subdf3+0x82c>
    ce1c:	1808d0fa 	srli	r4,r3,3
    ce20:	8822d0fa 	srli	r17,r17,3
    ce24:	1806977a 	slli	r3,r3,29
    ce28:	2080022c 	andhi	r2,r4,8
    ce2c:	1c62b03a 	or	r17,r3,r17
    ce30:	10000826 	beq	r2,zero,ce54 <__subdf3+0x75c>
    ce34:	2812d0fa 	srli	r9,r5,3
    ce38:	4880022c 	andhi	r2,r9,8
    ce3c:	1000051e 	bne	r2,zero,ce54 <__subdf3+0x75c>
    ce40:	300cd0fa 	srli	r6,r6,3
    ce44:	2804977a 	slli	r2,r5,29
    ce48:	4809883a 	mov	r4,r9
    ce4c:	3825883a 	mov	r18,r7
    ce50:	11a2b03a 	or	r17,r2,r6
    ce54:	8806d77a 	srli	r3,r17,29
    ce58:	200890fa 	slli	r4,r4,3
    ce5c:	882290fa 	slli	r17,r17,3
    ce60:	0401ffc4 	movi	r16,2047
    ce64:	1906b03a 	or	r3,r3,r4
    ce68:	003e4406 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    ce6c:	2984b03a 	or	r2,r5,r6
    ce70:	103e4226 	beq	r2,zero,c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    ce74:	8989c83a 	sub	r4,r17,r6
    ce78:	8911803a 	cmpltu	r8,r17,r4
    ce7c:	1945c83a 	sub	r2,r3,r5
    ce80:	1205c83a 	sub	r2,r2,r8
    ce84:	1200202c 	andhi	r8,r2,128
    ce88:	403e9a26 	beq	r8,zero,c8f4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c8f4>
    ce8c:	3463c83a 	sub	r17,r6,r17
    ce90:	28c5c83a 	sub	r2,r5,r3
    ce94:	344d803a 	cmpltu	r6,r6,r17
    ce98:	1187c83a 	sub	r3,r2,r6
    ce9c:	3825883a 	mov	r18,r7
    cea0:	003e3606 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    cea4:	0101ffc4 	movi	r4,2047
    cea8:	493fc71e 	bne	r9,r4,cdc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cdc8>
    ceac:	2807883a 	mov	r3,r5
    ceb0:	3023883a 	mov	r17,r6
    ceb4:	4821883a 	mov	r16,r9
    ceb8:	003e3006 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    cebc:	10003626 	beq	r2,zero,cf98 <__subdf3+0x8a0>
    cec0:	2984b03a 	or	r2,r5,r6
    cec4:	10001726 	beq	r2,zero,cf24 <__subdf3+0x82c>
    cec8:	1808d0fa 	srli	r4,r3,3
    cecc:	8822d0fa 	srli	r17,r17,3
    ced0:	1806977a 	slli	r3,r3,29
    ced4:	2080022c 	andhi	r2,r4,8
    ced8:	1c62b03a 	or	r17,r3,r17
    cedc:	10000726 	beq	r2,zero,cefc <__subdf3+0x804>
    cee0:	2812d0fa 	srli	r9,r5,3
    cee4:	4880022c 	andhi	r2,r9,8
    cee8:	1000041e 	bne	r2,zero,cefc <__subdf3+0x804>
    ceec:	300cd0fa 	srli	r6,r6,3
    cef0:	2804977a 	slli	r2,r5,29
    cef4:	4809883a 	mov	r4,r9
    cef8:	11a2b03a 	or	r17,r2,r6
    cefc:	8806d77a 	srli	r3,r17,29
    cf00:	200890fa 	slli	r4,r4,3
    cf04:	882290fa 	slli	r17,r17,3
    cf08:	3825883a 	mov	r18,r7
    cf0c:	1906b03a 	or	r3,r3,r4
    cf10:	0401ffc4 	movi	r16,2047
    cf14:	003e1906 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    cf18:	000b883a 	mov	r5,zero
    cf1c:	0005883a 	mov	r2,zero
    cf20:	003e2e06 	br	c7dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c7dc>
    cf24:	0401ffc4 	movi	r16,2047
    cf28:	003e1406 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    cf2c:	0005883a 	mov	r2,zero
    cf30:	003f7506 	br	cd08 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cd08>
    cf34:	0005883a 	mov	r2,zero
    cf38:	0009883a 	mov	r4,zero
    cf3c:	003e7806 	br	c920 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c920>
    cf40:	123ff804 	addi	r8,r2,-32
    cf44:	01000804 	movi	r4,32
    cf48:	1a10d83a 	srl	r8,r3,r8
    cf4c:	11002526 	beq	r2,r4,cfe4 <__subdf3+0x8ec>
    cf50:	01001004 	movi	r4,64
    cf54:	2085c83a 	sub	r2,r4,r2
    cf58:	1884983a 	sll	r2,r3,r2
    cf5c:	1444b03a 	or	r2,r2,r17
    cf60:	1004c03a 	cmpne	r2,r2,zero
    cf64:	40a2b03a 	or	r17,r8,r2
    cf68:	0005883a 	mov	r2,zero
    cf6c:	003f1606 	br	cbc8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cbc8>
    cf70:	02000434 	movhi	r8,16
    cf74:	0009883a 	mov	r4,zero
    cf78:	423fffc4 	addi	r8,r8,-1
    cf7c:	00bfffc4 	movi	r2,-1
    cf80:	0401ffc4 	movi	r16,2047
    cf84:	003e6606 	br	c920 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c920>
    cf88:	1c62b03a 	or	r17,r3,r17
    cf8c:	8822c03a 	cmpne	r17,r17,zero
    cf90:	0005883a 	mov	r2,zero
    cf94:	003f9906 	br	cdfc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cdfc>
    cf98:	2807883a 	mov	r3,r5
    cf9c:	3023883a 	mov	r17,r6
    cfa0:	0401ffc4 	movi	r16,2047
    cfa4:	003df506 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    cfa8:	2807883a 	mov	r3,r5
    cfac:	3023883a 	mov	r17,r6
    cfb0:	003df206 	br	c77c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700c77c>
    cfb4:	123ff804 	addi	r8,r2,-32
    cfb8:	01000804 	movi	r4,32
    cfbc:	1a10d83a 	srl	r8,r3,r8
    cfc0:	11000a26 	beq	r2,r4,cfec <__subdf3+0x8f4>
    cfc4:	01001004 	movi	r4,64
    cfc8:	2085c83a 	sub	r2,r4,r2
    cfcc:	1884983a 	sll	r2,r3,r2
    cfd0:	1444b03a 	or	r2,r2,r17
    cfd4:	1004c03a 	cmpne	r2,r2,zero
    cfd8:	40a2b03a 	or	r17,r8,r2
    cfdc:	0005883a 	mov	r2,zero
    cfe0:	003f8606 	br	cdfc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cdfc>
    cfe4:	0005883a 	mov	r2,zero
    cfe8:	003fdc06 	br	cf5c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cf5c>
    cfec:	0005883a 	mov	r2,zero
    cff0:	003ff706 	br	cfd0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700cfd0>

0000cff4 <__fixdfsi>:
    cff4:	280cd53a 	srli	r6,r5,20
    cff8:	00c00434 	movhi	r3,16
    cffc:	18ffffc4 	addi	r3,r3,-1
    d000:	3181ffcc 	andi	r6,r6,2047
    d004:	01c0ff84 	movi	r7,1022
    d008:	28c6703a 	and	r3,r5,r3
    d00c:	280ad7fa 	srli	r5,r5,31
    d010:	3980120e 	bge	r7,r6,d05c <__fixdfsi+0x68>
    d014:	00810744 	movi	r2,1053
    d018:	11800c16 	blt	r2,r6,d04c <__fixdfsi+0x58>
    d01c:	00810cc4 	movi	r2,1075
    d020:	1185c83a 	sub	r2,r2,r6
    d024:	01c007c4 	movi	r7,31
    d028:	18c00434 	orhi	r3,r3,16
    d02c:	38800d16 	blt	r7,r2,d064 <__fixdfsi+0x70>
    d030:	31befb44 	addi	r6,r6,-1043
    d034:	2084d83a 	srl	r2,r4,r2
    d038:	1986983a 	sll	r3,r3,r6
    d03c:	1884b03a 	or	r2,r3,r2
    d040:	28000726 	beq	r5,zero,d060 <__fixdfsi+0x6c>
    d044:	0085c83a 	sub	r2,zero,r2
    d048:	f800283a 	ret
    d04c:	00a00034 	movhi	r2,32768
    d050:	10bfffc4 	addi	r2,r2,-1
    d054:	2885883a 	add	r2,r5,r2
    d058:	f800283a 	ret
    d05c:	0005883a 	mov	r2,zero
    d060:	f800283a 	ret
    d064:	008104c4 	movi	r2,1043
    d068:	1185c83a 	sub	r2,r2,r6
    d06c:	1884d83a 	srl	r2,r3,r2
    d070:	003ff306 	br	d040 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700d040>

0000d074 <__floatsidf>:
    d074:	defffd04 	addi	sp,sp,-12
    d078:	dfc00215 	stw	ra,8(sp)
    d07c:	dc400115 	stw	r17,4(sp)
    d080:	dc000015 	stw	r16,0(sp)
    d084:	20002b26 	beq	r4,zero,d134 <__floatsidf+0xc0>
    d088:	2023883a 	mov	r17,r4
    d08c:	2020d7fa 	srli	r16,r4,31
    d090:	20002d16 	blt	r4,zero,d148 <__floatsidf+0xd4>
    d094:	8809883a 	mov	r4,r17
    d098:	00009ac0 	call	9ac <__clzsi2>
    d09c:	01410784 	movi	r5,1054
    d0a0:	288bc83a 	sub	r5,r5,r2
    d0a4:	01010cc4 	movi	r4,1075
    d0a8:	2149c83a 	sub	r4,r4,r5
    d0ac:	00c007c4 	movi	r3,31
    d0b0:	1900160e 	bge	r3,r4,d10c <__floatsidf+0x98>
    d0b4:	00c104c4 	movi	r3,1043
    d0b8:	1947c83a 	sub	r3,r3,r5
    d0bc:	88c6983a 	sll	r3,r17,r3
    d0c0:	00800434 	movhi	r2,16
    d0c4:	10bfffc4 	addi	r2,r2,-1
    d0c8:	1886703a 	and	r3,r3,r2
    d0cc:	2941ffcc 	andi	r5,r5,2047
    d0d0:	800d883a 	mov	r6,r16
    d0d4:	0005883a 	mov	r2,zero
    d0d8:	280a953a 	slli	r5,r5,20
    d0dc:	31803fcc 	andi	r6,r6,255
    d0e0:	01000434 	movhi	r4,16
    d0e4:	300c97fa 	slli	r6,r6,31
    d0e8:	213fffc4 	addi	r4,r4,-1
    d0ec:	1906703a 	and	r3,r3,r4
    d0f0:	1946b03a 	or	r3,r3,r5
    d0f4:	1986b03a 	or	r3,r3,r6
    d0f8:	dfc00217 	ldw	ra,8(sp)
    d0fc:	dc400117 	ldw	r17,4(sp)
    d100:	dc000017 	ldw	r16,0(sp)
    d104:	dec00304 	addi	sp,sp,12
    d108:	f800283a 	ret
    d10c:	00c002c4 	movi	r3,11
    d110:	1887c83a 	sub	r3,r3,r2
    d114:	88c6d83a 	srl	r3,r17,r3
    d118:	8904983a 	sll	r2,r17,r4
    d11c:	01000434 	movhi	r4,16
    d120:	213fffc4 	addi	r4,r4,-1
    d124:	2941ffcc 	andi	r5,r5,2047
    d128:	1906703a 	and	r3,r3,r4
    d12c:	800d883a 	mov	r6,r16
    d130:	003fe906 	br	d0d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700d0d8>
    d134:	000d883a 	mov	r6,zero
    d138:	000b883a 	mov	r5,zero
    d13c:	0007883a 	mov	r3,zero
    d140:	0005883a 	mov	r2,zero
    d144:	003fe406 	br	d0d8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700d0d8>
    d148:	0123c83a 	sub	r17,zero,r4
    d14c:	003fd106 	br	d094 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700d094>

0000d150 <__floatunsidf>:
    d150:	defffe04 	addi	sp,sp,-8
    d154:	dc000015 	stw	r16,0(sp)
    d158:	dfc00115 	stw	ra,4(sp)
    d15c:	2021883a 	mov	r16,r4
    d160:	20002226 	beq	r4,zero,d1ec <__floatunsidf+0x9c>
    d164:	00009ac0 	call	9ac <__clzsi2>
    d168:	01010784 	movi	r4,1054
    d16c:	2089c83a 	sub	r4,r4,r2
    d170:	01810cc4 	movi	r6,1075
    d174:	310dc83a 	sub	r6,r6,r4
    d178:	00c007c4 	movi	r3,31
    d17c:	1980120e 	bge	r3,r6,d1c8 <__floatunsidf+0x78>
    d180:	00c104c4 	movi	r3,1043
    d184:	1907c83a 	sub	r3,r3,r4
    d188:	80ca983a 	sll	r5,r16,r3
    d18c:	00800434 	movhi	r2,16
    d190:	10bfffc4 	addi	r2,r2,-1
    d194:	2101ffcc 	andi	r4,r4,2047
    d198:	0021883a 	mov	r16,zero
    d19c:	288a703a 	and	r5,r5,r2
    d1a0:	2008953a 	slli	r4,r4,20
    d1a4:	00c00434 	movhi	r3,16
    d1a8:	18ffffc4 	addi	r3,r3,-1
    d1ac:	28c6703a 	and	r3,r5,r3
    d1b0:	8005883a 	mov	r2,r16
    d1b4:	1906b03a 	or	r3,r3,r4
    d1b8:	dfc00117 	ldw	ra,4(sp)
    d1bc:	dc000017 	ldw	r16,0(sp)
    d1c0:	dec00204 	addi	sp,sp,8
    d1c4:	f800283a 	ret
    d1c8:	00c002c4 	movi	r3,11
    d1cc:	188bc83a 	sub	r5,r3,r2
    d1d0:	814ad83a 	srl	r5,r16,r5
    d1d4:	00c00434 	movhi	r3,16
    d1d8:	18ffffc4 	addi	r3,r3,-1
    d1dc:	81a0983a 	sll	r16,r16,r6
    d1e0:	2101ffcc 	andi	r4,r4,2047
    d1e4:	28ca703a 	and	r5,r5,r3
    d1e8:	003fed06 	br	d1a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700d1a0>
    d1ec:	0009883a 	mov	r4,zero
    d1f0:	000b883a 	mov	r5,zero
    d1f4:	003fea06 	br	d1a0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700d1a0>

0000d1f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d1f8:	defffe04 	addi	sp,sp,-8
    d1fc:	dfc00115 	stw	ra,4(sp)
    d200:	df000015 	stw	fp,0(sp)
    d204:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d208:	d0a00c17 	ldw	r2,-32720(gp)
    d20c:	10000326 	beq	r2,zero,d21c <alt_get_errno+0x24>
    d210:	d0a00c17 	ldw	r2,-32720(gp)
    d214:	103ee83a 	callr	r2
    d218:	00000106 	br	d220 <alt_get_errno+0x28>
    d21c:	d0a79a04 	addi	r2,gp,-24984
}
    d220:	e037883a 	mov	sp,fp
    d224:	dfc00117 	ldw	ra,4(sp)
    d228:	df000017 	ldw	fp,0(sp)
    d22c:	dec00204 	addi	sp,sp,8
    d230:	f800283a 	ret

0000d234 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d234:	defffb04 	addi	sp,sp,-20
    d238:	dfc00415 	stw	ra,16(sp)
    d23c:	df000315 	stw	fp,12(sp)
    d240:	df000304 	addi	fp,sp,12
    d244:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d248:	e0bfff17 	ldw	r2,-4(fp)
    d24c:	10000616 	blt	r2,zero,d268 <close+0x34>
    d250:	e0bfff17 	ldw	r2,-4(fp)
    d254:	10c00324 	muli	r3,r2,12
    d258:	00800074 	movhi	r2,1
    d25c:	1088d304 	addi	r2,r2,9036
    d260:	1885883a 	add	r2,r3,r2
    d264:	00000106 	br	d26c <close+0x38>
    d268:	0005883a 	mov	r2,zero
    d26c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    d270:	e0bffd17 	ldw	r2,-12(fp)
    d274:	10001926 	beq	r2,zero,d2dc <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d278:	e0bffd17 	ldw	r2,-12(fp)
    d27c:	10800017 	ldw	r2,0(r2)
    d280:	10800417 	ldw	r2,16(r2)
    d284:	10000626 	beq	r2,zero,d2a0 <close+0x6c>
    d288:	e0bffd17 	ldw	r2,-12(fp)
    d28c:	10800017 	ldw	r2,0(r2)
    d290:	10800417 	ldw	r2,16(r2)
    d294:	e13ffd17 	ldw	r4,-12(fp)
    d298:	103ee83a 	callr	r2
    d29c:	00000106 	br	d2a4 <close+0x70>
    d2a0:	0005883a 	mov	r2,zero
    d2a4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d2a8:	e13fff17 	ldw	r4,-4(fp)
    d2ac:	000dac80 	call	dac8 <alt_release_fd>
    if (rval < 0)
    d2b0:	e0bffe17 	ldw	r2,-8(fp)
    d2b4:	1000070e 	bge	r2,zero,d2d4 <close+0xa0>
    {
      ALT_ERRNO = -rval;
    d2b8:	000d1f80 	call	d1f8 <alt_get_errno>
    d2bc:	1007883a 	mov	r3,r2
    d2c0:	e0bffe17 	ldw	r2,-8(fp)
    d2c4:	0085c83a 	sub	r2,zero,r2
    d2c8:	18800015 	stw	r2,0(r3)
      return -1;
    d2cc:	00bfffc4 	movi	r2,-1
    d2d0:	00000706 	br	d2f0 <close+0xbc>
    }
    return 0;
    d2d4:	0005883a 	mov	r2,zero
    d2d8:	00000506 	br	d2f0 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d2dc:	000d1f80 	call	d1f8 <alt_get_errno>
    d2e0:	1007883a 	mov	r3,r2
    d2e4:	00801444 	movi	r2,81
    d2e8:	18800015 	stw	r2,0(r3)
    return -1;
    d2ec:	00bfffc4 	movi	r2,-1
  }
}
    d2f0:	e037883a 	mov	sp,fp
    d2f4:	dfc00117 	ldw	ra,4(sp)
    d2f8:	df000017 	ldw	fp,0(sp)
    d2fc:	dec00204 	addi	sp,sp,8
    d300:	f800283a 	ret

0000d304 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    d304:	defffc04 	addi	sp,sp,-16
    d308:	df000315 	stw	fp,12(sp)
    d30c:	df000304 	addi	fp,sp,12
    d310:	e13ffd15 	stw	r4,-12(fp)
    d314:	e17ffe15 	stw	r5,-8(fp)
    d318:	e1bfff15 	stw	r6,-4(fp)
  return len;
    d31c:	e0bfff17 	ldw	r2,-4(fp)
}
    d320:	e037883a 	mov	sp,fp
    d324:	df000017 	ldw	fp,0(sp)
    d328:	dec00104 	addi	sp,sp,4
    d32c:	f800283a 	ret

0000d330 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d330:	defffe04 	addi	sp,sp,-8
    d334:	dfc00115 	stw	ra,4(sp)
    d338:	df000015 	stw	fp,0(sp)
    d33c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d340:	d0a00c17 	ldw	r2,-32720(gp)
    d344:	10000326 	beq	r2,zero,d354 <alt_get_errno+0x24>
    d348:	d0a00c17 	ldw	r2,-32720(gp)
    d34c:	103ee83a 	callr	r2
    d350:	00000106 	br	d358 <alt_get_errno+0x28>
    d354:	d0a79a04 	addi	r2,gp,-24984
}
    d358:	e037883a 	mov	sp,fp
    d35c:	dfc00117 	ldw	ra,4(sp)
    d360:	df000017 	ldw	fp,0(sp)
    d364:	dec00204 	addi	sp,sp,8
    d368:	f800283a 	ret

0000d36c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d36c:	defffb04 	addi	sp,sp,-20
    d370:	dfc00415 	stw	ra,16(sp)
    d374:	df000315 	stw	fp,12(sp)
    d378:	df000304 	addi	fp,sp,12
    d37c:	e13ffe15 	stw	r4,-8(fp)
    d380:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d384:	e0bffe17 	ldw	r2,-8(fp)
    d388:	10000616 	blt	r2,zero,d3a4 <fstat+0x38>
    d38c:	e0bffe17 	ldw	r2,-8(fp)
    d390:	10c00324 	muli	r3,r2,12
    d394:	00800074 	movhi	r2,1
    d398:	1088d304 	addi	r2,r2,9036
    d39c:	1885883a 	add	r2,r3,r2
    d3a0:	00000106 	br	d3a8 <fstat+0x3c>
    d3a4:	0005883a 	mov	r2,zero
    d3a8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    d3ac:	e0bffd17 	ldw	r2,-12(fp)
    d3b0:	10001026 	beq	r2,zero,d3f4 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d3b4:	e0bffd17 	ldw	r2,-12(fp)
    d3b8:	10800017 	ldw	r2,0(r2)
    d3bc:	10800817 	ldw	r2,32(r2)
    d3c0:	10000726 	beq	r2,zero,d3e0 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
    d3c4:	e0bffd17 	ldw	r2,-12(fp)
    d3c8:	10800017 	ldw	r2,0(r2)
    d3cc:	10800817 	ldw	r2,32(r2)
    d3d0:	e17fff17 	ldw	r5,-4(fp)
    d3d4:	e13ffd17 	ldw	r4,-12(fp)
    d3d8:	103ee83a 	callr	r2
    d3dc:	00000a06 	br	d408 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d3e0:	e0bfff17 	ldw	r2,-4(fp)
    d3e4:	00c80004 	movi	r3,8192
    d3e8:	10c00115 	stw	r3,4(r2)
      return 0;
    d3ec:	0005883a 	mov	r2,zero
    d3f0:	00000506 	br	d408 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d3f4:	000d3300 	call	d330 <alt_get_errno>
    d3f8:	1007883a 	mov	r3,r2
    d3fc:	00801444 	movi	r2,81
    d400:	18800015 	stw	r2,0(r3)
    return -1;
    d404:	00bfffc4 	movi	r2,-1
  }
}
    d408:	e037883a 	mov	sp,fp
    d40c:	dfc00117 	ldw	ra,4(sp)
    d410:	df000017 	ldw	fp,0(sp)
    d414:	dec00204 	addi	sp,sp,8
    d418:	f800283a 	ret

0000d41c <gettimeofday>:
 */
 

#if defined (__GNUC__) && (__GNUC__ >= 4)
int ALT_GETTIMEOFDAY (struct timeval  *ptimeval, void *ptimezone_vptr)
{
    d41c:	defff804 	addi	sp,sp,-32
    d420:	dfc00715 	stw	ra,28(sp)
    d424:	df000615 	stw	fp,24(sp)
    d428:	dc000515 	stw	r16,20(sp)
    d42c:	df000604 	addi	fp,sp,24
    d430:	e13ffd15 	stw	r4,-12(fp)
    d434:	e17ffe15 	stw	r5,-8(fp)
  struct timezone *ptimezone = (struct timezone*)ptimezone_vptr;
    d438:	e13ffe17 	ldw	r4,-8(fp)
    d43c:	e13ffa15 	stw	r4,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    d440:	d127a317 	ldw	r4,-24948(gp)
#else
int ALT_GETTIMEOFDAY (struct timeval  *ptimeval, struct timezone *ptimezone)
{
#endif
  
  alt_u32 nticks = alt_nticks (); 
    d444:	e13ffb15 	stw	r4,-20(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    d448:	d127a217 	ldw	r4,-24952(gp)
  alt_u32 tick_rate = alt_ticks_per_second ();
    d44c:	e13ffc15 	stw	r4,-16(fp)
   * non-zero system clock rate. If the system clock is not running, an error
   * is generated and the contents of "ptimeval" and "ptimezone" are not
   * updated.
   */

  if (tick_rate)
    d450:	e13ffc17 	ldw	r4,-16(fp)
    d454:	20005f26 	beq	r4,zero,d5d4 <gettimeofday+0x1b8>
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
    d458:	d1279d17 	ldw	r4,-24972(gp)
    d45c:	2015883a 	mov	r10,r4
    d460:	e17ffb17 	ldw	r5,-20(fp)
    d464:	e13ffc17 	ldw	r4,-16(fp)
    d468:	2909203a 	divu	r4,r5,r4
    d46c:	5109883a 	add	r4,r10,r4
    d470:	200b883a 	mov	r5,r4
    d474:	e13ffd17 	ldw	r4,-12(fp)
    d478:	21400015 	stw	r5,0(r4)
    ptimeval->tv_usec = alt_resettime.tv_usec +
    d47c:	d1279e17 	ldw	r4,-24968(gp)
    d480:	2021883a 	mov	r16,r4
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
    d484:	e13ffb17 	ldw	r4,-20(fp)
    d488:	200d883a 	mov	r6,r4
    d48c:	000f883a 	mov	r7,zero
    d490:	010003f4 	movhi	r4,15
    d494:	21109004 	addi	r4,r4,16960
    d498:	e17ffc17 	ldw	r5,-16(fp)
    d49c:	2149203a 	divu	r4,r4,r5
    d4a0:	2005883a 	mov	r2,r4
    d4a4:	0007883a 	mov	r3,zero
    d4a8:	388b383a 	mul	r5,r7,r2
    d4ac:	1989383a 	mul	r4,r3,r6
    d4b0:	2909883a 	add	r4,r5,r4
    d4b4:	308a383a 	mulxuu	r5,r6,r2
    d4b8:	3085383a 	mul	r2,r6,r2
    d4bc:	1011883a 	mov	r8,r2
    d4c0:	2813883a 	mov	r9,r5
    d4c4:	2245883a 	add	r2,r4,r9
    d4c8:	1013883a 	mov	r9,r2
    d4cc:	018003f4 	movhi	r6,15
    d4d0:	31909004 	addi	r6,r6,16960
    d4d4:	000f883a 	mov	r7,zero
    d4d8:	4009883a 	mov	r4,r8
    d4dc:	480b883a 	mov	r5,r9
    d4e0:	000a5080 	call	a508 <__umoddi3>
    d4e4:	1009883a 	mov	r4,r2
    d4e8:	180b883a 	mov	r5,r3
    d4ec:	2005883a 	mov	r2,r4
    d4f0:	2807883a 	mov	r3,r5
   */

  if (tick_rate)
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
    ptimeval->tv_usec = alt_resettime.tv_usec +
    d4f4:	8085883a 	add	r2,r16,r2
    d4f8:	1007883a 	mov	r3,r2
    d4fc:	e0bffd17 	ldw	r2,-12(fp)
    d500:	10c00115 	stw	r3,4(r2)
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
      
    while(ptimeval->tv_usec < 0) {
    d504:	00001406 	br	d558 <gettimeofday+0x13c>
      if (ptimeval->tv_sec <= 0)
    d508:	e0bffd17 	ldw	r2,-12(fp)
    d50c:	10800017 	ldw	r2,0(r2)
    d510:	00800516 	blt	zero,r2,d528 <gettimeofday+0x10c>
      {
          ptimeval->tv_sec = 0;
    d514:	e0bffd17 	ldw	r2,-12(fp)
    d518:	10000015 	stw	zero,0(r2)
          ptimeval->tv_usec = 0;
    d51c:	e0bffd17 	ldw	r2,-12(fp)
    d520:	10000115 	stw	zero,4(r2)
          break;
    d524:	00000f06 	br	d564 <gettimeofday+0x148>
      }
      else
      {
          ptimeval->tv_sec--;
    d528:	e0bffd17 	ldw	r2,-12(fp)
    d52c:	10800017 	ldw	r2,0(r2)
    d530:	10ffffc4 	addi	r3,r2,-1
    d534:	e0bffd17 	ldw	r2,-12(fp)
    d538:	10c00015 	stw	r3,0(r2)
          ptimeval->tv_usec += ALT_US;
    d53c:	e0bffd17 	ldw	r2,-12(fp)
    d540:	10c00117 	ldw	r3,4(r2)
    d544:	008003f4 	movhi	r2,15
    d548:	10909004 	addi	r2,r2,16960
    d54c:	1887883a 	add	r3,r3,r2
    d550:	e0bffd17 	ldw	r2,-12(fp)
    d554:	10c00115 	stw	r3,4(r2)
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
    ptimeval->tv_usec = alt_resettime.tv_usec +
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
      
    while(ptimeval->tv_usec < 0) {
    d558:	e0bffd17 	ldw	r2,-12(fp)
    d55c:	10800117 	ldw	r2,4(r2)
    d560:	103fe916 	blt	r2,zero,d508 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700d508>
          ptimeval->tv_sec--;
          ptimeval->tv_usec += ALT_US;
      }
    }
    
    while(ptimeval->tv_usec >= ALT_US) {
    d564:	00000c06 	br	d598 <gettimeofday+0x17c>
      ptimeval->tv_sec++;
    d568:	e0bffd17 	ldw	r2,-12(fp)
    d56c:	10800017 	ldw	r2,0(r2)
    d570:	10c00044 	addi	r3,r2,1
    d574:	e0bffd17 	ldw	r2,-12(fp)
    d578:	10c00015 	stw	r3,0(r2)
      ptimeval->tv_usec -= ALT_US;
    d57c:	e0bffd17 	ldw	r2,-12(fp)
    d580:	10c00117 	ldw	r3,4(r2)
    d584:	00bffc74 	movhi	r2,65521
    d588:	10af7004 	addi	r2,r2,-16960
    d58c:	1887883a 	add	r3,r3,r2
    d590:	e0bffd17 	ldw	r2,-12(fp)
    d594:	10c00115 	stw	r3,4(r2)
          ptimeval->tv_sec--;
          ptimeval->tv_usec += ALT_US;
      }
    }
    
    while(ptimeval->tv_usec >= ALT_US) {
    d598:	e0bffd17 	ldw	r2,-12(fp)
    d59c:	10c00117 	ldw	r3,4(r2)
    d5a0:	008003f4 	movhi	r2,15
    d5a4:	10908fc4 	addi	r2,r2,16959
    d5a8:	10ffef16 	blt	r2,r3,d568 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700d568>
      ptimeval->tv_sec++;
      ptimeval->tv_usec -= ALT_US;
    }
      
    if (ptimezone)
    d5ac:	e0bffa17 	ldw	r2,-24(fp)
    d5b0:	10000626 	beq	r2,zero,d5cc <gettimeofday+0x1b0>
    { 
      ptimezone->tz_minuteswest = alt_timezone.tz_minuteswest;
    d5b4:	d0e79b17 	ldw	r3,-24980(gp)
    d5b8:	e0bffa17 	ldw	r2,-24(fp)
    d5bc:	10c00015 	stw	r3,0(r2)
      ptimezone->tz_dsttime     = alt_timezone.tz_dsttime;
    d5c0:	d0e79c17 	ldw	r3,-24976(gp)
    d5c4:	e0bffa17 	ldw	r2,-24(fp)
    d5c8:	10c00115 	stw	r3,4(r2)
    }

    return 0;
    d5cc:	0005883a 	mov	r2,zero
    d5d0:	00000106 	br	d5d8 <gettimeofday+0x1bc>
  }

  return -ENOTSUP;
    d5d4:	00bfde84 	movi	r2,-134
}
    d5d8:	e6ffff04 	addi	sp,fp,-4
    d5dc:	dfc00217 	ldw	ra,8(sp)
    d5e0:	df000117 	ldw	fp,4(sp)
    d5e4:	dc000017 	ldw	r16,0(sp)
    d5e8:	dec00304 	addi	sp,sp,12
    d5ec:	f800283a 	ret

0000d5f0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d5f0:	defffe04 	addi	sp,sp,-8
    d5f4:	dfc00115 	stw	ra,4(sp)
    d5f8:	df000015 	stw	fp,0(sp)
    d5fc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d600:	d0a00c17 	ldw	r2,-32720(gp)
    d604:	10000326 	beq	r2,zero,d614 <alt_get_errno+0x24>
    d608:	d0a00c17 	ldw	r2,-32720(gp)
    d60c:	103ee83a 	callr	r2
    d610:	00000106 	br	d618 <alt_get_errno+0x28>
    d614:	d0a79a04 	addi	r2,gp,-24984
}
    d618:	e037883a 	mov	sp,fp
    d61c:	dfc00117 	ldw	ra,4(sp)
    d620:	df000017 	ldw	fp,0(sp)
    d624:	dec00204 	addi	sp,sp,8
    d628:	f800283a 	ret

0000d62c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d62c:	deffed04 	addi	sp,sp,-76
    d630:	dfc01215 	stw	ra,72(sp)
    d634:	df001115 	stw	fp,68(sp)
    d638:	df001104 	addi	fp,sp,68
    d63c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d640:	e0bfff17 	ldw	r2,-4(fp)
    d644:	10000616 	blt	r2,zero,d660 <isatty+0x34>
    d648:	e0bfff17 	ldw	r2,-4(fp)
    d64c:	10c00324 	muli	r3,r2,12
    d650:	00800074 	movhi	r2,1
    d654:	1088d304 	addi	r2,r2,9036
    d658:	1885883a 	add	r2,r3,r2
    d65c:	00000106 	br	d664 <isatty+0x38>
    d660:	0005883a 	mov	r2,zero
    d664:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    d668:	e0bfef17 	ldw	r2,-68(fp)
    d66c:	10000e26 	beq	r2,zero,d6a8 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d670:	e0bfef17 	ldw	r2,-68(fp)
    d674:	10800017 	ldw	r2,0(r2)
    d678:	10800817 	ldw	r2,32(r2)
    d67c:	1000021e 	bne	r2,zero,d688 <isatty+0x5c>
    {
      return 1;
    d680:	00800044 	movi	r2,1
    d684:	00000d06 	br	d6bc <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d688:	e0bff004 	addi	r2,fp,-64
    d68c:	100b883a 	mov	r5,r2
    d690:	e13fff17 	ldw	r4,-4(fp)
    d694:	000d36c0 	call	d36c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d698:	e0bff117 	ldw	r2,-60(fp)
    d69c:	10880020 	cmpeqi	r2,r2,8192
    d6a0:	10803fcc 	andi	r2,r2,255
    d6a4:	00000506 	br	d6bc <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d6a8:	000d5f00 	call	d5f0 <alt_get_errno>
    d6ac:	1007883a 	mov	r3,r2
    d6b0:	00801444 	movi	r2,81
    d6b4:	18800015 	stw	r2,0(r3)
    return 0;
    d6b8:	0005883a 	mov	r2,zero
  }
}
    d6bc:	e037883a 	mov	sp,fp
    d6c0:	dfc00117 	ldw	ra,4(sp)
    d6c4:	df000017 	ldw	fp,0(sp)
    d6c8:	dec00204 	addi	sp,sp,8
    d6cc:	f800283a 	ret

0000d6d0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d6d0:	defffc04 	addi	sp,sp,-16
    d6d4:	df000315 	stw	fp,12(sp)
    d6d8:	df000304 	addi	fp,sp,12
    d6dc:	e13ffd15 	stw	r4,-12(fp)
    d6e0:	e17ffe15 	stw	r5,-8(fp)
    d6e4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    d6e8:	e0fffe17 	ldw	r3,-8(fp)
    d6ec:	e0bffd17 	ldw	r2,-12(fp)
    d6f0:	18800c26 	beq	r3,r2,d724 <alt_load_section+0x54>
  {
    while( to != end )
    d6f4:	00000806 	br	d718 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d6f8:	e0bffe17 	ldw	r2,-8(fp)
    d6fc:	10c00104 	addi	r3,r2,4
    d700:	e0fffe15 	stw	r3,-8(fp)
    d704:	e0fffd17 	ldw	r3,-12(fp)
    d708:	19000104 	addi	r4,r3,4
    d70c:	e13ffd15 	stw	r4,-12(fp)
    d710:	18c00017 	ldw	r3,0(r3)
    d714:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d718:	e0fffe17 	ldw	r3,-8(fp)
    d71c:	e0bfff17 	ldw	r2,-4(fp)
    d720:	18bff51e 	bne	r3,r2,d6f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700d6f8>
    {
      *to++ = *from++;
    }
  }
}
    d724:	0001883a 	nop
    d728:	e037883a 	mov	sp,fp
    d72c:	df000017 	ldw	fp,0(sp)
    d730:	dec00104 	addi	sp,sp,4
    d734:	f800283a 	ret

0000d738 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d738:	defffe04 	addi	sp,sp,-8
    d73c:	dfc00115 	stw	ra,4(sp)
    d740:	df000015 	stw	fp,0(sp)
    d744:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d748:	01800074 	movhi	r6,1
    d74c:	318e1f04 	addi	r6,r6,14460
    d750:	01400074 	movhi	r5,1
    d754:	2946a004 	addi	r5,r5,6784
    d758:	01000074 	movhi	r4,1
    d75c:	210e1f04 	addi	r4,r4,14460
    d760:	000d6d00 	call	d6d0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d764:	01800034 	movhi	r6,0
    d768:	31809204 	addi	r6,r6,584
    d76c:	01400034 	movhi	r5,0
    d770:	29400804 	addi	r5,r5,32
    d774:	01000034 	movhi	r4,0
    d778:	21000804 	addi	r4,r4,32
    d77c:	000d6d00 	call	d6d0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d780:	01800074 	movhi	r6,1
    d784:	3186a004 	addi	r6,r6,6784
    d788:	01400074 	movhi	r5,1
    d78c:	29457c04 	addi	r5,r5,5616
    d790:	01000074 	movhi	r4,1
    d794:	21057c04 	addi	r4,r4,5616
    d798:	000d6d00 	call	d6d0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d79c:	00107c80 	call	107c8 <alt_dcache_flush_all>
  alt_icache_flush_all();
    d7a0:	0010a180 	call	10a18 <alt_icache_flush_all>
}
    d7a4:	0001883a 	nop
    d7a8:	e037883a 	mov	sp,fp
    d7ac:	dfc00117 	ldw	ra,4(sp)
    d7b0:	df000017 	ldw	fp,0(sp)
    d7b4:	dec00204 	addi	sp,sp,8
    d7b8:	f800283a 	ret

0000d7bc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d7bc:	defffe04 	addi	sp,sp,-8
    d7c0:	dfc00115 	stw	ra,4(sp)
    d7c4:	df000015 	stw	fp,0(sp)
    d7c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d7cc:	d0a00c17 	ldw	r2,-32720(gp)
    d7d0:	10000326 	beq	r2,zero,d7e0 <alt_get_errno+0x24>
    d7d4:	d0a00c17 	ldw	r2,-32720(gp)
    d7d8:	103ee83a 	callr	r2
    d7dc:	00000106 	br	d7e4 <alt_get_errno+0x28>
    d7e0:	d0a79a04 	addi	r2,gp,-24984
}
    d7e4:	e037883a 	mov	sp,fp
    d7e8:	dfc00117 	ldw	ra,4(sp)
    d7ec:	df000017 	ldw	fp,0(sp)
    d7f0:	dec00204 	addi	sp,sp,8
    d7f4:	f800283a 	ret

0000d7f8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d7f8:	defff904 	addi	sp,sp,-28
    d7fc:	dfc00615 	stw	ra,24(sp)
    d800:	df000515 	stw	fp,20(sp)
    d804:	df000504 	addi	fp,sp,20
    d808:	e13ffd15 	stw	r4,-12(fp)
    d80c:	e17ffe15 	stw	r5,-8(fp)
    d810:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d814:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d818:	e0bffd17 	ldw	r2,-12(fp)
    d81c:	10000616 	blt	r2,zero,d838 <lseek+0x40>
    d820:	e0bffd17 	ldw	r2,-12(fp)
    d824:	10c00324 	muli	r3,r2,12
    d828:	00800074 	movhi	r2,1
    d82c:	1088d304 	addi	r2,r2,9036
    d830:	1885883a 	add	r2,r3,r2
    d834:	00000106 	br	d83c <lseek+0x44>
    d838:	0005883a 	mov	r2,zero
    d83c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    d840:	e0bffc17 	ldw	r2,-16(fp)
    d844:	10001026 	beq	r2,zero,d888 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d848:	e0bffc17 	ldw	r2,-16(fp)
    d84c:	10800017 	ldw	r2,0(r2)
    d850:	10800717 	ldw	r2,28(r2)
    d854:	10000926 	beq	r2,zero,d87c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d858:	e0bffc17 	ldw	r2,-16(fp)
    d85c:	10800017 	ldw	r2,0(r2)
    d860:	10800717 	ldw	r2,28(r2)
    d864:	e1bfff17 	ldw	r6,-4(fp)
    d868:	e17ffe17 	ldw	r5,-8(fp)
    d86c:	e13ffc17 	ldw	r4,-16(fp)
    d870:	103ee83a 	callr	r2
    d874:	e0bffb15 	stw	r2,-20(fp)
    d878:	00000506 	br	d890 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d87c:	00bfde84 	movi	r2,-134
    d880:	e0bffb15 	stw	r2,-20(fp)
    d884:	00000206 	br	d890 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
    d888:	00bfebc4 	movi	r2,-81
    d88c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    d890:	e0bffb17 	ldw	r2,-20(fp)
    d894:	1000070e 	bge	r2,zero,d8b4 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
    d898:	000d7bc0 	call	d7bc <alt_get_errno>
    d89c:	1007883a 	mov	r3,r2
    d8a0:	e0bffb17 	ldw	r2,-20(fp)
    d8a4:	0085c83a 	sub	r2,zero,r2
    d8a8:	18800015 	stw	r2,0(r3)
    rc = -1;
    d8ac:	00bfffc4 	movi	r2,-1
    d8b0:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    d8b4:	e0bffb17 	ldw	r2,-20(fp)
}
    d8b8:	e037883a 	mov	sp,fp
    d8bc:	dfc00117 	ldw	ra,4(sp)
    d8c0:	df000017 	ldw	fp,0(sp)
    d8c4:	dec00204 	addi	sp,sp,8
    d8c8:	f800283a 	ret

0000d8cc <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d8cc:	defffd04 	addi	sp,sp,-12
    d8d0:	dfc00215 	stw	ra,8(sp)
    d8d4:	df000115 	stw	fp,4(sp)
    d8d8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    d8dc:	0009883a 	mov	r4,zero
    d8e0:	000dee80 	call	dee8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    d8e4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    d8e8:	000df200 	call	df20 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    d8ec:	01800074 	movhi	r6,1
    d8f0:	31864504 	addi	r6,r6,6420
    d8f4:	01400074 	movhi	r5,1
    d8f8:	29464504 	addi	r5,r5,6420
    d8fc:	01000074 	movhi	r4,1
    d900:	21064504 	addi	r4,r4,6420
    d904:	0010b100 	call	10b10 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    d908:	00108c80 	call	108c8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    d90c:	01000074 	movhi	r4,1
    d910:	21024a04 	addi	r4,r4,2344
    d914:	001125c0 	call	1125c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    d918:	d0a79f17 	ldw	r2,-24964(gp)
    d91c:	d0e7a017 	ldw	r3,-24960(gp)
    d920:	d127a117 	ldw	r4,-24956(gp)
    d924:	200d883a 	mov	r6,r4
    d928:	180b883a 	mov	r5,r3
    d92c:	1009883a 	mov	r4,r2
    d930:	00003780 	call	378 <main>
    d934:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    d938:	01000044 	movi	r4,1
    d93c:	000d2340 	call	d234 <close>
  exit (result);
    d940:	e13fff17 	ldw	r4,-4(fp)
    d944:	00112700 	call	11270 <exit>

0000d948 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    d948:	defffe04 	addi	sp,sp,-8
    d94c:	df000115 	stw	fp,4(sp)
    d950:	df000104 	addi	fp,sp,4
    d954:	e13fff15 	stw	r4,-4(fp)
}
    d958:	0001883a 	nop
    d95c:	e037883a 	mov	sp,fp
    d960:	df000017 	ldw	fp,0(sp)
    d964:	dec00104 	addi	sp,sp,4
    d968:	f800283a 	ret

0000d96c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    d96c:	defffe04 	addi	sp,sp,-8
    d970:	df000115 	stw	fp,4(sp)
    d974:	df000104 	addi	fp,sp,4
    d978:	e13fff15 	stw	r4,-4(fp)
}
    d97c:	0001883a 	nop
    d980:	e037883a 	mov	sp,fp
    d984:	df000017 	ldw	fp,0(sp)
    d988:	dec00104 	addi	sp,sp,4
    d98c:	f800283a 	ret

0000d990 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d990:	defffe04 	addi	sp,sp,-8
    d994:	dfc00115 	stw	ra,4(sp)
    d998:	df000015 	stw	fp,0(sp)
    d99c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d9a0:	d0a00c17 	ldw	r2,-32720(gp)
    d9a4:	10000326 	beq	r2,zero,d9b4 <alt_get_errno+0x24>
    d9a8:	d0a00c17 	ldw	r2,-32720(gp)
    d9ac:	103ee83a 	callr	r2
    d9b0:	00000106 	br	d9b8 <alt_get_errno+0x28>
    d9b4:	d0a79a04 	addi	r2,gp,-24984
}
    d9b8:	e037883a 	mov	sp,fp
    d9bc:	dfc00117 	ldw	ra,4(sp)
    d9c0:	df000017 	ldw	fp,0(sp)
    d9c4:	dec00204 	addi	sp,sp,8
    d9c8:	f800283a 	ret

0000d9cc <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    d9cc:	defff904 	addi	sp,sp,-28
    d9d0:	dfc00615 	stw	ra,24(sp)
    d9d4:	df000515 	stw	fp,20(sp)
    d9d8:	df000504 	addi	fp,sp,20
    d9dc:	e13ffd15 	stw	r4,-12(fp)
    d9e0:	e17ffe15 	stw	r5,-8(fp)
    d9e4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d9e8:	e0bffd17 	ldw	r2,-12(fp)
    d9ec:	10000616 	blt	r2,zero,da08 <read+0x3c>
    d9f0:	e0bffd17 	ldw	r2,-12(fp)
    d9f4:	10c00324 	muli	r3,r2,12
    d9f8:	00800074 	movhi	r2,1
    d9fc:	1088d304 	addi	r2,r2,9036
    da00:	1885883a 	add	r2,r3,r2
    da04:	00000106 	br	da0c <read+0x40>
    da08:	0005883a 	mov	r2,zero
    da0c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    da10:	e0bffb17 	ldw	r2,-20(fp)
    da14:	10002226 	beq	r2,zero,daa0 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    da18:	e0bffb17 	ldw	r2,-20(fp)
    da1c:	10800217 	ldw	r2,8(r2)
    da20:	108000cc 	andi	r2,r2,3
    da24:	10800060 	cmpeqi	r2,r2,1
    da28:	1000181e 	bne	r2,zero,da8c <read+0xc0>
        (fd->dev->read))
    da2c:	e0bffb17 	ldw	r2,-20(fp)
    da30:	10800017 	ldw	r2,0(r2)
    da34:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    da38:	10001426 	beq	r2,zero,da8c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    da3c:	e0bffb17 	ldw	r2,-20(fp)
    da40:	10800017 	ldw	r2,0(r2)
    da44:	10800517 	ldw	r2,20(r2)
    da48:	e0ffff17 	ldw	r3,-4(fp)
    da4c:	180d883a 	mov	r6,r3
    da50:	e17ffe17 	ldw	r5,-8(fp)
    da54:	e13ffb17 	ldw	r4,-20(fp)
    da58:	103ee83a 	callr	r2
    da5c:	e0bffc15 	stw	r2,-16(fp)
    da60:	e0bffc17 	ldw	r2,-16(fp)
    da64:	1000070e 	bge	r2,zero,da84 <read+0xb8>
        {
          ALT_ERRNO = -rval;
    da68:	000d9900 	call	d990 <alt_get_errno>
    da6c:	1007883a 	mov	r3,r2
    da70:	e0bffc17 	ldw	r2,-16(fp)
    da74:	0085c83a 	sub	r2,zero,r2
    da78:	18800015 	stw	r2,0(r3)
          return -1;
    da7c:	00bfffc4 	movi	r2,-1
    da80:	00000c06 	br	dab4 <read+0xe8>
        }
        return rval;
    da84:	e0bffc17 	ldw	r2,-16(fp)
    da88:	00000a06 	br	dab4 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
    da8c:	000d9900 	call	d990 <alt_get_errno>
    da90:	1007883a 	mov	r3,r2
    da94:	00800344 	movi	r2,13
    da98:	18800015 	stw	r2,0(r3)
    da9c:	00000406 	br	dab0 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    daa0:	000d9900 	call	d990 <alt_get_errno>
    daa4:	1007883a 	mov	r3,r2
    daa8:	00801444 	movi	r2,81
    daac:	18800015 	stw	r2,0(r3)
  }
  return -1;
    dab0:	00bfffc4 	movi	r2,-1
}
    dab4:	e037883a 	mov	sp,fp
    dab8:	dfc00117 	ldw	ra,4(sp)
    dabc:	df000017 	ldw	fp,0(sp)
    dac0:	dec00204 	addi	sp,sp,8
    dac4:	f800283a 	ret

0000dac8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    dac8:	defffe04 	addi	sp,sp,-8
    dacc:	df000115 	stw	fp,4(sp)
    dad0:	df000104 	addi	fp,sp,4
    dad4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
    dad8:	e0bfff17 	ldw	r2,-4(fp)
    dadc:	108000d0 	cmplti	r2,r2,3
    dae0:	10000d1e 	bne	r2,zero,db18 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
    dae4:	00800074 	movhi	r2,1
    dae8:	1088d304 	addi	r2,r2,9036
    daec:	e0ffff17 	ldw	r3,-4(fp)
    daf0:	18c00324 	muli	r3,r3,12
    daf4:	10c5883a 	add	r2,r2,r3
    daf8:	10800204 	addi	r2,r2,8
    dafc:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    db00:	00800074 	movhi	r2,1
    db04:	1088d304 	addi	r2,r2,9036
    db08:	e0ffff17 	ldw	r3,-4(fp)
    db0c:	18c00324 	muli	r3,r3,12
    db10:	10c5883a 	add	r2,r2,r3
    db14:	10000015 	stw	zero,0(r2)
  }
}
    db18:	0001883a 	nop
    db1c:	e037883a 	mov	sp,fp
    db20:	df000017 	ldw	fp,0(sp)
    db24:	dec00104 	addi	sp,sp,4
    db28:	f800283a 	ret

0000db2c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    db2c:	defff904 	addi	sp,sp,-28
    db30:	df000615 	stw	fp,24(sp)
    db34:	df000604 	addi	fp,sp,24
    db38:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    db3c:	0005303a 	rdctl	r2,status
    db40:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    db44:	e0fffe17 	ldw	r3,-8(fp)
    db48:	00bfff84 	movi	r2,-2
    db4c:	1884703a 	and	r2,r3,r2
    db50:	1001703a 	wrctl	status,r2
  
  return context;
    db54:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    db58:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    db5c:	d0a00d17 	ldw	r2,-32716(gp)
    db60:	10c000c4 	addi	r3,r2,3
    db64:	00bfff04 	movi	r2,-4
    db68:	1884703a 	and	r2,r3,r2
    db6c:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    db70:	d0e00d17 	ldw	r3,-32716(gp)
    db74:	e0bfff17 	ldw	r2,-4(fp)
    db78:	1887883a 	add	r3,r3,r2
    db7c:	00810034 	movhi	r2,1024
    db80:	10800004 	addi	r2,r2,0
    db84:	10c0062e 	bgeu	r2,r3,dba0 <sbrk+0x74>
    db88:	e0bffb17 	ldw	r2,-20(fp)
    db8c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    db90:	e0bffa17 	ldw	r2,-24(fp)
    db94:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    db98:	00bfffc4 	movi	r2,-1
    db9c:	00000b06 	br	dbcc <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    dba0:	d0a00d17 	ldw	r2,-32716(gp)
    dba4:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    dba8:	d0e00d17 	ldw	r3,-32716(gp)
    dbac:	e0bfff17 	ldw	r2,-4(fp)
    dbb0:	1885883a 	add	r2,r3,r2
    dbb4:	d0a00d15 	stw	r2,-32716(gp)
    dbb8:	e0bffb17 	ldw	r2,-20(fp)
    dbbc:	e0bffc15 	stw	r2,-16(fp)
    dbc0:	e0bffc17 	ldw	r2,-16(fp)
    dbc4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    dbc8:	e0bffd17 	ldw	r2,-12(fp)
} 
    dbcc:	e037883a 	mov	sp,fp
    dbd0:	df000017 	ldw	fp,0(sp)
    dbd4:	dec00104 	addi	sp,sp,4
    dbd8:	f800283a 	ret

0000dbdc <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    dbdc:	defffa04 	addi	sp,sp,-24
    dbe0:	df000515 	stw	fp,20(sp)
    dbe4:	df000504 	addi	fp,sp,20
    dbe8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    dbec:	0005303a 	rdctl	r2,status
    dbf0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    dbf4:	e0fffc17 	ldw	r3,-16(fp)
    dbf8:	00bfff84 	movi	r2,-2
    dbfc:	1884703a 	and	r2,r3,r2
    dc00:	1001703a 	wrctl	status,r2
  
  return context;
    dc04:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    dc08:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    dc0c:	e0bfff17 	ldw	r2,-4(fp)
    dc10:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    dc14:	e0bffd17 	ldw	r2,-12(fp)
    dc18:	10800017 	ldw	r2,0(r2)
    dc1c:	e0fffd17 	ldw	r3,-12(fp)
    dc20:	18c00117 	ldw	r3,4(r3)
    dc24:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    dc28:	e0bffd17 	ldw	r2,-12(fp)
    dc2c:	10800117 	ldw	r2,4(r2)
    dc30:	e0fffd17 	ldw	r3,-12(fp)
    dc34:	18c00017 	ldw	r3,0(r3)
    dc38:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    dc3c:	e0bffd17 	ldw	r2,-12(fp)
    dc40:	e0fffd17 	ldw	r3,-12(fp)
    dc44:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    dc48:	e0bffd17 	ldw	r2,-12(fp)
    dc4c:	e0fffd17 	ldw	r3,-12(fp)
    dc50:	10c00015 	stw	r3,0(r2)
    dc54:	e0bffb17 	ldw	r2,-20(fp)
    dc58:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    dc5c:	e0bffe17 	ldw	r2,-8(fp)
    dc60:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    dc64:	0001883a 	nop
    dc68:	e037883a 	mov	sp,fp
    dc6c:	df000017 	ldw	fp,0(sp)
    dc70:	dec00104 	addi	sp,sp,4
    dc74:	f800283a 	ret

0000dc78 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    dc78:	defffb04 	addi	sp,sp,-20
    dc7c:	dfc00415 	stw	ra,16(sp)
    dc80:	df000315 	stw	fp,12(sp)
    dc84:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    dc88:	d0a00e17 	ldw	r2,-32712(gp)
    dc8c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    dc90:	d0a7a317 	ldw	r2,-24948(gp)
    dc94:	10800044 	addi	r2,r2,1
    dc98:	d0a7a315 	stw	r2,-24948(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    dc9c:	00002e06 	br	dd58 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    dca0:	e0bffd17 	ldw	r2,-12(fp)
    dca4:	10800017 	ldw	r2,0(r2)
    dca8:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    dcac:	e0bffd17 	ldw	r2,-12(fp)
    dcb0:	10800403 	ldbu	r2,16(r2)
    dcb4:	10803fcc 	andi	r2,r2,255
    dcb8:	10000426 	beq	r2,zero,dccc <alt_tick+0x54>
    dcbc:	d0a7a317 	ldw	r2,-24948(gp)
    dcc0:	1000021e 	bne	r2,zero,dccc <alt_tick+0x54>
    {
      alarm->rollover = 0;
    dcc4:	e0bffd17 	ldw	r2,-12(fp)
    dcc8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    dccc:	e0bffd17 	ldw	r2,-12(fp)
    dcd0:	10800217 	ldw	r2,8(r2)
    dcd4:	d0e7a317 	ldw	r3,-24948(gp)
    dcd8:	18801d36 	bltu	r3,r2,dd50 <alt_tick+0xd8>
    dcdc:	e0bffd17 	ldw	r2,-12(fp)
    dce0:	10800403 	ldbu	r2,16(r2)
    dce4:	10803fcc 	andi	r2,r2,255
    dce8:	1000191e 	bne	r2,zero,dd50 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    dcec:	e0bffd17 	ldw	r2,-12(fp)
    dcf0:	10800317 	ldw	r2,12(r2)
    dcf4:	e0fffd17 	ldw	r3,-12(fp)
    dcf8:	18c00517 	ldw	r3,20(r3)
    dcfc:	1809883a 	mov	r4,r3
    dd00:	103ee83a 	callr	r2
    dd04:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    dd08:	e0bfff17 	ldw	r2,-4(fp)
    dd0c:	1000031e 	bne	r2,zero,dd1c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    dd10:	e13ffd17 	ldw	r4,-12(fp)
    dd14:	000dbdc0 	call	dbdc <alt_alarm_stop>
    dd18:	00000d06 	br	dd50 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    dd1c:	e0bffd17 	ldw	r2,-12(fp)
    dd20:	10c00217 	ldw	r3,8(r2)
    dd24:	e0bfff17 	ldw	r2,-4(fp)
    dd28:	1887883a 	add	r3,r3,r2
    dd2c:	e0bffd17 	ldw	r2,-12(fp)
    dd30:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    dd34:	e0bffd17 	ldw	r2,-12(fp)
    dd38:	10c00217 	ldw	r3,8(r2)
    dd3c:	d0a7a317 	ldw	r2,-24948(gp)
    dd40:	1880032e 	bgeu	r3,r2,dd50 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    dd44:	e0bffd17 	ldw	r2,-12(fp)
    dd48:	00c00044 	movi	r3,1
    dd4c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    dd50:	e0bffe17 	ldw	r2,-8(fp)
    dd54:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    dd58:	e0fffd17 	ldw	r3,-12(fp)
    dd5c:	d0a00e04 	addi	r2,gp,-32712
    dd60:	18bfcf1e 	bne	r3,r2,dca0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700dca0>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    dd64:	0001883a 	nop
}
    dd68:	0001883a 	nop
    dd6c:	e037883a 	mov	sp,fp
    dd70:	dfc00117 	ldw	ra,4(sp)
    dd74:	df000017 	ldw	fp,0(sp)
    dd78:	dec00204 	addi	sp,sp,8
    dd7c:	f800283a 	ret

0000dd80 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    dd80:	defffe04 	addi	sp,sp,-8
    dd84:	dfc00115 	stw	ra,4(sp)
    dd88:	df000015 	stw	fp,0(sp)
    dd8c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    dd90:	d0a00c17 	ldw	r2,-32720(gp)
    dd94:	10000326 	beq	r2,zero,dda4 <alt_get_errno+0x24>
    dd98:	d0a00c17 	ldw	r2,-32720(gp)
    dd9c:	103ee83a 	callr	r2
    dda0:	00000106 	br	dda8 <alt_get_errno+0x28>
    dda4:	d0a79a04 	addi	r2,gp,-24984
}
    dda8:	e037883a 	mov	sp,fp
    ddac:	dfc00117 	ldw	ra,4(sp)
    ddb0:	df000017 	ldw	fp,0(sp)
    ddb4:	dec00204 	addi	sp,sp,8
    ddb8:	f800283a 	ret

0000ddbc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    ddbc:	defff904 	addi	sp,sp,-28
    ddc0:	dfc00615 	stw	ra,24(sp)
    ddc4:	df000515 	stw	fp,20(sp)
    ddc8:	df000504 	addi	fp,sp,20
    ddcc:	e13ffd15 	stw	r4,-12(fp)
    ddd0:	e17ffe15 	stw	r5,-8(fp)
    ddd4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    ddd8:	e0bffd17 	ldw	r2,-12(fp)
    dddc:	10000616 	blt	r2,zero,ddf8 <write+0x3c>
    dde0:	e0bffd17 	ldw	r2,-12(fp)
    dde4:	10c00324 	muli	r3,r2,12
    dde8:	00800074 	movhi	r2,1
    ddec:	1088d304 	addi	r2,r2,9036
    ddf0:	1885883a 	add	r2,r3,r2
    ddf4:	00000106 	br	ddfc <write+0x40>
    ddf8:	0005883a 	mov	r2,zero
    ddfc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    de00:	e0bffb17 	ldw	r2,-20(fp)
    de04:	10002126 	beq	r2,zero,de8c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    de08:	e0bffb17 	ldw	r2,-20(fp)
    de0c:	10800217 	ldw	r2,8(r2)
    de10:	108000cc 	andi	r2,r2,3
    de14:	10001826 	beq	r2,zero,de78 <write+0xbc>
    de18:	e0bffb17 	ldw	r2,-20(fp)
    de1c:	10800017 	ldw	r2,0(r2)
    de20:	10800617 	ldw	r2,24(r2)
    de24:	10001426 	beq	r2,zero,de78 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    de28:	e0bffb17 	ldw	r2,-20(fp)
    de2c:	10800017 	ldw	r2,0(r2)
    de30:	10800617 	ldw	r2,24(r2)
    de34:	e0ffff17 	ldw	r3,-4(fp)
    de38:	180d883a 	mov	r6,r3
    de3c:	e17ffe17 	ldw	r5,-8(fp)
    de40:	e13ffb17 	ldw	r4,-20(fp)
    de44:	103ee83a 	callr	r2
    de48:	e0bffc15 	stw	r2,-16(fp)
    de4c:	e0bffc17 	ldw	r2,-16(fp)
    de50:	1000070e 	bge	r2,zero,de70 <write+0xb4>
      {
        ALT_ERRNO = -rval;
    de54:	000dd800 	call	dd80 <alt_get_errno>
    de58:	1007883a 	mov	r3,r2
    de5c:	e0bffc17 	ldw	r2,-16(fp)
    de60:	0085c83a 	sub	r2,zero,r2
    de64:	18800015 	stw	r2,0(r3)
        return -1;
    de68:	00bfffc4 	movi	r2,-1
    de6c:	00000c06 	br	dea0 <write+0xe4>
      }
      return rval;
    de70:	e0bffc17 	ldw	r2,-16(fp)
    de74:	00000a06 	br	dea0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
    de78:	000dd800 	call	dd80 <alt_get_errno>
    de7c:	1007883a 	mov	r3,r2
    de80:	00800344 	movi	r2,13
    de84:	18800015 	stw	r2,0(r3)
    de88:	00000406 	br	de9c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    de8c:	000dd800 	call	dd80 <alt_get_errno>
    de90:	1007883a 	mov	r3,r2
    de94:	00801444 	movi	r2,81
    de98:	18800015 	stw	r2,0(r3)
  }
  return -1;
    de9c:	00bfffc4 	movi	r2,-1
}
    dea0:	e037883a 	mov	sp,fp
    dea4:	dfc00117 	ldw	ra,4(sp)
    dea8:	df000017 	ldw	fp,0(sp)
    deac:	dec00204 	addi	sp,sp,8
    deb0:	f800283a 	ret

0000deb4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    deb4:	defffd04 	addi	sp,sp,-12
    deb8:	dfc00215 	stw	ra,8(sp)
    debc:	df000115 	stw	fp,4(sp)
    dec0:	df000104 	addi	fp,sp,4
    dec4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    dec8:	d1600904 	addi	r5,gp,-32732
    decc:	e13fff17 	ldw	r4,-4(fp)
    ded0:	00108240 	call	10824 <alt_dev_llist_insert>
}
    ded4:	e037883a 	mov	sp,fp
    ded8:	dfc00117 	ldw	ra,4(sp)
    dedc:	df000017 	ldw	fp,0(sp)
    dee0:	dec00204 	addi	sp,sp,8
    dee4:	f800283a 	ret

0000dee8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    dee8:	defffd04 	addi	sp,sp,-12
    deec:	dfc00215 	stw	ra,8(sp)
    def0:	df000115 	stw	fp,4(sp)
    def4:	df000104 	addi	fp,sp,4
    def8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2, Nios2);
    defc:	0010f600 	call	10f60 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    df00:	00800044 	movi	r2,1
    df04:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    df08:	0001883a 	nop
    df0c:	e037883a 	mov	sp,fp
    df10:	dfc00117 	ldw	ra,4(sp)
    df14:	df000017 	ldw	fp,0(sp)
    df18:	dec00204 	addi	sp,sp,8
    df1c:	f800283a 	ret

0000df20 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    df20:	defffb04 	addi	sp,sp,-20
    df24:	dfc00415 	stw	ra,16(sp)
    df28:	df000315 	stw	fp,12(sp)
    df2c:	df000304 	addi	fp,sp,12
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER, Interval_Timer);
    df30:	01c00204 	movi	r7,8
    df34:	01800244 	movi	r6,9
    df38:	000b883a 	mov	r5,zero
    df3c:	013fc834 	movhi	r4,65312
    df40:	21080004 	addi	r4,r4,8192
    df44:	000f3680 	call	f368 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER_2, Interval_Timer_2);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
    df48:	01800204 	movi	r6,8
    df4c:	000b883a 	mov	r5,zero
    df50:	01000074 	movhi	r4,1
    df54:	21093d04 	addi	r4,r4,9460
    df58:	000e9f00 	call	e9f0 <altera_avalon_jtag_uart_init>
    df5c:	01000074 	movhi	r4,1
    df60:	21093304 	addi	r4,r4,9420
    df64:	000deb40 	call	deb4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, SysID);
    df68:	0001883a 	nop
    ALTERA_UP_AVALON_AUDIO_AND_VIDEO_CONFIG_INIT ( AV_CONFIG, AV_Config);
    df6c:	01000074 	movhi	r4,1
    df70:	210d4b04 	addi	r4,r4,13612
    df74:	000deb40 	call	deb4 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO_SUBSYSTEM_AUDIO, Audio_Subsystem_Audio);
    df78:	01000074 	movhi	r4,1
    df7c:	210d5704 	addi	r4,r4,13660
    df80:	000deb40 	call	deb4 <alt_dev_reg>
    ALTERA_UP_AVALON_CHARACTER_LCD_INIT ( CHAR_LCD_16X2, Char_LCD_16x2);
    df84:	01000074 	movhi	r4,1
    df88:	210d6304 	addi	r4,r4,13708
    df8c:	000f4900 	call	f490 <alt_up_character_lcd_init>
    df90:	01000074 	movhi	r4,1
    df94:	210d6304 	addi	r4,r4,13708
    df98:	000deb40 	call	deb4 <alt_dev_reg>
    ALTERA_UP_AVALON_IRDA_INIT ( IRDA, IrDA);
    df9c:	01000074 	movhi	r4,1
    dfa0:	210d6e04 	addi	r4,r4,13752
    dfa4:	000deb40 	call	deb4 <alt_dev_reg>
    ALTERA_UP_AVALON_PS2_INIT ( PS2_PORT, PS2_Port);
    dfa8:	01000074 	movhi	r4,1
    dfac:	210d7904 	addi	r4,r4,13796
    dfb0:	000fd840 	call	fd84 <alt_up_ps2_init>
    dfb4:	01000074 	movhi	r4,1
    dfb8:	210d7904 	addi	r4,r4,13796
    dfbc:	000deb40 	call	deb4 <alt_dev_reg>
    ALTERA_UP_AVALON_PS2_INIT ( PS2_PORT_DUAL, PS2_Port_Dual);
    dfc0:	01000074 	movhi	r4,1
    dfc4:	210d8704 	addi	r4,r4,13852
    dfc8:	000fd840 	call	fd84 <alt_up_ps2_init>
    dfcc:	01000074 	movhi	r4,1
    dfd0:	210d8704 	addi	r4,r4,13852
    dfd4:	000deb40 	call	deb4 <alt_dev_reg>
    ALTERA_UP_AVALON_RS232_INIT ( SERIAL_PORT, Serial_Port);
    dfd8:	01000074 	movhi	r4,1
    dfdc:	210d9504 	addi	r4,r4,13908
    dfe0:	000deb40 	call	deb4 <alt_dev_reg>
    ALTERA_UP_AVALON_USB_INIT ( USB, USB);
    dfe4:	01000074 	movhi	r4,1
    dfe8:	210da004 	addi	r4,r4,13952
    dfec:	000deb40 	call	deb4 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_DMA_CONTROLLER_INIT ( VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_CHAR_BUF_DMA, VGA_Subsystem_Char_Buf_Subsystem_Char_Buf_DMA);
    dff0:	00800074 	movhi	r2,1
    dff4:	108dad04 	addi	r2,r2,14004
    dff8:	10800a17 	ldw	r2,40(r2)
    dffc:	10800017 	ldw	r2,0(r2)
    e000:	1007883a 	mov	r3,r2
    e004:	00800074 	movhi	r2,1
    e008:	108dad04 	addi	r2,r2,14004
    e00c:	10c00b15 	stw	r3,44(r2)
    e010:	00800074 	movhi	r2,1
    e014:	108dad04 	addi	r2,r2,14004
    e018:	10800a17 	ldw	r2,40(r2)
    e01c:	10800104 	addi	r2,r2,4
    e020:	10800017 	ldw	r2,0(r2)
    e024:	1007883a 	mov	r3,r2
    e028:	00800074 	movhi	r2,1
    e02c:	108dad04 	addi	r2,r2,14004
    e030:	10c00c15 	stw	r3,48(r2)
    e034:	00800074 	movhi	r2,1
    e038:	108dad04 	addi	r2,r2,14004
    e03c:	10800a17 	ldw	r2,40(r2)
    e040:	10800204 	addi	r2,r2,8
    e044:	10800017 	ldw	r2,0(r2)
    e048:	10ffffcc 	andi	r3,r2,65535
    e04c:	00800074 	movhi	r2,1
    e050:	108dad04 	addi	r2,r2,14004
    e054:	10c01115 	stw	r3,68(r2)
    e058:	00800074 	movhi	r2,1
    e05c:	108dad04 	addi	r2,r2,14004
    e060:	10800a17 	ldw	r2,40(r2)
    e064:	10800204 	addi	r2,r2,8
    e068:	10800017 	ldw	r2,0(r2)
    e06c:	1006d43a 	srli	r3,r2,16
    e070:	00800074 	movhi	r2,1
    e074:	108dad04 	addi	r2,r2,14004
    e078:	10c01215 	stw	r3,72(r2)
    e07c:	00800074 	movhi	r2,1
    e080:	108dad04 	addi	r2,r2,14004
    e084:	10800a17 	ldw	r2,40(r2)
    e088:	10800304 	addi	r2,r2,12
    e08c:	10800017 	ldw	r2,0(r2)
    e090:	1005d07a 	srai	r2,r2,1
    e094:	10c0004c 	andi	r3,r2,1
    e098:	00800074 	movhi	r2,1
    e09c:	108dad04 	addi	r2,r2,14004
    e0a0:	10c00d15 	stw	r3,52(r2)
    e0a4:	00800074 	movhi	r2,1
    e0a8:	108dad04 	addi	r2,r2,14004
    e0ac:	10800a17 	ldw	r2,40(r2)
    e0b0:	10800304 	addi	r2,r2,12
    e0b4:	10800017 	ldw	r2,0(r2)
    e0b8:	1005d23a 	srai	r2,r2,8
    e0bc:	108003cc 	andi	r2,r2,15
    e0c0:	10800044 	addi	r2,r2,1
    e0c4:	1007883a 	mov	r3,r2
    e0c8:	00800074 	movhi	r2,1
    e0cc:	108dad04 	addi	r2,r2,14004
    e0d0:	10c00e15 	stw	r3,56(r2)
    e0d4:	00800074 	movhi	r2,1
    e0d8:	108dad04 	addi	r2,r2,14004
    e0dc:	10800a17 	ldw	r2,40(r2)
    e0e0:	10800304 	addi	r2,r2,12
    e0e4:	10800017 	ldw	r2,0(r2)
    e0e8:	1005d1ba 	srai	r2,r2,6
    e0ec:	108000cc 	andi	r2,r2,3
    e0f0:	10800044 	addi	r2,r2,1
    e0f4:	1007883a 	mov	r3,r2
    e0f8:	00800074 	movhi	r2,1
    e0fc:	108dad04 	addi	r2,r2,14004
    e100:	10c00f15 	stw	r3,60(r2)
    e104:	00800074 	movhi	r2,1
    e108:	108dad04 	addi	r2,r2,14004
    e10c:	10800e17 	ldw	r2,56(r2)
    e110:	1007883a 	mov	r3,r2
    e114:	00800074 	movhi	r2,1
    e118:	108dad04 	addi	r2,r2,14004
    e11c:	10800f17 	ldw	r2,60(r2)
    e120:	1885383a 	mul	r2,r3,r2
    e124:	e0bffd05 	stb	r2,-12(fp)
    e128:	e0bffd03 	ldbu	r2,-12(fp)
    e12c:	10800268 	cmpgeui	r2,r2,9
    e130:	1000051e 	bne	r2,zero,e148 <alt_sys_init+0x228>
    e134:	00800074 	movhi	r2,1
    e138:	108dad04 	addi	r2,r2,14004
    e13c:	00c00044 	movi	r3,1
    e140:	10c01015 	stw	r3,64(r2)
    e144:	00000c06 	br	e178 <alt_sys_init+0x258>
    e148:	e0bffd03 	ldbu	r2,-12(fp)
    e14c:	10800468 	cmpgeui	r2,r2,17
    e150:	1000051e 	bne	r2,zero,e168 <alt_sys_init+0x248>
    e154:	00800074 	movhi	r2,1
    e158:	108dad04 	addi	r2,r2,14004
    e15c:	00c00084 	movi	r3,2
    e160:	10c01015 	stw	r3,64(r2)
    e164:	00000406 	br	e178 <alt_sys_init+0x258>
    e168:	00800074 	movhi	r2,1
    e16c:	108dad04 	addi	r2,r2,14004
    e170:	00c00104 	movi	r3,4
    e174:	10c01015 	stw	r3,64(r2)
    e178:	00800074 	movhi	r2,1
    e17c:	108dad04 	addi	r2,r2,14004
    e180:	10800a17 	ldw	r2,40(r2)
    e184:	10800304 	addi	r2,r2,12
    e188:	10800017 	ldw	r2,0(r2)
    e18c:	1005d43a 	srai	r2,r2,16
    e190:	e0bffd45 	stb	r2,-11(fp)
    e194:	00800074 	movhi	r2,1
    e198:	108dad04 	addi	r2,r2,14004
    e19c:	10800a17 	ldw	r2,40(r2)
    e1a0:	10800304 	addi	r2,r2,12
    e1a4:	10800017 	ldw	r2,0(r2)
    e1a8:	1004d63a 	srli	r2,r2,24
    e1ac:	e0bffd85 	stb	r2,-10(fp)
    e1b0:	00800074 	movhi	r2,1
    e1b4:	108dad04 	addi	r2,r2,14004
    e1b8:	10801017 	ldw	r2,64(r2)
    e1bc:	10800058 	cmpnei	r2,r2,1
    e1c0:	1000041e 	bne	r2,zero,e1d4 <alt_sys_init+0x2b4>
    e1c4:	00800074 	movhi	r2,1
    e1c8:	108dad04 	addi	r2,r2,14004
    e1cc:	10001315 	stw	zero,76(r2)
    e1d0:	00000e06 	br	e20c <alt_sys_init+0x2ec>
    e1d4:	00800074 	movhi	r2,1
    e1d8:	108dad04 	addi	r2,r2,14004
    e1dc:	10801017 	ldw	r2,64(r2)
    e1e0:	10800098 	cmpnei	r2,r2,2
    e1e4:	1000051e 	bne	r2,zero,e1fc <alt_sys_init+0x2dc>
    e1e8:	00800074 	movhi	r2,1
    e1ec:	108dad04 	addi	r2,r2,14004
    e1f0:	00c00044 	movi	r3,1
    e1f4:	10c01315 	stw	r3,76(r2)
    e1f8:	00000406 	br	e20c <alt_sys_init+0x2ec>
    e1fc:	00800074 	movhi	r2,1
    e200:	108dad04 	addi	r2,r2,14004
    e204:	00c00084 	movi	r3,2
    e208:	10c01315 	stw	r3,76(r2)
    e20c:	e0bffd43 	ldbu	r2,-11(fp)
    e210:	00c00804 	movi	r3,32
    e214:	1885c83a 	sub	r2,r3,r2
    e218:	00ffffc4 	movi	r3,-1
    e21c:	1886d83a 	srl	r3,r3,r2
    e220:	00800074 	movhi	r2,1
    e224:	108dad04 	addi	r2,r2,14004
    e228:	10c01415 	stw	r3,80(r2)
    e22c:	e0fffd43 	ldbu	r3,-11(fp)
    e230:	00800074 	movhi	r2,1
    e234:	108dad04 	addi	r2,r2,14004
    e238:	10801317 	ldw	r2,76(r2)
    e23c:	1887883a 	add	r3,r3,r2
    e240:	00800074 	movhi	r2,1
    e244:	108dad04 	addi	r2,r2,14004
    e248:	10c01515 	stw	r3,84(r2)
    e24c:	e0bffd83 	ldbu	r2,-10(fp)
    e250:	00c00804 	movi	r3,32
    e254:	1885c83a 	sub	r2,r3,r2
    e258:	00ffffc4 	movi	r3,-1
    e25c:	1886d83a 	srl	r3,r3,r2
    e260:	00800074 	movhi	r2,1
    e264:	108dad04 	addi	r2,r2,14004
    e268:	10c01615 	stw	r3,88(r2)
    e26c:	01000074 	movhi	r4,1
    e270:	210dad04 	addi	r4,r4,14004
    e274:	000deb40 	call	deb4 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_DMA_CONTROLLER_INIT ( VGA_SUBSYSTEM_VGA_PIXEL_DMA, VGA_Subsystem_VGA_Pixel_DMA);
    e278:	00800074 	movhi	r2,1
    e27c:	108dc404 	addi	r2,r2,14096
    e280:	10800a17 	ldw	r2,40(r2)
    e284:	10800017 	ldw	r2,0(r2)
    e288:	1007883a 	mov	r3,r2
    e28c:	00800074 	movhi	r2,1
    e290:	108dc404 	addi	r2,r2,14096
    e294:	10c00b15 	stw	r3,44(r2)
    e298:	00800074 	movhi	r2,1
    e29c:	108dc404 	addi	r2,r2,14096
    e2a0:	10800a17 	ldw	r2,40(r2)
    e2a4:	10800104 	addi	r2,r2,4
    e2a8:	10800017 	ldw	r2,0(r2)
    e2ac:	1007883a 	mov	r3,r2
    e2b0:	00800074 	movhi	r2,1
    e2b4:	108dc404 	addi	r2,r2,14096
    e2b8:	10c00c15 	stw	r3,48(r2)
    e2bc:	00800074 	movhi	r2,1
    e2c0:	108dc404 	addi	r2,r2,14096
    e2c4:	10800a17 	ldw	r2,40(r2)
    e2c8:	10800204 	addi	r2,r2,8
    e2cc:	10800017 	ldw	r2,0(r2)
    e2d0:	10ffffcc 	andi	r3,r2,65535
    e2d4:	00800074 	movhi	r2,1
    e2d8:	108dc404 	addi	r2,r2,14096
    e2dc:	10c01115 	stw	r3,68(r2)
    e2e0:	00800074 	movhi	r2,1
    e2e4:	108dc404 	addi	r2,r2,14096
    e2e8:	10800a17 	ldw	r2,40(r2)
    e2ec:	10800204 	addi	r2,r2,8
    e2f0:	10800017 	ldw	r2,0(r2)
    e2f4:	1006d43a 	srli	r3,r2,16
    e2f8:	00800074 	movhi	r2,1
    e2fc:	108dc404 	addi	r2,r2,14096
    e300:	10c01215 	stw	r3,72(r2)
    e304:	00800074 	movhi	r2,1
    e308:	108dc404 	addi	r2,r2,14096
    e30c:	10800a17 	ldw	r2,40(r2)
    e310:	10800304 	addi	r2,r2,12
    e314:	10800017 	ldw	r2,0(r2)
    e318:	1005d07a 	srai	r2,r2,1
    e31c:	10c0004c 	andi	r3,r2,1
    e320:	00800074 	movhi	r2,1
    e324:	108dc404 	addi	r2,r2,14096
    e328:	10c00d15 	stw	r3,52(r2)
    e32c:	00800074 	movhi	r2,1
    e330:	108dc404 	addi	r2,r2,14096
    e334:	10800a17 	ldw	r2,40(r2)
    e338:	10800304 	addi	r2,r2,12
    e33c:	10800017 	ldw	r2,0(r2)
    e340:	1005d23a 	srai	r2,r2,8
    e344:	108003cc 	andi	r2,r2,15
    e348:	10800044 	addi	r2,r2,1
    e34c:	1007883a 	mov	r3,r2
    e350:	00800074 	movhi	r2,1
    e354:	108dc404 	addi	r2,r2,14096
    e358:	10c00e15 	stw	r3,56(r2)
    e35c:	00800074 	movhi	r2,1
    e360:	108dc404 	addi	r2,r2,14096
    e364:	10800a17 	ldw	r2,40(r2)
    e368:	10800304 	addi	r2,r2,12
    e36c:	10800017 	ldw	r2,0(r2)
    e370:	1005d1ba 	srai	r2,r2,6
    e374:	108000cc 	andi	r2,r2,3
    e378:	10800044 	addi	r2,r2,1
    e37c:	1007883a 	mov	r3,r2
    e380:	00800074 	movhi	r2,1
    e384:	108dc404 	addi	r2,r2,14096
    e388:	10c00f15 	stw	r3,60(r2)
    e38c:	00800074 	movhi	r2,1
    e390:	108dc404 	addi	r2,r2,14096
    e394:	10800e17 	ldw	r2,56(r2)
    e398:	1007883a 	mov	r3,r2
    e39c:	00800074 	movhi	r2,1
    e3a0:	108dc404 	addi	r2,r2,14096
    e3a4:	10800f17 	ldw	r2,60(r2)
    e3a8:	1885383a 	mul	r2,r3,r2
    e3ac:	e0bffdc5 	stb	r2,-9(fp)
    e3b0:	e0bffdc3 	ldbu	r2,-9(fp)
    e3b4:	10800268 	cmpgeui	r2,r2,9
    e3b8:	1000051e 	bne	r2,zero,e3d0 <alt_sys_init+0x4b0>
    e3bc:	00800074 	movhi	r2,1
    e3c0:	108dc404 	addi	r2,r2,14096
    e3c4:	00c00044 	movi	r3,1
    e3c8:	10c01015 	stw	r3,64(r2)
    e3cc:	00000c06 	br	e400 <alt_sys_init+0x4e0>
    e3d0:	e0bffdc3 	ldbu	r2,-9(fp)
    e3d4:	10800468 	cmpgeui	r2,r2,17
    e3d8:	1000051e 	bne	r2,zero,e3f0 <alt_sys_init+0x4d0>
    e3dc:	00800074 	movhi	r2,1
    e3e0:	108dc404 	addi	r2,r2,14096
    e3e4:	00c00084 	movi	r3,2
    e3e8:	10c01015 	stw	r3,64(r2)
    e3ec:	00000406 	br	e400 <alt_sys_init+0x4e0>
    e3f0:	00800074 	movhi	r2,1
    e3f4:	108dc404 	addi	r2,r2,14096
    e3f8:	00c00104 	movi	r3,4
    e3fc:	10c01015 	stw	r3,64(r2)
    e400:	00800074 	movhi	r2,1
    e404:	108dc404 	addi	r2,r2,14096
    e408:	10800a17 	ldw	r2,40(r2)
    e40c:	10800304 	addi	r2,r2,12
    e410:	10800017 	ldw	r2,0(r2)
    e414:	1005d43a 	srai	r2,r2,16
    e418:	e0bffe05 	stb	r2,-8(fp)
    e41c:	00800074 	movhi	r2,1
    e420:	108dc404 	addi	r2,r2,14096
    e424:	10800a17 	ldw	r2,40(r2)
    e428:	10800304 	addi	r2,r2,12
    e42c:	10800017 	ldw	r2,0(r2)
    e430:	1004d63a 	srli	r2,r2,24
    e434:	e0bffe45 	stb	r2,-7(fp)
    e438:	00800074 	movhi	r2,1
    e43c:	108dc404 	addi	r2,r2,14096
    e440:	10801017 	ldw	r2,64(r2)
    e444:	10800058 	cmpnei	r2,r2,1
    e448:	1000041e 	bne	r2,zero,e45c <alt_sys_init+0x53c>
    e44c:	00800074 	movhi	r2,1
    e450:	108dc404 	addi	r2,r2,14096
    e454:	10001315 	stw	zero,76(r2)
    e458:	00000e06 	br	e494 <alt_sys_init+0x574>
    e45c:	00800074 	movhi	r2,1
    e460:	108dc404 	addi	r2,r2,14096
    e464:	10801017 	ldw	r2,64(r2)
    e468:	10800098 	cmpnei	r2,r2,2
    e46c:	1000051e 	bne	r2,zero,e484 <alt_sys_init+0x564>
    e470:	00800074 	movhi	r2,1
    e474:	108dc404 	addi	r2,r2,14096
    e478:	00c00044 	movi	r3,1
    e47c:	10c01315 	stw	r3,76(r2)
    e480:	00000406 	br	e494 <alt_sys_init+0x574>
    e484:	00800074 	movhi	r2,1
    e488:	108dc404 	addi	r2,r2,14096
    e48c:	00c00084 	movi	r3,2
    e490:	10c01315 	stw	r3,76(r2)
    e494:	e0bffe03 	ldbu	r2,-8(fp)
    e498:	00c00804 	movi	r3,32
    e49c:	1885c83a 	sub	r2,r3,r2
    e4a0:	00ffffc4 	movi	r3,-1
    e4a4:	1886d83a 	srl	r3,r3,r2
    e4a8:	00800074 	movhi	r2,1
    e4ac:	108dc404 	addi	r2,r2,14096
    e4b0:	10c01415 	stw	r3,80(r2)
    e4b4:	e0fffe03 	ldbu	r3,-8(fp)
    e4b8:	00800074 	movhi	r2,1
    e4bc:	108dc404 	addi	r2,r2,14096
    e4c0:	10801317 	ldw	r2,76(r2)
    e4c4:	1887883a 	add	r3,r3,r2
    e4c8:	00800074 	movhi	r2,1
    e4cc:	108dc404 	addi	r2,r2,14096
    e4d0:	10c01515 	stw	r3,84(r2)
    e4d4:	e0bffe43 	ldbu	r2,-7(fp)
    e4d8:	00c00804 	movi	r3,32
    e4dc:	1885c83a 	sub	r2,r3,r2
    e4e0:	00ffffc4 	movi	r3,-1
    e4e4:	1886d83a 	srl	r3,r3,r2
    e4e8:	00800074 	movhi	r2,1
    e4ec:	108dc404 	addi	r2,r2,14096
    e4f0:	10c01615 	stw	r3,88(r2)
    e4f4:	01000074 	movhi	r4,1
    e4f8:	210dc404 	addi	r4,r4,14096
    e4fc:	000deb40 	call	deb4 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_DMA_CONTROLLER_INIT ( VIDEO_IN_SUBSYSTEM_VIDEO_IN_DMA, Video_In_Subsystem_Video_In_DMA);
    e500:	00800074 	movhi	r2,1
    e504:	108ddb04 	addi	r2,r2,14188
    e508:	10800a17 	ldw	r2,40(r2)
    e50c:	10800017 	ldw	r2,0(r2)
    e510:	1007883a 	mov	r3,r2
    e514:	00800074 	movhi	r2,1
    e518:	108ddb04 	addi	r2,r2,14188
    e51c:	10c00b15 	stw	r3,44(r2)
    e520:	00800074 	movhi	r2,1
    e524:	108ddb04 	addi	r2,r2,14188
    e528:	10800a17 	ldw	r2,40(r2)
    e52c:	10800104 	addi	r2,r2,4
    e530:	10800017 	ldw	r2,0(r2)
    e534:	1007883a 	mov	r3,r2
    e538:	00800074 	movhi	r2,1
    e53c:	108ddb04 	addi	r2,r2,14188
    e540:	10c00c15 	stw	r3,48(r2)
    e544:	00800074 	movhi	r2,1
    e548:	108ddb04 	addi	r2,r2,14188
    e54c:	10800a17 	ldw	r2,40(r2)
    e550:	10800204 	addi	r2,r2,8
    e554:	10800017 	ldw	r2,0(r2)
    e558:	10ffffcc 	andi	r3,r2,65535
    e55c:	00800074 	movhi	r2,1
    e560:	108ddb04 	addi	r2,r2,14188
    e564:	10c01115 	stw	r3,68(r2)
    e568:	00800074 	movhi	r2,1
    e56c:	108ddb04 	addi	r2,r2,14188
    e570:	10800a17 	ldw	r2,40(r2)
    e574:	10800204 	addi	r2,r2,8
    e578:	10800017 	ldw	r2,0(r2)
    e57c:	1006d43a 	srli	r3,r2,16
    e580:	00800074 	movhi	r2,1
    e584:	108ddb04 	addi	r2,r2,14188
    e588:	10c01215 	stw	r3,72(r2)
    e58c:	00800074 	movhi	r2,1
    e590:	108ddb04 	addi	r2,r2,14188
    e594:	10800a17 	ldw	r2,40(r2)
    e598:	10800304 	addi	r2,r2,12
    e59c:	10800017 	ldw	r2,0(r2)
    e5a0:	1005d07a 	srai	r2,r2,1
    e5a4:	10c0004c 	andi	r3,r2,1
    e5a8:	00800074 	movhi	r2,1
    e5ac:	108ddb04 	addi	r2,r2,14188
    e5b0:	10c00d15 	stw	r3,52(r2)
    e5b4:	00800074 	movhi	r2,1
    e5b8:	108ddb04 	addi	r2,r2,14188
    e5bc:	10800a17 	ldw	r2,40(r2)
    e5c0:	10800304 	addi	r2,r2,12
    e5c4:	10800017 	ldw	r2,0(r2)
    e5c8:	1005d23a 	srai	r2,r2,8
    e5cc:	108003cc 	andi	r2,r2,15
    e5d0:	10800044 	addi	r2,r2,1
    e5d4:	1007883a 	mov	r3,r2
    e5d8:	00800074 	movhi	r2,1
    e5dc:	108ddb04 	addi	r2,r2,14188
    e5e0:	10c00e15 	stw	r3,56(r2)
    e5e4:	00800074 	movhi	r2,1
    e5e8:	108ddb04 	addi	r2,r2,14188
    e5ec:	10800a17 	ldw	r2,40(r2)
    e5f0:	10800304 	addi	r2,r2,12
    e5f4:	10800017 	ldw	r2,0(r2)
    e5f8:	1005d1ba 	srai	r2,r2,6
    e5fc:	108000cc 	andi	r2,r2,3
    e600:	10800044 	addi	r2,r2,1
    e604:	1007883a 	mov	r3,r2
    e608:	00800074 	movhi	r2,1
    e60c:	108ddb04 	addi	r2,r2,14188
    e610:	10c00f15 	stw	r3,60(r2)
    e614:	00800074 	movhi	r2,1
    e618:	108ddb04 	addi	r2,r2,14188
    e61c:	10800e17 	ldw	r2,56(r2)
    e620:	1007883a 	mov	r3,r2
    e624:	00800074 	movhi	r2,1
    e628:	108ddb04 	addi	r2,r2,14188
    e62c:	10800f17 	ldw	r2,60(r2)
    e630:	1885383a 	mul	r2,r3,r2
    e634:	e0bffe85 	stb	r2,-6(fp)
    e638:	e0bffe83 	ldbu	r2,-6(fp)
    e63c:	10800268 	cmpgeui	r2,r2,9
    e640:	1000051e 	bne	r2,zero,e658 <alt_sys_init+0x738>
    e644:	00800074 	movhi	r2,1
    e648:	108ddb04 	addi	r2,r2,14188
    e64c:	00c00044 	movi	r3,1
    e650:	10c01015 	stw	r3,64(r2)
    e654:	00000c06 	br	e688 <alt_sys_init+0x768>
    e658:	e0bffe83 	ldbu	r2,-6(fp)
    e65c:	10800468 	cmpgeui	r2,r2,17
    e660:	1000051e 	bne	r2,zero,e678 <alt_sys_init+0x758>
    e664:	00800074 	movhi	r2,1
    e668:	108ddb04 	addi	r2,r2,14188
    e66c:	00c00084 	movi	r3,2
    e670:	10c01015 	stw	r3,64(r2)
    e674:	00000406 	br	e688 <alt_sys_init+0x768>
    e678:	00800074 	movhi	r2,1
    e67c:	108ddb04 	addi	r2,r2,14188
    e680:	00c00104 	movi	r3,4
    e684:	10c01015 	stw	r3,64(r2)
    e688:	00800074 	movhi	r2,1
    e68c:	108ddb04 	addi	r2,r2,14188
    e690:	10800a17 	ldw	r2,40(r2)
    e694:	10800304 	addi	r2,r2,12
    e698:	10800017 	ldw	r2,0(r2)
    e69c:	1005d43a 	srai	r2,r2,16
    e6a0:	e0bffec5 	stb	r2,-5(fp)
    e6a4:	00800074 	movhi	r2,1
    e6a8:	108ddb04 	addi	r2,r2,14188
    e6ac:	10800a17 	ldw	r2,40(r2)
    e6b0:	10800304 	addi	r2,r2,12
    e6b4:	10800017 	ldw	r2,0(r2)
    e6b8:	1004d63a 	srli	r2,r2,24
    e6bc:	e0bfff05 	stb	r2,-4(fp)
    e6c0:	00800074 	movhi	r2,1
    e6c4:	108ddb04 	addi	r2,r2,14188
    e6c8:	10801017 	ldw	r2,64(r2)
    e6cc:	10800058 	cmpnei	r2,r2,1
    e6d0:	1000041e 	bne	r2,zero,e6e4 <alt_sys_init+0x7c4>
    e6d4:	00800074 	movhi	r2,1
    e6d8:	108ddb04 	addi	r2,r2,14188
    e6dc:	10001315 	stw	zero,76(r2)
    e6e0:	00000e06 	br	e71c <alt_sys_init+0x7fc>
    e6e4:	00800074 	movhi	r2,1
    e6e8:	108ddb04 	addi	r2,r2,14188
    e6ec:	10801017 	ldw	r2,64(r2)
    e6f0:	10800098 	cmpnei	r2,r2,2
    e6f4:	1000051e 	bne	r2,zero,e70c <alt_sys_init+0x7ec>
    e6f8:	00800074 	movhi	r2,1
    e6fc:	108ddb04 	addi	r2,r2,14188
    e700:	00c00044 	movi	r3,1
    e704:	10c01315 	stw	r3,76(r2)
    e708:	00000406 	br	e71c <alt_sys_init+0x7fc>
    e70c:	00800074 	movhi	r2,1
    e710:	108ddb04 	addi	r2,r2,14188
    e714:	00c00084 	movi	r3,2
    e718:	10c01315 	stw	r3,76(r2)
    e71c:	e0bffec3 	ldbu	r2,-5(fp)
    e720:	00c00804 	movi	r3,32
    e724:	1885c83a 	sub	r2,r3,r2
    e728:	00ffffc4 	movi	r3,-1
    e72c:	1886d83a 	srl	r3,r3,r2
    e730:	00800074 	movhi	r2,1
    e734:	108ddb04 	addi	r2,r2,14188
    e738:	10c01415 	stw	r3,80(r2)
    e73c:	e0fffec3 	ldbu	r3,-5(fp)
    e740:	00800074 	movhi	r2,1
    e744:	108ddb04 	addi	r2,r2,14188
    e748:	10801317 	ldw	r2,76(r2)
    e74c:	1887883a 	add	r3,r3,r2
    e750:	00800074 	movhi	r2,1
    e754:	108ddb04 	addi	r2,r2,14188
    e758:	10c01515 	stw	r3,84(r2)
    e75c:	e0bfff03 	ldbu	r2,-4(fp)
    e760:	00c00804 	movi	r3,32
    e764:	1885c83a 	sub	r2,r3,r2
    e768:	00ffffc4 	movi	r3,-1
    e76c:	1886d83a 	srl	r3,r3,r2
    e770:	00800074 	movhi	r2,1
    e774:	108ddb04 	addi	r2,r2,14188
    e778:	10c01615 	stw	r3,88(r2)
    e77c:	01000074 	movhi	r4,1
    e780:	210ddb04 	addi	r4,r4,14188
    e784:	000deb40 	call	deb4 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_RGB_RESAMPLER_INIT ( VGA_SUBSYSTEM_VGA_PIXEL_RGB_RESAMPLER, VGA_Subsystem_VGA_Pixel_RGB_Resampler);
    e788:	00800074 	movhi	r2,1
    e78c:	108df204 	addi	r2,r2,14280
    e790:	10800a17 	ldw	r2,40(r2)
    e794:	10800017 	ldw	r2,0(r2)
    e798:	10c003cc 	andi	r3,r2,15
    e79c:	00800074 	movhi	r2,1
    e7a0:	108df204 	addi	r2,r2,14280
    e7a4:	10c00b15 	stw	r3,44(r2)
    e7a8:	00800074 	movhi	r2,1
    e7ac:	108df204 	addi	r2,r2,14280
    e7b0:	10800a17 	ldw	r2,40(r2)
    e7b4:	10800017 	ldw	r2,0(r2)
    e7b8:	1005d13a 	srai	r2,r2,4
    e7bc:	10c0004c 	andi	r3,r2,1
    e7c0:	00800074 	movhi	r2,1
    e7c4:	108df204 	addi	r2,r2,14280
    e7c8:	10c00c15 	stw	r3,48(r2)
    e7cc:	00800074 	movhi	r2,1
    e7d0:	108df204 	addi	r2,r2,14280
    e7d4:	10800a17 	ldw	r2,40(r2)
    e7d8:	10800017 	ldw	r2,0(r2)
    e7dc:	1005d17a 	srai	r2,r2,5
    e7e0:	10c0004c 	andi	r3,r2,1
    e7e4:	00800074 	movhi	r2,1
    e7e8:	108df204 	addi	r2,r2,14280
    e7ec:	10c00d15 	stw	r3,52(r2)
    e7f0:	00800074 	movhi	r2,1
    e7f4:	108df204 	addi	r2,r2,14280
    e7f8:	10800a17 	ldw	r2,40(r2)
    e7fc:	10800017 	ldw	r2,0(r2)
    e800:	1005d43a 	srai	r2,r2,16
    e804:	10c003cc 	andi	r3,r2,15
    e808:	00800074 	movhi	r2,1
    e80c:	108df204 	addi	r2,r2,14280
    e810:	10c00e15 	stw	r3,56(r2)
    e814:	00800074 	movhi	r2,1
    e818:	108df204 	addi	r2,r2,14280
    e81c:	10800a17 	ldw	r2,40(r2)
    e820:	10800017 	ldw	r2,0(r2)
    e824:	1005d53a 	srai	r2,r2,20
    e828:	10c0004c 	andi	r3,r2,1
    e82c:	00800074 	movhi	r2,1
    e830:	108df204 	addi	r2,r2,14280
    e834:	10c00f15 	stw	r3,60(r2)
    e838:	00800074 	movhi	r2,1
    e83c:	108df204 	addi	r2,r2,14280
    e840:	10800a17 	ldw	r2,40(r2)
    e844:	10800017 	ldw	r2,0(r2)
    e848:	1005d57a 	srai	r2,r2,21
    e84c:	10c0004c 	andi	r3,r2,1
    e850:	00800074 	movhi	r2,1
    e854:	108df204 	addi	r2,r2,14280
    e858:	10c01015 	stw	r3,64(r2)
    e85c:	01000074 	movhi	r4,1
    e860:	210df204 	addi	r4,r4,14280
    e864:	000deb40 	call	deb4 <alt_dev_reg>
    ALTERA_UP_SD_CARD_AVALON_INTERFACE_INIT ( SD_CARD, SD_Card);
    e868:	01000074 	movhi	r4,1
    e86c:	210e0304 	addi	r4,r4,14348
    e870:	000deb40 	call	deb4 <alt_dev_reg>
}
    e874:	0001883a 	nop
    e878:	e037883a 	mov	sp,fp
    e87c:	dfc00117 	ldw	ra,4(sp)
    e880:	df000017 	ldw	fp,0(sp)
    e884:	dec00204 	addi	sp,sp,8
    e888:	f800283a 	ret

0000e88c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    e88c:	defffa04 	addi	sp,sp,-24
    e890:	dfc00515 	stw	ra,20(sp)
    e894:	df000415 	stw	fp,16(sp)
    e898:	df000404 	addi	fp,sp,16
    e89c:	e13ffd15 	stw	r4,-12(fp)
    e8a0:	e17ffe15 	stw	r5,-8(fp)
    e8a4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e8a8:	e0bffd17 	ldw	r2,-12(fp)
    e8ac:	10800017 	ldw	r2,0(r2)
    e8b0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    e8b4:	e0bffc17 	ldw	r2,-16(fp)
    e8b8:	10c00a04 	addi	r3,r2,40
    e8bc:	e0bffd17 	ldw	r2,-12(fp)
    e8c0:	10800217 	ldw	r2,8(r2)
    e8c4:	100f883a 	mov	r7,r2
    e8c8:	e1bfff17 	ldw	r6,-4(fp)
    e8cc:	e17ffe17 	ldw	r5,-8(fp)
    e8d0:	1809883a 	mov	r4,r3
    e8d4:	000eeac0 	call	eeac <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    e8d8:	e037883a 	mov	sp,fp
    e8dc:	dfc00117 	ldw	ra,4(sp)
    e8e0:	df000017 	ldw	fp,0(sp)
    e8e4:	dec00204 	addi	sp,sp,8
    e8e8:	f800283a 	ret

0000e8ec <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    e8ec:	defffa04 	addi	sp,sp,-24
    e8f0:	dfc00515 	stw	ra,20(sp)
    e8f4:	df000415 	stw	fp,16(sp)
    e8f8:	df000404 	addi	fp,sp,16
    e8fc:	e13ffd15 	stw	r4,-12(fp)
    e900:	e17ffe15 	stw	r5,-8(fp)
    e904:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e908:	e0bffd17 	ldw	r2,-12(fp)
    e90c:	10800017 	ldw	r2,0(r2)
    e910:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    e914:	e0bffc17 	ldw	r2,-16(fp)
    e918:	10c00a04 	addi	r3,r2,40
    e91c:	e0bffd17 	ldw	r2,-12(fp)
    e920:	10800217 	ldw	r2,8(r2)
    e924:	100f883a 	mov	r7,r2
    e928:	e1bfff17 	ldw	r6,-4(fp)
    e92c:	e17ffe17 	ldw	r5,-8(fp)
    e930:	1809883a 	mov	r4,r3
    e934:	000f0c80 	call	f0c8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    e938:	e037883a 	mov	sp,fp
    e93c:	dfc00117 	ldw	ra,4(sp)
    e940:	df000017 	ldw	fp,0(sp)
    e944:	dec00204 	addi	sp,sp,8
    e948:	f800283a 	ret

0000e94c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    e94c:	defffc04 	addi	sp,sp,-16
    e950:	dfc00315 	stw	ra,12(sp)
    e954:	df000215 	stw	fp,8(sp)
    e958:	df000204 	addi	fp,sp,8
    e95c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e960:	e0bfff17 	ldw	r2,-4(fp)
    e964:	10800017 	ldw	r2,0(r2)
    e968:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    e96c:	e0bffe17 	ldw	r2,-8(fp)
    e970:	10c00a04 	addi	r3,r2,40
    e974:	e0bfff17 	ldw	r2,-4(fp)
    e978:	10800217 	ldw	r2,8(r2)
    e97c:	100b883a 	mov	r5,r2
    e980:	1809883a 	mov	r4,r3
    e984:	000ed540 	call	ed54 <altera_avalon_jtag_uart_close>
}
    e988:	e037883a 	mov	sp,fp
    e98c:	dfc00117 	ldw	ra,4(sp)
    e990:	df000017 	ldw	fp,0(sp)
    e994:	dec00204 	addi	sp,sp,8
    e998:	f800283a 	ret

0000e99c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    e99c:	defffa04 	addi	sp,sp,-24
    e9a0:	dfc00515 	stw	ra,20(sp)
    e9a4:	df000415 	stw	fp,16(sp)
    e9a8:	df000404 	addi	fp,sp,16
    e9ac:	e13ffd15 	stw	r4,-12(fp)
    e9b0:	e17ffe15 	stw	r5,-8(fp)
    e9b4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    e9b8:	e0bffd17 	ldw	r2,-12(fp)
    e9bc:	10800017 	ldw	r2,0(r2)
    e9c0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    e9c4:	e0bffc17 	ldw	r2,-16(fp)
    e9c8:	10800a04 	addi	r2,r2,40
    e9cc:	e1bfff17 	ldw	r6,-4(fp)
    e9d0:	e17ffe17 	ldw	r5,-8(fp)
    e9d4:	1009883a 	mov	r4,r2
    e9d8:	000edbc0 	call	edbc <altera_avalon_jtag_uart_ioctl>
}
    e9dc:	e037883a 	mov	sp,fp
    e9e0:	dfc00117 	ldw	ra,4(sp)
    e9e4:	df000017 	ldw	fp,0(sp)
    e9e8:	dec00204 	addi	sp,sp,8
    e9ec:	f800283a 	ret

0000e9f0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    e9f0:	defffb04 	addi	sp,sp,-20
    e9f4:	dfc00415 	stw	ra,16(sp)
    e9f8:	df000315 	stw	fp,12(sp)
    e9fc:	df000304 	addi	fp,sp,12
    ea00:	e13ffd15 	stw	r4,-12(fp)
    ea04:	e17ffe15 	stw	r5,-8(fp)
    ea08:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    ea0c:	e0bffd17 	ldw	r2,-12(fp)
    ea10:	00c00044 	movi	r3,1
    ea14:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    ea18:	e0bffd17 	ldw	r2,-12(fp)
    ea1c:	10800017 	ldw	r2,0(r2)
    ea20:	10800104 	addi	r2,r2,4
    ea24:	1007883a 	mov	r3,r2
    ea28:	e0bffd17 	ldw	r2,-12(fp)
    ea2c:	10800817 	ldw	r2,32(r2)
    ea30:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
    ea34:	e0bfff17 	ldw	r2,-4(fp)
    ea38:	01800074 	movhi	r6,1
    ea3c:	31baa904 	addi	r6,r6,-5468
    ea40:	e17ffd17 	ldw	r5,-12(fp)
    ea44:	1009883a 	mov	r4,r2
    ea48:	0010b8c0 	call	10b8c <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    ea4c:	e0bffd17 	ldw	r2,-12(fp)
    ea50:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    ea54:	e0bffd17 	ldw	r2,-12(fp)
    ea58:	10800204 	addi	r2,r2,8
    ea5c:	d0e7a217 	ldw	r3,-24952(gp)
    ea60:	e1fffd17 	ldw	r7,-12(fp)
    ea64:	01800074 	movhi	r6,1
    ea68:	31bb2d04 	addi	r6,r6,-4940
    ea6c:	180b883a 	mov	r5,r3
    ea70:	1009883a 	mov	r4,r2
    ea74:	001069c0 	call	1069c <alt_alarm_start>
    ea78:	1000040e 	bge	r2,zero,ea8c <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    ea7c:	e0fffd17 	ldw	r3,-12(fp)
    ea80:	00a00034 	movhi	r2,32768
    ea84:	10bfffc4 	addi	r2,r2,-1
    ea88:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    ea8c:	0001883a 	nop
    ea90:	e037883a 	mov	sp,fp
    ea94:	dfc00117 	ldw	ra,4(sp)
    ea98:	df000017 	ldw	fp,0(sp)
    ea9c:	dec00204 	addi	sp,sp,8
    eaa0:	f800283a 	ret

0000eaa4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    eaa4:	defff704 	addi	sp,sp,-36
    eaa8:	df000815 	stw	fp,32(sp)
    eaac:	df000804 	addi	fp,sp,32
    eab0:	e13ffe15 	stw	r4,-8(fp)
    eab4:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    eab8:	e0bffe17 	ldw	r2,-8(fp)
    eabc:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
    eac0:	e0bffa17 	ldw	r2,-24(fp)
    eac4:	10800017 	ldw	r2,0(r2)
    eac8:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    eacc:	e0bffb17 	ldw	r2,-20(fp)
    ead0:	10800104 	addi	r2,r2,4
    ead4:	10800037 	ldwio	r2,0(r2)
    ead8:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    eadc:	e0bffc17 	ldw	r2,-16(fp)
    eae0:	1080c00c 	andi	r2,r2,768
    eae4:	10006d26 	beq	r2,zero,ec9c <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    eae8:	e0bffc17 	ldw	r2,-16(fp)
    eaec:	1080400c 	andi	r2,r2,256
    eaf0:	10003526 	beq	r2,zero,ebc8 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    eaf4:	00800074 	movhi	r2,1
    eaf8:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    eafc:	e0bffa17 	ldw	r2,-24(fp)
    eb00:	10800a17 	ldw	r2,40(r2)
    eb04:	10800044 	addi	r2,r2,1
    eb08:	1081ffcc 	andi	r2,r2,2047
    eb0c:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
    eb10:	e0bffa17 	ldw	r2,-24(fp)
    eb14:	10c00b17 	ldw	r3,44(r2)
    eb18:	e0bffd17 	ldw	r2,-12(fp)
    eb1c:	18801526 	beq	r3,r2,eb74 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    eb20:	e0bffb17 	ldw	r2,-20(fp)
    eb24:	10800037 	ldwio	r2,0(r2)
    eb28:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    eb2c:	e0bff817 	ldw	r2,-32(fp)
    eb30:	10a0000c 	andi	r2,r2,32768
    eb34:	10001126 	beq	r2,zero,eb7c <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    eb38:	e0bffa17 	ldw	r2,-24(fp)
    eb3c:	10800a17 	ldw	r2,40(r2)
    eb40:	e0fff817 	ldw	r3,-32(fp)
    eb44:	1809883a 	mov	r4,r3
    eb48:	e0fffa17 	ldw	r3,-24(fp)
    eb4c:	1885883a 	add	r2,r3,r2
    eb50:	10800e04 	addi	r2,r2,56
    eb54:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    eb58:	e0bffa17 	ldw	r2,-24(fp)
    eb5c:	10800a17 	ldw	r2,40(r2)
    eb60:	10800044 	addi	r2,r2,1
    eb64:	10c1ffcc 	andi	r3,r2,2047
    eb68:	e0bffa17 	ldw	r2,-24(fp)
    eb6c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    eb70:	003fe206 	br	eafc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700eafc>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
    eb74:	0001883a 	nop
    eb78:	00000106 	br	eb80 <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
    eb7c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    eb80:	e0bff817 	ldw	r2,-32(fp)
    eb84:	10bfffec 	andhi	r2,r2,65535
    eb88:	10000f26 	beq	r2,zero,ebc8 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    eb8c:	e0bffa17 	ldw	r2,-24(fp)
    eb90:	10c00817 	ldw	r3,32(r2)
    eb94:	00bfff84 	movi	r2,-2
    eb98:	1886703a 	and	r3,r3,r2
    eb9c:	e0bffa17 	ldw	r2,-24(fp)
    eba0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    eba4:	e0bffb17 	ldw	r2,-20(fp)
    eba8:	10800104 	addi	r2,r2,4
    ebac:	1007883a 	mov	r3,r2
    ebb0:	e0bffa17 	ldw	r2,-24(fp)
    ebb4:	10800817 	ldw	r2,32(r2)
    ebb8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    ebbc:	e0bffb17 	ldw	r2,-20(fp)
    ebc0:	10800104 	addi	r2,r2,4
    ebc4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    ebc8:	e0bffc17 	ldw	r2,-16(fp)
    ebcc:	1080800c 	andi	r2,r2,512
    ebd0:	103fbe26 	beq	r2,zero,eacc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700eacc>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    ebd4:	e0bffc17 	ldw	r2,-16(fp)
    ebd8:	1004d43a 	srli	r2,r2,16
    ebdc:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    ebe0:	00001406 	br	ec34 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    ebe4:	e0bffb17 	ldw	r2,-20(fp)
    ebe8:	e0fffa17 	ldw	r3,-24(fp)
    ebec:	18c00d17 	ldw	r3,52(r3)
    ebf0:	e13ffa17 	ldw	r4,-24(fp)
    ebf4:	20c7883a 	add	r3,r4,r3
    ebf8:	18c20e04 	addi	r3,r3,2104
    ebfc:	18c00003 	ldbu	r3,0(r3)
    ec00:	18c03fcc 	andi	r3,r3,255
    ec04:	18c0201c 	xori	r3,r3,128
    ec08:	18ffe004 	addi	r3,r3,-128
    ec0c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ec10:	e0bffa17 	ldw	r2,-24(fp)
    ec14:	10800d17 	ldw	r2,52(r2)
    ec18:	10800044 	addi	r2,r2,1
    ec1c:	10c1ffcc 	andi	r3,r2,2047
    ec20:	e0bffa17 	ldw	r2,-24(fp)
    ec24:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    ec28:	e0bff917 	ldw	r2,-28(fp)
    ec2c:	10bfffc4 	addi	r2,r2,-1
    ec30:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    ec34:	e0bff917 	ldw	r2,-28(fp)
    ec38:	10000526 	beq	r2,zero,ec50 <altera_avalon_jtag_uart_irq+0x1ac>
    ec3c:	e0bffa17 	ldw	r2,-24(fp)
    ec40:	10c00d17 	ldw	r3,52(r2)
    ec44:	e0bffa17 	ldw	r2,-24(fp)
    ec48:	10800c17 	ldw	r2,48(r2)
    ec4c:	18bfe51e 	bne	r3,r2,ebe4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ebe4>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    ec50:	e0bff917 	ldw	r2,-28(fp)
    ec54:	103f9d26 	beq	r2,zero,eacc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700eacc>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    ec58:	e0bffa17 	ldw	r2,-24(fp)
    ec5c:	10c00817 	ldw	r3,32(r2)
    ec60:	00bfff44 	movi	r2,-3
    ec64:	1886703a 	and	r3,r3,r2
    ec68:	e0bffa17 	ldw	r2,-24(fp)
    ec6c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ec70:	e0bffa17 	ldw	r2,-24(fp)
    ec74:	10800017 	ldw	r2,0(r2)
    ec78:	10800104 	addi	r2,r2,4
    ec7c:	1007883a 	mov	r3,r2
    ec80:	e0bffa17 	ldw	r2,-24(fp)
    ec84:	10800817 	ldw	r2,32(r2)
    ec88:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    ec8c:	e0bffb17 	ldw	r2,-20(fp)
    ec90:	10800104 	addi	r2,r2,4
    ec94:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    ec98:	003f8c06 	br	eacc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700eacc>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
    ec9c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
    eca0:	0001883a 	nop
    eca4:	e037883a 	mov	sp,fp
    eca8:	df000017 	ldw	fp,0(sp)
    ecac:	dec00104 	addi	sp,sp,4
    ecb0:	f800283a 	ret

0000ecb4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    ecb4:	defff804 	addi	sp,sp,-32
    ecb8:	df000715 	stw	fp,28(sp)
    ecbc:	df000704 	addi	fp,sp,28
    ecc0:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    ecc4:	e0bffb17 	ldw	r2,-20(fp)
    ecc8:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    eccc:	e0bff917 	ldw	r2,-28(fp)
    ecd0:	10800017 	ldw	r2,0(r2)
    ecd4:	10800104 	addi	r2,r2,4
    ecd8:	10800037 	ldwio	r2,0(r2)
    ecdc:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    ece0:	e0bffa17 	ldw	r2,-24(fp)
    ece4:	1081000c 	andi	r2,r2,1024
    ece8:	10000b26 	beq	r2,zero,ed18 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    ecec:	e0bff917 	ldw	r2,-28(fp)
    ecf0:	10800017 	ldw	r2,0(r2)
    ecf4:	10800104 	addi	r2,r2,4
    ecf8:	1007883a 	mov	r3,r2
    ecfc:	e0bff917 	ldw	r2,-28(fp)
    ed00:	10800817 	ldw	r2,32(r2)
    ed04:	10810014 	ori	r2,r2,1024
    ed08:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    ed0c:	e0bff917 	ldw	r2,-28(fp)
    ed10:	10000915 	stw	zero,36(r2)
    ed14:	00000a06 	br	ed40 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    ed18:	e0bff917 	ldw	r2,-28(fp)
    ed1c:	10c00917 	ldw	r3,36(r2)
    ed20:	00a00034 	movhi	r2,32768
    ed24:	10bfff04 	addi	r2,r2,-4
    ed28:	10c00536 	bltu	r2,r3,ed40 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    ed2c:	e0bff917 	ldw	r2,-28(fp)
    ed30:	10800917 	ldw	r2,36(r2)
    ed34:	10c00044 	addi	r3,r2,1
    ed38:	e0bff917 	ldw	r2,-28(fp)
    ed3c:	10c00915 	stw	r3,36(r2)
    ed40:	d0a7a217 	ldw	r2,-24952(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    ed44:	e037883a 	mov	sp,fp
    ed48:	df000017 	ldw	fp,0(sp)
    ed4c:	dec00104 	addi	sp,sp,4
    ed50:	f800283a 	ret

0000ed54 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    ed54:	defffd04 	addi	sp,sp,-12
    ed58:	df000215 	stw	fp,8(sp)
    ed5c:	df000204 	addi	fp,sp,8
    ed60:	e13ffe15 	stw	r4,-8(fp)
    ed64:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    ed68:	00000506 	br	ed80 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    ed6c:	e0bfff17 	ldw	r2,-4(fp)
    ed70:	1090000c 	andi	r2,r2,16384
    ed74:	10000226 	beq	r2,zero,ed80 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    ed78:	00bffd44 	movi	r2,-11
    ed7c:	00000b06 	br	edac <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    ed80:	e0bffe17 	ldw	r2,-8(fp)
    ed84:	10c00d17 	ldw	r3,52(r2)
    ed88:	e0bffe17 	ldw	r2,-8(fp)
    ed8c:	10800c17 	ldw	r2,48(r2)
    ed90:	18800526 	beq	r3,r2,eda8 <altera_avalon_jtag_uart_close+0x54>
    ed94:	e0bffe17 	ldw	r2,-8(fp)
    ed98:	10c00917 	ldw	r3,36(r2)
    ed9c:	e0bffe17 	ldw	r2,-8(fp)
    eda0:	10800117 	ldw	r2,4(r2)
    eda4:	18bff136 	bltu	r3,r2,ed6c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ed6c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    eda8:	0005883a 	mov	r2,zero
}
    edac:	e037883a 	mov	sp,fp
    edb0:	df000017 	ldw	fp,0(sp)
    edb4:	dec00104 	addi	sp,sp,4
    edb8:	f800283a 	ret

0000edbc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    edbc:	defffa04 	addi	sp,sp,-24
    edc0:	df000515 	stw	fp,20(sp)
    edc4:	df000504 	addi	fp,sp,20
    edc8:	e13ffd15 	stw	r4,-12(fp)
    edcc:	e17ffe15 	stw	r5,-8(fp)
    edd0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    edd4:	00bff9c4 	movi	r2,-25
    edd8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    eddc:	e0bffe17 	ldw	r2,-8(fp)
    ede0:	10da8060 	cmpeqi	r3,r2,27137
    ede4:	1800031e 	bne	r3,zero,edf4 <altera_avalon_jtag_uart_ioctl+0x38>
    ede8:	109a80a0 	cmpeqi	r2,r2,27138
    edec:	1000181e 	bne	r2,zero,ee50 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
    edf0:	00002906 	br	ee98 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    edf4:	e0bffd17 	ldw	r2,-12(fp)
    edf8:	10c00117 	ldw	r3,4(r2)
    edfc:	00a00034 	movhi	r2,32768
    ee00:	10bfffc4 	addi	r2,r2,-1
    ee04:	18802126 	beq	r3,r2,ee8c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
    ee08:	e0bfff17 	ldw	r2,-4(fp)
    ee0c:	10800017 	ldw	r2,0(r2)
    ee10:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    ee14:	e0bffc17 	ldw	r2,-16(fp)
    ee18:	10800090 	cmplti	r2,r2,2
    ee1c:	1000061e 	bne	r2,zero,ee38 <altera_avalon_jtag_uart_ioctl+0x7c>
    ee20:	e0fffc17 	ldw	r3,-16(fp)
    ee24:	00a00034 	movhi	r2,32768
    ee28:	10bfffc4 	addi	r2,r2,-1
    ee2c:	18800226 	beq	r3,r2,ee38 <altera_avalon_jtag_uart_ioctl+0x7c>
    ee30:	e0bffc17 	ldw	r2,-16(fp)
    ee34:	00000206 	br	ee40 <altera_avalon_jtag_uart_ioctl+0x84>
    ee38:	00a00034 	movhi	r2,32768
    ee3c:	10bfff84 	addi	r2,r2,-2
    ee40:	e0fffd17 	ldw	r3,-12(fp)
    ee44:	18800115 	stw	r2,4(r3)
      rc = 0;
    ee48:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    ee4c:	00000f06 	br	ee8c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    ee50:	e0bffd17 	ldw	r2,-12(fp)
    ee54:	10c00117 	ldw	r3,4(r2)
    ee58:	00a00034 	movhi	r2,32768
    ee5c:	10bfffc4 	addi	r2,r2,-1
    ee60:	18800c26 	beq	r3,r2,ee94 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    ee64:	e0bffd17 	ldw	r2,-12(fp)
    ee68:	10c00917 	ldw	r3,36(r2)
    ee6c:	e0bffd17 	ldw	r2,-12(fp)
    ee70:	10800117 	ldw	r2,4(r2)
    ee74:	1885803a 	cmpltu	r2,r3,r2
    ee78:	10c03fcc 	andi	r3,r2,255
    ee7c:	e0bfff17 	ldw	r2,-4(fp)
    ee80:	10c00015 	stw	r3,0(r2)
      rc = 0;
    ee84:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    ee88:	00000206 	br	ee94 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
    ee8c:	0001883a 	nop
    ee90:	00000106 	br	ee98 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
    ee94:	0001883a 	nop

  default:
    break;
  }

  return rc;
    ee98:	e0bffb17 	ldw	r2,-20(fp)
}
    ee9c:	e037883a 	mov	sp,fp
    eea0:	df000017 	ldw	fp,0(sp)
    eea4:	dec00104 	addi	sp,sp,4
    eea8:	f800283a 	ret

0000eeac <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    eeac:	defff304 	addi	sp,sp,-52
    eeb0:	dfc00c15 	stw	ra,48(sp)
    eeb4:	df000b15 	stw	fp,44(sp)
    eeb8:	df000b04 	addi	fp,sp,44
    eebc:	e13ffc15 	stw	r4,-16(fp)
    eec0:	e17ffd15 	stw	r5,-12(fp)
    eec4:	e1bffe15 	stw	r6,-8(fp)
    eec8:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    eecc:	e0bffd17 	ldw	r2,-12(fp)
    eed0:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    eed4:	00004706 	br	eff4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    eed8:	e0bffc17 	ldw	r2,-16(fp)
    eedc:	10800a17 	ldw	r2,40(r2)
    eee0:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    eee4:	e0bffc17 	ldw	r2,-16(fp)
    eee8:	10800b17 	ldw	r2,44(r2)
    eeec:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    eef0:	e0fff717 	ldw	r3,-36(fp)
    eef4:	e0bff817 	ldw	r2,-32(fp)
    eef8:	18800536 	bltu	r3,r2,ef10 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    eefc:	e0fff717 	ldw	r3,-36(fp)
    ef00:	e0bff817 	ldw	r2,-32(fp)
    ef04:	1885c83a 	sub	r2,r3,r2
    ef08:	e0bff615 	stw	r2,-40(fp)
    ef0c:	00000406 	br	ef20 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    ef10:	00c20004 	movi	r3,2048
    ef14:	e0bff817 	ldw	r2,-32(fp)
    ef18:	1885c83a 	sub	r2,r3,r2
    ef1c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    ef20:	e0bff617 	ldw	r2,-40(fp)
    ef24:	10001e26 	beq	r2,zero,efa0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    ef28:	e0fffe17 	ldw	r3,-8(fp)
    ef2c:	e0bff617 	ldw	r2,-40(fp)
    ef30:	1880022e 	bgeu	r3,r2,ef3c <altera_avalon_jtag_uart_read+0x90>
        n = space;
    ef34:	e0bffe17 	ldw	r2,-8(fp)
    ef38:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    ef3c:	e0bffc17 	ldw	r2,-16(fp)
    ef40:	10c00e04 	addi	r3,r2,56
    ef44:	e0bff817 	ldw	r2,-32(fp)
    ef48:	1885883a 	add	r2,r3,r2
    ef4c:	e1bff617 	ldw	r6,-40(fp)
    ef50:	100b883a 	mov	r5,r2
    ef54:	e13ff517 	ldw	r4,-44(fp)
    ef58:	0005eb40 	call	5eb4 <memcpy>
      ptr   += n;
    ef5c:	e0fff517 	ldw	r3,-44(fp)
    ef60:	e0bff617 	ldw	r2,-40(fp)
    ef64:	1885883a 	add	r2,r3,r2
    ef68:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    ef6c:	e0fffe17 	ldw	r3,-8(fp)
    ef70:	e0bff617 	ldw	r2,-40(fp)
    ef74:	1885c83a 	sub	r2,r3,r2
    ef78:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ef7c:	e0fff817 	ldw	r3,-32(fp)
    ef80:	e0bff617 	ldw	r2,-40(fp)
    ef84:	1885883a 	add	r2,r3,r2
    ef88:	10c1ffcc 	andi	r3,r2,2047
    ef8c:	e0bffc17 	ldw	r2,-16(fp)
    ef90:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    ef94:	e0bffe17 	ldw	r2,-8(fp)
    ef98:	00bfcf16 	blt	zero,r2,eed8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700eed8>
    ef9c:	00000106 	br	efa4 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
    efa0:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
    efa4:	e0fff517 	ldw	r3,-44(fp)
    efa8:	e0bffd17 	ldw	r2,-12(fp)
    efac:	1880141e 	bne	r3,r2,f000 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    efb0:	e0bfff17 	ldw	r2,-4(fp)
    efb4:	1090000c 	andi	r2,r2,16384
    efb8:	1000131e 	bne	r2,zero,f008 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    efbc:	0001883a 	nop
    efc0:	e0bffc17 	ldw	r2,-16(fp)
    efc4:	10c00a17 	ldw	r3,40(r2)
    efc8:	e0bff717 	ldw	r2,-36(fp)
    efcc:	1880051e 	bne	r3,r2,efe4 <altera_avalon_jtag_uart_read+0x138>
    efd0:	e0bffc17 	ldw	r2,-16(fp)
    efd4:	10c00917 	ldw	r3,36(r2)
    efd8:	e0bffc17 	ldw	r2,-16(fp)
    efdc:	10800117 	ldw	r2,4(r2)
    efe0:	18bff736 	bltu	r3,r2,efc0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700efc0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    efe4:	e0bffc17 	ldw	r2,-16(fp)
    efe8:	10c00a17 	ldw	r3,40(r2)
    efec:	e0bff717 	ldw	r2,-36(fp)
    eff0:	18800726 	beq	r3,r2,f010 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    eff4:	e0bffe17 	ldw	r2,-8(fp)
    eff8:	00bfb716 	blt	zero,r2,eed8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700eed8>
    effc:	00000506 	br	f014 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
    f000:	0001883a 	nop
    f004:	00000306 	br	f014 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
    f008:	0001883a 	nop
    f00c:	00000106 	br	f014 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
    f010:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    f014:	e0fff517 	ldw	r3,-44(fp)
    f018:	e0bffd17 	ldw	r2,-12(fp)
    f01c:	18801826 	beq	r3,r2,f080 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f020:	0005303a 	rdctl	r2,status
    f024:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f028:	e0fffb17 	ldw	r3,-20(fp)
    f02c:	00bfff84 	movi	r2,-2
    f030:	1884703a 	and	r2,r3,r2
    f034:	1001703a 	wrctl	status,r2
  
  return context;
    f038:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    f03c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    f040:	e0bffc17 	ldw	r2,-16(fp)
    f044:	10800817 	ldw	r2,32(r2)
    f048:	10c00054 	ori	r3,r2,1
    f04c:	e0bffc17 	ldw	r2,-16(fp)
    f050:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    f054:	e0bffc17 	ldw	r2,-16(fp)
    f058:	10800017 	ldw	r2,0(r2)
    f05c:	10800104 	addi	r2,r2,4
    f060:	1007883a 	mov	r3,r2
    f064:	e0bffc17 	ldw	r2,-16(fp)
    f068:	10800817 	ldw	r2,32(r2)
    f06c:	18800035 	stwio	r2,0(r3)
    f070:	e0bffa17 	ldw	r2,-24(fp)
    f074:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f078:	e0bff917 	ldw	r2,-28(fp)
    f07c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    f080:	e0fff517 	ldw	r3,-44(fp)
    f084:	e0bffd17 	ldw	r2,-12(fp)
    f088:	18800426 	beq	r3,r2,f09c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    f08c:	e0fff517 	ldw	r3,-44(fp)
    f090:	e0bffd17 	ldw	r2,-12(fp)
    f094:	1885c83a 	sub	r2,r3,r2
    f098:	00000606 	br	f0b4 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    f09c:	e0bfff17 	ldw	r2,-4(fp)
    f0a0:	1090000c 	andi	r2,r2,16384
    f0a4:	10000226 	beq	r2,zero,f0b0 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    f0a8:	00bffd44 	movi	r2,-11
    f0ac:	00000106 	br	f0b4 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    f0b0:	00bffec4 	movi	r2,-5
}
    f0b4:	e037883a 	mov	sp,fp
    f0b8:	dfc00117 	ldw	ra,4(sp)
    f0bc:	df000017 	ldw	fp,0(sp)
    f0c0:	dec00204 	addi	sp,sp,8
    f0c4:	f800283a 	ret

0000f0c8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    f0c8:	defff304 	addi	sp,sp,-52
    f0cc:	dfc00c15 	stw	ra,48(sp)
    f0d0:	df000b15 	stw	fp,44(sp)
    f0d4:	df000b04 	addi	fp,sp,44
    f0d8:	e13ffc15 	stw	r4,-16(fp)
    f0dc:	e17ffd15 	stw	r5,-12(fp)
    f0e0:	e1bffe15 	stw	r6,-8(fp)
    f0e4:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    f0e8:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    f0ec:	e0bffd17 	ldw	r2,-12(fp)
    f0f0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    f0f4:	00003706 	br	f1d4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    f0f8:	e0bffc17 	ldw	r2,-16(fp)
    f0fc:	10800c17 	ldw	r2,48(r2)
    f100:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
    f104:	e0bffc17 	ldw	r2,-16(fp)
    f108:	10800d17 	ldw	r2,52(r2)
    f10c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    f110:	e0fff917 	ldw	r3,-28(fp)
    f114:	e0bff517 	ldw	r2,-44(fp)
    f118:	1880062e 	bgeu	r3,r2,f134 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    f11c:	e0fff517 	ldw	r3,-44(fp)
    f120:	e0bff917 	ldw	r2,-28(fp)
    f124:	1885c83a 	sub	r2,r3,r2
    f128:	10bfffc4 	addi	r2,r2,-1
    f12c:	e0bff615 	stw	r2,-40(fp)
    f130:	00000b06 	br	f160 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    f134:	e0bff517 	ldw	r2,-44(fp)
    f138:	10000526 	beq	r2,zero,f150 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    f13c:	00c20004 	movi	r3,2048
    f140:	e0bff917 	ldw	r2,-28(fp)
    f144:	1885c83a 	sub	r2,r3,r2
    f148:	e0bff615 	stw	r2,-40(fp)
    f14c:	00000406 	br	f160 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    f150:	00c1ffc4 	movi	r3,2047
    f154:	e0bff917 	ldw	r2,-28(fp)
    f158:	1885c83a 	sub	r2,r3,r2
    f15c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    f160:	e0bff617 	ldw	r2,-40(fp)
    f164:	10001e26 	beq	r2,zero,f1e0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    f168:	e0fffe17 	ldw	r3,-8(fp)
    f16c:	e0bff617 	ldw	r2,-40(fp)
    f170:	1880022e 	bgeu	r3,r2,f17c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    f174:	e0bffe17 	ldw	r2,-8(fp)
    f178:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    f17c:	e0bffc17 	ldw	r2,-16(fp)
    f180:	10c20e04 	addi	r3,r2,2104
    f184:	e0bff917 	ldw	r2,-28(fp)
    f188:	1885883a 	add	r2,r3,r2
    f18c:	e1bff617 	ldw	r6,-40(fp)
    f190:	e17ffd17 	ldw	r5,-12(fp)
    f194:	1009883a 	mov	r4,r2
    f198:	0005eb40 	call	5eb4 <memcpy>
      ptr   += n;
    f19c:	e0fffd17 	ldw	r3,-12(fp)
    f1a0:	e0bff617 	ldw	r2,-40(fp)
    f1a4:	1885883a 	add	r2,r3,r2
    f1a8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    f1ac:	e0fffe17 	ldw	r3,-8(fp)
    f1b0:	e0bff617 	ldw	r2,-40(fp)
    f1b4:	1885c83a 	sub	r2,r3,r2
    f1b8:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    f1bc:	e0fff917 	ldw	r3,-28(fp)
    f1c0:	e0bff617 	ldw	r2,-40(fp)
    f1c4:	1885883a 	add	r2,r3,r2
    f1c8:	10c1ffcc 	andi	r3,r2,2047
    f1cc:	e0bffc17 	ldw	r2,-16(fp)
    f1d0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    f1d4:	e0bffe17 	ldw	r2,-8(fp)
    f1d8:	00bfc716 	blt	zero,r2,f0f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f0f8>
    f1dc:	00000106 	br	f1e4 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
    f1e0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f1e4:	0005303a 	rdctl	r2,status
    f1e8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f1ec:	e0fffb17 	ldw	r3,-20(fp)
    f1f0:	00bfff84 	movi	r2,-2
    f1f4:	1884703a 	and	r2,r3,r2
    f1f8:	1001703a 	wrctl	status,r2
  
  return context;
    f1fc:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    f200:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    f204:	e0bffc17 	ldw	r2,-16(fp)
    f208:	10800817 	ldw	r2,32(r2)
    f20c:	10c00094 	ori	r3,r2,2
    f210:	e0bffc17 	ldw	r2,-16(fp)
    f214:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    f218:	e0bffc17 	ldw	r2,-16(fp)
    f21c:	10800017 	ldw	r2,0(r2)
    f220:	10800104 	addi	r2,r2,4
    f224:	1007883a 	mov	r3,r2
    f228:	e0bffc17 	ldw	r2,-16(fp)
    f22c:	10800817 	ldw	r2,32(r2)
    f230:	18800035 	stwio	r2,0(r3)
    f234:	e0bffa17 	ldw	r2,-24(fp)
    f238:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f23c:	e0bff817 	ldw	r2,-32(fp)
    f240:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    f244:	e0bffe17 	ldw	r2,-8(fp)
    f248:	0080100e 	bge	zero,r2,f28c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    f24c:	e0bfff17 	ldw	r2,-4(fp)
    f250:	1090000c 	andi	r2,r2,16384
    f254:	1000101e 	bne	r2,zero,f298 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    f258:	0001883a 	nop
    f25c:	e0bffc17 	ldw	r2,-16(fp)
    f260:	10c00d17 	ldw	r3,52(r2)
    f264:	e0bff517 	ldw	r2,-44(fp)
    f268:	1880051e 	bne	r3,r2,f280 <altera_avalon_jtag_uart_write+0x1b8>
    f26c:	e0bffc17 	ldw	r2,-16(fp)
    f270:	10c00917 	ldw	r3,36(r2)
    f274:	e0bffc17 	ldw	r2,-16(fp)
    f278:	10800117 	ldw	r2,4(r2)
    f27c:	18bff736 	bltu	r3,r2,f25c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f25c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    f280:	e0bffc17 	ldw	r2,-16(fp)
    f284:	10800917 	ldw	r2,36(r2)
    f288:	1000051e 	bne	r2,zero,f2a0 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    f28c:	e0bffe17 	ldw	r2,-8(fp)
    f290:	00bfd016 	blt	zero,r2,f1d4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f1d4>
    f294:	00000306 	br	f2a4 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
    f298:	0001883a 	nop
    f29c:	00000106 	br	f2a4 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
    f2a0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    f2a4:	e0fffd17 	ldw	r3,-12(fp)
    f2a8:	e0bff717 	ldw	r2,-36(fp)
    f2ac:	18800426 	beq	r3,r2,f2c0 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    f2b0:	e0fffd17 	ldw	r3,-12(fp)
    f2b4:	e0bff717 	ldw	r2,-36(fp)
    f2b8:	1885c83a 	sub	r2,r3,r2
    f2bc:	00000606 	br	f2d8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    f2c0:	e0bfff17 	ldw	r2,-4(fp)
    f2c4:	1090000c 	andi	r2,r2,16384
    f2c8:	10000226 	beq	r2,zero,f2d4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    f2cc:	00bffd44 	movi	r2,-11
    f2d0:	00000106 	br	f2d8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    f2d4:	00bffec4 	movi	r2,-5
}
    f2d8:	e037883a 	mov	sp,fp
    f2dc:	dfc00117 	ldw	ra,4(sp)
    f2e0:	df000017 	ldw	fp,0(sp)
    f2e4:	dec00204 	addi	sp,sp,8
    f2e8:	f800283a 	ret

0000f2ec <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
    f2ec:	defff904 	addi	sp,sp,-28
    f2f0:	dfc00615 	stw	ra,24(sp)
    f2f4:	df000515 	stw	fp,20(sp)
    f2f8:	df000504 	addi	fp,sp,20
    f2fc:	e13ffe15 	stw	r4,-8(fp)
    f300:	e17fff15 	stw	r5,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
    f304:	0007883a 	mov	r3,zero
    f308:	e0bffe17 	ldw	r2,-8(fp)
    f30c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
    f310:	e0bffe17 	ldw	r2,-8(fp)
    f314:	10800104 	addi	r2,r2,4
    f318:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f31c:	0005303a 	rdctl	r2,status
    f320:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f324:	e0fffc17 	ldw	r3,-16(fp)
    f328:	00bfff84 	movi	r2,-2
    f32c:	1884703a 	and	r2,r3,r2
    f330:	1001703a 	wrctl	status,r2
  
  return context;
    f334:	e0bffc17 	ldw	r2,-16(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
    f338:	e0bffb15 	stw	r2,-20(fp)
  alt_tick ();
    f33c:	000dc780 	call	dc78 <alt_tick>
    f340:	e0bffb17 	ldw	r2,-20(fp)
    f344:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f348:	e0bffd17 	ldw	r2,-12(fp)
    f34c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
    f350:	0001883a 	nop
    f354:	e037883a 	mov	sp,fp
    f358:	dfc00117 	ldw	ra,4(sp)
    f35c:	df000017 	ldw	fp,0(sp)
    f360:	dec00204 	addi	sp,sp,8
    f364:	f800283a 	ret

0000f368 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
    f368:	defff904 	addi	sp,sp,-28
    f36c:	dfc00615 	stw	ra,24(sp)
    f370:	df000515 	stw	fp,20(sp)
    f374:	df000504 	addi	fp,sp,20
    f378:	e13ffc15 	stw	r4,-16(fp)
    f37c:	e17ffd15 	stw	r5,-12(fp)
    f380:	e1bffe15 	stw	r6,-8(fp)
    f384:	e1ffff15 	stw	r7,-4(fp)
    f388:	e0bfff17 	ldw	r2,-4(fp)
    f38c:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
    f390:	d0a7a217 	ldw	r2,-24952(gp)
    f394:	1000021e 	bne	r2,zero,f3a0 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
    f398:	e0bffb17 	ldw	r2,-20(fp)
    f39c:	d0a7a215 	stw	r2,-24952(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
    f3a0:	e0bffc17 	ldw	r2,-16(fp)
    f3a4:	10800104 	addi	r2,r2,4
    f3a8:	00c001c4 	movi	r3,7
    f3ac:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
    f3b0:	01800074 	movhi	r6,1
    f3b4:	31bcbb04 	addi	r6,r6,-3348
    f3b8:	e17ffc17 	ldw	r5,-16(fp)
    f3bc:	e13ffe17 	ldw	r4,-8(fp)
    f3c0:	0010b8c0 	call	10b8c <alt_irq_register>
#endif  
}
    f3c4:	0001883a 	nop
    f3c8:	e037883a 	mov	sp,fp
    f3cc:	dfc00117 	ldw	ra,4(sp)
    f3d0:	df000017 	ldw	fp,0(sp)
    f3d4:	dec00204 	addi	sp,sp,8
    f3d8:	f800283a 	ret

0000f3dc <get_DDRAM_addr>:
 * @sa the datasheet for the LCD Display Controller on the DE2 Board
 * @note the function requires that the input are in the valid range
 *
 **/
unsigned char get_DDRAM_addr(unsigned x_pos, unsigned y_pos)
{
    f3dc:	defffc04 	addi	sp,sp,-16
    f3e0:	df000315 	stw	fp,12(sp)
    f3e4:	df000304 	addi	fp,sp,12
    f3e8:	e13ffe15 	stw	r4,-8(fp)
    f3ec:	e17fff15 	stw	r5,-4(fp)
	//assume valid inputs
	unsigned char addr = 0x00000000;
    f3f0:	e03ffd05 	stb	zero,-12(fp)
	if (y_pos == 0)
    f3f4:	e0bfff17 	ldw	r2,-4(fp)
    f3f8:	1000061e 	bne	r2,zero,f414 <get_DDRAM_addr+0x38>
	{
		addr |= x_pos;
    f3fc:	e0bffe17 	ldw	r2,-8(fp)
    f400:	1007883a 	mov	r3,r2
    f404:	e0bffd03 	ldbu	r2,-12(fp)
    f408:	1884b03a 	or	r2,r3,r2
    f40c:	e0bffd05 	stb	r2,-12(fp)
    f410:	00000806 	br	f434 <get_DDRAM_addr+0x58>
	}
	else
	{
		addr |= x_pos;
    f414:	e0bffe17 	ldw	r2,-8(fp)
    f418:	1007883a 	mov	r3,r2
    f41c:	e0bffd03 	ldbu	r2,-12(fp)
    f420:	1884b03a 	or	r2,r3,r2
    f424:	e0bffd05 	stb	r2,-12(fp)
		addr |= 0x00000040;
    f428:	e0bffd03 	ldbu	r2,-12(fp)
    f42c:	10801014 	ori	r2,r2,64
    f430:	e0bffd05 	stb	r2,-12(fp)
	}
	// b_7 is always 1 for DDRAM address, see datasheet
	return (addr | 0x00000080);
    f434:	e0fffd03 	ldbu	r3,-12(fp)
    f438:	00bfe004 	movi	r2,-128
    f43c:	1884b03a 	or	r2,r3,r2
}
    f440:	e037883a 	mov	sp,fp
    f444:	df000017 	ldw	fp,0(sp)
    f448:	dec00104 	addi	sp,sp,4
    f44c:	f800283a 	ret

0000f450 <alt_up_character_lcd_send_cmd>:
 * @param cmd -- the command bits 
 *
 * @return nothing
 **/
void alt_up_character_lcd_send_cmd(alt_up_character_lcd_dev *lcd, unsigned char cmd)
{
    f450:	defffd04 	addi	sp,sp,-12
    f454:	df000215 	stw	fp,8(sp)
    f458:	df000204 	addi	fp,sp,8
    f45c:	e13ffe15 	stw	r4,-8(fp)
    f460:	2805883a 	mov	r2,r5
    f464:	e0bfff05 	stb	r2,-4(fp)
 	// NOTE: We use the term Instruction Register and Control Register interchangeably
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, cmd);
    f468:	e0bffe17 	ldw	r2,-8(fp)
    f46c:	10800a17 	ldw	r2,40(r2)
    f470:	1007883a 	mov	r3,r2
    f474:	e0bfff03 	ldbu	r2,-4(fp)
    f478:	18800025 	stbio	r2,0(r3)
}
    f47c:	0001883a 	nop
    f480:	e037883a 	mov	sp,fp
    f484:	df000017 	ldw	fp,0(sp)
    f488:	dec00104 	addi	sp,sp,4
    f48c:	f800283a 	ret

0000f490 <alt_up_character_lcd_init>:
 * file for a detailed description of each function
 */
////////////////////////////////////////////////////////////////////////////

void alt_up_character_lcd_init(alt_up_character_lcd_dev *lcd)
{
    f490:	defffe04 	addi	sp,sp,-8
    f494:	df000115 	stw	fp,4(sp)
    f498:	df000104 	addi	fp,sp,4
    f49c:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, ALT_UP_CHARACTER_LCD_COMM_CLEAR_DISPLAY);
    f4a0:	e0bfff17 	ldw	r2,-4(fp)
    f4a4:	10800a17 	ldw	r2,40(r2)
    f4a8:	1007883a 	mov	r3,r2
    f4ac:	00800044 	movi	r2,1
    f4b0:	18800025 	stbio	r2,0(r3)
	// register the device 
	// see "Developing Device Drivers for the HAL" in "Nios II Software Developer's Handbook"
}
    f4b4:	0001883a 	nop
    f4b8:	e037883a 	mov	sp,fp
    f4bc:	df000017 	ldw	fp,0(sp)
    f4c0:	dec00104 	addi	sp,sp,4
    f4c4:	f800283a 	ret

0000f4c8 <alt_up_character_lcd_open_dev>:

alt_up_character_lcd_dev* alt_up_character_lcd_open_dev(const char* name)
{
    f4c8:	defffc04 	addi	sp,sp,-16
    f4cc:	dfc00315 	stw	ra,12(sp)
    f4d0:	df000215 	stw	fp,8(sp)
    f4d4:	df000204 	addi	fp,sp,8
    f4d8:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_character_lcd_dev *dev = (alt_up_character_lcd_dev*)alt_find_dev(name, &alt_dev_list);
    f4dc:	d1600904 	addi	r5,gp,-32732
    f4e0:	e13fff17 	ldw	r4,-4(fp)
    f4e4:	00109880 	call	10988 <alt_find_dev>
    f4e8:	e0bffe15 	stw	r2,-8(fp)

  return dev;
    f4ec:	e0bffe17 	ldw	r2,-8(fp)
}
    f4f0:	e037883a 	mov	sp,fp
    f4f4:	dfc00117 	ldw	ra,4(sp)
    f4f8:	df000017 	ldw	fp,0(sp)
    f4fc:	dec00204 	addi	sp,sp,8
    f500:	f800283a 	ret

0000f504 <alt_up_character_lcd_write>:

void alt_up_character_lcd_write(alt_up_character_lcd_dev *dev, const char *ptr, unsigned int len)
{
    f504:	defffb04 	addi	sp,sp,-20
    f508:	df000415 	stw	fp,16(sp)
    f50c:	df000404 	addi	fp,sp,16
    f510:	e13ffd15 	stw	r4,-12(fp)
    f514:	e17ffe15 	stw	r5,-8(fp)
    f518:	e1bfff15 	stw	r6,-4(fp)
	unsigned int i;
	for (i = 0; i < len; i++)
    f51c:	e03ffc15 	stw	zero,-16(fp)
    f520:	00000f06 	br	f560 <alt_up_character_lcd_write+0x5c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr+i));
    f524:	e0bffd17 	ldw	r2,-12(fp)
    f528:	10800a17 	ldw	r2,40(r2)
    f52c:	10800044 	addi	r2,r2,1
    f530:	1009883a 	mov	r4,r2
    f534:	e0fffe17 	ldw	r3,-8(fp)
    f538:	e0bffc17 	ldw	r2,-16(fp)
    f53c:	1885883a 	add	r2,r3,r2
    f540:	10800003 	ldbu	r2,0(r2)
    f544:	10803fcc 	andi	r2,r2,255
    f548:	1080201c 	xori	r2,r2,128
    f54c:	10bfe004 	addi	r2,r2,-128
    f550:	20800025 	stbio	r2,0(r4)
}

void alt_up_character_lcd_write(alt_up_character_lcd_dev *dev, const char *ptr, unsigned int len)
{
	unsigned int i;
	for (i = 0; i < len; i++)
    f554:	e0bffc17 	ldw	r2,-16(fp)
    f558:	10800044 	addi	r2,r2,1
    f55c:	e0bffc15 	stw	r2,-16(fp)
    f560:	e0fffc17 	ldw	r3,-16(fp)
    f564:	e0bfff17 	ldw	r2,-4(fp)
    f568:	18bfee36 	bltu	r3,r2,f524 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f524>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr+i));
	}
}
    f56c:	0001883a 	nop
    f570:	e037883a 	mov	sp,fp
    f574:	df000017 	ldw	fp,0(sp)
    f578:	dec00104 	addi	sp,sp,4
    f57c:	f800283a 	ret

0000f580 <alt_up_character_lcd_string>:

void alt_up_character_lcd_string(alt_up_character_lcd_dev *dev, const char *ptr)
{
    f580:	defffd04 	addi	sp,sp,-12
    f584:	df000215 	stw	fp,8(sp)
    f588:	df000204 	addi	fp,sp,8
    f58c:	e13ffe15 	stw	r4,-8(fp)
    f590:	e17fff15 	stw	r5,-4(fp)
	while ( *ptr )
    f594:	00000d06 	br	f5cc <alt_up_character_lcd_string+0x4c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr));
    f598:	e0bffe17 	ldw	r2,-8(fp)
    f59c:	10800a17 	ldw	r2,40(r2)
    f5a0:	10800044 	addi	r2,r2,1
    f5a4:	1007883a 	mov	r3,r2
    f5a8:	e0bfff17 	ldw	r2,-4(fp)
    f5ac:	10800003 	ldbu	r2,0(r2)
    f5b0:	10803fcc 	andi	r2,r2,255
    f5b4:	1080201c 	xori	r2,r2,128
    f5b8:	10bfe004 	addi	r2,r2,-128
    f5bc:	18800025 	stbio	r2,0(r3)
		++ptr;
    f5c0:	e0bfff17 	ldw	r2,-4(fp)
    f5c4:	10800044 	addi	r2,r2,1
    f5c8:	e0bfff15 	stw	r2,-4(fp)
	}
}

void alt_up_character_lcd_string(alt_up_character_lcd_dev *dev, const char *ptr)
{
	while ( *ptr )
    f5cc:	e0bfff17 	ldw	r2,-4(fp)
    f5d0:	10800003 	ldbu	r2,0(r2)
    f5d4:	10803fcc 	andi	r2,r2,255
    f5d8:	1080201c 	xori	r2,r2,128
    f5dc:	10bfe004 	addi	r2,r2,-128
    f5e0:	103fed1e 	bne	r2,zero,f598 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f598>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr));
		++ptr;
	}
}
    f5e4:	0001883a 	nop
    f5e8:	e037883a 	mov	sp,fp
    f5ec:	df000017 	ldw	fp,0(sp)
    f5f0:	dec00104 	addi	sp,sp,4
    f5f4:	f800283a 	ret

0000f5f8 <alt_up_character_lcd_write_fd>:

// this function isn't used, and is included for future upgrades
int alt_up_character_lcd_write_fd(alt_fd *fd, const char *ptr, int len)
{
    f5f8:	defffb04 	addi	sp,sp,-20
    f5fc:	dfc00415 	stw	ra,16(sp)
    f600:	df000315 	stw	fp,12(sp)
    f604:	df000304 	addi	fp,sp,12
    f608:	e13ffd15 	stw	r4,-12(fp)
    f60c:	e17ffe15 	stw	r5,-8(fp)
    f610:	e1bfff15 	stw	r6,-4(fp)
	alt_up_character_lcd_write( (alt_up_character_lcd_dev *) fd->dev, ptr, (unsigned int) len);
    f614:	e0bffd17 	ldw	r2,-12(fp)
    f618:	10800017 	ldw	r2,0(r2)
    f61c:	e0ffff17 	ldw	r3,-4(fp)
    f620:	180d883a 	mov	r6,r3
    f624:	e17ffe17 	ldw	r5,-8(fp)
    f628:	1009883a 	mov	r4,r2
    f62c:	000f5040 	call	f504 <alt_up_character_lcd_write>
	return 0;
    f630:	0005883a 	mov	r2,zero
}
    f634:	e037883a 	mov	sp,fp
    f638:	dfc00117 	ldw	ra,4(sp)
    f63c:	df000017 	ldw	fp,0(sp)
    f640:	dec00204 	addi	sp,sp,8
    f644:	f800283a 	ret

0000f648 <alt_up_character_lcd_set_cursor_pos>:

int alt_up_character_lcd_set_cursor_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, 
	 unsigned y_pos)
{
    f648:	defffa04 	addi	sp,sp,-24
    f64c:	dfc00515 	stw	ra,20(sp)
    f650:	df000415 	stw	fp,16(sp)
    f654:	df000404 	addi	fp,sp,16
    f658:	e13ffd15 	stw	r4,-12(fp)
    f65c:	e17ffe15 	stw	r5,-8(fp)
    f660:	e1bfff15 	stw	r6,-4(fp)
	//boundary check
	if (x_pos > 39 || y_pos > 1 )
    f664:	e0bffe17 	ldw	r2,-8(fp)
    f668:	10800a28 	cmpgeui	r2,r2,40
    f66c:	1000031e 	bne	r2,zero,f67c <alt_up_character_lcd_set_cursor_pos+0x34>
    f670:	e0bfff17 	ldw	r2,-4(fp)
    f674:	108000b0 	cmpltui	r2,r2,2
    f678:	1000021e 	bne	r2,zero,f684 <alt_up_character_lcd_set_cursor_pos+0x3c>
		// invalid argument
		return -1;
    f67c:	00bfffc4 	movi	r2,-1
    f680:	00000906 	br	f6a8 <alt_up_character_lcd_set_cursor_pos+0x60>
	// calculate address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
    f684:	e17fff17 	ldw	r5,-4(fp)
    f688:	e13ffe17 	ldw	r4,-8(fp)
    f68c:	000f3dc0 	call	f3dc <get_DDRAM_addr>
    f690:	e0bffc05 	stb	r2,-16(fp)
	// set the cursor
	alt_up_character_lcd_send_cmd(lcd, addr);
    f694:	e0bffc03 	ldbu	r2,-16(fp)
    f698:	100b883a 	mov	r5,r2
    f69c:	e13ffd17 	ldw	r4,-12(fp)
    f6a0:	000f4500 	call	f450 <alt_up_character_lcd_send_cmd>
	return 0;
    f6a4:	0005883a 	mov	r2,zero
}
    f6a8:	e037883a 	mov	sp,fp
    f6ac:	dfc00117 	ldw	ra,4(sp)
    f6b0:	df000017 	ldw	fp,0(sp)
    f6b4:	dec00204 	addi	sp,sp,8
    f6b8:	f800283a 	ret

0000f6bc <alt_up_character_lcd_shift_cursor>:

void alt_up_character_lcd_shift_cursor(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
    f6bc:	defffb04 	addi	sp,sp,-20
    f6c0:	dfc00415 	stw	ra,16(sp)
    f6c4:	df000315 	stw	fp,12(sp)
    f6c8:	df000304 	addi	fp,sp,12
    f6cc:	e13ffe15 	stw	r4,-8(fp)
    f6d0:	e17fff15 	stw	r5,-4(fp)
	if (x_right_shift_offset == 0) 
    f6d4:	e0bfff17 	ldw	r2,-4(fp)
    f6d8:	10001526 	beq	r2,zero,f730 <alt_up_character_lcd_shift_cursor+0x74>
		// don't ask me to do nothing 
		return;

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
    f6dc:	e0bfff17 	ldw	r2,-4(fp)
    f6e0:	0080020e 	bge	zero,r2,f6ec <alt_up_character_lcd_shift_cursor+0x30>
    f6e4:	00800504 	movi	r2,20
    f6e8:	00000106 	br	f6f0 <alt_up_character_lcd_shift_cursor+0x34>
    f6ec:	00800404 	movi	r2,16
    f6f0:	e0bffd45 	stb	r2,-11(fp)
		ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
    f6f4:	e0bfff17 	ldw	r2,-4(fp)
    f6f8:	1000010e 	bge	r2,zero,f700 <alt_up_character_lcd_shift_cursor+0x44>
    f6fc:	0085c83a 	sub	r2,zero,r2
    f700:	e0bffd05 	stb	r2,-12(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
    f704:	00000406 	br	f718 <alt_up_character_lcd_shift_cursor+0x5c>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
    f708:	e0bffd43 	ldbu	r2,-11(fp)
    f70c:	100b883a 	mov	r5,r2
    f710:	e13ffe17 	ldw	r4,-8(fp)
    f714:	000f4500 	call	f450 <alt_up_character_lcd_send_cmd>
		ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
    f718:	e0bffd03 	ldbu	r2,-12(fp)
    f71c:	10ffffc4 	addi	r3,r2,-1
    f720:	e0fffd05 	stb	r3,-12(fp)
    f724:	10803fcc 	andi	r2,r2,255
    f728:	103ff71e 	bne	r2,zero,f708 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f708>
    f72c:	00000106 	br	f734 <alt_up_character_lcd_shift_cursor+0x78>

void alt_up_character_lcd_shift_cursor(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
	if (x_right_shift_offset == 0) 
		// don't ask me to do nothing 
		return;
    f730:	0001883a 	nop
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
}
    f734:	e037883a 	mov	sp,fp
    f738:	dfc00117 	ldw	ra,4(sp)
    f73c:	df000017 	ldw	fp,0(sp)
    f740:	dec00204 	addi	sp,sp,8
    f744:	f800283a 	ret

0000f748 <alt_up_character_lcd_shift_display>:

void alt_up_character_lcd_shift_display(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
    f748:	defffb04 	addi	sp,sp,-20
    f74c:	dfc00415 	stw	ra,16(sp)
    f750:	df000315 	stw	fp,12(sp)
    f754:	df000304 	addi	fp,sp,12
    f758:	e13ffe15 	stw	r4,-8(fp)
    f75c:	e17fff15 	stw	r5,-4(fp)
	if (x_right_shift_offset == 0) 
    f760:	e0bfff17 	ldw	r2,-4(fp)
    f764:	10001526 	beq	r2,zero,f7bc <alt_up_character_lcd_shift_display+0x74>
		// don't ask me to do nothing 
		return;

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
    f768:	e0bfff17 	ldw	r2,-4(fp)
    f76c:	0080020e 	bge	zero,r2,f778 <alt_up_character_lcd_shift_display+0x30>
    f770:	00800704 	movi	r2,28
    f774:	00000106 	br	f77c <alt_up_character_lcd_shift_display+0x34>
    f778:	00800604 	movi	r2,24
    f77c:	e0bffd45 	stb	r2,-11(fp)
		ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
    f780:	e0bfff17 	ldw	r2,-4(fp)
    f784:	1000010e 	bge	r2,zero,f78c <alt_up_character_lcd_shift_display+0x44>
    f788:	0085c83a 	sub	r2,zero,r2
    f78c:	e0bffd05 	stb	r2,-12(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
    f790:	00000406 	br	f7a4 <alt_up_character_lcd_shift_display+0x5c>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
    f794:	e0bffd43 	ldbu	r2,-11(fp)
    f798:	100b883a 	mov	r5,r2
    f79c:	e13ffe17 	ldw	r4,-8(fp)
    f7a0:	000f4500 	call	f450 <alt_up_character_lcd_send_cmd>
		ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
    f7a4:	e0bffd03 	ldbu	r2,-12(fp)
    f7a8:	10ffffc4 	addi	r3,r2,-1
    f7ac:	e0fffd05 	stb	r3,-12(fp)
    f7b0:	10803fcc 	andi	r2,r2,255
    f7b4:	103ff71e 	bne	r2,zero,f794 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700f794>
    f7b8:	00000106 	br	f7c0 <alt_up_character_lcd_shift_display+0x78>

void alt_up_character_lcd_shift_display(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
	if (x_right_shift_offset == 0) 
		// don't ask me to do nothing 
		return;
    f7bc:	0001883a 	nop
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
}
    f7c0:	e037883a 	mov	sp,fp
    f7c4:	dfc00117 	ldw	ra,4(sp)
    f7c8:	df000017 	ldw	fp,0(sp)
    f7cc:	dec00204 	addi	sp,sp,8
    f7d0:	f800283a 	ret

0000f7d4 <alt_up_character_lcd_erase_pos>:

int alt_up_character_lcd_erase_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, unsigned y_pos)
{
    f7d4:	defffa04 	addi	sp,sp,-24
    f7d8:	dfc00515 	stw	ra,20(sp)
    f7dc:	df000415 	stw	fp,16(sp)
    f7e0:	df000404 	addi	fp,sp,16
    f7e4:	e13ffd15 	stw	r4,-12(fp)
    f7e8:	e17ffe15 	stw	r5,-8(fp)
    f7ec:	e1bfff15 	stw	r6,-4(fp)
	// boundary check
	if (x_pos > 39 || y_pos > 1 )
    f7f0:	e0bffe17 	ldw	r2,-8(fp)
    f7f4:	10800a28 	cmpgeui	r2,r2,40
    f7f8:	1000031e 	bne	r2,zero,f808 <alt_up_character_lcd_erase_pos+0x34>
    f7fc:	e0bfff17 	ldw	r2,-4(fp)
    f800:	108000b0 	cmpltui	r2,r2,2
    f804:	1000021e 	bne	r2,zero,f810 <alt_up_character_lcd_erase_pos+0x3c>
		return -1;
    f808:	00bfffc4 	movi	r2,-1
    f80c:	00000f06 	br	f84c <alt_up_character_lcd_erase_pos+0x78>

	// get address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
    f810:	e17fff17 	ldw	r5,-4(fp)
    f814:	e13ffe17 	ldw	r4,-8(fp)
    f818:	000f3dc0 	call	f3dc <get_DDRAM_addr>
    f81c:	e0bffc05 	stb	r2,-16(fp)
	// set cursor to dest point
	alt_up_character_lcd_send_cmd(lcd, addr);
    f820:	e0bffc03 	ldbu	r2,-16(fp)
    f824:	100b883a 	mov	r5,r2
    f828:	e13ffd17 	ldw	r4,-12(fp)
    f82c:	000f4500 	call	f450 <alt_up_character_lcd_send_cmd>
	//send an empty char as erase (refer to the Character Generator ROM part of the Datasheet)
	IOWR_ALT_UP_CHARACTER_LCD_DATA(lcd->base, (0x00000002) );
    f830:	e0bffd17 	ldw	r2,-12(fp)
    f834:	10800a17 	ldw	r2,40(r2)
    f838:	10800044 	addi	r2,r2,1
    f83c:	1007883a 	mov	r3,r2
    f840:	00800084 	movi	r2,2
    f844:	18800025 	stbio	r2,0(r3)
	return 0;
    f848:	0005883a 	mov	r2,zero
}
    f84c:	e037883a 	mov	sp,fp
    f850:	dfc00117 	ldw	ra,4(sp)
    f854:	df000017 	ldw	fp,0(sp)
    f858:	dec00204 	addi	sp,sp,8
    f85c:	f800283a 	ret

0000f860 <alt_up_character_lcd_cursor_off>:

void alt_up_character_lcd_cursor_off(alt_up_character_lcd_dev *lcd)
{
    f860:	defffd04 	addi	sp,sp,-12
    f864:	dfc00215 	stw	ra,8(sp)
    f868:	df000115 	stw	fp,4(sp)
    f86c:	df000104 	addi	fp,sp,4
    f870:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_OFF);
    f874:	01400304 	movi	r5,12
    f878:	e13fff17 	ldw	r4,-4(fp)
    f87c:	000f4500 	call	f450 <alt_up_character_lcd_send_cmd>
}
    f880:	0001883a 	nop
    f884:	e037883a 	mov	sp,fp
    f888:	dfc00117 	ldw	ra,4(sp)
    f88c:	df000017 	ldw	fp,0(sp)
    f890:	dec00204 	addi	sp,sp,8
    f894:	f800283a 	ret

0000f898 <alt_up_character_lcd_cursor_blink_on>:

void alt_up_character_lcd_cursor_blink_on(alt_up_character_lcd_dev *lcd)
{
    f898:	defffd04 	addi	sp,sp,-12
    f89c:	dfc00215 	stw	ra,8(sp)
    f8a0:	df000115 	stw	fp,4(sp)
    f8a4:	df000104 	addi	fp,sp,4
    f8a8:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_BLINK_ON);
    f8ac:	014003c4 	movi	r5,15
    f8b0:	e13fff17 	ldw	r4,-4(fp)
    f8b4:	000f4500 	call	f450 <alt_up_character_lcd_send_cmd>
}
    f8b8:	0001883a 	nop
    f8bc:	e037883a 	mov	sp,fp
    f8c0:	dfc00117 	ldw	ra,4(sp)
    f8c4:	df000017 	ldw	fp,0(sp)
    f8c8:	dec00204 	addi	sp,sp,8
    f8cc:	f800283a 	ret

0000f8d0 <alt_up_irda_enable_read_interrupt>:
#include "altera_up_avalon_irda.h"
#include "altera_up_avalon_irda_regs.h"


void alt_up_irda_enable_read_interrupt(alt_up_irda_dev *irda)
{
    f8d0:	defffd04 	addi	sp,sp,-12
    f8d4:	df000215 	stw	fp,8(sp)
    f8d8:	df000204 	addi	fp,sp,8
    f8dc:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_IRDA_CONTROL(irda->base); 
    f8e0:	e0bfff17 	ldw	r2,-4(fp)
    f8e4:	10800a17 	ldw	r2,40(r2)
    f8e8:	10800104 	addi	r2,r2,4
    f8ec:	10800037 	ldwio	r2,0(r2)
    f8f0:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_IRDA_CONTROL_RE_MSK;
    f8f4:	e0bffe17 	ldw	r2,-8(fp)
    f8f8:	10800054 	ori	r2,r2,1
    f8fc:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_IRDA_CONTROL(irda->base, ctrl_reg);
    f900:	e0bfff17 	ldw	r2,-4(fp)
    f904:	10800a17 	ldw	r2,40(r2)
    f908:	10800104 	addi	r2,r2,4
    f90c:	1007883a 	mov	r3,r2
    f910:	e0bffe17 	ldw	r2,-8(fp)
    f914:	18800035 	stwio	r2,0(r3)
}
    f918:	0001883a 	nop
    f91c:	e037883a 	mov	sp,fp
    f920:	df000017 	ldw	fp,0(sp)
    f924:	dec00104 	addi	sp,sp,4
    f928:	f800283a 	ret

0000f92c <alt_up_irda_disable_read_interrupt>:

void alt_up_irda_disable_read_interrupt(alt_up_irda_dev *irda)
{
    f92c:	defffd04 	addi	sp,sp,-12
    f930:	df000215 	stw	fp,8(sp)
    f934:	df000204 	addi	fp,sp,8
    f938:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_IRDA_CONTROL(irda->base); 
    f93c:	e0bfff17 	ldw	r2,-4(fp)
    f940:	10800a17 	ldw	r2,40(r2)
    f944:	10800104 	addi	r2,r2,4
    f948:	10800037 	ldwio	r2,0(r2)
    f94c:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_IRDA_CONTROL_RE_MSK;
    f950:	e0fffe17 	ldw	r3,-8(fp)
    f954:	00bfff84 	movi	r2,-2
    f958:	1884703a 	and	r2,r3,r2
    f95c:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_IRDA_CONTROL(irda->base, ctrl_reg);
    f960:	e0bfff17 	ldw	r2,-4(fp)
    f964:	10800a17 	ldw	r2,40(r2)
    f968:	10800104 	addi	r2,r2,4
    f96c:	1007883a 	mov	r3,r2
    f970:	e0bffe17 	ldw	r2,-8(fp)
    f974:	18800035 	stwio	r2,0(r3)
}
    f978:	0001883a 	nop
    f97c:	e037883a 	mov	sp,fp
    f980:	df000017 	ldw	fp,0(sp)
    f984:	dec00104 	addi	sp,sp,4
    f988:	f800283a 	ret

0000f98c <alt_up_irda_get_used_space_in_read_FIFO>:

unsigned alt_up_irda_get_used_space_in_read_FIFO(alt_up_irda_dev *irda)
{
    f98c:	defffd04 	addi	sp,sp,-12
    f990:	df000215 	stw	fp,8(sp)
    f994:	df000204 	addi	fp,sp,8
    f998:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = 0;
    f99c:	e03ffe0d 	sth	zero,-8(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_IRDA_DATA(irda->base), 2); 
//	return ravail;
	ravail = IORD_ALT_UP_IRDA_RAVAIL(irda->base); 
    f9a0:	e0bfff17 	ldw	r2,-4(fp)
    f9a4:	10800a17 	ldw	r2,40(r2)
    f9a8:	10800084 	addi	r2,r2,2
    f9ac:	1080002b 	ldhuio	r2,0(r2)
    f9b0:	10bfffcc 	andi	r2,r2,65535
    f9b4:	e0bffe0d 	sth	r2,-8(fp)
	return (ravail & ALT_UP_IRDA_RAVAIL_MSK) >> ALT_UP_IRDA_RAVAIL_OFST;
    f9b8:	e0bffe0b 	ldhu	r2,-8(fp)
}
    f9bc:	e037883a 	mov	sp,fp
    f9c0:	df000017 	ldw	fp,0(sp)
    f9c4:	dec00104 	addi	sp,sp,4
    f9c8:	f800283a 	ret

0000f9cc <alt_up_irda_get_available_space_in_write_FIFO>:

unsigned alt_up_irda_get_available_space_in_write_FIFO(alt_up_irda_dev *irda)
{
    f9cc:	defffd04 	addi	sp,sp,-12
    f9d0:	df000215 	stw	fp,8(sp)
    f9d4:	df000204 	addi	fp,sp,8
    f9d8:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_IRDA_CONTROL(irda->base); 
    f9dc:	e0bfff17 	ldw	r2,-4(fp)
    f9e0:	10800a17 	ldw	r2,40(r2)
    f9e4:	10800104 	addi	r2,r2,4
    f9e8:	10800037 	ldwio	r2,0(r2)
    f9ec:	e0bffe15 	stw	r2,-8(fp)
	return (ctrl_reg & ALT_UP_IRDA_CONTROL_WSPACE_MSK) >> ALT_UP_IRDA_CONTROL_WSPACE_OFST;
    f9f0:	e0bffe17 	ldw	r2,-8(fp)
    f9f4:	1004d43a 	srli	r2,r2,16
}
    f9f8:	e037883a 	mov	sp,fp
    f9fc:	df000017 	ldw	fp,0(sp)
    fa00:	dec00104 	addi	sp,sp,4
    fa04:	f800283a 	ret

0000fa08 <alt_up_irda_check_parity>:

int alt_up_irda_check_parity(alt_u32 data_reg)
{
    fa08:	defffd04 	addi	sp,sp,-12
    fa0c:	df000215 	stw	fp,8(sp)
    fa10:	df000204 	addi	fp,sp,8
    fa14:	e13fff15 	stw	r4,-4(fp)
	unsigned parity_error = (data_reg & ALT_UP_IRDA_DATA_PE_MSK) >> ALT_UP_IRDA_DATA_PE_OFST;
    fa18:	e0bfff17 	ldw	r2,-4(fp)
    fa1c:	1080800c 	andi	r2,r2,512
    fa20:	1004d27a 	srli	r2,r2,9
    fa24:	e0bffe15 	stw	r2,-8(fp)
	return (parity_error ? -1 : 0);
    fa28:	e0bffe17 	ldw	r2,-8(fp)
    fa2c:	10000226 	beq	r2,zero,fa38 <alt_up_irda_check_parity+0x30>
    fa30:	00bfffc4 	movi	r2,-1
    fa34:	00000106 	br	fa3c <alt_up_irda_check_parity+0x34>
    fa38:	0005883a 	mov	r2,zero
}
    fa3c:	e037883a 	mov	sp,fp
    fa40:	df000017 	ldw	fp,0(sp)
    fa44:	dec00104 	addi	sp,sp,4
    fa48:	f800283a 	ret

0000fa4c <alt_up_irda_write_data>:

int alt_up_irda_write_data(alt_up_irda_dev *irda, alt_u8 data)
{
    fa4c:	defffd04 	addi	sp,sp,-12
    fa50:	df000215 	stw	fp,8(sp)
    fa54:	df000204 	addi	fp,sp,8
    fa58:	e13ffe15 	stw	r4,-8(fp)
    fa5c:	2805883a 	mov	r2,r5
    fa60:	e0bfff05 	stb	r2,-4(fp)
	data_reg = IORD_ALT_UP_IRDA_DATA(irda->base);
    */

	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_IRDA_DATA(irda->base, (data>>ALT_UP_IRDA_DATA_DATA_OFST) & ALT_UP_IRDA_DATA_DATA_MSK);
    fa64:	e0bffe17 	ldw	r2,-8(fp)
    fa68:	10800a17 	ldw	r2,40(r2)
    fa6c:	1007883a 	mov	r3,r2
    fa70:	e0bfff03 	ldbu	r2,-4(fp)
    fa74:	18800035 	stwio	r2,0(r3)
	return 0;
    fa78:	0005883a 	mov	r2,zero
}
    fa7c:	e037883a 	mov	sp,fp
    fa80:	df000017 	ldw	fp,0(sp)
    fa84:	dec00104 	addi	sp,sp,4
    fa88:	f800283a 	ret

0000fa8c <alt_up_irda_read_data>:

int alt_up_irda_read_data(alt_up_irda_dev *irda, alt_u8 *data, alt_u8 *parity_error)
{
    fa8c:	defffa04 	addi	sp,sp,-24
    fa90:	dfc00515 	stw	ra,20(sp)
    fa94:	df000415 	stw	fp,16(sp)
    fa98:	df000404 	addi	fp,sp,16
    fa9c:	e13ffd15 	stw	r4,-12(fp)
    faa0:	e17ffe15 	stw	r5,-8(fp)
    faa4:	e1bfff15 	stw	r6,-4(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_IRDA_DATA(irda->base);
    faa8:	e0bffd17 	ldw	r2,-12(fp)
    faac:	10800a17 	ldw	r2,40(r2)
    fab0:	10800037 	ldwio	r2,0(r2)
    fab4:	e0bffc15 	stw	r2,-16(fp)
	*data = (data_reg & ALT_UP_IRDA_DATA_DATA_MSK) >> ALT_UP_IRDA_DATA_DATA_OFST;
    fab8:	e0bffc17 	ldw	r2,-16(fp)
    fabc:	1007883a 	mov	r3,r2
    fac0:	e0bffe17 	ldw	r2,-8(fp)
    fac4:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_irda_check_parity(data_reg);
    fac8:	e13ffc17 	ldw	r4,-16(fp)
    facc:	000fa080 	call	fa08 <alt_up_irda_check_parity>
    fad0:	1007883a 	mov	r3,r2
    fad4:	e0bfff17 	ldw	r2,-4(fp)
    fad8:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_IRDA_DATA_RVALID_MSK) >> ALT_UP_IRDA_DATA_RVALID_OFST) - 1);
    fadc:	e0bffc17 	ldw	r2,-16(fp)
    fae0:	10a0000c 	andi	r2,r2,32768
    fae4:	1004d3fa 	srli	r2,r2,15
    fae8:	10bfffc4 	addi	r2,r2,-1
}
    faec:	e037883a 	mov	sp,fp
    faf0:	dfc00117 	ldw	ra,4(sp)
    faf4:	df000017 	ldw	fp,0(sp)
    faf8:	dec00204 	addi	sp,sp,8
    fafc:	f800283a 	ret

0000fb00 <alt_up_irda_read_fd>:

int alt_up_irda_read_fd (alt_fd* fd, char* ptr, int len)
{
    fb00:	defff804 	addi	sp,sp,-32
    fb04:	dfc00715 	stw	ra,28(sp)
    fb08:	df000615 	stw	fp,24(sp)
    fb0c:	df000604 	addi	fp,sp,24
    fb10:	e13ffd15 	stw	r4,-12(fp)
    fb14:	e17ffe15 	stw	r5,-8(fp)
    fb18:	e1bfff15 	stw	r6,-4(fp)
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
    fb1c:	e0bffd17 	ldw	r2,-12(fp)
    fb20:	10800017 	ldw	r2,0(r2)
    fb24:	e0bffb15 	stw	r2,-20(fp)
	int count = 0;
    fb28:	e03ffa15 	stw	zero,-24(fp)
	alt_u8 parity_error;
	while(len--)
    fb2c:	00000c06 	br	fb60 <alt_up_irda_read_fd+0x60>
	{
		if (alt_up_irda_read_data(irda, (alt_u8 *)ptr++, &parity_error)==0)
    fb30:	e0bffe17 	ldw	r2,-8(fp)
    fb34:	10c00044 	addi	r3,r2,1
    fb38:	e0fffe15 	stw	r3,-8(fp)
    fb3c:	e0fffc04 	addi	r3,fp,-16
    fb40:	180d883a 	mov	r6,r3
    fb44:	100b883a 	mov	r5,r2
    fb48:	e13ffb17 	ldw	r4,-20(fp)
    fb4c:	000fa8c0 	call	fa8c <alt_up_irda_read_data>
    fb50:	1000081e 	bne	r2,zero,fb74 <alt_up_irda_read_fd+0x74>
			count++;
    fb54:	e0bffa17 	ldw	r2,-24(fp)
    fb58:	10800044 	addi	r2,r2,1
    fb5c:	e0bffa15 	stw	r2,-24(fp)
int alt_up_irda_read_fd (alt_fd* fd, char* ptr, int len)
{
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
	int count = 0;
	alt_u8 parity_error;
	while(len--)
    fb60:	e0bfff17 	ldw	r2,-4(fp)
    fb64:	10ffffc4 	addi	r3,r2,-1
    fb68:	e0ffff15 	stw	r3,-4(fp)
    fb6c:	103ff01e 	bne	r2,zero,fb30 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700fb30>
    fb70:	00000106 	br	fb78 <alt_up_irda_read_fd+0x78>
	{
		if (alt_up_irda_read_data(irda, (alt_u8 *)ptr++, &parity_error)==0)
			count++;
		else
			break;
    fb74:	0001883a 	nop
	}
	return count;
    fb78:	e0bffa17 	ldw	r2,-24(fp)
}
    fb7c:	e037883a 	mov	sp,fp
    fb80:	dfc00117 	ldw	ra,4(sp)
    fb84:	df000017 	ldw	fp,0(sp)
    fb88:	dec00204 	addi	sp,sp,8
    fb8c:	f800283a 	ret

0000fb90 <alt_up_irda_write_fd>:

int alt_up_irda_write_fd (alt_fd* fd, const char* ptr, int len)
{
    fb90:	defff904 	addi	sp,sp,-28
    fb94:	dfc00615 	stw	ra,24(sp)
    fb98:	df000515 	stw	fp,20(sp)
    fb9c:	df000504 	addi	fp,sp,20
    fba0:	e13ffd15 	stw	r4,-12(fp)
    fba4:	e17ffe15 	stw	r5,-8(fp)
    fba8:	e1bfff15 	stw	r6,-4(fp)
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
    fbac:	e0bffd17 	ldw	r2,-12(fp)
    fbb0:	10800017 	ldw	r2,0(r2)
    fbb4:	e0bffc15 	stw	r2,-16(fp)
	int count = 0;
    fbb8:	e03ffb15 	stw	zero,-20(fp)
	while(len--)
    fbbc:	00000c06 	br	fbf0 <alt_up_irda_write_fd+0x60>
	{
		if (alt_up_irda_write_data(irda, (alt_u8) *ptr++)==0)
    fbc0:	e0bffe17 	ldw	r2,-8(fp)
    fbc4:	10c00044 	addi	r3,r2,1
    fbc8:	e0fffe15 	stw	r3,-8(fp)
    fbcc:	10800003 	ldbu	r2,0(r2)
    fbd0:	10803fcc 	andi	r2,r2,255
    fbd4:	100b883a 	mov	r5,r2
    fbd8:	e13ffc17 	ldw	r4,-16(fp)
    fbdc:	000fa4c0 	call	fa4c <alt_up_irda_write_data>
    fbe0:	1000081e 	bne	r2,zero,fc04 <alt_up_irda_write_fd+0x74>
			count++;
    fbe4:	e0bffb17 	ldw	r2,-20(fp)
    fbe8:	10800044 	addi	r2,r2,1
    fbec:	e0bffb15 	stw	r2,-20(fp)

int alt_up_irda_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
	int count = 0;
	while(len--)
    fbf0:	e0bfff17 	ldw	r2,-4(fp)
    fbf4:	10ffffc4 	addi	r3,r2,-1
    fbf8:	e0ffff15 	stw	r3,-4(fp)
    fbfc:	103ff01e 	bne	r2,zero,fbc0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700fbc0>
    fc00:	00000106 	br	fc08 <alt_up_irda_write_fd+0x78>
	{
		if (alt_up_irda_write_data(irda, (alt_u8) *ptr++)==0)
			count++;
		else
			break;
    fc04:	0001883a 	nop
	}
	return count;
    fc08:	e0bffb17 	ldw	r2,-20(fp)
}
    fc0c:	e037883a 	mov	sp,fp
    fc10:	dfc00117 	ldw	ra,4(sp)
    fc14:	df000017 	ldw	fp,0(sp)
    fc18:	dec00204 	addi	sp,sp,8
    fc1c:	f800283a 	ret

0000fc20 <alt_up_irda_open_dev>:

alt_up_irda_dev* alt_up_irda_open_dev(const char* name)
{
    fc20:	defffc04 	addi	sp,sp,-16
    fc24:	dfc00315 	stw	ra,12(sp)
    fc28:	df000215 	stw	fp,8(sp)
    fc2c:	df000204 	addi	fp,sp,8
    fc30:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_irda_dev *dev = (alt_up_irda_dev*)alt_find_dev(name, &alt_dev_list);
    fc34:	d1600904 	addi	r5,gp,-32732
    fc38:	e13fff17 	ldw	r4,-4(fp)
    fc3c:	00109880 	call	10988 <alt_find_dev>
    fc40:	e0bffe15 	stw	r2,-8(fp)

  return dev;
    fc44:	e0bffe17 	ldw	r2,-8(fp)
}
    fc48:	e037883a 	mov	sp,fp
    fc4c:	dfc00117 	ldw	ra,4(sp)
    fc50:	df000017 	ldw	fp,0(sp)
    fc54:	dec00204 	addi	sp,sp,8
    fc58:	f800283a 	ret

0000fc5c <read_RI_bit>:


//////////////////////////////////////////////////////////////////////////////////////////////
// Internal Functions
alt_u8 read_RI_bit(alt_u32 ctrl_reg)
{
    fc5c:	defffd04 	addi	sp,sp,-12
    fc60:	df000215 	stw	fp,8(sp)
    fc64:	df000204 	addi	fp,sp,8
    fc68:	e13fff15 	stw	r4,-4(fp)
	alt_u8 ri = (alt_u8) ((ctrl_reg & ALT_UP_PS2_PORT_CTRL_REG_RI_MSK) >> ALT_UP_PS2_PORT_CTRL_REG_RI_OFST);
    fc6c:	e0bfff17 	ldw	r2,-4(fp)
    fc70:	1080400c 	andi	r2,r2,256
    fc74:	1004d23a 	srli	r2,r2,8
    fc78:	e0bffe05 	stb	r2,-8(fp)
	return ri;
    fc7c:	e0bffe03 	ldbu	r2,-8(fp)
}
    fc80:	e037883a 	mov	sp,fp
    fc84:	df000017 	ldw	fp,0(sp)
    fc88:	dec00104 	addi	sp,sp,4
    fc8c:	f800283a 	ret

0000fc90 <read_RE_bit>:

alt_u8 read_RE_bit(alt_u32 ctrl_reg)
{
    fc90:	defffd04 	addi	sp,sp,-12
    fc94:	df000215 	stw	fp,8(sp)
    fc98:	df000204 	addi	fp,sp,8
    fc9c:	e13fff15 	stw	r4,-4(fp)
	alt_u8 re = (alt_u8) ((ctrl_reg & ALT_UP_PS2_PORT_CTRL_REG_RE_MSK) >> ALT_UP_PS2_PORT_CTRL_REG_RE_OFST);
    fca0:	e0bfff17 	ldw	r2,-4(fp)
    fca4:	1080004c 	andi	r2,r2,1
    fca8:	e0bffe05 	stb	r2,-8(fp)
	return re;
    fcac:	e0bffe03 	ldbu	r2,-8(fp)
}
    fcb0:	e037883a 	mov	sp,fp
    fcb4:	df000017 	ldw	fp,0(sp)
    fcb8:	dec00104 	addi	sp,sp,4
    fcbc:	f800283a 	ret

0000fcc0 <read_CE_bit>:

alt_u8 read_CE_bit(alt_u32 ctrl_reg)
{
    fcc0:	defffd04 	addi	sp,sp,-12
    fcc4:	df000215 	stw	fp,8(sp)
    fcc8:	df000204 	addi	fp,sp,8
    fccc:	e13fff15 	stw	r4,-4(fp)
	alt_u8 re = (alt_u8) ((ctrl_reg & ALT_UP_PS2_PORT_CTRL_REG_CE_MSK) >> ALT_UP_PS2_PORT_CTRL_REG_CE_OFST);
    fcd0:	e0bfff17 	ldw	r2,-4(fp)
    fcd4:	1081000c 	andi	r2,r2,1024
    fcd8:	1004d2ba 	srli	r2,r2,10
    fcdc:	e0bffe05 	stb	r2,-8(fp)
	return re;
    fce0:	e0bffe03 	ldbu	r2,-8(fp)
}
    fce4:	e037883a 	mov	sp,fp
    fce8:	df000017 	ldw	fp,0(sp)
    fcec:	dec00104 	addi	sp,sp,4
    fcf0:	f800283a 	ret

0000fcf4 <read_num_bytes_available>:

alt_u16 read_num_bytes_available(alt_u32 data_reg)
{
    fcf4:	defffd04 	addi	sp,sp,-12
    fcf8:	df000215 	stw	fp,8(sp)
    fcfc:	df000204 	addi	fp,sp,8
    fd00:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = (alt_u16)((data_reg & ALT_UP_PS2_PORT_DATA_REG_RAVAIL_MSK ) >> ALT_UP_PS2_PORT_DATA_REG_RAVAIL_OFST);
    fd04:	e0bfff17 	ldw	r2,-4(fp)
    fd08:	1004d43a 	srli	r2,r2,16
    fd0c:	e0bffe0d 	sth	r2,-8(fp)
	return ravail;
    fd10:	e0bffe0b 	ldhu	r2,-8(fp)
}
    fd14:	e037883a 	mov	sp,fp
    fd18:	df000017 	ldw	fp,0(sp)
    fd1c:	dec00104 	addi	sp,sp,4
    fd20:	f800283a 	ret

0000fd24 <read_data_valid>:

alt_u8 read_data_valid(alt_u32 data_reg)
{
    fd24:	defffd04 	addi	sp,sp,-12
    fd28:	df000215 	stw	fp,8(sp)
    fd2c:	df000204 	addi	fp,sp,8
    fd30:	e13fff15 	stw	r4,-4(fp)
	alt_u8 rvalid = (alt_u8)((data_reg & ALT_UP_PS2_PORT_DATA_REG_RVALID_MSK ) >> ALT_UP_PS2_PORT_DATA_REG_RVALID_OFST);
    fd34:	e0bfff17 	ldw	r2,-4(fp)
    fd38:	10a0000c 	andi	r2,r2,32768
    fd3c:	1004d3fa 	srli	r2,r2,15
    fd40:	e0bffe05 	stb	r2,-8(fp)
	return rvalid;
    fd44:	e0bffe03 	ldbu	r2,-8(fp)
}
    fd48:	e037883a 	mov	sp,fp
    fd4c:	df000017 	ldw	fp,0(sp)
    fd50:	dec00104 	addi	sp,sp,4
    fd54:	f800283a 	ret

0000fd58 <read_data_byte>:

alt_u8 read_data_byte(alt_u32 data_reg)
{
    fd58:	defffd04 	addi	sp,sp,-12
    fd5c:	df000215 	stw	fp,8(sp)
    fd60:	df000204 	addi	fp,sp,8
    fd64:	e13fff15 	stw	r4,-4(fp)
	alt_u8 data = (alt_u8) ( (data_reg & ALT_UP_PS2_PORT_DATA_REG_DATA_MSK) >> ALT_UP_PS2_PORT_DATA_REG_DATA_OFST) ;
    fd68:	e0bfff17 	ldw	r2,-4(fp)
    fd6c:	e0bffe05 	stb	r2,-8(fp)
	return data;
    fd70:	e0bffe03 	ldbu	r2,-8(fp)
}
    fd74:	e037883a 	mov	sp,fp
    fd78:	df000017 	ldw	fp,0(sp)
    fd7c:	dec00104 	addi	sp,sp,4
    fd80:	f800283a 	ret

0000fd84 <alt_up_ps2_init>:

//////////////////////////////////////////////////////////////////////////////////////////////
// HAL Functions
void alt_up_ps2_init(alt_up_ps2_dev *ps2)
{
    fd84:	defffb04 	addi	sp,sp,-20
    fd88:	dfc00415 	stw	ra,16(sp)
    fd8c:	df000315 	stw	fp,12(sp)
    fd90:	df000304 	addi	fp,sp,12
    fd94:	e13fff15 	stw	r4,-4(fp)
	// initialize the device
	unsigned char byte;
	//send the reset request, wait for ACK
	int status = alt_up_ps2_write_data_byte_with_ack(ps2, 0xff);
    fd98:	01403fc4 	movi	r5,255
    fd9c:	e13fff17 	ldw	r4,-4(fp)
    fda0:	000ffe40 	call	ffe4 <alt_up_ps2_write_data_byte_with_ack>
    fda4:	e0bffd15 	stw	r2,-12(fp)
	if (status == 0)
    fda8:	e0bffd17 	ldw	r2,-12(fp)
    fdac:	1000211e 	bne	r2,zero,fe34 <alt_up_ps2_init+0xb0>
	{
		// reset succeed, now try to get the BAT result, AA means passed
		status = alt_up_ps2_read_data_byte_timeout(ps2, &byte);
    fdb0:	e0bffe04 	addi	r2,fp,-8
    fdb4:	100b883a 	mov	r5,r2
    fdb8:	e13fff17 	ldw	r4,-4(fp)
    fdbc:	00100480 	call	10048 <alt_up_ps2_read_data_byte_timeout>
    fdc0:	e0bffd15 	stw	r2,-12(fp)
		if (status == 0 && byte == 0xAA)
    fdc4:	e0bffd17 	ldw	r2,-12(fp)
    fdc8:	10001a1e 	bne	r2,zero,fe34 <alt_up_ps2_init+0xb0>
    fdcc:	e0bffe03 	ldbu	r2,-8(fp)
    fdd0:	10803fcc 	andi	r2,r2,255
    fdd4:	10802a98 	cmpnei	r2,r2,170
    fdd8:	1000161e 	bne	r2,zero,fe34 <alt_up_ps2_init+0xb0>
		{
			//get the 2nd byte
			status = alt_up_ps2_read_data_byte_timeout(ps2, &byte);
    fddc:	e0bffe04 	addi	r2,fp,-8
    fde0:	100b883a 	mov	r5,r2
    fde4:	e13fff17 	ldw	r4,-4(fp)
    fde8:	00100480 	call	10048 <alt_up_ps2_read_data_byte_timeout>
    fdec:	e0bffd15 	stw	r2,-12(fp)
			if (status == -ETIMEDOUT)
    fdf0:	e0bffd17 	ldw	r2,-12(fp)
    fdf4:	10bfe318 	cmpnei	r2,r2,-116
    fdf8:	1000041e 	bne	r2,zero,fe0c <alt_up_ps2_init+0x88>
			{
				//for keyboard, only 2 bytes are sent(ACK, PASS/FAIL), so timeout
				ps2->device_type = PS2_KEYBOARD;
    fdfc:	e0bfff17 	ldw	r2,-4(fp)
    fe00:	00c00044 	movi	r3,1
    fe04:	10c00d15 	stw	r3,52(r2)
				ps2->device_type = PS2_MOUSE;
				(void) alt_up_ps2_write_data_byte (ps2, 0xf4); // enable data from mouse
			}
		}
	}
}
    fe08:	00000a06 	br	fe34 <alt_up_ps2_init+0xb0>
			if (status == -ETIMEDOUT)
			{
				//for keyboard, only 2 bytes are sent(ACK, PASS/FAIL), so timeout
				ps2->device_type = PS2_KEYBOARD;
			}
			else if (status == 0 && byte == 0x00)
    fe0c:	e0bffd17 	ldw	r2,-12(fp)
    fe10:	1000081e 	bne	r2,zero,fe34 <alt_up_ps2_init+0xb0>
    fe14:	e0bffe03 	ldbu	r2,-8(fp)
    fe18:	10803fcc 	andi	r2,r2,255
    fe1c:	1000051e 	bne	r2,zero,fe34 <alt_up_ps2_init+0xb0>
			{
				//for mouse, it will sent out 0x00 after sending out ACK and PASS/FAIL.
				ps2->device_type = PS2_MOUSE;
    fe20:	e0bfff17 	ldw	r2,-4(fp)
    fe24:	10000d15 	stw	zero,52(r2)
				(void) alt_up_ps2_write_data_byte (ps2, 0xf4); // enable data from mouse
    fe28:	01403d04 	movi	r5,244
    fe2c:	e13fff17 	ldw	r4,-4(fp)
    fe30:	000ff080 	call	ff08 <alt_up_ps2_write_data_byte>
			}
		}
	}
}
    fe34:	0001883a 	nop
    fe38:	e037883a 	mov	sp,fp
    fe3c:	dfc00117 	ldw	ra,4(sp)
    fe40:	df000017 	ldw	fp,0(sp)
    fe44:	dec00204 	addi	sp,sp,8
    fe48:	f800283a 	ret

0000fe4c <alt_up_ps2_enable_read_interrupt>:

void alt_up_ps2_enable_read_interrupt(alt_up_ps2_dev *ps2)
{
    fe4c:	defffd04 	addi	sp,sp,-12
    fe50:	df000215 	stw	fp,8(sp)
    fe54:	df000204 	addi	fp,sp,8
    fe58:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_PS2_PORT_CTRL_REG(ps2->base); 
    fe5c:	e0bfff17 	ldw	r2,-4(fp)
    fe60:	10800a17 	ldw	r2,40(r2)
    fe64:	10800104 	addi	r2,r2,4
    fe68:	10800037 	ldwio	r2,0(r2)
    fe6c:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_PS2_PORT_CTRL_REG_RE_MSK;
    fe70:	e0bffe17 	ldw	r2,-8(fp)
    fe74:	10800054 	ori	r2,r2,1
    fe78:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_PS2_PORT_CTRL_REG(ps2->base, ctrl_reg);
    fe7c:	e0bfff17 	ldw	r2,-4(fp)
    fe80:	10800a17 	ldw	r2,40(r2)
    fe84:	10800104 	addi	r2,r2,4
    fe88:	1007883a 	mov	r3,r2
    fe8c:	e0bffe17 	ldw	r2,-8(fp)
    fe90:	18800035 	stwio	r2,0(r3)
}
    fe94:	0001883a 	nop
    fe98:	e037883a 	mov	sp,fp
    fe9c:	df000017 	ldw	fp,0(sp)
    fea0:	dec00104 	addi	sp,sp,4
    fea4:	f800283a 	ret

0000fea8 <alt_up_ps2_disable_read_interrupt>:

void alt_up_ps2_disable_read_interrupt(alt_up_ps2_dev *ps2)
{
    fea8:	defffd04 	addi	sp,sp,-12
    feac:	df000215 	stw	fp,8(sp)
    feb0:	df000204 	addi	fp,sp,8
    feb4:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_PS2_PORT_CTRL_REG(ps2->base); 
    feb8:	e0bfff17 	ldw	r2,-4(fp)
    febc:	10800a17 	ldw	r2,40(r2)
    fec0:	10800104 	addi	r2,r2,4
    fec4:	10800037 	ldwio	r2,0(r2)
    fec8:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_PS2_PORT_CTRL_REG_RE_MSK;
    fecc:	e0fffe17 	ldw	r3,-8(fp)
    fed0:	00bfff84 	movi	r2,-2
    fed4:	1884703a 	and	r2,r3,r2
    fed8:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_PS2_PORT_CTRL_REG(ps2->base, ctrl_reg);
    fedc:	e0bfff17 	ldw	r2,-4(fp)
    fee0:	10800a17 	ldw	r2,40(r2)
    fee4:	10800104 	addi	r2,r2,4
    fee8:	1007883a 	mov	r3,r2
    feec:	e0bffe17 	ldw	r2,-8(fp)
    fef0:	18800035 	stwio	r2,0(r3)
}
    fef4:	0001883a 	nop
    fef8:	e037883a 	mov	sp,fp
    fefc:	df000017 	ldw	fp,0(sp)
    ff00:	dec00104 	addi	sp,sp,4
    ff04:	f800283a 	ret

0000ff08 <alt_up_ps2_write_data_byte>:

int alt_up_ps2_write_data_byte(alt_up_ps2_dev *ps2, unsigned char byte)
{
    ff08:	defffb04 	addi	sp,sp,-20
    ff0c:	dfc00415 	stw	ra,16(sp)
    ff10:	df000315 	stw	fp,12(sp)
    ff14:	df000304 	addi	fp,sp,12
    ff18:	e13ffe15 	stw	r4,-8(fp)
    ff1c:	2805883a 	mov	r2,r5
    ff20:	e0bfff05 	stb	r2,-4(fp)
	//note: data are only located at the lower 8 bits
	//note: the software send command to the PS2 peripheral through the data
	//		register rather than the control register
	IOWR_ALT_UP_PS2_PORT_DATA(ps2->base, byte);
    ff24:	e0bffe17 	ldw	r2,-8(fp)
    ff28:	10800a17 	ldw	r2,40(r2)
    ff2c:	1007883a 	mov	r3,r2
    ff30:	e0bfff03 	ldbu	r2,-4(fp)
    ff34:	18800025 	stbio	r2,0(r3)
	alt_u32 ctrl_reg = IORD_ALT_UP_PS2_PORT_CTRL_REG(ps2->base);
    ff38:	e0bffe17 	ldw	r2,-8(fp)
    ff3c:	10800a17 	ldw	r2,40(r2)
    ff40:	10800104 	addi	r2,r2,4
    ff44:	10800037 	ldwio	r2,0(r2)
    ff48:	e0bffd15 	stw	r2,-12(fp)
	if (read_CE_bit(ctrl_reg))
    ff4c:	e13ffd17 	ldw	r4,-12(fp)
    ff50:	000fcc00 	call	fcc0 <read_CE_bit>
    ff54:	10803fcc 	andi	r2,r2,255
    ff58:	10000226 	beq	r2,zero,ff64 <alt_up_ps2_write_data_byte+0x5c>
	{
		//CE bit is set --> error occurs on sending commands
		return -EIO;
    ff5c:	00bffec4 	movi	r2,-5
    ff60:	00000106 	br	ff68 <alt_up_ps2_write_data_byte+0x60>
	}
	return 0;
    ff64:	0005883a 	mov	r2,zero
}
    ff68:	e037883a 	mov	sp,fp
    ff6c:	dfc00117 	ldw	ra,4(sp)
    ff70:	df000017 	ldw	fp,0(sp)
    ff74:	dec00204 	addi	sp,sp,8
    ff78:	f800283a 	ret

0000ff7c <alt_up_ps2_wait_for_ack>:

int alt_up_ps2_wait_for_ack(alt_up_ps2_dev *ps2)
{
    ff7c:	defffc04 	addi	sp,sp,-16
    ff80:	dfc00315 	stw	ra,12(sp)
    ff84:	df000215 	stw	fp,8(sp)
    ff88:	df000204 	addi	fp,sp,8
    ff8c:	e13fff15 	stw	r4,-4(fp)
	unsigned char data = 0;
    ff90:	e03ffe45 	stb	zero,-7(fp)
	unsigned char status = 0;
    ff94:	e03ffe05 	stb	zero,-8(fp)
	do
	{
		status = alt_up_ps2_read_data_byte_timeout(ps2, &data); 
    ff98:	e0bffe44 	addi	r2,fp,-7
    ff9c:	100b883a 	mov	r5,r2
    ffa0:	e13fff17 	ldw	r4,-4(fp)
    ffa4:	00100480 	call	10048 <alt_up_ps2_read_data_byte_timeout>
    ffa8:	e0bffe05 	stb	r2,-8(fp)
		if ( status == 0)
    ffac:	e0bffe03 	ldbu	r2,-8(fp)
    ffb0:	1000061e 	bne	r2,zero,ffcc <alt_up_ps2_wait_for_ack+0x50>
		{
			if (data == PS2_ACK)
    ffb4:	e0bffe43 	ldbu	r2,-7(fp)
    ffb8:	10803fcc 	andi	r2,r2,255
    ffbc:	10803e98 	cmpnei	r2,r2,250
    ffc0:	103ff51e 	bne	r2,zero,ff98 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf700ff98>
				return 0;
    ffc4:	0005883a 	mov	r2,zero
    ffc8:	00000106 	br	ffd0 <alt_up_ps2_wait_for_ack+0x54>
		}
		else 
		{
			return status;
    ffcc:	e0bffe03 	ldbu	r2,-8(fp)
		}
	} while(1);
	return -ETIMEDOUT;
}
    ffd0:	e037883a 	mov	sp,fp
    ffd4:	dfc00117 	ldw	ra,4(sp)
    ffd8:	df000017 	ldw	fp,0(sp)
    ffdc:	dec00204 	addi	sp,sp,8
    ffe0:	f800283a 	ret

0000ffe4 <alt_up_ps2_write_data_byte_with_ack>:

int alt_up_ps2_write_data_byte_with_ack(alt_up_ps2_dev *ps2, unsigned char byte)
{
    ffe4:	defffa04 	addi	sp,sp,-24
    ffe8:	dfc00515 	stw	ra,20(sp)
    ffec:	df000415 	stw	fp,16(sp)
    fff0:	df000404 	addi	fp,sp,16
    fff4:	e13ffe15 	stw	r4,-8(fp)
    fff8:	2805883a 	mov	r2,r5
    fffc:	e0bfff05 	stb	r2,-4(fp)
	int send_status = alt_up_ps2_write_data_byte(ps2, byte);
   10000:	e0bfff03 	ldbu	r2,-4(fp)
   10004:	100b883a 	mov	r5,r2
   10008:	e13ffe17 	ldw	r4,-8(fp)
   1000c:	000ff080 	call	ff08 <alt_up_ps2_write_data_byte>
   10010:	e0bffc15 	stw	r2,-16(fp)
	if ( send_status != 0)
   10014:	e0bffc17 	ldw	r2,-16(fp)
   10018:	10000226 	beq	r2,zero,10024 <alt_up_ps2_write_data_byte_with_ack+0x40>
		// return on sending error
		return send_status;
   1001c:	e0bffc17 	ldw	r2,-16(fp)
   10020:	00000406 	br	10034 <alt_up_ps2_write_data_byte_with_ack+0x50>

	int ack_status = alt_up_ps2_wait_for_ack(ps2);
   10024:	e13ffe17 	ldw	r4,-8(fp)
   10028:	000ff7c0 	call	ff7c <alt_up_ps2_wait_for_ack>
   1002c:	e0bffd15 	stw	r2,-12(fp)
	return ack_status;
   10030:	e0bffd17 	ldw	r2,-12(fp)
}
   10034:	e037883a 	mov	sp,fp
   10038:	dfc00117 	ldw	ra,4(sp)
   1003c:	df000017 	ldw	fp,0(sp)
   10040:	dec00204 	addi	sp,sp,8
   10044:	f800283a 	ret

00010048 <alt_up_ps2_read_data_byte_timeout>:

int alt_up_ps2_read_data_byte_timeout(alt_up_ps2_dev *ps2, unsigned char *byte)
{
   10048:	defffa04 	addi	sp,sp,-24
   1004c:	dfc00515 	stw	ra,20(sp)
   10050:	df000415 	stw	fp,16(sp)
   10054:	df000404 	addi	fp,sp,16
   10058:	e13ffe15 	stw	r4,-8(fp)
   1005c:	e17fff15 	stw	r5,-4(fp)
	unsigned int data_reg = 0; 
   10060:	e03ffd15 	stw	zero,-12(fp)
	unsigned int count = 0;
   10064:	e03ffc15 	stw	zero,-16(fp)
	do {
		count++;
   10068:	e0bffc17 	ldw	r2,-16(fp)
   1006c:	10800044 	addi	r2,r2,1
   10070:	e0bffc15 	stw	r2,-16(fp)
		data_reg = IORD_ALT_UP_PS2_PORT_DATA_REG(ps2->base);
   10074:	e0bffe17 	ldw	r2,-8(fp)
   10078:	10800a17 	ldw	r2,40(r2)
   1007c:	10800037 	ldwio	r2,0(r2)
   10080:	e0bffd15 	stw	r2,-12(fp)
		if (read_data_valid(data_reg))
   10084:	e13ffd17 	ldw	r4,-12(fp)
   10088:	000fd240 	call	fd24 <read_data_valid>
   1008c:	10803fcc 	andi	r2,r2,255
   10090:	10000726 	beq	r2,zero,100b0 <alt_up_ps2_read_data_byte_timeout+0x68>
		{
			*byte = read_data_byte(data_reg);
   10094:	e13ffd17 	ldw	r4,-12(fp)
   10098:	000fd580 	call	fd58 <read_data_byte>
   1009c:	1007883a 	mov	r3,r2
   100a0:	e0bfff17 	ldw	r2,-4(fp)
   100a4:	10c00005 	stb	r3,0(r2)
			return 0;
   100a8:	0005883a 	mov	r2,zero
   100ac:	00000806 	br	100d0 <alt_up_ps2_read_data_byte_timeout+0x88>
		}
		//timeout = 0 means to disable the timeout
		if ( ps2->timeout != 0 && count > ps2->timeout)
   100b0:	e0bffe17 	ldw	r2,-8(fp)
   100b4:	10800c17 	ldw	r2,48(r2)
   100b8:	103feb26 	beq	r2,zero,10068 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7010068>
   100bc:	e0bffe17 	ldw	r2,-8(fp)
   100c0:	10c00c17 	ldw	r3,48(r2)
   100c4:	e0bffc17 	ldw	r2,-16(fp)
   100c8:	18bfe72e 	bgeu	r3,r2,10068 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7010068>
		{
			return -ETIMEDOUT;
   100cc:	00bfe304 	movi	r2,-116
		}
	} while (1);
}
   100d0:	e037883a 	mov	sp,fp
   100d4:	dfc00117 	ldw	ra,4(sp)
   100d8:	df000017 	ldw	fp,0(sp)
   100dc:	dec00204 	addi	sp,sp,8
   100e0:	f800283a 	ret

000100e4 <alt_up_ps2_read_data_byte>:

int alt_up_ps2_read_data_byte(alt_up_ps2_dev *ps2, unsigned char *byte)
{
   100e4:	defffb04 	addi	sp,sp,-20
   100e8:	dfc00415 	stw	ra,16(sp)
   100ec:	df000315 	stw	fp,12(sp)
   100f0:	df000304 	addi	fp,sp,12
   100f4:	e13ffe15 	stw	r4,-8(fp)
   100f8:	e17fff15 	stw	r5,-4(fp)
	unsigned int data_reg = 0; 
   100fc:	e03ffd15 	stw	zero,-12(fp)
	data_reg = IORD_ALT_UP_PS2_PORT_DATA_REG(ps2->base);
   10100:	e0bffe17 	ldw	r2,-8(fp)
   10104:	10800a17 	ldw	r2,40(r2)
   10108:	10800037 	ldwio	r2,0(r2)
   1010c:	e0bffd15 	stw	r2,-12(fp)
	if (read_data_valid(data_reg))
   10110:	e13ffd17 	ldw	r4,-12(fp)
   10114:	000fd240 	call	fd24 <read_data_valid>
   10118:	10803fcc 	andi	r2,r2,255
   1011c:	10000726 	beq	r2,zero,1013c <alt_up_ps2_read_data_byte+0x58>
	{
		*byte = read_data_byte(data_reg);
   10120:	e13ffd17 	ldw	r4,-12(fp)
   10124:	000fd580 	call	fd58 <read_data_byte>
   10128:	1007883a 	mov	r3,r2
   1012c:	e0bfff17 	ldw	r2,-4(fp)
   10130:	10c00005 	stb	r3,0(r2)
		return 0;
   10134:	0005883a 	mov	r2,zero
   10138:	00000106 	br	10140 <alt_up_ps2_read_data_byte+0x5c>
	}
	return -1;
   1013c:	00bfffc4 	movi	r2,-1
}
   10140:	e037883a 	mov	sp,fp
   10144:	dfc00117 	ldw	ra,4(sp)
   10148:	df000017 	ldw	fp,0(sp)
   1014c:	dec00204 	addi	sp,sp,8
   10150:	f800283a 	ret

00010154 <alt_up_ps2_clear_fifo>:

void alt_up_ps2_clear_fifo(alt_up_ps2_dev *ps2)
{
   10154:	defffb04 	addi	sp,sp,-20
   10158:	dfc00415 	stw	ra,16(sp)
   1015c:	df000315 	stw	fp,12(sp)
   10160:	df000304 	addi	fp,sp,12
   10164:	e13fff15 	stw	r4,-4(fp)
	// The DATA byte of the data register will be automatically cleared after a read
	// So we simply keep reading it until there are no available bytes
	alt_u16 num = 0;
   10168:	e03ffd0d 	sth	zero,-12(fp)
	unsigned int data_reg = 0;
   1016c:	e03ffe15 	stw	zero,-8(fp)
	do
	{
		// read the data register (the DATA byte is cleared)
		data_reg = IORD_ALT_UP_PS2_PORT_DATA_REG(ps2->base);
   10170:	e0bfff17 	ldw	r2,-4(fp)
   10174:	10800a17 	ldw	r2,40(r2)
   10178:	10800037 	ldwio	r2,0(r2)
   1017c:	e0bffe15 	stw	r2,-8(fp)
		// get the number of available bytes from the RAVAIL part of data register
		num = read_num_bytes_available(data_reg);
   10180:	e13ffe17 	ldw	r4,-8(fp)
   10184:	000fcf40 	call	fcf4 <read_num_bytes_available>
   10188:	e0bffd0d 	sth	r2,-12(fp)
	} while (num > 0);
   1018c:	e0bffd0b 	ldhu	r2,-12(fp)
   10190:	103ff71e 	bne	r2,zero,10170 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7010170>
}
   10194:	0001883a 	nop
   10198:	e037883a 	mov	sp,fp
   1019c:	dfc00117 	ldw	ra,4(sp)
   101a0:	df000017 	ldw	fp,0(sp)
   101a4:	dec00204 	addi	sp,sp,8
   101a8:	f800283a 	ret

000101ac <alt_up_ps2_read_fd>:

//////////////////////////////////////////////////////////////
// FD Functions
int alt_up_ps2_read_fd (alt_fd* fd, char* ptr, int len)
{
   101ac:	defff804 	addi	sp,sp,-32
   101b0:	dfc00715 	stw	ra,28(sp)
   101b4:	df000615 	stw	fp,24(sp)
   101b8:	df000604 	addi	fp,sp,24
   101bc:	e13ffd15 	stw	r4,-12(fp)
   101c0:	e17ffe15 	stw	r5,-8(fp)
   101c4:	e1bfff15 	stw	r6,-4(fp)
	alt_up_ps2_dev *ps2 = (alt_up_ps2_dev*) fd->dev;
   101c8:	e0bffd17 	ldw	r2,-12(fp)
   101cc:	10800017 	ldw	r2,0(r2)
   101d0:	e0bffa15 	stw	r2,-24(fp)
	int status = 0;
   101d4:	e03ffb15 	stw	zero,-20(fp)
	int count = 0;
   101d8:	e03ffc15 	stw	zero,-16(fp)
	while (count < len);
   101dc:	e0fffc17 	ldw	r3,-16(fp)
   101e0:	e0bfff17 	ldw	r2,-4(fp)
   101e4:	18bffd16 	blt	r3,r2,101dc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70101dc>
	{
		status = alt_up_ps2_read_data_byte_timeout(ps2, (unsigned char *)ptr++);
   101e8:	e0bffe17 	ldw	r2,-8(fp)
   101ec:	10c00044 	addi	r3,r2,1
   101f0:	e0fffe15 	stw	r3,-8(fp)
   101f4:	100b883a 	mov	r5,r2
   101f8:	e13ffa17 	ldw	r4,-24(fp)
   101fc:	00100480 	call	10048 <alt_up_ps2_read_data_byte_timeout>
   10200:	e0bffb15 	stw	r2,-20(fp)
		if (status!=0)
   10204:	e0bffb17 	ldw	r2,-20(fp)
   10208:	10000226 	beq	r2,zero,10214 <alt_up_ps2_read_fd+0x68>
			return count;
   1020c:	e0bffc17 	ldw	r2,-16(fp)
   10210:	00000406 	br	10224 <alt_up_ps2_read_fd+0x78>
		count++;
   10214:	e0bffc17 	ldw	r2,-16(fp)
   10218:	10800044 	addi	r2,r2,1
   1021c:	e0bffc15 	stw	r2,-16(fp)
	} 
	return count;
   10220:	e0bffc17 	ldw	r2,-16(fp)
}
   10224:	e037883a 	mov	sp,fp
   10228:	dfc00117 	ldw	ra,4(sp)
   1022c:	df000017 	ldw	fp,0(sp)
   10230:	dec00204 	addi	sp,sp,8
   10234:	f800283a 	ret

00010238 <alt_up_ps2_write_fd>:

int alt_up_ps2_write_fd (alt_fd* fd, const char* ptr, int len)
{
   10238:	defff804 	addi	sp,sp,-32
   1023c:	dfc00715 	stw	ra,28(sp)
   10240:	df000615 	stw	fp,24(sp)
   10244:	df000604 	addi	fp,sp,24
   10248:	e13ffd15 	stw	r4,-12(fp)
   1024c:	e17ffe15 	stw	r5,-8(fp)
   10250:	e1bfff15 	stw	r6,-4(fp)
	alt_up_ps2_dev *ps2 = (alt_up_ps2_dev*) fd->dev;
   10254:	e0bffd17 	ldw	r2,-12(fp)
   10258:	10800017 	ldw	r2,0(r2)
   1025c:	e0bffb15 	stw	r2,-20(fp)
	int status = 0;
   10260:	e03ffc15 	stw	zero,-16(fp)
	int count = 0;
   10264:	e03ffa15 	stw	zero,-24(fp)
	while (count < len)
   10268:	00001006 	br	102ac <alt_up_ps2_write_fd+0x74>
	{
		status = alt_up_ps2_write_data_byte(ps2, *(ptr++) );
   1026c:	e0bffe17 	ldw	r2,-8(fp)
   10270:	10c00044 	addi	r3,r2,1
   10274:	e0fffe15 	stw	r3,-8(fp)
   10278:	10800003 	ldbu	r2,0(r2)
   1027c:	10803fcc 	andi	r2,r2,255
   10280:	100b883a 	mov	r5,r2
   10284:	e13ffb17 	ldw	r4,-20(fp)
   10288:	000ff080 	call	ff08 <alt_up_ps2_write_data_byte>
   1028c:	e0bffc15 	stw	r2,-16(fp)
		if (status!=0)
   10290:	e0bffc17 	ldw	r2,-16(fp)
   10294:	10000226 	beq	r2,zero,102a0 <alt_up_ps2_write_fd+0x68>
			return count;
   10298:	e0bffa17 	ldw	r2,-24(fp)
   1029c:	00000706 	br	102bc <alt_up_ps2_write_fd+0x84>
		count++;
   102a0:	e0bffa17 	ldw	r2,-24(fp)
   102a4:	10800044 	addi	r2,r2,1
   102a8:	e0bffa15 	stw	r2,-24(fp)
int alt_up_ps2_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_ps2_dev *ps2 = (alt_up_ps2_dev*) fd->dev;
	int status = 0;
	int count = 0;
	while (count < len)
   102ac:	e0fffa17 	ldw	r3,-24(fp)
   102b0:	e0bfff17 	ldw	r2,-4(fp)
   102b4:	18bfed16 	blt	r3,r2,1026c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf701026c>
		status = alt_up_ps2_write_data_byte(ps2, *(ptr++) );
		if (status!=0)
			return count;
		count++;
	}
	return count;
   102b8:	e0bffa17 	ldw	r2,-24(fp)
}
   102bc:	e037883a 	mov	sp,fp
   102c0:	dfc00117 	ldw	ra,4(sp)
   102c4:	df000017 	ldw	fp,0(sp)
   102c8:	dec00204 	addi	sp,sp,8
   102cc:	f800283a 	ret

000102d0 <alt_up_ps2_open_dev>:

alt_up_ps2_dev* alt_up_ps2_open_dev(const char* name)
{
   102d0:	defffc04 	addi	sp,sp,-16
   102d4:	dfc00315 	stw	ra,12(sp)
   102d8:	df000215 	stw	fp,8(sp)
   102dc:	df000204 	addi	fp,sp,8
   102e0:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_ps2_dev *dev = (alt_up_ps2_dev*)alt_find_dev(name, &alt_dev_list);
   102e4:	d1600904 	addi	r5,gp,-32732
   102e8:	e13fff17 	ldw	r4,-4(fp)
   102ec:	00109880 	call	10988 <alt_find_dev>
   102f0:	e0bffe15 	stw	r2,-8(fp)

  return dev;
   102f4:	e0bffe17 	ldw	r2,-8(fp)
}
   102f8:	e037883a 	mov	sp,fp
   102fc:	dfc00117 	ldw	ra,4(sp)
   10300:	df000017 	ldw	fp,0(sp)
   10304:	dec00204 	addi	sp,sp,8
   10308:	f800283a 	ret

0001030c <alt_up_rs232_enable_read_interrupt>:
#include "altera_up_avalon_rs232.h"
#include "altera_up_avalon_rs232_regs.h"


void alt_up_rs232_enable_read_interrupt(alt_up_rs232_dev *rs232)
{
   1030c:	defffd04 	addi	sp,sp,-12
   10310:	df000215 	stw	fp,8(sp)
   10314:	df000204 	addi	fp,sp,8
   10318:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   1031c:	e0bfff17 	ldw	r2,-4(fp)
   10320:	10800a17 	ldw	r2,40(r2)
   10324:	10800104 	addi	r2,r2,4
   10328:	10800037 	ldwio	r2,0(r2)
   1032c:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_RS232_CONTROL_RE_MSK;
   10330:	e0bffe17 	ldw	r2,-8(fp)
   10334:	10800054 	ori	r2,r2,1
   10338:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
   1033c:	e0bfff17 	ldw	r2,-4(fp)
   10340:	10800a17 	ldw	r2,40(r2)
   10344:	10800104 	addi	r2,r2,4
   10348:	1007883a 	mov	r3,r2
   1034c:	e0bffe17 	ldw	r2,-8(fp)
   10350:	18800035 	stwio	r2,0(r3)
}
   10354:	0001883a 	nop
   10358:	e037883a 	mov	sp,fp
   1035c:	df000017 	ldw	fp,0(sp)
   10360:	dec00104 	addi	sp,sp,4
   10364:	f800283a 	ret

00010368 <alt_up_rs232_disable_read_interrupt>:

void alt_up_rs232_disable_read_interrupt(alt_up_rs232_dev *rs232)
{
   10368:	defffd04 	addi	sp,sp,-12
   1036c:	df000215 	stw	fp,8(sp)
   10370:	df000204 	addi	fp,sp,8
   10374:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   10378:	e0bfff17 	ldw	r2,-4(fp)
   1037c:	10800a17 	ldw	r2,40(r2)
   10380:	10800104 	addi	r2,r2,4
   10384:	10800037 	ldwio	r2,0(r2)
   10388:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_RS232_CONTROL_RE_MSK;
   1038c:	e0fffe17 	ldw	r3,-8(fp)
   10390:	00bfff84 	movi	r2,-2
   10394:	1884703a 	and	r2,r3,r2
   10398:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
   1039c:	e0bfff17 	ldw	r2,-4(fp)
   103a0:	10800a17 	ldw	r2,40(r2)
   103a4:	10800104 	addi	r2,r2,4
   103a8:	1007883a 	mov	r3,r2
   103ac:	e0bffe17 	ldw	r2,-8(fp)
   103b0:	18800035 	stwio	r2,0(r3)
}
   103b4:	0001883a 	nop
   103b8:	e037883a 	mov	sp,fp
   103bc:	df000017 	ldw	fp,0(sp)
   103c0:	dec00104 	addi	sp,sp,4
   103c4:	f800283a 	ret

000103c8 <alt_up_rs232_get_used_space_in_read_FIFO>:

unsigned alt_up_rs232_get_used_space_in_read_FIFO(alt_up_rs232_dev *rs232)
{
   103c8:	defffd04 	addi	sp,sp,-12
   103cc:	df000215 	stw	fp,8(sp)
   103d0:	df000204 	addi	fp,sp,8
   103d4:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = 0;
   103d8:	e03ffe0d 	sth	zero,-8(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_RS232_DATA(rs232->base), 2); 
	ravail = IORD_ALT_UP_RS232_RAVAIL(rs232->base); 
   103dc:	e0bfff17 	ldw	r2,-4(fp)
   103e0:	10800a17 	ldw	r2,40(r2)
   103e4:	10800084 	addi	r2,r2,2
   103e8:	1080002b 	ldhuio	r2,0(r2)
   103ec:	10bfffcc 	andi	r2,r2,65535
   103f0:	e0bffe0d 	sth	r2,-8(fp)
//	return ravail;
	return (ravail & ALT_UP_RS232_RAVAIL_MSK) >> ALT_UP_RS232_RAVAIL_OFST;
   103f4:	e0bffe0b 	ldhu	r2,-8(fp)
}
   103f8:	e037883a 	mov	sp,fp
   103fc:	df000017 	ldw	fp,0(sp)
   10400:	dec00104 	addi	sp,sp,4
   10404:	f800283a 	ret

00010408 <alt_up_rs232_get_available_space_in_write_FIFO>:

unsigned alt_up_rs232_get_available_space_in_write_FIFO(alt_up_rs232_dev *rs232)
{
   10408:	defffd04 	addi	sp,sp,-12
   1040c:	df000215 	stw	fp,8(sp)
   10410:	df000204 	addi	fp,sp,8
   10414:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   10418:	e0bfff17 	ldw	r2,-4(fp)
   1041c:	10800a17 	ldw	r2,40(r2)
   10420:	10800104 	addi	r2,r2,4
   10424:	10800037 	ldwio	r2,0(r2)
   10428:	e0bffe15 	stw	r2,-8(fp)
	return (ctrl_reg & ALT_UP_RS232_CONTROL_WSPACE_MSK) >> ALT_UP_RS232_CONTROL_WSPACE_OFST;
   1042c:	e0bffe17 	ldw	r2,-8(fp)
   10430:	1004d43a 	srli	r2,r2,16
}
   10434:	e037883a 	mov	sp,fp
   10438:	df000017 	ldw	fp,0(sp)
   1043c:	dec00104 	addi	sp,sp,4
   10440:	f800283a 	ret

00010444 <alt_up_rs232_check_parity>:

int alt_up_rs232_check_parity(alt_u32 data_reg)
{
   10444:	defffd04 	addi	sp,sp,-12
   10448:	df000215 	stw	fp,8(sp)
   1044c:	df000204 	addi	fp,sp,8
   10450:	e13fff15 	stw	r4,-4(fp)
	unsigned parity_error = (data_reg & ALT_UP_RS232_DATA_PE_MSK) >> ALT_UP_RS232_DATA_PE_OFST;
   10454:	e0bfff17 	ldw	r2,-4(fp)
   10458:	1080800c 	andi	r2,r2,512
   1045c:	1004d27a 	srli	r2,r2,9
   10460:	e0bffe15 	stw	r2,-8(fp)
	return (parity_error ? -1 : 0);
   10464:	e0bffe17 	ldw	r2,-8(fp)
   10468:	10000226 	beq	r2,zero,10474 <alt_up_rs232_check_parity+0x30>
   1046c:	00bfffc4 	movi	r2,-1
   10470:	00000106 	br	10478 <alt_up_rs232_check_parity+0x34>
   10474:	0005883a 	mov	r2,zero
}
   10478:	e037883a 	mov	sp,fp
   1047c:	df000017 	ldw	fp,0(sp)
   10480:	dec00104 	addi	sp,sp,4
   10484:	f800283a 	ret

00010488 <alt_up_rs232_write_data>:

int alt_up_rs232_write_data(alt_up_rs232_dev *rs232, alt_u8 data)
{
   10488:	defffd04 	addi	sp,sp,-12
   1048c:	df000215 	stw	fp,8(sp)
   10490:	df000204 	addi	fp,sp,8
   10494:	e13ffe15 	stw	r4,-8(fp)
   10498:	2805883a 	mov	r2,r5
   1049c:	e0bfff05 	stb	r2,-4(fp)
	/*alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);*/
    
	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_RS232_DATA(rs232->base, (data>>ALT_UP_RS232_DATA_DATA_OFST) & ALT_UP_RS232_DATA_DATA_MSK);
   104a0:	e0bffe17 	ldw	r2,-8(fp)
   104a4:	10800a17 	ldw	r2,40(r2)
   104a8:	1007883a 	mov	r3,r2
   104ac:	e0bfff03 	ldbu	r2,-4(fp)
   104b0:	18800035 	stwio	r2,0(r3)
	return 0;
   104b4:	0005883a 	mov	r2,zero
}
   104b8:	e037883a 	mov	sp,fp
   104bc:	df000017 	ldw	fp,0(sp)
   104c0:	dec00104 	addi	sp,sp,4
   104c4:	f800283a 	ret

000104c8 <alt_up_rs232_read_data>:

int alt_up_rs232_read_data(alt_up_rs232_dev *rs232, alt_u8 *data, alt_u8 *parity_error)
{
   104c8:	defffa04 	addi	sp,sp,-24
   104cc:	dfc00515 	stw	ra,20(sp)
   104d0:	df000415 	stw	fp,16(sp)
   104d4:	df000404 	addi	fp,sp,16
   104d8:	e13ffd15 	stw	r4,-12(fp)
   104dc:	e17ffe15 	stw	r5,-8(fp)
   104e0:	e1bfff15 	stw	r6,-4(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);
   104e4:	e0bffd17 	ldw	r2,-12(fp)
   104e8:	10800a17 	ldw	r2,40(r2)
   104ec:	10800037 	ldwio	r2,0(r2)
   104f0:	e0bffc15 	stw	r2,-16(fp)
	*data = (data_reg & ALT_UP_RS232_DATA_DATA_MSK) >> ALT_UP_RS232_DATA_DATA_OFST;
   104f4:	e0bffc17 	ldw	r2,-16(fp)
   104f8:	1007883a 	mov	r3,r2
   104fc:	e0bffe17 	ldw	r2,-8(fp)
   10500:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_rs232_check_parity(data_reg);
   10504:	e13ffc17 	ldw	r4,-16(fp)
   10508:	00104440 	call	10444 <alt_up_rs232_check_parity>
   1050c:	1007883a 	mov	r3,r2
   10510:	e0bfff17 	ldw	r2,-4(fp)
   10514:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_RS232_DATA_RVALID_MSK) >> ALT_UP_RS232_DATA_RVALID_OFST) - 1);
   10518:	e0bffc17 	ldw	r2,-16(fp)
   1051c:	10a0000c 	andi	r2,r2,32768
   10520:	1004d3fa 	srli	r2,r2,15
   10524:	10bfffc4 	addi	r2,r2,-1
}
   10528:	e037883a 	mov	sp,fp
   1052c:	dfc00117 	ldw	ra,4(sp)
   10530:	df000017 	ldw	fp,0(sp)
   10534:	dec00204 	addi	sp,sp,8
   10538:	f800283a 	ret

0001053c <alt_up_rs232_read_fd>:

int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
   1053c:	defff804 	addi	sp,sp,-32
   10540:	dfc00715 	stw	ra,28(sp)
   10544:	df000615 	stw	fp,24(sp)
   10548:	df000604 	addi	fp,sp,24
   1054c:	e13ffd15 	stw	r4,-12(fp)
   10550:	e17ffe15 	stw	r5,-8(fp)
   10554:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
   10558:	e0bffd17 	ldw	r2,-12(fp)
   1055c:	10800017 	ldw	r2,0(r2)
   10560:	e0bffb15 	stw	r2,-20(fp)
	int count = 0;
   10564:	e03ffa15 	stw	zero,-24(fp)
	alt_u8 parity_error;
	while(len--)
   10568:	00000c06 	br	1059c <alt_up_rs232_read_fd+0x60>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
   1056c:	e0bffe17 	ldw	r2,-8(fp)
   10570:	10c00044 	addi	r3,r2,1
   10574:	e0fffe15 	stw	r3,-8(fp)
   10578:	e0fffc04 	addi	r3,fp,-16
   1057c:	180d883a 	mov	r6,r3
   10580:	100b883a 	mov	r5,r2
   10584:	e13ffb17 	ldw	r4,-20(fp)
   10588:	00104c80 	call	104c8 <alt_up_rs232_read_data>
   1058c:	1000081e 	bne	r2,zero,105b0 <alt_up_rs232_read_fd+0x74>
			count++;
   10590:	e0bffa17 	ldw	r2,-24(fp)
   10594:	10800044 	addi	r2,r2,1
   10598:	e0bffa15 	stw	r2,-24(fp)
int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	alt_u8 parity_error;
	while(len--)
   1059c:	e0bfff17 	ldw	r2,-4(fp)
   105a0:	10ffffc4 	addi	r3,r2,-1
   105a4:	e0ffff15 	stw	r3,-4(fp)
   105a8:	103ff01e 	bne	r2,zero,1056c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf701056c>
   105ac:	00000106 	br	105b4 <alt_up_rs232_read_fd+0x78>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
			count++;
		else
			break;
   105b0:	0001883a 	nop
	}
	return count;
   105b4:	e0bffa17 	ldw	r2,-24(fp)
}
   105b8:	e037883a 	mov	sp,fp
   105bc:	dfc00117 	ldw	ra,4(sp)
   105c0:	df000017 	ldw	fp,0(sp)
   105c4:	dec00204 	addi	sp,sp,8
   105c8:	f800283a 	ret

000105cc <alt_up_rs232_write_fd>:

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
   105cc:	defff904 	addi	sp,sp,-28
   105d0:	dfc00615 	stw	ra,24(sp)
   105d4:	df000515 	stw	fp,20(sp)
   105d8:	df000504 	addi	fp,sp,20
   105dc:	e13ffd15 	stw	r4,-12(fp)
   105e0:	e17ffe15 	stw	r5,-8(fp)
   105e4:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
   105e8:	e0bffd17 	ldw	r2,-12(fp)
   105ec:	10800017 	ldw	r2,0(r2)
   105f0:	e0bffc15 	stw	r2,-16(fp)
	int count = 0;
   105f4:	e03ffb15 	stw	zero,-20(fp)
	while(len--)
   105f8:	00000d06 	br	10630 <alt_up_rs232_write_fd+0x64>
	{
		if (alt_up_rs232_write_data(rs232, *ptr)==0)
   105fc:	e0bffe17 	ldw	r2,-8(fp)
   10600:	10800003 	ldbu	r2,0(r2)
   10604:	10803fcc 	andi	r2,r2,255
   10608:	100b883a 	mov	r5,r2
   1060c:	e13ffc17 	ldw	r4,-16(fp)
   10610:	00104880 	call	10488 <alt_up_rs232_write_data>
   10614:	10000b1e 	bne	r2,zero,10644 <alt_up_rs232_write_fd+0x78>
		{
			count++;
   10618:	e0bffb17 	ldw	r2,-20(fp)
   1061c:	10800044 	addi	r2,r2,1
   10620:	e0bffb15 	stw	r2,-20(fp)
			ptr++;
   10624:	e0bffe17 	ldw	r2,-8(fp)
   10628:	10800044 	addi	r2,r2,1
   1062c:	e0bffe15 	stw	r2,-8(fp)

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	while(len--)
   10630:	e0bfff17 	ldw	r2,-4(fp)
   10634:	10ffffc4 	addi	r3,r2,-1
   10638:	e0ffff15 	stw	r3,-4(fp)
   1063c:	103fef1e 	bne	r2,zero,105fc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70105fc>
   10640:	00000106 	br	10648 <alt_up_rs232_write_fd+0x7c>
		{
			count++;
			ptr++;
		}
		else
			break;
   10644:	0001883a 	nop
	}
	return count;
   10648:	e0bffb17 	ldw	r2,-20(fp)
}
   1064c:	e037883a 	mov	sp,fp
   10650:	dfc00117 	ldw	ra,4(sp)
   10654:	df000017 	ldw	fp,0(sp)
   10658:	dec00204 	addi	sp,sp,8
   1065c:	f800283a 	ret

00010660 <alt_up_rs232_open_dev>:

alt_up_rs232_dev* alt_up_rs232_open_dev(const char* name)
{
   10660:	defffc04 	addi	sp,sp,-16
   10664:	dfc00315 	stw	ra,12(sp)
   10668:	df000215 	stw	fp,8(sp)
   1066c:	df000204 	addi	fp,sp,8
   10670:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_rs232_dev *dev = (alt_up_rs232_dev*)alt_find_dev(name, &alt_dev_list);
   10674:	d1600904 	addi	r5,gp,-32732
   10678:	e13fff17 	ldw	r4,-4(fp)
   1067c:	00109880 	call	10988 <alt_find_dev>
   10680:	e0bffe15 	stw	r2,-8(fp)

  return dev;
   10684:	e0bffe17 	ldw	r2,-8(fp)
}
   10688:	e037883a 	mov	sp,fp
   1068c:	dfc00117 	ldw	ra,4(sp)
   10690:	df000017 	ldw	fp,0(sp)
   10694:	dec00204 	addi	sp,sp,8
   10698:	f800283a 	ret

0001069c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   1069c:	defff504 	addi	sp,sp,-44
   106a0:	df000a15 	stw	fp,40(sp)
   106a4:	df000a04 	addi	fp,sp,40
   106a8:	e13ffc15 	stw	r4,-16(fp)
   106ac:	e17ffd15 	stw	r5,-12(fp)
   106b0:	e1bffe15 	stw	r6,-8(fp)
   106b4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   106b8:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   106bc:	d0a7a217 	ldw	r2,-24952(gp)
  
  if (alt_ticks_per_second ())
   106c0:	10003c26 	beq	r2,zero,107b4 <alt_alarm_start+0x118>
  {
    if (alarm)
   106c4:	e0bffc17 	ldw	r2,-16(fp)
   106c8:	10003826 	beq	r2,zero,107ac <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   106cc:	e0bffc17 	ldw	r2,-16(fp)
   106d0:	e0fffe17 	ldw	r3,-8(fp)
   106d4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   106d8:	e0bffc17 	ldw	r2,-16(fp)
   106dc:	e0ffff17 	ldw	r3,-4(fp)
   106e0:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   106e4:	0005303a 	rdctl	r2,status
   106e8:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   106ec:	e0fff917 	ldw	r3,-28(fp)
   106f0:	00bfff84 	movi	r2,-2
   106f4:	1884703a 	and	r2,r3,r2
   106f8:	1001703a 	wrctl	status,r2
  
  return context;
   106fc:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   10700:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   10704:	d0a7a317 	ldw	r2,-24948(gp)
      
      current_nticks = alt_nticks();
   10708:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   1070c:	e0fffd17 	ldw	r3,-12(fp)
   10710:	e0bff617 	ldw	r2,-40(fp)
   10714:	1885883a 	add	r2,r3,r2
   10718:	10c00044 	addi	r3,r2,1
   1071c:	e0bffc17 	ldw	r2,-16(fp)
   10720:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   10724:	e0bffc17 	ldw	r2,-16(fp)
   10728:	10c00217 	ldw	r3,8(r2)
   1072c:	e0bff617 	ldw	r2,-40(fp)
   10730:	1880042e 	bgeu	r3,r2,10744 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   10734:	e0bffc17 	ldw	r2,-16(fp)
   10738:	00c00044 	movi	r3,1
   1073c:	10c00405 	stb	r3,16(r2)
   10740:	00000206 	br	1074c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   10744:	e0bffc17 	ldw	r2,-16(fp)
   10748:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   1074c:	e0bffc17 	ldw	r2,-16(fp)
   10750:	d0e00e04 	addi	r3,gp,-32712
   10754:	e0fffa15 	stw	r3,-24(fp)
   10758:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   1075c:	e0bffb17 	ldw	r2,-20(fp)
   10760:	e0fffa17 	ldw	r3,-24(fp)
   10764:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   10768:	e0bffa17 	ldw	r2,-24(fp)
   1076c:	10c00017 	ldw	r3,0(r2)
   10770:	e0bffb17 	ldw	r2,-20(fp)
   10774:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   10778:	e0bffa17 	ldw	r2,-24(fp)
   1077c:	10800017 	ldw	r2,0(r2)
   10780:	e0fffb17 	ldw	r3,-20(fp)
   10784:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   10788:	e0bffa17 	ldw	r2,-24(fp)
   1078c:	e0fffb17 	ldw	r3,-20(fp)
   10790:	10c00015 	stw	r3,0(r2)
   10794:	e0bff817 	ldw	r2,-32(fp)
   10798:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1079c:	e0bff717 	ldw	r2,-36(fp)
   107a0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   107a4:	0005883a 	mov	r2,zero
   107a8:	00000306 	br	107b8 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   107ac:	00bffa84 	movi	r2,-22
   107b0:	00000106 	br	107b8 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   107b4:	00bfde84 	movi	r2,-134
  }
}
   107b8:	e037883a 	mov	sp,fp
   107bc:	df000017 	ldw	fp,0(sp)
   107c0:	dec00104 	addi	sp,sp,4
   107c4:	f800283a 	ret

000107c8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   107c8:	deffff04 	addi	sp,sp,-4
   107cc:	df000015 	stw	fp,0(sp)
   107d0:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   107d4:	0001883a 	nop
   107d8:	e037883a 	mov	sp,fp
   107dc:	df000017 	ldw	fp,0(sp)
   107e0:	dec00104 	addi	sp,sp,4
   107e4:	f800283a 	ret

000107e8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   107e8:	defffe04 	addi	sp,sp,-8
   107ec:	dfc00115 	stw	ra,4(sp)
   107f0:	df000015 	stw	fp,0(sp)
   107f4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   107f8:	d0a00c17 	ldw	r2,-32720(gp)
   107fc:	10000326 	beq	r2,zero,1080c <alt_get_errno+0x24>
   10800:	d0a00c17 	ldw	r2,-32720(gp)
   10804:	103ee83a 	callr	r2
   10808:	00000106 	br	10810 <alt_get_errno+0x28>
   1080c:	d0a79a04 	addi	r2,gp,-24984
}
   10810:	e037883a 	mov	sp,fp
   10814:	dfc00117 	ldw	ra,4(sp)
   10818:	df000017 	ldw	fp,0(sp)
   1081c:	dec00204 	addi	sp,sp,8
   10820:	f800283a 	ret

00010824 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   10824:	defffa04 	addi	sp,sp,-24
   10828:	dfc00515 	stw	ra,20(sp)
   1082c:	df000415 	stw	fp,16(sp)
   10830:	df000404 	addi	fp,sp,16
   10834:	e13ffe15 	stw	r4,-8(fp)
   10838:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   1083c:	e0bffe17 	ldw	r2,-8(fp)
   10840:	10000326 	beq	r2,zero,10850 <alt_dev_llist_insert+0x2c>
   10844:	e0bffe17 	ldw	r2,-8(fp)
   10848:	10800217 	ldw	r2,8(r2)
   1084c:	1000061e 	bne	r2,zero,10868 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   10850:	00107e80 	call	107e8 <alt_get_errno>
   10854:	1007883a 	mov	r3,r2
   10858:	00800584 	movi	r2,22
   1085c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   10860:	00bffa84 	movi	r2,-22
   10864:	00001306 	br	108b4 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   10868:	e0bffe17 	ldw	r2,-8(fp)
   1086c:	e0ffff17 	ldw	r3,-4(fp)
   10870:	e0fffc15 	stw	r3,-16(fp)
   10874:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   10878:	e0bffd17 	ldw	r2,-12(fp)
   1087c:	e0fffc17 	ldw	r3,-16(fp)
   10880:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   10884:	e0bffc17 	ldw	r2,-16(fp)
   10888:	10c00017 	ldw	r3,0(r2)
   1088c:	e0bffd17 	ldw	r2,-12(fp)
   10890:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   10894:	e0bffc17 	ldw	r2,-16(fp)
   10898:	10800017 	ldw	r2,0(r2)
   1089c:	e0fffd17 	ldw	r3,-12(fp)
   108a0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   108a4:	e0bffc17 	ldw	r2,-16(fp)
   108a8:	e0fffd17 	ldw	r3,-12(fp)
   108ac:	10c00015 	stw	r3,0(r2)

  return 0;  
   108b0:	0005883a 	mov	r2,zero
}
   108b4:	e037883a 	mov	sp,fp
   108b8:	dfc00117 	ldw	ra,4(sp)
   108bc:	df000017 	ldw	fp,0(sp)
   108c0:	dec00204 	addi	sp,sp,8
   108c4:	f800283a 	ret

000108c8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   108c8:	defffd04 	addi	sp,sp,-12
   108cc:	dfc00215 	stw	ra,8(sp)
   108d0:	df000115 	stw	fp,4(sp)
   108d4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   108d8:	00800074 	movhi	r2,1
   108dc:	10857b04 	addi	r2,r2,5612
   108e0:	e0bfff15 	stw	r2,-4(fp)
   108e4:	00000606 	br	10900 <_do_ctors+0x38>
        (*ctor) (); 
   108e8:	e0bfff17 	ldw	r2,-4(fp)
   108ec:	10800017 	ldw	r2,0(r2)
   108f0:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   108f4:	e0bfff17 	ldw	r2,-4(fp)
   108f8:	10bfff04 	addi	r2,r2,-4
   108fc:	e0bfff15 	stw	r2,-4(fp)
   10900:	e0ffff17 	ldw	r3,-4(fp)
   10904:	00800074 	movhi	r2,1
   10908:	10857c04 	addi	r2,r2,5616
   1090c:	18bff62e 	bgeu	r3,r2,108e8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70108e8>
        (*ctor) (); 
}
   10910:	0001883a 	nop
   10914:	e037883a 	mov	sp,fp
   10918:	dfc00117 	ldw	ra,4(sp)
   1091c:	df000017 	ldw	fp,0(sp)
   10920:	dec00204 	addi	sp,sp,8
   10924:	f800283a 	ret

00010928 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   10928:	defffd04 	addi	sp,sp,-12
   1092c:	dfc00215 	stw	ra,8(sp)
   10930:	df000115 	stw	fp,4(sp)
   10934:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   10938:	00800074 	movhi	r2,1
   1093c:	10857b04 	addi	r2,r2,5612
   10940:	e0bfff15 	stw	r2,-4(fp)
   10944:	00000606 	br	10960 <_do_dtors+0x38>
        (*dtor) (); 
   10948:	e0bfff17 	ldw	r2,-4(fp)
   1094c:	10800017 	ldw	r2,0(r2)
   10950:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   10954:	e0bfff17 	ldw	r2,-4(fp)
   10958:	10bfff04 	addi	r2,r2,-4
   1095c:	e0bfff15 	stw	r2,-4(fp)
   10960:	e0ffff17 	ldw	r3,-4(fp)
   10964:	00800074 	movhi	r2,1
   10968:	10857c04 	addi	r2,r2,5616
   1096c:	18bff62e 	bgeu	r3,r2,10948 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7010948>
        (*dtor) (); 
}
   10970:	0001883a 	nop
   10974:	e037883a 	mov	sp,fp
   10978:	dfc00117 	ldw	ra,4(sp)
   1097c:	df000017 	ldw	fp,0(sp)
   10980:	dec00204 	addi	sp,sp,8
   10984:	f800283a 	ret

00010988 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   10988:	defffa04 	addi	sp,sp,-24
   1098c:	dfc00515 	stw	ra,20(sp)
   10990:	df000415 	stw	fp,16(sp)
   10994:	df000404 	addi	fp,sp,16
   10998:	e13ffe15 	stw	r4,-8(fp)
   1099c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   109a0:	e0bfff17 	ldw	r2,-4(fp)
   109a4:	10800017 	ldw	r2,0(r2)
   109a8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   109ac:	e13ffe17 	ldw	r4,-8(fp)
   109b0:	00074000 	call	7400 <strlen>
   109b4:	10800044 	addi	r2,r2,1
   109b8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   109bc:	00000d06 	br	109f4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   109c0:	e0bffc17 	ldw	r2,-16(fp)
   109c4:	10800217 	ldw	r2,8(r2)
   109c8:	e0fffd17 	ldw	r3,-12(fp)
   109cc:	180d883a 	mov	r6,r3
   109d0:	e17ffe17 	ldw	r5,-8(fp)
   109d4:	1009883a 	mov	r4,r2
   109d8:	00112a80 	call	112a8 <memcmp>
   109dc:	1000021e 	bne	r2,zero,109e8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   109e0:	e0bffc17 	ldw	r2,-16(fp)
   109e4:	00000706 	br	10a04 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   109e8:	e0bffc17 	ldw	r2,-16(fp)
   109ec:	10800017 	ldw	r2,0(r2)
   109f0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   109f4:	e0fffc17 	ldw	r3,-16(fp)
   109f8:	e0bfff17 	ldw	r2,-4(fp)
   109fc:	18bff01e 	bne	r3,r2,109c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70109c0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   10a00:	0005883a 	mov	r2,zero
}
   10a04:	e037883a 	mov	sp,fp
   10a08:	dfc00117 	ldw	ra,4(sp)
   10a0c:	df000017 	ldw	fp,0(sp)
   10a10:	dec00204 	addi	sp,sp,8
   10a14:	f800283a 	ret

00010a18 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   10a18:	defffe04 	addi	sp,sp,-8
   10a1c:	dfc00115 	stw	ra,4(sp)
   10a20:	df000015 	stw	fp,0(sp)
   10a24:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   10a28:	01440004 	movi	r5,4096
   10a2c:	0009883a 	mov	r4,zero
   10a30:	00111300 	call	11130 <alt_icache_flush>
#endif
}
   10a34:	0001883a 	nop
   10a38:	e037883a 	mov	sp,fp
   10a3c:	dfc00117 	ldw	ra,4(sp)
   10a40:	df000017 	ldw	fp,0(sp)
   10a44:	dec00204 	addi	sp,sp,8
   10a48:	f800283a 	ret

00010a4c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   10a4c:	defff904 	addi	sp,sp,-28
   10a50:	dfc00615 	stw	ra,24(sp)
   10a54:	df000515 	stw	fp,20(sp)
   10a58:	df000504 	addi	fp,sp,20
   10a5c:	e13ffc15 	stw	r4,-16(fp)
   10a60:	e17ffd15 	stw	r5,-12(fp)
   10a64:	e1bffe15 	stw	r6,-8(fp)
   10a68:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   10a6c:	e1bfff17 	ldw	r6,-4(fp)
   10a70:	e17ffe17 	ldw	r5,-8(fp)
   10a74:	e13ffd17 	ldw	r4,-12(fp)
   10a78:	0010e0c0 	call	10e0c <open>
   10a7c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   10a80:	e0bffb17 	ldw	r2,-20(fp)
   10a84:	10001c16 	blt	r2,zero,10af8 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   10a88:	00800074 	movhi	r2,1
   10a8c:	1088d304 	addi	r2,r2,9036
   10a90:	e0fffb17 	ldw	r3,-20(fp)
   10a94:	18c00324 	muli	r3,r3,12
   10a98:	10c5883a 	add	r2,r2,r3
   10a9c:	10c00017 	ldw	r3,0(r2)
   10aa0:	e0bffc17 	ldw	r2,-16(fp)
   10aa4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   10aa8:	00800074 	movhi	r2,1
   10aac:	1088d304 	addi	r2,r2,9036
   10ab0:	e0fffb17 	ldw	r3,-20(fp)
   10ab4:	18c00324 	muli	r3,r3,12
   10ab8:	10c5883a 	add	r2,r2,r3
   10abc:	10800104 	addi	r2,r2,4
   10ac0:	10c00017 	ldw	r3,0(r2)
   10ac4:	e0bffc17 	ldw	r2,-16(fp)
   10ac8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   10acc:	00800074 	movhi	r2,1
   10ad0:	1088d304 	addi	r2,r2,9036
   10ad4:	e0fffb17 	ldw	r3,-20(fp)
   10ad8:	18c00324 	muli	r3,r3,12
   10adc:	10c5883a 	add	r2,r2,r3
   10ae0:	10800204 	addi	r2,r2,8
   10ae4:	10c00017 	ldw	r3,0(r2)
   10ae8:	e0bffc17 	ldw	r2,-16(fp)
   10aec:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   10af0:	e13ffb17 	ldw	r4,-20(fp)
   10af4:	000dac80 	call	dac8 <alt_release_fd>
  }
} 
   10af8:	0001883a 	nop
   10afc:	e037883a 	mov	sp,fp
   10b00:	dfc00117 	ldw	ra,4(sp)
   10b04:	df000017 	ldw	fp,0(sp)
   10b08:	dec00204 	addi	sp,sp,8
   10b0c:	f800283a 	ret

00010b10 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   10b10:	defffb04 	addi	sp,sp,-20
   10b14:	dfc00415 	stw	ra,16(sp)
   10b18:	df000315 	stw	fp,12(sp)
   10b1c:	df000304 	addi	fp,sp,12
   10b20:	e13ffd15 	stw	r4,-12(fp)
   10b24:	e17ffe15 	stw	r5,-8(fp)
   10b28:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   10b2c:	01c07fc4 	movi	r7,511
   10b30:	01800044 	movi	r6,1
   10b34:	e17ffd17 	ldw	r5,-12(fp)
   10b38:	01000074 	movhi	r4,1
   10b3c:	2108d604 	addi	r4,r4,9048
   10b40:	0010a4c0 	call	10a4c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   10b44:	01c07fc4 	movi	r7,511
   10b48:	000d883a 	mov	r6,zero
   10b4c:	e17ffe17 	ldw	r5,-8(fp)
   10b50:	01000074 	movhi	r4,1
   10b54:	2108d304 	addi	r4,r4,9036
   10b58:	0010a4c0 	call	10a4c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   10b5c:	01c07fc4 	movi	r7,511
   10b60:	01800044 	movi	r6,1
   10b64:	e17fff17 	ldw	r5,-4(fp)
   10b68:	01000074 	movhi	r4,1
   10b6c:	2108d904 	addi	r4,r4,9060
   10b70:	0010a4c0 	call	10a4c <alt_open_fd>
}  
   10b74:	0001883a 	nop
   10b78:	e037883a 	mov	sp,fp
   10b7c:	dfc00117 	ldw	ra,4(sp)
   10b80:	df000017 	ldw	fp,0(sp)
   10b84:	dec00204 	addi	sp,sp,8
   10b88:	f800283a 	ret

00010b8c <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   10b8c:	defff004 	addi	sp,sp,-64
   10b90:	df000f15 	stw	fp,60(sp)
   10b94:	df000f04 	addi	fp,sp,60
   10b98:	e13ffd15 	stw	r4,-12(fp)
   10b9c:	e17ffe15 	stw	r5,-8(fp)
   10ba0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
   10ba4:	00bffa84 	movi	r2,-22
   10ba8:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   10bac:	e0bffd17 	ldw	r2,-12(fp)
   10bb0:	10800828 	cmpgeui	r2,r2,32
   10bb4:	1000501e 	bne	r2,zero,10cf8 <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10bb8:	0005303a 	rdctl	r2,status
   10bbc:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10bc0:	e0fff617 	ldw	r3,-40(fp)
   10bc4:	00bfff84 	movi	r2,-2
   10bc8:	1884703a 	and	r2,r3,r2
   10bcc:	1001703a 	wrctl	status,r2
  
  return context;
   10bd0:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   10bd4:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
   10bd8:	00800074 	movhi	r2,1
   10bdc:	1095be04 	addi	r2,r2,22264
   10be0:	e0fffd17 	ldw	r3,-12(fp)
   10be4:	180690fa 	slli	r3,r3,3
   10be8:	10c5883a 	add	r2,r2,r3
   10bec:	e0ffff17 	ldw	r3,-4(fp)
   10bf0:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
   10bf4:	00800074 	movhi	r2,1
   10bf8:	1095be04 	addi	r2,r2,22264
   10bfc:	e0fffd17 	ldw	r3,-12(fp)
   10c00:	180690fa 	slli	r3,r3,3
   10c04:	10c5883a 	add	r2,r2,r3
   10c08:	10800104 	addi	r2,r2,4
   10c0c:	e0fffe17 	ldw	r3,-8(fp)
   10c10:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   10c14:	e0bfff17 	ldw	r2,-4(fp)
   10c18:	10001926 	beq	r2,zero,10c80 <alt_irq_register+0xf4>
   10c1c:	e0bffd17 	ldw	r2,-12(fp)
   10c20:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10c24:	0005303a 	rdctl	r2,status
   10c28:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10c2c:	e0fff717 	ldw	r3,-36(fp)
   10c30:	00bfff84 	movi	r2,-2
   10c34:	1884703a 	and	r2,r3,r2
   10c38:	1001703a 	wrctl	status,r2
  
  return context;
   10c3c:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   10c40:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
   10c44:	00c00044 	movi	r3,1
   10c48:	e0bff217 	ldw	r2,-56(fp)
   10c4c:	1884983a 	sll	r2,r3,r2
   10c50:	1007883a 	mov	r3,r2
   10c54:	d0a7a417 	ldw	r2,-24944(gp)
   10c58:	1884b03a 	or	r2,r3,r2
   10c5c:	d0a7a415 	stw	r2,-24944(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   10c60:	d0a7a417 	ldw	r2,-24944(gp)
   10c64:	100170fa 	wrctl	ienable,r2
   10c68:	e0bff817 	ldw	r2,-32(fp)
   10c6c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10c70:	e0bff917 	ldw	r2,-28(fp)
   10c74:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   10c78:	0005883a 	mov	r2,zero
   10c7c:	00001906 	br	10ce4 <alt_irq_register+0x158>
   10c80:	e0bffd17 	ldw	r2,-12(fp)
   10c84:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10c88:	0005303a 	rdctl	r2,status
   10c8c:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10c90:	e0fffa17 	ldw	r3,-24(fp)
   10c94:	00bfff84 	movi	r2,-2
   10c98:	1884703a 	and	r2,r3,r2
   10c9c:	1001703a 	wrctl	status,r2
  
  return context;
   10ca0:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   10ca4:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
   10ca8:	00c00044 	movi	r3,1
   10cac:	e0bff417 	ldw	r2,-48(fp)
   10cb0:	1884983a 	sll	r2,r3,r2
   10cb4:	0084303a 	nor	r2,zero,r2
   10cb8:	1007883a 	mov	r3,r2
   10cbc:	d0a7a417 	ldw	r2,-24944(gp)
   10cc0:	1884703a 	and	r2,r3,r2
   10cc4:	d0a7a415 	stw	r2,-24944(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   10cc8:	d0a7a417 	ldw	r2,-24944(gp)
   10ccc:	100170fa 	wrctl	ienable,r2
   10cd0:	e0bffb17 	ldw	r2,-20(fp)
   10cd4:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10cd8:	e0bffc17 	ldw	r2,-16(fp)
   10cdc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   10ce0:	0005883a 	mov	r2,zero
   10ce4:	e0bff115 	stw	r2,-60(fp)
   10ce8:	e0bff317 	ldw	r2,-52(fp)
   10cec:	e0bff515 	stw	r2,-44(fp)
   10cf0:	e0bff517 	ldw	r2,-44(fp)
   10cf4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
   10cf8:	e0bff117 	ldw	r2,-60(fp)
}
   10cfc:	e037883a 	mov	sp,fp
   10d00:	df000017 	ldw	fp,0(sp)
   10d04:	dec00104 	addi	sp,sp,4
   10d08:	f800283a 	ret

00010d0c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   10d0c:	defffe04 	addi	sp,sp,-8
   10d10:	dfc00115 	stw	ra,4(sp)
   10d14:	df000015 	stw	fp,0(sp)
   10d18:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   10d1c:	d0a00c17 	ldw	r2,-32720(gp)
   10d20:	10000326 	beq	r2,zero,10d30 <alt_get_errno+0x24>
   10d24:	d0a00c17 	ldw	r2,-32720(gp)
   10d28:	103ee83a 	callr	r2
   10d2c:	00000106 	br	10d34 <alt_get_errno+0x28>
   10d30:	d0a79a04 	addi	r2,gp,-24984
}
   10d34:	e037883a 	mov	sp,fp
   10d38:	dfc00117 	ldw	ra,4(sp)
   10d3c:	df000017 	ldw	fp,0(sp)
   10d40:	dec00204 	addi	sp,sp,8
   10d44:	f800283a 	ret

00010d48 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   10d48:	defffd04 	addi	sp,sp,-12
   10d4c:	df000215 	stw	fp,8(sp)
   10d50:	df000204 	addi	fp,sp,8
   10d54:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   10d58:	e0bfff17 	ldw	r2,-4(fp)
   10d5c:	10800217 	ldw	r2,8(r2)
   10d60:	10d00034 	orhi	r3,r2,16384
   10d64:	e0bfff17 	ldw	r2,-4(fp)
   10d68:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   10d6c:	e03ffe15 	stw	zero,-8(fp)
   10d70:	00001d06 	br	10de8 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   10d74:	00800074 	movhi	r2,1
   10d78:	1088d304 	addi	r2,r2,9036
   10d7c:	e0fffe17 	ldw	r3,-8(fp)
   10d80:	18c00324 	muli	r3,r3,12
   10d84:	10c5883a 	add	r2,r2,r3
   10d88:	10c00017 	ldw	r3,0(r2)
   10d8c:	e0bfff17 	ldw	r2,-4(fp)
   10d90:	10800017 	ldw	r2,0(r2)
   10d94:	1880111e 	bne	r3,r2,10ddc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   10d98:	00800074 	movhi	r2,1
   10d9c:	1088d304 	addi	r2,r2,9036
   10da0:	e0fffe17 	ldw	r3,-8(fp)
   10da4:	18c00324 	muli	r3,r3,12
   10da8:	10c5883a 	add	r2,r2,r3
   10dac:	10800204 	addi	r2,r2,8
   10db0:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   10db4:	1000090e 	bge	r2,zero,10ddc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   10db8:	e0bffe17 	ldw	r2,-8(fp)
   10dbc:	10c00324 	muli	r3,r2,12
   10dc0:	00800074 	movhi	r2,1
   10dc4:	1088d304 	addi	r2,r2,9036
   10dc8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   10dcc:	e0bfff17 	ldw	r2,-4(fp)
   10dd0:	18800226 	beq	r3,r2,10ddc <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   10dd4:	00bffcc4 	movi	r2,-13
   10dd8:	00000806 	br	10dfc <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   10ddc:	e0bffe17 	ldw	r2,-8(fp)
   10de0:	10800044 	addi	r2,r2,1
   10de4:	e0bffe15 	stw	r2,-8(fp)
   10de8:	d0a00b17 	ldw	r2,-32724(gp)
   10dec:	1007883a 	mov	r3,r2
   10df0:	e0bffe17 	ldw	r2,-8(fp)
   10df4:	18bfdf2e 	bgeu	r3,r2,10d74 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7010d74>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   10df8:	0005883a 	mov	r2,zero
}
   10dfc:	e037883a 	mov	sp,fp
   10e00:	df000017 	ldw	fp,0(sp)
   10e04:	dec00104 	addi	sp,sp,4
   10e08:	f800283a 	ret

00010e0c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   10e0c:	defff604 	addi	sp,sp,-40
   10e10:	dfc00915 	stw	ra,36(sp)
   10e14:	df000815 	stw	fp,32(sp)
   10e18:	df000804 	addi	fp,sp,32
   10e1c:	e13ffd15 	stw	r4,-12(fp)
   10e20:	e17ffe15 	stw	r5,-8(fp)
   10e24:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   10e28:	00bfffc4 	movi	r2,-1
   10e2c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   10e30:	00bffb44 	movi	r2,-19
   10e34:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   10e38:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   10e3c:	d1600904 	addi	r5,gp,-32732
   10e40:	e13ffd17 	ldw	r4,-12(fp)
   10e44:	00109880 	call	10988 <alt_find_dev>
   10e48:	e0bff815 	stw	r2,-32(fp)
   10e4c:	e0bff817 	ldw	r2,-32(fp)
   10e50:	1000051e 	bne	r2,zero,10e68 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   10e54:	e13ffd17 	ldw	r4,-12(fp)
   10e58:	0010f840 	call	10f84 <alt_find_file>
   10e5c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   10e60:	00800044 	movi	r2,1
   10e64:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   10e68:	e0bff817 	ldw	r2,-32(fp)
   10e6c:	10002926 	beq	r2,zero,10f14 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   10e70:	e13ff817 	ldw	r4,-32(fp)
   10e74:	001108c0 	call	1108c <alt_get_fd>
   10e78:	e0bff915 	stw	r2,-28(fp)
   10e7c:	e0bff917 	ldw	r2,-28(fp)
   10e80:	1000030e 	bge	r2,zero,10e90 <open+0x84>
    {
      status = index;
   10e84:	e0bff917 	ldw	r2,-28(fp)
   10e88:	e0bffa15 	stw	r2,-24(fp)
   10e8c:	00002306 	br	10f1c <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   10e90:	e0bff917 	ldw	r2,-28(fp)
   10e94:	10c00324 	muli	r3,r2,12
   10e98:	00800074 	movhi	r2,1
   10e9c:	1088d304 	addi	r2,r2,9036
   10ea0:	1885883a 	add	r2,r3,r2
   10ea4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   10ea8:	e0fffe17 	ldw	r3,-8(fp)
   10eac:	00900034 	movhi	r2,16384
   10eb0:	10bfffc4 	addi	r2,r2,-1
   10eb4:	1886703a 	and	r3,r3,r2
   10eb8:	e0bffc17 	ldw	r2,-16(fp)
   10ebc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   10ec0:	e0bffb17 	ldw	r2,-20(fp)
   10ec4:	1000051e 	bne	r2,zero,10edc <open+0xd0>
   10ec8:	e13ffc17 	ldw	r4,-16(fp)
   10ecc:	0010d480 	call	10d48 <alt_file_locked>
   10ed0:	e0bffa15 	stw	r2,-24(fp)
   10ed4:	e0bffa17 	ldw	r2,-24(fp)
   10ed8:	10001016 	blt	r2,zero,10f1c <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   10edc:	e0bff817 	ldw	r2,-32(fp)
   10ee0:	10800317 	ldw	r2,12(r2)
   10ee4:	10000826 	beq	r2,zero,10f08 <open+0xfc>
   10ee8:	e0bff817 	ldw	r2,-32(fp)
   10eec:	10800317 	ldw	r2,12(r2)
   10ef0:	e1ffff17 	ldw	r7,-4(fp)
   10ef4:	e1bffe17 	ldw	r6,-8(fp)
   10ef8:	e17ffd17 	ldw	r5,-12(fp)
   10efc:	e13ffc17 	ldw	r4,-16(fp)
   10f00:	103ee83a 	callr	r2
   10f04:	00000106 	br	10f0c <open+0x100>
   10f08:	0005883a 	mov	r2,zero
   10f0c:	e0bffa15 	stw	r2,-24(fp)
   10f10:	00000206 	br	10f1c <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   10f14:	00bffb44 	movi	r2,-19
   10f18:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   10f1c:	e0bffa17 	ldw	r2,-24(fp)
   10f20:	1000090e 	bge	r2,zero,10f48 <open+0x13c>
  {
    alt_release_fd (index);  
   10f24:	e13ff917 	ldw	r4,-28(fp)
   10f28:	000dac80 	call	dac8 <alt_release_fd>
    ALT_ERRNO = -status;
   10f2c:	0010d0c0 	call	10d0c <alt_get_errno>
   10f30:	1007883a 	mov	r3,r2
   10f34:	e0bffa17 	ldw	r2,-24(fp)
   10f38:	0085c83a 	sub	r2,zero,r2
   10f3c:	18800015 	stw	r2,0(r3)
    return -1;
   10f40:	00bfffc4 	movi	r2,-1
   10f44:	00000106 	br	10f4c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   10f48:	e0bff917 	ldw	r2,-28(fp)
}
   10f4c:	e037883a 	mov	sp,fp
   10f50:	dfc00117 	ldw	ra,4(sp)
   10f54:	df000017 	ldw	fp,0(sp)
   10f58:	dec00204 	addi	sp,sp,8
   10f5c:	f800283a 	ret

00010f60 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   10f60:	deffff04 	addi	sp,sp,-4
   10f64:	df000015 	stw	fp,0(sp)
   10f68:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   10f6c:	000170fa 	wrctl	ienable,zero
}
   10f70:	0001883a 	nop
   10f74:	e037883a 	mov	sp,fp
   10f78:	df000017 	ldw	fp,0(sp)
   10f7c:	dec00104 	addi	sp,sp,4
   10f80:	f800283a 	ret

00010f84 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   10f84:	defffb04 	addi	sp,sp,-20
   10f88:	dfc00415 	stw	ra,16(sp)
   10f8c:	df000315 	stw	fp,12(sp)
   10f90:	df000304 	addi	fp,sp,12
   10f94:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   10f98:	d0a00717 	ldw	r2,-32740(gp)
   10f9c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   10fa0:	00003106 	br	11068 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   10fa4:	e0bffd17 	ldw	r2,-12(fp)
   10fa8:	10800217 	ldw	r2,8(r2)
   10fac:	1009883a 	mov	r4,r2
   10fb0:	00074000 	call	7400 <strlen>
   10fb4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   10fb8:	e0bffd17 	ldw	r2,-12(fp)
   10fbc:	10c00217 	ldw	r3,8(r2)
   10fc0:	e0bffe17 	ldw	r2,-8(fp)
   10fc4:	10bfffc4 	addi	r2,r2,-1
   10fc8:	1885883a 	add	r2,r3,r2
   10fcc:	10800003 	ldbu	r2,0(r2)
   10fd0:	10803fcc 	andi	r2,r2,255
   10fd4:	1080201c 	xori	r2,r2,128
   10fd8:	10bfe004 	addi	r2,r2,-128
   10fdc:	10800bd8 	cmpnei	r2,r2,47
   10fe0:	1000031e 	bne	r2,zero,10ff0 <alt_find_file+0x6c>
    {
      len -= 1;
   10fe4:	e0bffe17 	ldw	r2,-8(fp)
   10fe8:	10bfffc4 	addi	r2,r2,-1
   10fec:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   10ff0:	e0bffe17 	ldw	r2,-8(fp)
   10ff4:	e0ffff17 	ldw	r3,-4(fp)
   10ff8:	1885883a 	add	r2,r3,r2
   10ffc:	10800003 	ldbu	r2,0(r2)
   11000:	10803fcc 	andi	r2,r2,255
   11004:	1080201c 	xori	r2,r2,128
   11008:	10bfe004 	addi	r2,r2,-128
   1100c:	10800be0 	cmpeqi	r2,r2,47
   11010:	1000081e 	bne	r2,zero,11034 <alt_find_file+0xb0>
   11014:	e0bffe17 	ldw	r2,-8(fp)
   11018:	e0ffff17 	ldw	r3,-4(fp)
   1101c:	1885883a 	add	r2,r3,r2
   11020:	10800003 	ldbu	r2,0(r2)
   11024:	10803fcc 	andi	r2,r2,255
   11028:	1080201c 	xori	r2,r2,128
   1102c:	10bfe004 	addi	r2,r2,-128
   11030:	10000a1e 	bne	r2,zero,1105c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   11034:	e0bffd17 	ldw	r2,-12(fp)
   11038:	10800217 	ldw	r2,8(r2)
   1103c:	e0fffe17 	ldw	r3,-8(fp)
   11040:	180d883a 	mov	r6,r3
   11044:	e17fff17 	ldw	r5,-4(fp)
   11048:	1009883a 	mov	r4,r2
   1104c:	00112a80 	call	112a8 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   11050:	1000021e 	bne	r2,zero,1105c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   11054:	e0bffd17 	ldw	r2,-12(fp)
   11058:	00000706 	br	11078 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   1105c:	e0bffd17 	ldw	r2,-12(fp)
   11060:	10800017 	ldw	r2,0(r2)
   11064:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   11068:	e0fffd17 	ldw	r3,-12(fp)
   1106c:	d0a00704 	addi	r2,gp,-32740
   11070:	18bfcc1e 	bne	r3,r2,10fa4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7010fa4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   11074:	0005883a 	mov	r2,zero
}
   11078:	e037883a 	mov	sp,fp
   1107c:	dfc00117 	ldw	ra,4(sp)
   11080:	df000017 	ldw	fp,0(sp)
   11084:	dec00204 	addi	sp,sp,8
   11088:	f800283a 	ret

0001108c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   1108c:	defffc04 	addi	sp,sp,-16
   11090:	df000315 	stw	fp,12(sp)
   11094:	df000304 	addi	fp,sp,12
   11098:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   1109c:	00bffa04 	movi	r2,-24
   110a0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   110a4:	e03ffd15 	stw	zero,-12(fp)
   110a8:	00001906 	br	11110 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   110ac:	00800074 	movhi	r2,1
   110b0:	1088d304 	addi	r2,r2,9036
   110b4:	e0fffd17 	ldw	r3,-12(fp)
   110b8:	18c00324 	muli	r3,r3,12
   110bc:	10c5883a 	add	r2,r2,r3
   110c0:	10800017 	ldw	r2,0(r2)
   110c4:	10000f1e 	bne	r2,zero,11104 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   110c8:	00800074 	movhi	r2,1
   110cc:	1088d304 	addi	r2,r2,9036
   110d0:	e0fffd17 	ldw	r3,-12(fp)
   110d4:	18c00324 	muli	r3,r3,12
   110d8:	10c5883a 	add	r2,r2,r3
   110dc:	e0ffff17 	ldw	r3,-4(fp)
   110e0:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   110e4:	d0e00b17 	ldw	r3,-32724(gp)
   110e8:	e0bffd17 	ldw	r2,-12(fp)
   110ec:	1880020e 	bge	r3,r2,110f8 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   110f0:	e0bffd17 	ldw	r2,-12(fp)
   110f4:	d0a00b15 	stw	r2,-32724(gp)
      }
      rc = i;
   110f8:	e0bffd17 	ldw	r2,-12(fp)
   110fc:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   11100:	00000606 	br	1111c <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   11104:	e0bffd17 	ldw	r2,-12(fp)
   11108:	10800044 	addi	r2,r2,1
   1110c:	e0bffd15 	stw	r2,-12(fp)
   11110:	e0bffd17 	ldw	r2,-12(fp)
   11114:	10800810 	cmplti	r2,r2,32
   11118:	103fe41e 	bne	r2,zero,110ac <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70110ac>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   1111c:	e0bffe17 	ldw	r2,-8(fp)
}
   11120:	e037883a 	mov	sp,fp
   11124:	df000017 	ldw	fp,0(sp)
   11128:	dec00104 	addi	sp,sp,4
   1112c:	f800283a 	ret

00011130 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   11130:	defffb04 	addi	sp,sp,-20
   11134:	df000415 	stw	fp,16(sp)
   11138:	df000404 	addi	fp,sp,16
   1113c:	e13ffe15 	stw	r4,-8(fp)
   11140:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   11144:	e0bfff17 	ldw	r2,-4(fp)
   11148:	10840070 	cmpltui	r2,r2,4097
   1114c:	1000021e 	bne	r2,zero,11158 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   11150:	00840004 	movi	r2,4096
   11154:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   11158:	e0fffe17 	ldw	r3,-8(fp)
   1115c:	e0bfff17 	ldw	r2,-4(fp)
   11160:	1885883a 	add	r2,r3,r2
   11164:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   11168:	e0bffe17 	ldw	r2,-8(fp)
   1116c:	e0bffc15 	stw	r2,-16(fp)
   11170:	00000506 	br	11188 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   11174:	e0bffc17 	ldw	r2,-16(fp)
   11178:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   1117c:	e0bffc17 	ldw	r2,-16(fp)
   11180:	10800804 	addi	r2,r2,32
   11184:	e0bffc15 	stw	r2,-16(fp)
   11188:	e0fffc17 	ldw	r3,-16(fp)
   1118c:	e0bffd17 	ldw	r2,-12(fp)
   11190:	18bff836 	bltu	r3,r2,11174 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011174>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   11194:	e0bffe17 	ldw	r2,-8(fp)
   11198:	108007cc 	andi	r2,r2,31
   1119c:	10000226 	beq	r2,zero,111a8 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   111a0:	e0bffc17 	ldw	r2,-16(fp)
   111a4:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   111a8:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   111ac:	0001883a 	nop
   111b0:	e037883a 	mov	sp,fp
   111b4:	df000017 	ldw	fp,0(sp)
   111b8:	dec00104 	addi	sp,sp,4
   111bc:	f800283a 	ret

000111c0 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   111c0:	defffe04 	addi	sp,sp,-8
   111c4:	df000115 	stw	fp,4(sp)
   111c8:	df000104 	addi	fp,sp,4
   111cc:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   111d0:	e0bfff17 	ldw	r2,-4(fp)
   111d4:	10bffe84 	addi	r2,r2,-6
   111d8:	10c00428 	cmpgeui	r3,r2,16
   111dc:	18001a1e 	bne	r3,zero,11248 <alt_exception_cause_generated_bad_addr+0x88>
   111e0:	100690ba 	slli	r3,r2,2
   111e4:	00800074 	movhi	r2,1
   111e8:	10847e04 	addi	r2,r2,4600
   111ec:	1885883a 	add	r2,r3,r2
   111f0:	10800017 	ldw	r2,0(r2)
   111f4:	1000683a 	jmp	r2
   111f8:	00011238 	rdprs	zero,zero,1096
   111fc:	00011238 	rdprs	zero,zero,1096
   11200:	00011248 	cmpgei	zero,zero,1097
   11204:	00011248 	cmpgei	zero,zero,1097
   11208:	00011248 	cmpgei	zero,zero,1097
   1120c:	00011238 	rdprs	zero,zero,1096
   11210:	00011240 	call	1124 <___vfprintf_internal_r+0x6a8>
   11214:	00011248 	cmpgei	zero,zero,1097
   11218:	00011238 	rdprs	zero,zero,1096
   1121c:	00011238 	rdprs	zero,zero,1096
   11220:	00011248 	cmpgei	zero,zero,1097
   11224:	00011238 	rdprs	zero,zero,1096
   11228:	00011240 	call	1124 <___vfprintf_internal_r+0x6a8>
   1122c:	00011248 	cmpgei	zero,zero,1097
   11230:	00011248 	cmpgei	zero,zero,1097
   11234:	00011238 	rdprs	zero,zero,1096
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   11238:	00800044 	movi	r2,1
   1123c:	00000306 	br	1124c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   11240:	0005883a 	mov	r2,zero
   11244:	00000106 	br	1124c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   11248:	0005883a 	mov	r2,zero
  }
}
   1124c:	e037883a 	mov	sp,fp
   11250:	df000017 	ldw	fp,0(sp)
   11254:	dec00104 	addi	sp,sp,4
   11258:	f800283a 	ret

0001125c <atexit>:
   1125c:	200b883a 	mov	r5,r4
   11260:	000f883a 	mov	r7,zero
   11264:	000d883a 	mov	r6,zero
   11268:	0009883a 	mov	r4,zero
   1126c:	00113241 	jmpi	11324 <__register_exitproc>

00011270 <exit>:
   11270:	defffe04 	addi	sp,sp,-8
   11274:	000b883a 	mov	r5,zero
   11278:	dc000015 	stw	r16,0(sp)
   1127c:	dfc00115 	stw	ra,4(sp)
   11280:	2021883a 	mov	r16,r4
   11284:	001143c0 	call	1143c <__call_exitprocs>
   11288:	00800074 	movhi	r2,1
   1128c:	108e0f04 	addi	r2,r2,14396
   11290:	11000017 	ldw	r4,0(r2)
   11294:	20800f17 	ldw	r2,60(r4)
   11298:	10000126 	beq	r2,zero,112a0 <exit+0x30>
   1129c:	103ee83a 	callr	r2
   112a0:	8009883a 	mov	r4,r16
   112a4:	00115bc0 	call	115bc <_exit>

000112a8 <memcmp>:
   112a8:	01c000c4 	movi	r7,3
   112ac:	3980192e 	bgeu	r7,r6,11314 <memcmp+0x6c>
   112b0:	2144b03a 	or	r2,r4,r5
   112b4:	11c4703a 	and	r2,r2,r7
   112b8:	10000f26 	beq	r2,zero,112f8 <memcmp+0x50>
   112bc:	20800003 	ldbu	r2,0(r4)
   112c0:	28c00003 	ldbu	r3,0(r5)
   112c4:	10c0151e 	bne	r2,r3,1131c <memcmp+0x74>
   112c8:	31bfff84 	addi	r6,r6,-2
   112cc:	01ffffc4 	movi	r7,-1
   112d0:	00000406 	br	112e4 <memcmp+0x3c>
   112d4:	20800003 	ldbu	r2,0(r4)
   112d8:	28c00003 	ldbu	r3,0(r5)
   112dc:	31bfffc4 	addi	r6,r6,-1
   112e0:	10c00e1e 	bne	r2,r3,1131c <memcmp+0x74>
   112e4:	21000044 	addi	r4,r4,1
   112e8:	29400044 	addi	r5,r5,1
   112ec:	31fff91e 	bne	r6,r7,112d4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70112d4>
   112f0:	0005883a 	mov	r2,zero
   112f4:	f800283a 	ret
   112f8:	20c00017 	ldw	r3,0(r4)
   112fc:	28800017 	ldw	r2,0(r5)
   11300:	18bfee1e 	bne	r3,r2,112bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70112bc>
   11304:	31bfff04 	addi	r6,r6,-4
   11308:	21000104 	addi	r4,r4,4
   1130c:	29400104 	addi	r5,r5,4
   11310:	39bff936 	bltu	r7,r6,112f8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70112f8>
   11314:	303fe91e 	bne	r6,zero,112bc <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70112bc>
   11318:	003ff506 	br	112f0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70112f0>
   1131c:	10c5c83a 	sub	r2,r2,r3
   11320:	f800283a 	ret

00011324 <__register_exitproc>:
   11324:	defffa04 	addi	sp,sp,-24
   11328:	dc000315 	stw	r16,12(sp)
   1132c:	04000074 	movhi	r16,1
   11330:	840e0f04 	addi	r16,r16,14396
   11334:	80c00017 	ldw	r3,0(r16)
   11338:	dc400415 	stw	r17,16(sp)
   1133c:	dfc00515 	stw	ra,20(sp)
   11340:	18805217 	ldw	r2,328(r3)
   11344:	2023883a 	mov	r17,r4
   11348:	10003726 	beq	r2,zero,11428 <__register_exitproc+0x104>
   1134c:	10c00117 	ldw	r3,4(r2)
   11350:	010007c4 	movi	r4,31
   11354:	20c00e16 	blt	r4,r3,11390 <__register_exitproc+0x6c>
   11358:	1a000044 	addi	r8,r3,1
   1135c:	8800221e 	bne	r17,zero,113e8 <__register_exitproc+0xc4>
   11360:	18c00084 	addi	r3,r3,2
   11364:	18c7883a 	add	r3,r3,r3
   11368:	18c7883a 	add	r3,r3,r3
   1136c:	12000115 	stw	r8,4(r2)
   11370:	10c7883a 	add	r3,r2,r3
   11374:	19400015 	stw	r5,0(r3)
   11378:	0005883a 	mov	r2,zero
   1137c:	dfc00517 	ldw	ra,20(sp)
   11380:	dc400417 	ldw	r17,16(sp)
   11384:	dc000317 	ldw	r16,12(sp)
   11388:	dec00604 	addi	sp,sp,24
   1138c:	f800283a 	ret
   11390:	00800034 	movhi	r2,0
   11394:	10800004 	addi	r2,r2,0
   11398:	10002626 	beq	r2,zero,11434 <__register_exitproc+0x110>
   1139c:	01006404 	movi	r4,400
   113a0:	d9400015 	stw	r5,0(sp)
   113a4:	d9800115 	stw	r6,4(sp)
   113a8:	d9c00215 	stw	r7,8(sp)
   113ac:	00000000 	call	0 <__reset>
   113b0:	d9400017 	ldw	r5,0(sp)
   113b4:	d9800117 	ldw	r6,4(sp)
   113b8:	d9c00217 	ldw	r7,8(sp)
   113bc:	10001d26 	beq	r2,zero,11434 <__register_exitproc+0x110>
   113c0:	81000017 	ldw	r4,0(r16)
   113c4:	10000115 	stw	zero,4(r2)
   113c8:	02000044 	movi	r8,1
   113cc:	22405217 	ldw	r9,328(r4)
   113d0:	0007883a 	mov	r3,zero
   113d4:	12400015 	stw	r9,0(r2)
   113d8:	20805215 	stw	r2,328(r4)
   113dc:	10006215 	stw	zero,392(r2)
   113e0:	10006315 	stw	zero,396(r2)
   113e4:	883fde26 	beq	r17,zero,11360 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011360>
   113e8:	18c9883a 	add	r4,r3,r3
   113ec:	2109883a 	add	r4,r4,r4
   113f0:	1109883a 	add	r4,r2,r4
   113f4:	21802215 	stw	r6,136(r4)
   113f8:	01800044 	movi	r6,1
   113fc:	12406217 	ldw	r9,392(r2)
   11400:	30cc983a 	sll	r6,r6,r3
   11404:	4992b03a 	or	r9,r9,r6
   11408:	12406215 	stw	r9,392(r2)
   1140c:	21c04215 	stw	r7,264(r4)
   11410:	01000084 	movi	r4,2
   11414:	893fd21e 	bne	r17,r4,11360 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011360>
   11418:	11006317 	ldw	r4,396(r2)
   1141c:	218cb03a 	or	r6,r4,r6
   11420:	11806315 	stw	r6,396(r2)
   11424:	003fce06 	br	11360 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011360>
   11428:	18805304 	addi	r2,r3,332
   1142c:	18805215 	stw	r2,328(r3)
   11430:	003fc606 	br	1134c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf701134c>
   11434:	00bfffc4 	movi	r2,-1
   11438:	003fd006 	br	1137c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf701137c>

0001143c <__call_exitprocs>:
   1143c:	defff504 	addi	sp,sp,-44
   11440:	df000915 	stw	fp,36(sp)
   11444:	dd400615 	stw	r21,24(sp)
   11448:	dc800315 	stw	r18,12(sp)
   1144c:	dfc00a15 	stw	ra,40(sp)
   11450:	ddc00815 	stw	r23,32(sp)
   11454:	dd800715 	stw	r22,28(sp)
   11458:	dd000515 	stw	r20,20(sp)
   1145c:	dcc00415 	stw	r19,16(sp)
   11460:	dc400215 	stw	r17,8(sp)
   11464:	dc000115 	stw	r16,4(sp)
   11468:	d9000015 	stw	r4,0(sp)
   1146c:	2839883a 	mov	fp,r5
   11470:	04800044 	movi	r18,1
   11474:	057fffc4 	movi	r21,-1
   11478:	00800074 	movhi	r2,1
   1147c:	108e0f04 	addi	r2,r2,14396
   11480:	12000017 	ldw	r8,0(r2)
   11484:	45005217 	ldw	r20,328(r8)
   11488:	44c05204 	addi	r19,r8,328
   1148c:	a0001c26 	beq	r20,zero,11500 <__call_exitprocs+0xc4>
   11490:	a0800117 	ldw	r2,4(r20)
   11494:	15ffffc4 	addi	r23,r2,-1
   11498:	b8000d16 	blt	r23,zero,114d0 <__call_exitprocs+0x94>
   1149c:	14000044 	addi	r16,r2,1
   114a0:	8421883a 	add	r16,r16,r16
   114a4:	8421883a 	add	r16,r16,r16
   114a8:	84402004 	addi	r17,r16,128
   114ac:	a463883a 	add	r17,r20,r17
   114b0:	a421883a 	add	r16,r20,r16
   114b4:	e0001e26 	beq	fp,zero,11530 <__call_exitprocs+0xf4>
   114b8:	80804017 	ldw	r2,256(r16)
   114bc:	e0801c26 	beq	fp,r2,11530 <__call_exitprocs+0xf4>
   114c0:	bdffffc4 	addi	r23,r23,-1
   114c4:	843fff04 	addi	r16,r16,-4
   114c8:	8c7fff04 	addi	r17,r17,-4
   114cc:	bd7ff91e 	bne	r23,r21,114b4 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70114b4>
   114d0:	00800034 	movhi	r2,0
   114d4:	10800004 	addi	r2,r2,0
   114d8:	10000926 	beq	r2,zero,11500 <__call_exitprocs+0xc4>
   114dc:	a0800117 	ldw	r2,4(r20)
   114e0:	1000301e 	bne	r2,zero,115a4 <__call_exitprocs+0x168>
   114e4:	a0800017 	ldw	r2,0(r20)
   114e8:	10003226 	beq	r2,zero,115b4 <__call_exitprocs+0x178>
   114ec:	a009883a 	mov	r4,r20
   114f0:	98800015 	stw	r2,0(r19)
   114f4:	00000000 	call	0 <__reset>
   114f8:	9d000017 	ldw	r20,0(r19)
   114fc:	a03fe41e 	bne	r20,zero,11490 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011490>
   11500:	dfc00a17 	ldw	ra,40(sp)
   11504:	df000917 	ldw	fp,36(sp)
   11508:	ddc00817 	ldw	r23,32(sp)
   1150c:	dd800717 	ldw	r22,28(sp)
   11510:	dd400617 	ldw	r21,24(sp)
   11514:	dd000517 	ldw	r20,20(sp)
   11518:	dcc00417 	ldw	r19,16(sp)
   1151c:	dc800317 	ldw	r18,12(sp)
   11520:	dc400217 	ldw	r17,8(sp)
   11524:	dc000117 	ldw	r16,4(sp)
   11528:	dec00b04 	addi	sp,sp,44
   1152c:	f800283a 	ret
   11530:	a0800117 	ldw	r2,4(r20)
   11534:	80c00017 	ldw	r3,0(r16)
   11538:	10bfffc4 	addi	r2,r2,-1
   1153c:	15c01426 	beq	r2,r23,11590 <__call_exitprocs+0x154>
   11540:	80000015 	stw	zero,0(r16)
   11544:	183fde26 	beq	r3,zero,114c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70114c0>
   11548:	95c8983a 	sll	r4,r18,r23
   1154c:	a0806217 	ldw	r2,392(r20)
   11550:	a5800117 	ldw	r22,4(r20)
   11554:	2084703a 	and	r2,r4,r2
   11558:	10000b26 	beq	r2,zero,11588 <__call_exitprocs+0x14c>
   1155c:	a0806317 	ldw	r2,396(r20)
   11560:	2088703a 	and	r4,r4,r2
   11564:	20000c1e 	bne	r4,zero,11598 <__call_exitprocs+0x15c>
   11568:	89400017 	ldw	r5,0(r17)
   1156c:	d9000017 	ldw	r4,0(sp)
   11570:	183ee83a 	callr	r3
   11574:	a0800117 	ldw	r2,4(r20)
   11578:	15bfbf1e 	bne	r2,r22,11478 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011478>
   1157c:	98800017 	ldw	r2,0(r19)
   11580:	153fcf26 	beq	r2,r20,114c0 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70114c0>
   11584:	003fbc06 	br	11478 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011478>
   11588:	183ee83a 	callr	r3
   1158c:	003ff906 	br	11574 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011574>
   11590:	a5c00115 	stw	r23,4(r20)
   11594:	003feb06 	br	11544 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011544>
   11598:	89000017 	ldw	r4,0(r17)
   1159c:	183ee83a 	callr	r3
   115a0:	003ff406 	br	11574 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf7011574>
   115a4:	a0800017 	ldw	r2,0(r20)
   115a8:	a027883a 	mov	r19,r20
   115ac:	1029883a 	mov	r20,r2
   115b0:	003fb606 	br	1148c <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf701148c>
   115b4:	0005883a 	mov	r2,zero
   115b8:	003ffb06 	br	115a8 <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70115a8>

000115bc <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   115bc:	defffd04 	addi	sp,sp,-12
   115c0:	df000215 	stw	fp,8(sp)
   115c4:	df000204 	addi	fp,sp,8
   115c8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   115cc:	0001883a 	nop
   115d0:	e0bfff17 	ldw	r2,-4(fp)
   115d4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   115d8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   115dc:	10000226 	beq	r2,zero,115e8 <_exit+0x2c>
    ALT_SIM_FAIL();
   115e0:	002af070 	cmpltui	zero,zero,43969
   115e4:	00000106 	br	115ec <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   115e8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   115ec:	003fff06 	br	115ec <__alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM+0xf70115ec>
